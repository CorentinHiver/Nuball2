<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_coinc_builder" xml:lang="en-US">
<title>CoincBuilder Class Reference</title>
<indexterm><primary>CoincBuilder</primary></indexterm>
<para>

<para>Coincidence builder. </para>
 
</para>
<para>
<computeroutput>#include &lt;CoincBuilder.hpp&gt;</computeroutput>
</para>
Inheritance diagram for CoincBuilder:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_coinc_builder__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for CoincBuilder:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_coinc_builder__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_class_coinc_builder_1a6fbd7caa8ab6ac6bbf4d14eb094b6417">build</link> (<link linkend="_class_hit">Hit</link> const &amp;_hit)</para>

<para>Add Hits to the event. Return true when an event is complete, i.e. current hit is outside of time window. </para>
</listitem>
            <listitem><para><link linkend="_class_coinc_builder_1a358978c5c9a118398d7b8dee4f327999">CoincBuilder</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_coinc_builder_1a480b830624ff3166e041ba80b086c0bc">CoincBuilder</link> (<link linkend="_class_event">Event</link> *_event)</para>
</listitem>
            <listitem><para><link linkend="_class_coinc_builder_1af182ffce899d34d294c8ad9c4450a14f">CoincBuilder</link> (<link linkend="_class_event">Event</link> *_event, <link linkend="__hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7">Time</link> const &amp;_timeWindow)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_coinc_builder_1a7bb003c28d9b4b43bbd10a09771226ae">coincidence</link> (<link linkend="_class_hit">Hit</link> const &amp;hit)</para>
</listitem>
            <listitem><para><link linkend="_class_event">Event</link> * <link linkend="_class_builder_1a8fd6226096d712de58f78e9ef123c45d">getEvent</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class_hit">Hit</link> const  &amp; <link linkend="_class_builder_1abeb8339305e7a10fb2c67cc0fed9237b">getLastHit</link> () const</para>
</listitem>
            <listitem><para>bool <link linkend="_class_builder_1a414690f7964ed158937df8a65b1d4760">isBuilding</link> () const</para>
</listitem>
            <listitem><para>bool <link linkend="_class_builder_1af7ce79872abc82e734c72e03380a1f34">isBuilt</link> () const</para>
</listitem>
            <listitem><para>bool <link linkend="_class_builder_1aa476b7d1fd2fe31882a3380769eb60a9">isSingle</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_class_coinc_builder_1aea3e2ad2ee31f1a77abea9e9921cdd6f">printEvent</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_coinc_builder_1ad777d92b1242cafdb594e3fb315ae3a9">reset</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_builder_1aebad9a247ffe8dfa74d2738ee7cad755">set_first_hit</link> (<link linkend="_class_hit">Hit</link> const &amp;hit)</para>
</listitem>
            <listitem><para>void <link linkend="_class_builder_1acc042a420547dc2ee6eb85e6daf43b07">set_last_hit</link> (<link linkend="_class_hit">Hit</link> const &amp;hit)</para>
</listitem>
            <listitem><para>void <link linkend="_class_coinc_builder_1aebb78cdb1f0b81acee5943abf8902382">setTimeWindow</link> (<link linkend="__hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7">Time</link> const &amp;timewindow)</para>
</listitem>
            <listitem><para>void <link linkend="_class_coinc_builder_1acde77c1fd73d13df18a4190872396851">setTimeWindow_ns</link> (<link linkend="__hit_8hpp_1ad7cd28c849adeb8fec74d20155b0113d">Time_ns</link> const &amp;timewindow_ns)</para>
</listitem>
            <listitem><para><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> <link linkend="_class_builder_1a3097a8df520a8ab39c953cb8b659b2ee">size</link> () const</para>
</listitem>
            <listitem><para><link linkend="_lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21">uchar</link> const  &amp; <link linkend="_class_builder_1af86b7b9639bb301f191e6263dd871bf7">status</link> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static void <link linkend="_class_builder_1a4d557d96189a42cbc0a4a0d32db45d6c">keepSingles</link> (bool const &amp;b=true)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_event">Event</link> * <link linkend="_class_builder_1a76749e4cc31025fde18f9cdbeb232cbf">m_event</link> = nullptr</para>
</listitem>
            <listitem><para><link linkend="_class_hit">Hit</link> <link linkend="_class_builder_1a5cce09bc1a95dd0bcaa4f857f1a1b3da">m_last_hit</link></para>
</listitem>
            <listitem><para><link linkend="_lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21">uchar</link> <link linkend="_class_builder_1a81c56e91c1951d25faecf88f390b5bcb">m_status</link> = 0</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>static bool <link linkend="_class_builder_1a7b1399ae5a1a58620dd564754d691348">m_keep_singles</link> = false</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="__hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7">Time</link> <link linkend="_class_coinc_builder_1ac6bf8fbe3ea6f8ecf0b7d70a0be2a5d3">m_time_window</link> = 500000ll</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Coincidence builder. </para>



<para>Use this class when you don&apos;t have any particular time reference Add one hit after the other using <link linkend="_class_coinc_builder_1a6fbd7caa8ab6ac6bbf4d14eb094b6417">CoincBuilder::build()</link> If two consecutive hits are within a time window, add the following hits This class will return true when the current hit is out of the time window</para>

<para>Using Builder::keepSingles(bool) method will make <link linkend="_class_coinc_builder_1a6fbd7caa8ab6ac6bbf4d14eb094b6417">CoincBuilder::build()</link> return true for lonely hits as well </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_coinc_builder_1a358978c5c9a118398d7b8dee4f327999"/>    <section>
    <title>CoincBuilder()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>CoincBuilder</primary><secondary>CoincBuilder</secondary></indexterm>
<indexterm><primary>CoincBuilder</primary><secondary>CoincBuilder</secondary></indexterm>
<para><computeroutput>CoincBuilder::CoincBuilder ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_coinc_builder_1a480b830624ff3166e041ba80b086c0bc"/>    <section>
    <title>CoincBuilder()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>CoincBuilder</primary><secondary>CoincBuilder</secondary></indexterm>
<indexterm><primary>CoincBuilder</primary><secondary>CoincBuilder</secondary></indexterm>
<para><computeroutput>CoincBuilder::CoincBuilder (<link linkend="_class_event">Event</link> * _event)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_coinc_builder_1af182ffce899d34d294c8ad9c4450a14f"/>    <section>
    <title>CoincBuilder()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>CoincBuilder</primary><secondary>CoincBuilder</secondary></indexterm>
<indexterm><primary>CoincBuilder</primary><secondary>CoincBuilder</secondary></indexterm>
<para><computeroutput>CoincBuilder::CoincBuilder (<link linkend="_class_event">Event</link> * _event, <link linkend="__hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7">Time</link> const &amp; _timeWindow)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_coinc_builder_1a6fbd7caa8ab6ac6bbf4d14eb094b6417"/>    <section>
    <title>build()</title>
<indexterm><primary>build</primary><secondary>CoincBuilder</secondary></indexterm>
<indexterm><primary>CoincBuilder</primary><secondary>build</secondary></indexterm>
<para><computeroutput>bool CoincBuilder::build (<link linkend="_class_hit">Hit</link> const &amp; _hit)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Add Hits to the event. Return true when an event is complete, i.e. current hit is outside of time window. </para>
</para>

<para>3 status : 0: single | 1: begin of coincidence | 2: coincidence complete </para>
<para>
Implements <link linkend="_class_builder_1a6174fb0019ff2eafed26644d05e374a5">Builder</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_coinc_builder_a6fbd7caa8ab6ac6bbf4d14eb094b6417_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_coinc_builder_a6fbd7caa8ab6ac6bbf4d14eb094b6417_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_coinc_builder_1a7bb003c28d9b4b43bbd10a09771226ae"/>    <section>
    <title>coincidence()</title>
<indexterm><primary>coincidence</primary><secondary>CoincBuilder</secondary></indexterm>
<indexterm><primary>CoincBuilder</primary><secondary>coincidence</secondary></indexterm>
<para><computeroutput>bool CoincBuilder::coincidence (<link linkend="_class_hit">Hit</link> const &amp; hit)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_builder_1aacd0df1ffcecbfb4bbc009e6efd0b541">Builder</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_coinc_builder_a7bb003c28d9b4b43bbd10a09771226ae_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_coinc_builder_a7bb003c28d9b4b43bbd10a09771226ae_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_builder_1a8fd6226096d712de58f78e9ef123c45d"/>    <section>
    <title>getEvent()</title>
<indexterm><primary>getEvent</primary><secondary>CoincBuilder</secondary></indexterm>
<indexterm><primary>CoincBuilder</primary><secondary>getEvent</secondary></indexterm>
<para><computeroutput><link linkend="_class_event">Event</link>* Builder::getEvent ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_builder_1abeb8339305e7a10fb2c67cc0fed9237b"/>    <section>
    <title>getLastHit()</title>
<indexterm><primary>getLastHit</primary><secondary>CoincBuilder</secondary></indexterm>
<indexterm><primary>CoincBuilder</primary><secondary>getLastHit</secondary></indexterm>
<para><computeroutput><link linkend="_class_hit">Hit</link> const&amp; Builder::getLastHit ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_builder_1a414690f7964ed158937df8a65b1d4760"/>    <section>
    <title>isBuilding()</title>
<indexterm><primary>isBuilding</primary><secondary>CoincBuilder</secondary></indexterm>
<indexterm><primary>CoincBuilder</primary><secondary>isBuilding</secondary></indexterm>
<para><computeroutput>bool Builder::isBuilding ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_builder_1af7ce79872abc82e734c72e03380a1f34"/>    <section>
    <title>isBuilt()</title>
<indexterm><primary>isBuilt</primary><secondary>CoincBuilder</secondary></indexterm>
<indexterm><primary>CoincBuilder</primary><secondary>isBuilt</secondary></indexterm>
<para><computeroutput>bool Builder::isBuilt ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_builder_1aa476b7d1fd2fe31882a3380769eb60a9"/>    <section>
    <title>isSingle()</title>
<indexterm><primary>isSingle</primary><secondary>CoincBuilder</secondary></indexterm>
<indexterm><primary>CoincBuilder</primary><secondary>isSingle</secondary></indexterm>
<para><computeroutput>bool Builder::isSingle ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_builder_aa476b7d1fd2fe31882a3380769eb60a9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_builder_1a4d557d96189a42cbc0a4a0d32db45d6c"/>    <section>
    <title>keepSingles()</title>
<indexterm><primary>keepSingles</primary><secondary>CoincBuilder</secondary></indexterm>
<indexterm><primary>CoincBuilder</primary><secondary>keepSingles</secondary></indexterm>
<para><computeroutput>static void Builder::keepSingles (bool const &amp; b = <computeroutput>true</computeroutput>
)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_builder_a4d557d96189a42cbc0a4a0d32db45d6c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_coinc_builder_1aea3e2ad2ee31f1a77abea9e9921cdd6f"/>    <section>
    <title>printEvent()</title>
<indexterm><primary>printEvent</primary><secondary>CoincBuilder</secondary></indexterm>
<indexterm><primary>CoincBuilder</primary><secondary>printEvent</secondary></indexterm>
<para><computeroutput>void CoincBuilder::printEvent ( )</computeroutput></para>    </section><anchor xml:id="_class_coinc_builder_1ad777d92b1242cafdb594e3fb315ae3a9"/>    <section>
    <title>reset()</title>
<indexterm><primary>reset</primary><secondary>CoincBuilder</secondary></indexterm>
<indexterm><primary>CoincBuilder</primary><secondary>reset</secondary></indexterm>
<para><computeroutput>void CoincBuilder::reset ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented from <link linkend="_class_builder_1ae2d72f1157ccaaddc45b6963c7971f30">Builder</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_coinc_builder_ad777d92b1242cafdb594e3fb315ae3a9_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_builder_1aebad9a247ffe8dfa74d2738ee7cad755"/>    <section>
    <title>set_first_hit()</title>
<indexterm><primary>set_first_hit</primary><secondary>CoincBuilder</secondary></indexterm>
<indexterm><primary>CoincBuilder</primary><secondary>set_first_hit</secondary></indexterm>
<para><computeroutput>void Builder::set_first_hit (<link linkend="_class_hit">Hit</link> const &amp; hit)<computeroutput>[inline]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_builder_1acc042a420547dc2ee6eb85e6daf43b07"/>    <section>
    <title>set_last_hit()</title>
<indexterm><primary>set_last_hit</primary><secondary>CoincBuilder</secondary></indexterm>
<indexterm><primary>CoincBuilder</primary><secondary>set_last_hit</secondary></indexterm>
<para><computeroutput>void Builder::set_last_hit (<link linkend="_class_hit">Hit</link> const &amp; hit)<computeroutput>[inline]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_coinc_builder_1aebb78cdb1f0b81acee5943abf8902382"/>    <section>
    <title>setTimeWindow()</title>
<indexterm><primary>setTimeWindow</primary><secondary>CoincBuilder</secondary></indexterm>
<indexterm><primary>CoincBuilder</primary><secondary>setTimeWindow</secondary></indexterm>
<para><computeroutput>void CoincBuilder::setTimeWindow (<link linkend="__hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7">Time</link> const &amp; timewindow)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_coinc_builder_1acde77c1fd73d13df18a4190872396851"/>    <section>
    <title>setTimeWindow_ns()</title>
<indexterm><primary>setTimeWindow_ns</primary><secondary>CoincBuilder</secondary></indexterm>
<indexterm><primary>CoincBuilder</primary><secondary>setTimeWindow_ns</secondary></indexterm>
<para><computeroutput>void CoincBuilder::setTimeWindow_ns (<link linkend="__hit_8hpp_1ad7cd28c849adeb8fec74d20155b0113d">Time_ns</link> const &amp; timewindow_ns)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_builder_1a3097a8df520a8ab39c953cb8b659b2ee"/>    <section>
    <title>size()</title>
<indexterm><primary>size</primary><secondary>CoincBuilder</secondary></indexterm>
<indexterm><primary>CoincBuilder</primary><secondary>size</secondary></indexterm>
<para><computeroutput><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> Builder::size ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_builder_a3097a8df520a8ab39c953cb8b659b2ee_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_builder_a3097a8df520a8ab39c953cb8b659b2ee_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_builder_1af86b7b9639bb301f191e6263dd871bf7"/>    <section>
    <title>status()</title>
<indexterm><primary>status</primary><secondary>CoincBuilder</secondary></indexterm>
<indexterm><primary>CoincBuilder</primary><secondary>status</secondary></indexterm>
<para><computeroutput><link linkend="_lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21">uchar</link> const&amp; Builder::status ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_builder_1a76749e4cc31025fde18f9cdbeb232cbf"/>    <section>
    <title>m_event</title>
<indexterm><primary>m_event</primary><secondary>CoincBuilder</secondary></indexterm>
<indexterm><primary>CoincBuilder</primary><secondary>m_event</secondary></indexterm>
<para><computeroutput><link linkend="_class_event">Event</link>* Builder::m_event = nullptr<computeroutput>[protected]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_builder_1a7b1399ae5a1a58620dd564754d691348"/>    <section>
    <title>m_keep_singles</title>
<indexterm><primary>m_keep_singles</primary><secondary>CoincBuilder</secondary></indexterm>
<indexterm><primary>CoincBuilder</primary><secondary>m_keep_singles</secondary></indexterm>
<para><computeroutput>bool Builder::m_keep_singles = false<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_builder_1a5cce09bc1a95dd0bcaa4f857f1a1b3da"/>    <section>
    <title>m_last_hit</title>
<indexterm><primary>m_last_hit</primary><secondary>CoincBuilder</secondary></indexterm>
<indexterm><primary>CoincBuilder</primary><secondary>m_last_hit</secondary></indexterm>
<para><computeroutput><link linkend="_class_hit">Hit</link> Builder::m_last_hit<computeroutput>[protected]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_builder_1a81c56e91c1951d25faecf88f390b5bcb"/>    <section>
    <title>m_status</title>
<indexterm><primary>m_status</primary><secondary>CoincBuilder</secondary></indexterm>
<indexterm><primary>CoincBuilder</primary><secondary>m_status</secondary></indexterm>
<para><computeroutput><link linkend="_lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21">uchar</link> Builder::m_status = 0<computeroutput>[protected]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_coinc_builder_1ac6bf8fbe3ea6f8ecf0b7d70a0be2a5d3"/>    <section>
    <title>m_time_window</title>
<indexterm><primary>m_time_window</primary><secondary>CoincBuilder</secondary></indexterm>
<indexterm><primary>CoincBuilder</primary><secondary>m_time_window</secondary></indexterm>
<para><computeroutput><link linkend="__hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7">Time</link> CoincBuilder::m_time_window = 500000ll<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
lib/Classes/<link linkend="__coinc_builder_8hpp">CoincBuilder.hpp</link></section>
</section>
