<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_files__functions_8hpp" xml:lang="en-US">
<title>lib/files_functions.hpp File Reference</title>
<indexterm><primary>lib/files_functions.hpp</primary></indexterm>
<programlisting>#include &quot;print.hpp&quot;
#include &quot;string_functions.hpp&quot;
#include &quot;vector_functions.hpp&quot;
#include &lt;fstream&gt;
#include &lt;filesystem&gt;
</programlisting>Include dependency graph for files_functions.hpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class_co_data_frame">CoDataFrame&lt; Index, T &gt;</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_file">File</link></para>

<para>EXPERIMENTAL Composed of a <link linkend="_class_path">Path</link> and a <link linkend="_class_filename">Filename</link>. </para>
</listitem>
            <listitem><para>class <link linkend="_class_filename">Filename</link></para>

<para>EXPERIMENTAL Contains the short name and the extension of a given file, without any knowledge of its path. </para>
</listitem>
            <listitem><para>class <link linkend="_class_folder">Folder</link></para>

<para>EXPERIMENTAL Object used to hold a folder&apos;s name. </para>
</listitem>
            <listitem><para>class <link linkend="_class_folders">Folders</link></para>

<para>EXPERIMENTAL Object used to hold a list of folders. </para>
</listitem>
            <listitem><para>class <link linkend="_class_path">Path</link></para>

<para>EXPERIMENTAL Object used to hold the complete path of a giver folder. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_files__functions_8hpp_1af9990cd15a6b2f01f535dbf9b536f319">check_new_file</link> (std::string &amp;folderName, std::string &amp;lastFile)</para>
</listitem>
            <listitem><para>void <link linkend="_files__functions_8hpp_1af52310dd2d55713265daa0e58dd7bf21">create_folder_if_none</link> (std::string const &amp;folderName)</para>
</listitem>
            <listitem><para>std::string <link linkend="_files__functions_8hpp_1a321abbd0681c4da012deaf49122389c5">extension</link> (std::string const &amp;string)</para>
</listitem>
            <listitem><para>bool <link linkend="_files__functions_8hpp_1a6d165da5cc41e5429a9c03c6a6c68d96">file_exists</link> (std::string fileName)</para>
</listitem>
            <listitem><para>bool <link linkend="_files__functions_8hpp_1afd584978228fac5fae283c12837378dd">file_is_empty</link> (std::ifstream &amp;file)</para>
</listitem>
            <listitem><para>std::vector&lt; std::string &gt; <link linkend="_files__functions_8hpp_1aef043853f99e42d9dbe0dad171c38a9a">findFilesWildcard</link> (std::string const &amp;expression)</para>
</listitem>
            <listitem><para>void <link linkend="_files__functions_8hpp_1add17dbbceeb4bb61adb27edce70922e5">findFilesWildcard</link> (std::string const &amp;expression, std::vector&lt; std::string &gt; &amp;vec)</para>
</listitem>
            <listitem><para>bool <link linkend="_files__functions_8hpp_1a6d7a6f0ccbecfe41730c211f472cfcb3">folder_exists</link> (std::string folderName)</para>
</listitem>
            <listitem><para>bool <link linkend="_files__functions_8hpp_1a1af9b6a86720b38a84a8b0be4e57bec7">folder_exists</link> (std::string folderName, bool const &amp;verbose)</para>
</listitem>
            <listitem><para>std::string <link linkend="_files__functions_8hpp_1a595eecb3abc2bf6927fee1c77ea1bfa7">get_filename_at</link> (std::string &amp;folderName, int pos)</para>
</listitem>
            <listitem><para>std::string <link linkend="_files__functions_8hpp_1a4000ec99a26e146333e62836d01dff5b">getExtension</link> (std::string const &amp;string)</para>
</listitem>
            <listitem><para>std::string <link linkend="_files__functions_8hpp_1ab1e262f27aaad28944f29cd2bbde417f">getPath</link> (std::string const &amp;string)</para>
</listitem>
            <listitem><para>bool <link linkend="_files__functions_8hpp_1a0b4d810562e117c29ca0dda1855a02e3">hasPath</link> (std::string const &amp;file)</para>
</listitem>
            <listitem><para>std::vector&lt; std::string &gt; <link linkend="_files__functions_8hpp_1a8c014ea676bc34e0ec57b1aeb55af4c5">list_files_in_folder</link> (std::string const &amp;foldername, std::vector&lt; std::string &gt; const &amp;extensions={&quot;*&quot;}, bool const &amp;reorder=true)</para>
</listitem>
            <listitem><para>std::vector&lt; std::string &gt; <link linkend="_files__functions_8hpp_1a25af8f31a8b51b38a4c2334e3901acfc">listFileReader</link> (std::string const &amp;filename)</para>
</listitem>
            <listitem><para>int <link linkend="_files__functions_8hpp_1a5e105952499e9ca713d2a2fd5db3299d">nb_files_in_folder</link> (std::string &amp;folderName)</para>
</listitem>
            <listitem><para><link linkend="_class_folder">Folder</link> <link linkend="_files__functions_8hpp_1a4241cbe111be51220d4ff2900f701ade">operator+</link> (const char *string, <link linkend="_class_folder">Folder</link> const &amp;folder)</para>
</listitem>
            <listitem><para>std::string <link linkend="_files__functions_8hpp_1a5326a7606384341a1bd2a01f15ca9b06">operator+</link> (<link linkend="_class_path">Path</link> const &amp;path, <link linkend="_class_filename">Filename</link> const &amp;filename)</para>
</listitem>
            <listitem><para><link linkend="_class_folder">Folder</link> <link linkend="_files__functions_8hpp_1ad580345a13bcb93c84b981f67f25b899">operator+</link> (std::string const &amp;string, <link linkend="_class_folder">Folder</link> const &amp;folder)</para>
</listitem>
            <listitem><para>std::string <link linkend="_files__functions_8hpp_1a151e488cdb2e927bd293d0e574948f43">operator+=</link> (std::string const &amp;string, <link linkend="_class_folder">Folder</link> const &amp;folder)</para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_files__functions_8hpp_1a159a1e5f9109960956ef172f5b862cf8">operator&lt;&lt;</link> (std::ostream &amp;cout, <link linkend="_class_file">File</link> const &amp;file)</para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_files__functions_8hpp_1a40dcd00c07b1ec706cecc30653522e4f">operator&lt;&lt;</link> (std::ostream &amp;cout, <link linkend="_class_folder">Folder</link> const &amp;folder)</para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_files__functions_8hpp_1aa889cd33a4965fd9590feac2fb26b0f2">operator&lt;&lt;</link> (std::ostream &amp;cout, <link linkend="_class_folders">Folders</link> const &amp;folders)</para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_files__functions_8hpp_1a039532c19ad3ebbe61e164a4e4f28bcd">operator&lt;&lt;</link> (std::ostream &amp;cout, <link linkend="_class_path">Path</link> const &amp;p)</para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_files__functions_8hpp_1ad547fe8dfb968f824b36822b258b736a">operator&lt;&lt;</link> (std::ostream &amp;os, <link linkend="_class_filename">Filename</link> const &amp;filename)</para>
</listitem>
            <listitem><para>template&lt;class N , class D &gt; </para><para>std::string <link linkend="_files__functions_8hpp_1a0cd4400fb967ad5f460624488d8dc211">procent</link> (N const &amp;n, D const &amp;d)</para>
</listitem>
            <listitem><para>std::string &amp; <link linkend="_files__functions_8hpp_1a4a072faccd444b8907dffd96e6211461">push_back_if_none</link> (std::string &amp;string, char const &amp;character)</para>
</listitem>
            <listitem><para>std::string <link linkend="_files__functions_8hpp_1a658fd83a6ed34994ff0742273a3cc358">removeExtension</link> (std::string const &amp;string)</para>
</listitem>
            <listitem><para>std::string <link linkend="_files__functions_8hpp_1ad3a78346393c83676348f6bad34b8ce2">removePath</link> (std::string const &amp;string)</para>
</listitem>
            <listitem><para>std::string <link linkend="_files__functions_8hpp_1a58f50a6390692cff52eef37fdaa94e56">rmPathAndExt</link> (std::string const &amp;string)</para>
</listitem>
            <listitem><para>float <link linkend="_files__functions_8hpp_1a3a01792a9cfbdd1f2b358d878559a917">size_file</link> (std::ifstream &amp;file, std::string const &amp;unit=&quot;o&quot;)</para>
</listitem>
            <listitem><para>float <link linkend="_files__functions_8hpp_1a125acb6325acad22f46a038e260ff4c9">size_file</link> (std::string filename, std::string const &amp;unit=&quot;o&quot;)</para>
</listitem>
            <listitem><para>float <link linkend="_files__functions_8hpp_1a30dc160962c758d9ee0aef14c8999912">size_file_conversion</link> (float const &amp;size, std::string const &amp;unit_i, std::string const &amp;unit_o)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>std::map&lt; std::string, float &gt; <link linkend="_files__functions_8hpp_1aaa642aa8e56dec4354f00dd45a43832f">size_file_unit</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_files__functions_8hpp_1af9990cd15a6b2f01f535dbf9b536f319"/>    <section>
    <title>check_new_file()</title>
<indexterm><primary>check_new_file</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>check_new_file</secondary></indexterm>
<para><computeroutput>int check_new_file (std::string &amp; folderName, std::string &amp; lastFile)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_af9990cd15a6b2f01f535dbf9b536f319_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1af52310dd2d55713265daa0e58dd7bf21"/>    <section>
    <title>create_folder_if_none()</title>
<indexterm><primary>create_folder_if_none</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>create_folder_if_none</secondary></indexterm>
<para><computeroutput>void create_folder_if_none (std::string const &amp; folderName)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_af52310dd2d55713265daa0e58dd7bf21_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_af52310dd2d55713265daa0e58dd7bf21_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1a321abbd0681c4da012deaf49122389c5"/>    <section>
    <title>extension()</title>
<indexterm><primary>extension</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>extension</secondary></indexterm>
<para><computeroutput>std::string extension (std::string const &amp; string)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a321abbd0681c4da012deaf49122389c5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1a6d165da5cc41e5429a9c03c6a6c68d96"/>    <section>
    <title>file_exists()</title>
<indexterm><primary>file_exists</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>file_exists</secondary></indexterm>
<para><computeroutput>bool file_exists (std::string fileName)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a6d165da5cc41e5429a9c03c6a6c68d96_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a6d165da5cc41e5429a9c03c6a6c68d96_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1afd584978228fac5fae283c12837378dd"/>    <section>
    <title>file_is_empty()</title>
<indexterm><primary>file_is_empty</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>file_is_empty</secondary></indexterm>
<para><computeroutput>bool file_is_empty (std::ifstream &amp; file)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_afd584978228fac5fae283c12837378dd_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1aef043853f99e42d9dbe0dad171c38a9a"/>    <section>
    <title>findFilesWildcard()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>findFilesWildcard</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>findFilesWildcard</secondary></indexterm>
<para><computeroutput>std::vector&lt;std::string&gt; findFilesWildcard (std::string const &amp; expression)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_aef043853f99e42d9dbe0dad171c38a9a_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1add17dbbceeb4bb61adb27edce70922e5"/>    <section>
    <title>findFilesWildcard()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>findFilesWildcard</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>findFilesWildcard</secondary></indexterm>
<para><computeroutput>void findFilesWildcard (std::string const &amp; expression, std::vector&lt; std::string &gt; &amp; vec)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_add17dbbceeb4bb61adb27edce70922e5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1a6d7a6f0ccbecfe41730c211f472cfcb3"/>    <section>
    <title>folder_exists()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>folder_exists</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>folder_exists</secondary></indexterm>
<para><computeroutput>bool folder_exists (std::string folderName)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a6d7a6f0ccbecfe41730c211f472cfcb3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a6d7a6f0ccbecfe41730c211f472cfcb3_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1a1af9b6a86720b38a84a8b0be4e57bec7"/>    <section>
    <title>folder_exists()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>folder_exists</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>folder_exists</secondary></indexterm>
<para><computeroutput>bool folder_exists (std::string folderName, bool const &amp; verbose)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a1af9b6a86720b38a84a8b0be4e57bec7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1a595eecb3abc2bf6927fee1c77ea1bfa7"/>    <section>
    <title>get_filename_at()</title>
<indexterm><primary>get_filename_at</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>get_filename_at</secondary></indexterm>
<para><computeroutput>std::string get_filename_at (std::string &amp; folderName, int pos)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a595eecb3abc2bf6927fee1c77ea1bfa7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1a4000ec99a26e146333e62836d01dff5b"/>    <section>
    <title>getExtension()</title>
<indexterm><primary>getExtension</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>getExtension</secondary></indexterm>
<para><computeroutput>std::string getExtension (std::string const &amp; string)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a4000ec99a26e146333e62836d01dff5b_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1ab1e262f27aaad28944f29cd2bbde417f"/>    <section>
    <title>getPath()</title>
<indexterm><primary>getPath</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>getPath</secondary></indexterm>
<para><computeroutput>std::string getPath (std::string const &amp; string)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_ab1e262f27aaad28944f29cd2bbde417f_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1a0b4d810562e117c29ca0dda1855a02e3"/>    <section>
    <title>hasPath()</title>
<indexterm><primary>hasPath</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>hasPath</secondary></indexterm>
<para><computeroutput>bool hasPath (std::string const &amp; file)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a0b4d810562e117c29ca0dda1855a02e3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a0b4d810562e117c29ca0dda1855a02e3_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1a8c014ea676bc34e0ec57b1aeb55af4c5"/>    <section>
    <title>list_files_in_folder()</title>
<indexterm><primary>list_files_in_folder</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>list_files_in_folder</secondary></indexterm>
<para><computeroutput>std::vector&lt;std::string&gt; list_files_in_folder (std::string const &amp; foldername, std::vector&lt; std::string &gt; const &amp; extensions = <computeroutput>{&quot;*&quot;}</computeroutput>
, bool const &amp; reorder = <computeroutput>true</computeroutput>
)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a8c014ea676bc34e0ec57b1aeb55af4c5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1a25af8f31a8b51b38a4c2334e3901acfc"/>    <section>
    <title>listFileReader()</title>
<indexterm><primary>listFileReader</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>listFileReader</secondary></indexterm>
<para><computeroutput>std::vector&lt;std::string&gt; listFileReader (std::string const &amp; filename)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a25af8f31a8b51b38a4c2334e3901acfc_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1a5e105952499e9ca713d2a2fd5db3299d"/>    <section>
    <title>nb_files_in_folder()</title>
<indexterm><primary>nb_files_in_folder</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>nb_files_in_folder</secondary></indexterm>
<para><computeroutput>int nb_files_in_folder (std::string &amp; folderName)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a5e105952499e9ca713d2a2fd5db3299d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a5e105952499e9ca713d2a2fd5db3299d_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1a4241cbe111be51220d4ff2900f701ade"/>    <section>
    <title>operator+()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator+</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>operator+</secondary></indexterm>
<para><computeroutput><link linkend="_class_folder">Folder</link> operator+ (const char * string, <link linkend="_class_folder">Folder</link> const &amp; folder)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a4241cbe111be51220d4ff2900f701ade_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1a5326a7606384341a1bd2a01f15ca9b06"/>    <section>
    <title>operator+()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator+</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>operator+</secondary></indexterm>
<para><computeroutput>std::string operator+ (<link linkend="_class_path">Path</link> const &amp; path, <link linkend="_class_filename">Filename</link> const &amp; filename)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a5326a7606384341a1bd2a01f15ca9b06_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1ad580345a13bcb93c84b981f67f25b899"/>    <section>
    <title>operator+()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator+</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>operator+</secondary></indexterm>
<para><computeroutput><link linkend="_class_folder">Folder</link> operator+ (std::string const &amp; string, <link linkend="_class_folder">Folder</link> const &amp; folder)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_ad580345a13bcb93c84b981f67f25b899_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1a151e488cdb2e927bd293d0e574948f43"/>    <section>
    <title>operator+=()</title>
<indexterm><primary>operator+=</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>operator+=</secondary></indexterm>
<para><computeroutput>std::string operator+= (std::string const &amp; string, <link linkend="_class_folder">Folder</link> const &amp; folder)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a151e488cdb2e927bd293d0e574948f43_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1a159a1e5f9109960956ef172f5b862cf8"/>    <section>
    <title>operator&lt;&lt;()<computeroutput>[1/5]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<para><computeroutput>std::ostream&amp; operator&lt;&lt; (std::ostream &amp; cout, <link linkend="_class_file">File</link> const &amp; file)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a159a1e5f9109960956ef172f5b862cf8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1a40dcd00c07b1ec706cecc30653522e4f"/>    <section>
    <title>operator&lt;&lt;()<computeroutput>[2/5]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<para><computeroutput>std::ostream&amp; operator&lt;&lt; (std::ostream &amp; cout, <link linkend="_class_folder">Folder</link> const &amp; folder)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a40dcd00c07b1ec706cecc30653522e4f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1aa889cd33a4965fd9590feac2fb26b0f2"/>    <section>
    <title>operator&lt;&lt;()<computeroutput>[3/5]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<para><computeroutput>std::ostream&amp; operator&lt;&lt; (std::ostream &amp; cout, <link linkend="_class_folders">Folders</link> const &amp; folders)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_aa889cd33a4965fd9590feac2fb26b0f2_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1a039532c19ad3ebbe61e164a4e4f28bcd"/>    <section>
    <title>operator&lt;&lt;()<computeroutput>[4/5]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<para><computeroutput>std::ostream&amp; operator&lt;&lt; (std::ostream &amp; cout, <link linkend="_class_path">Path</link> const &amp; p)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a039532c19ad3ebbe61e164a4e4f28bcd_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1ad547fe8dfb968f824b36822b258b736a"/>    <section>
    <title>operator&lt;&lt;()<computeroutput>[5/5]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<para><computeroutput>std::ostream&amp; operator&lt;&lt; (std::ostream &amp; os, <link linkend="_class_filename">Filename</link> const &amp; filename)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_ad547fe8dfb968f824b36822b258b736a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1a0cd4400fb967ad5f460624488d8dc211"/>    <section>
    <title>procent()</title>
<indexterm><primary>procent</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>procent</secondary></indexterm>
<computeroutput>template&lt;class N , class D &gt; </computeroutput><para><computeroutput>std::string procent (N const &amp; n, D const &amp; d)</computeroutput></para>    </section><anchor xml:id="_files__functions_8hpp_1a4a072faccd444b8907dffd96e6211461"/>    <section>
    <title>push_back_if_none()</title>
<indexterm><primary>push_back_if_none</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>push_back_if_none</secondary></indexterm>
<para><computeroutput>std::string&amp; push_back_if_none (std::string &amp; string, char const &amp; character)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a4a072faccd444b8907dffd96e6211461_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1a658fd83a6ed34994ff0742273a3cc358"/>    <section>
    <title>removeExtension()</title>
<indexterm><primary>removeExtension</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>removeExtension</secondary></indexterm>
<para><computeroutput>std::string removeExtension (std::string const &amp; string)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a658fd83a6ed34994ff0742273a3cc358_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1ad3a78346393c83676348f6bad34b8ce2"/>    <section>
    <title>removePath()</title>
<indexterm><primary>removePath</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>removePath</secondary></indexterm>
<para><computeroutput>std::string removePath (std::string const &amp; string)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_ad3a78346393c83676348f6bad34b8ce2_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1a58f50a6390692cff52eef37fdaa94e56"/>    <section>
    <title>rmPathAndExt()</title>
<indexterm><primary>rmPathAndExt</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>rmPathAndExt</secondary></indexterm>
<para><computeroutput>std::string rmPathAndExt (std::string const &amp; string)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a58f50a6390692cff52eef37fdaa94e56_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1a3a01792a9cfbdd1f2b358d878559a917"/>    <section>
    <title>size_file()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>size_file</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>size_file</secondary></indexterm>
<para><computeroutput>float size_file (std::ifstream &amp; file, std::string const &amp; unit = <computeroutput>&quot;o&quot;</computeroutput>
)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a3a01792a9cfbdd1f2b358d878559a917_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1a125acb6325acad22f46a038e260ff4c9"/>    <section>
    <title>size_file()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>size_file</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>size_file</secondary></indexterm>
<para><computeroutput>float size_file (std::string filename, std::string const &amp; unit = <computeroutput>&quot;o&quot;</computeroutput>
)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="files__functions_8hpp_a125acb6325acad22f46a038e260ff4c9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_files__functions_8hpp_1a30dc160962c758d9ee0aef14c8999912"/>    <section>
    <title>size_file_conversion()</title>
<indexterm><primary>size_file_conversion</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>size_file_conversion</secondary></indexterm>
<para><computeroutput>float size_file_conversion (float const &amp; size, std::string const &amp; unit_i, std::string const &amp; unit_o)</computeroutput></para></section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_files__functions_8hpp_1aaa642aa8e56dec4354f00dd45a43832f"/>    <section>
    <title>size_file_unit</title>
<indexterm><primary>size_file_unit</primary><secondary>files_functions.hpp</secondary></indexterm>
<indexterm><primary>files_functions.hpp</primary><secondary>size_file_unit</secondary></indexterm>
<para><computeroutput>std::map&lt;std::string, float&gt; size_file_unit</computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting>=
{
&#32;&#32;{<emphasis role="stringliteral">&quot;o&quot;</emphasis>,&#32;&#32;1.},
&#32;&#32;{<emphasis role="stringliteral">&quot;ko&quot;</emphasis>,&#32;1024.},
&#32;&#32;{<emphasis role="stringliteral">&quot;Mo&quot;</emphasis>,&#32;1048576.},
&#32;&#32;{<emphasis role="stringliteral">&quot;Go&quot;</emphasis>,&#32;1073741824.},
&#32;&#32;{<emphasis role="stringliteral">&quot;B&quot;</emphasis>,&#32;&#32;1.},
&#32;&#32;{<emphasis role="stringliteral">&quot;kB&quot;</emphasis>,&#32;1024.},
&#32;&#32;{<emphasis role="stringliteral">&quot;MB&quot;</emphasis>,&#32;1048576.},
&#32;&#32;{<emphasis role="stringliteral">&quot;GB&quot;</emphasis>,&#32;1073741824.}
}
</programlisting></section>
</section>
</section>
