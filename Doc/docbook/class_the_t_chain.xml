<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_the_t_chain" xml:lang="en-US">
<title>TheTChain Class Reference</title>
<indexterm><primary>TheTChain</primary></indexterm>
<para>

<para>Not functionnal yet. </para>
 
</para>
<para>
<computeroutput>#include &lt;libRoot.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_the_t_chain_1add0a45b5b2328af8a75ebce7bde98f0c">Add</link> (std::string const &amp;expression)</para>
</listitem>
            <listitem><para>auto <link linkend="_class_the_t_chain_1ae1f6295d54f2ce619bdf5e1555cb5243">begin</link> ()</para>
</listitem>
            <listitem><para>auto <link linkend="_class_the_t_chain_1a950b7bd4cd253b85bc1108ceb573bfd1">end</link> ()</para>
</listitem>
            <listitem><para>TTree * <link linkend="_class_the_t_chain_1a62880bea2d28ba4963a0784845b5bd66">operator[]</link> (int const &amp;i)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_the_t_chain_1a5e7c32ab56c040e9fac734db6eb7d6e6">read</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_the_t_chain_1a0858c536e02a0459fd2e101936fe923f">set</link> ()</para>
</listitem>
            <listitem><para>template&lt;class... ARGS&gt; </para><para>void <link linkend="_class_the_t_chain_1a342da75a59ca99b7f56cc76cece2b580">SetBranchAddress</link> (ARGS &amp;&amp;... args)</para>
</listitem>
            <listitem><para><link linkend="_class_the_t_chain_1abca9ad5e5cd894098e39660de91a3b36">TheTChain</link> (std::string const &amp;name, std::string const &amp;expression=&quot;&quot;, std::string const &amp;readMode=&quot;READ&quot;)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_the_t_chain_1aaa019deecc3a6a2fb214862e479e53a4">newTTree</link> (std::string const &amp;fileName)</para>
</listitem>
            <listitem><para>void <link linkend="_class_the_t_chain_1a0eaf5f8f574cfea07a4e2d1edac3e563">set</link> (std::string const &amp;expression)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>ULong64_t <link linkend="_class_the_t_chain_1af8623a59ec85b7047e505898a2e1ca28">m_evt_cursor</link> = 0</para>
</listitem>
            <listitem><para>std::vector&lt; TFile * &gt; <link linkend="_class_the_t_chain_1acdd69c2f1eddd7ff0b8a122336307f00">m_files</link></para>
</listitem>
            <listitem><para>std::vector&lt; std::string &gt; <link linkend="_class_the_t_chain_1adca1e51c2ca4f6d761db269375a4abdf">m_files_vec</link></para>
</listitem>
            <listitem><para>std::vector&lt; std::string &gt; <link linkend="_class_the_t_chain_1a2b60d00d493c326b7ef6fe9bd7d75395">m_input_files_expressions</link></para>
</listitem>
            <listitem><para>std::string <link linkend="_class_the_t_chain_1a3e18b727fcdca6044244e2bff67cd704">m_name</link> = &quot;&quot;</para>
</listitem>
            <listitem><para>std::string <link linkend="_class_the_t_chain_1a86ebdcbf215c3096476090e80d09dbc0">m_read_mode</link> = &quot;READ&quot;</para>
</listitem>
            <listitem><para>ULong64_t <link linkend="_class_the_t_chain_1a8038a5652ad04d3daaf506f3d0807639">m_size</link> = 0</para>
</listitem>
            <listitem><para>UInt_t <link linkend="_class_the_t_chain_1a819ab9dc6c19972b4bd385f771a2e4ba">m_tree_cursor</link> = 0</para>
</listitem>
            <listitem><para>std::vector&lt; TTree * &gt; <link linkend="_class_the_t_chain_1a353e40160c351c0049ae964dfd813847">m_trees</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Not functionnal yet. </para>



<para><para><link linkend="_todo_1_todo000013">Todo</link> 
<para>maybe</para>
</para></para>

<para>1: Add all the files <link linkend="_class_the_t_chain">TheTChain</link> chain(&quot;Nuball&quot;, &quot;/path/to/data/files*.root&quot;); chain.Add(&quot;/other_path/to/data/files*.root&quot;)</para>

<para>2: Setup the chain : chain.set();</para>

<para>3: Links all the variables chain.SetBranchAddress(&quot;branch&quot;, &amp;variable); </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_the_t_chain_1abca9ad5e5cd894098e39660de91a3b36"/>    <section>
    <title>TheTChain()</title>
<indexterm><primary>TheTChain</primary><secondary>TheTChain</secondary></indexterm>
<indexterm><primary>TheTChain</primary><secondary>TheTChain</secondary></indexterm>
<para><computeroutput>TheTChain::TheTChain (std::string const &amp; name, std::string const &amp; expression = <computeroutput>&quot;&quot;</computeroutput>
, std::string const &amp; readMode = <computeroutput>&quot;READ&quot;</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_the_t_chain_abca9ad5e5cd894098e39660de91a3b36_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_the_t_chain_1add0a45b5b2328af8a75ebce7bde98f0c"/>    <section>
    <title>Add()</title>
<indexterm><primary>Add</primary><secondary>TheTChain</secondary></indexterm>
<indexterm><primary>TheTChain</primary><secondary>Add</secondary></indexterm>
<para><computeroutput>void TheTChain::Add (std::string const &amp; expression)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_the_t_chain_add0a45b5b2328af8a75ebce7bde98f0c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_the_t_chain_1ae1f6295d54f2ce619bdf5e1555cb5243"/>    <section>
    <title>begin()</title>
<indexterm><primary>begin</primary><secondary>TheTChain</secondary></indexterm>
<indexterm><primary>TheTChain</primary><secondary>begin</secondary></indexterm>
<para><computeroutput>auto TheTChain::begin ( )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_the_t_chain_1a950b7bd4cd253b85bc1108ceb573bfd1"/>    <section>
    <title>end()</title>
<indexterm><primary>end</primary><secondary>TheTChain</secondary></indexterm>
<indexterm><primary>TheTChain</primary><secondary>end</secondary></indexterm>
<para><computeroutput>auto TheTChain::end ( )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_the_t_chain_1aaa019deecc3a6a2fb214862e479e53a4"/>    <section>
    <title>newTTree()</title>
<indexterm><primary>newTTree</primary><secondary>TheTChain</secondary></indexterm>
<indexterm><primary>TheTChain</primary><secondary>newTTree</secondary></indexterm>
<para><computeroutput>void TheTChain::newTTree (std::string const &amp; fileName)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_the_t_chain_1a62880bea2d28ba4963a0784845b5bd66"/>    <section>
    <title>operator[]()</title>
<indexterm><primary>operator[]</primary><secondary>TheTChain</secondary></indexterm>
<indexterm><primary>TheTChain</primary><secondary>operator[]</secondary></indexterm>
<para><computeroutput>TTree* TheTChain::operator[] (int const &amp; i)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_the_t_chain_1a5e7c32ab56c040e9fac734db6eb7d6e6"/>    <section>
    <title>read()</title>
<indexterm><primary>read</primary><secondary>TheTChain</secondary></indexterm>
<indexterm><primary>TheTChain</primary><secondary>read</secondary></indexterm>
<para><computeroutput>bool TheTChain::read ( )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_the_t_chain_1a0858c536e02a0459fd2e101936fe923f"/>    <section>
    <title>set()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>set</primary><secondary>TheTChain</secondary></indexterm>
<indexterm><primary>TheTChain</primary><secondary>set</secondary></indexterm>
<para><computeroutput>void TheTChain::set ( )</computeroutput></para>    </section><anchor xml:id="_class_the_t_chain_1a0eaf5f8f574cfea07a4e2d1edac3e563"/>    <section>
    <title>set()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>set</primary><secondary>TheTChain</secondary></indexterm>
<indexterm><primary>TheTChain</primary><secondary>set</secondary></indexterm>
<para><computeroutput>void TheTChain::set (std::string const &amp; expression)<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_the_t_chain_1a342da75a59ca99b7f56cc76cece2b580"/>    <section>
    <title>SetBranchAddress()</title>
<indexterm><primary>SetBranchAddress</primary><secondary>TheTChain</secondary></indexterm>
<indexterm><primary>TheTChain</primary><secondary>SetBranchAddress</secondary></indexterm>
<computeroutput>template&lt;class... ARGS&gt; </computeroutput><para><computeroutput>void TheTChain::SetBranchAddress (ARGS &amp;&amp;... args)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_the_t_chain_a342da75a59ca99b7f56cc76cece2b580_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_the_t_chain_a342da75a59ca99b7f56cc76cece2b580_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_the_t_chain_1af8623a59ec85b7047e505898a2e1ca28"/>    <section>
    <title>m_evt_cursor</title>
<indexterm><primary>m_evt_cursor</primary><secondary>TheTChain</secondary></indexterm>
<indexterm><primary>TheTChain</primary><secondary>m_evt_cursor</secondary></indexterm>
<para><computeroutput>ULong64_t TheTChain::m_evt_cursor = 0<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_the_t_chain_1acdd69c2f1eddd7ff0b8a122336307f00"/>    <section>
    <title>m_files</title>
<indexterm><primary>m_files</primary><secondary>TheTChain</secondary></indexterm>
<indexterm><primary>TheTChain</primary><secondary>m_files</secondary></indexterm>
<para><computeroutput>std::vector&lt;TFile*&gt; TheTChain::m_files<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_the_t_chain_1adca1e51c2ca4f6d761db269375a4abdf"/>    <section>
    <title>m_files_vec</title>
<indexterm><primary>m_files_vec</primary><secondary>TheTChain</secondary></indexterm>
<indexterm><primary>TheTChain</primary><secondary>m_files_vec</secondary></indexterm>
<para><computeroutput>std::vector&lt;std::string&gt; TheTChain::m_files_vec<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_the_t_chain_1a2b60d00d493c326b7ef6fe9bd7d75395"/>    <section>
    <title>m_input_files_expressions</title>
<indexterm><primary>m_input_files_expressions</primary><secondary>TheTChain</secondary></indexterm>
<indexterm><primary>TheTChain</primary><secondary>m_input_files_expressions</secondary></indexterm>
<para><computeroutput>std::vector&lt;std::string&gt; TheTChain::m_input_files_expressions<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_the_t_chain_1a3e18b727fcdca6044244e2bff67cd704"/>    <section>
    <title>m_name</title>
<indexterm><primary>m_name</primary><secondary>TheTChain</secondary></indexterm>
<indexterm><primary>TheTChain</primary><secondary>m_name</secondary></indexterm>
<para><computeroutput>std::string TheTChain::m_name = &quot;&quot;<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_the_t_chain_1a86ebdcbf215c3096476090e80d09dbc0"/>    <section>
    <title>m_read_mode</title>
<indexterm><primary>m_read_mode</primary><secondary>TheTChain</secondary></indexterm>
<indexterm><primary>TheTChain</primary><secondary>m_read_mode</secondary></indexterm>
<para><computeroutput>std::string TheTChain::m_read_mode = &quot;READ&quot;<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_the_t_chain_1a8038a5652ad04d3daaf506f3d0807639"/>    <section>
    <title>m_size</title>
<indexterm><primary>m_size</primary><secondary>TheTChain</secondary></indexterm>
<indexterm><primary>TheTChain</primary><secondary>m_size</secondary></indexterm>
<para><computeroutput>ULong64_t TheTChain::m_size = 0<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_the_t_chain_1a819ab9dc6c19972b4bd385f771a2e4ba"/>    <section>
    <title>m_tree_cursor</title>
<indexterm><primary>m_tree_cursor</primary><secondary>TheTChain</secondary></indexterm>
<indexterm><primary>TheTChain</primary><secondary>m_tree_cursor</secondary></indexterm>
<para><computeroutput>UInt_t TheTChain::m_tree_cursor = 0<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_the_t_chain_1a353e40160c351c0049ae964dfd813847"/>    <section>
    <title>m_trees</title>
<indexterm><primary>m_trees</primary><secondary>TheTChain</secondary></indexterm>
<indexterm><primary>TheTChain</primary><secondary>m_trees</secondary></indexterm>
<para><computeroutput>std::vector&lt;TTree*&gt; TheTChain::m_trees<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
lib/<link linkend="_lib_root_8hpp">libRoot.hpp</link></section>
</section>
