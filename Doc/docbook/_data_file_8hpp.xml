<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__data_file_8hpp" xml:lang="en-US">
<title>lib/Classes/DataFile.hpp File Reference</title>
<indexterm><primary>lib/Classes/DataFile.hpp</primary></indexterm>
<programlisting>#include &quot;../libCo.hpp&quot;
</programlisting>Include dependency graph for DataFile.hpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_data_file_8hpp__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_data_file_8hpp__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class_data_file">DataFile&lt; Index, T &gt;</link></para>

<para>NOT FUNCTIONNAL !!! This is a homemade .data reader. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>using <link linkend="__data_file_8hpp_1a5bbd0ff6e41ea521288f926113db6f48">DataLine</link> = std::vector&lt; std::string &gt;</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;class Index , class T &gt; </para><para>std::ostream &amp; <link linkend="__data_file_8hpp_1aa6b40ad210eb193216cf8f5f0061fbaa">operator&lt;&lt;</link> (std::ostream &amp;out, <link linkend="_class_data_file">DataFile</link>&lt; Index, T &gt; const &amp;data)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="__data_file_8hpp_1a5bbd0ff6e41ea521288f926113db6f48"/>    <section>
    <title>DataLine</title>
<indexterm><primary>DataLine</primary><secondary>DataFile.hpp</secondary></indexterm>
<indexterm><primary>DataFile.hpp</primary><secondary>DataLine</secondary></indexterm>
<para><computeroutput>using <link linkend="__data_file_8hpp_1a5bbd0ff6e41ea521288f926113db6f48">DataLine</link> =  std::vector&lt;std::string&gt;</computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="__data_file_8hpp_1aa6b40ad210eb193216cf8f5f0061fbaa"/>    <section>
    <title>operator&lt;&lt;()</title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>DataFile.hpp</secondary></indexterm>
<indexterm><primary>DataFile.hpp</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;class Index , class T &gt; </computeroutput><para><computeroutput>std::ostream&amp; operator&lt;&lt; (std::ostream &amp; out, <link linkend="_class_data_file">DataFile</link>&lt; Index, T &gt; const &amp; data)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_data_file_8hpp_aa6b40ad210eb193216cf8f5f0061fbaa_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
