<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_m_t_counter" xml:lang="en-US">
<title>MTCounter Class Reference</title>
<indexterm><primary>MTCounter</primary></indexterm>
<para>

<para>Atomic counter with convenient overloaded operators. </para>
 
</para>
<para>
<computeroutput>#include &lt;MTCounter.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;typename T , typename check_T_is_number  = T_is_number&lt;T&gt;&gt; </para><para>void <link linkend="_class_m_t_counter_1a62d12e221986dda2cb740d9e8da4ee55">add</link> (T const &amp;t)</para>
</listitem>
            <listitem><para><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> <link linkend="_class_m_t_counter_1a0f22cd113e1ab51159f288dd7b04f1ae">decr</link> ()</para>
</listitem>
            <listitem><para><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> <link linkend="_class_m_t_counter_1a47de3b1465e5f66822131ba49a97132f">decrement</link> ()</para>
</listitem>
            <listitem><para><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> <link linkend="_class_m_t_counter_1af8ce9a0c5504fc0f3275942dfa247c46">get</link> () const</para>
</listitem>
            <listitem><para><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> <link linkend="_class_m_t_counter_1a4f07c44489cc9ad30eb4e90aa31fcaf9">incr</link> ()</para>
</listitem>
            <listitem><para><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> <link linkend="_class_m_t_counter_1ac39d8dfbf5d1e1c04d8f8e5d01b1bb68">increment</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_m_t_counter_1a41ee2ae0194c65d7d2bbc319f761e526">MTCounter</link> ()=default</para>
</listitem>
            <listitem><para>template&lt;typename T , typename check_T_is_number  = T_is_number&lt;T&gt;&gt; </para><para><link linkend="_class_m_t_counter_1ac70f9fc54c597480c314bc344a443239">MTCounter</link> (T const &amp;value)</para>
</listitem>
            <listitem><para><link linkend="_class_m_t_counter_1a172c8749fe46af5088b190d96c01f371">operator size_t</link> () const</para>
</listitem>
            <listitem><para><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> <link linkend="_class_m_t_counter_1a6a496ce44c384cb77ae1bfb0c2cc9386">operator++</link> ()</para>
</listitem>
            <listitem><para><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> <link linkend="_class_m_t_counter_1adf119e63b77446423d7b1ce9b676b4e6">operator++</link> (int)</para>
</listitem>
            <listitem><para>template&lt;typename T , typename check_T_is_number  = T_is_number&lt;T&gt;&gt; </para><para>void <link linkend="_class_m_t_counter_1ad0851e43d22e6ffe02b1ecc66e4b793d">operator+=</link> (T const &amp;t)</para>
</listitem>
            <listitem><para><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> <link linkend="_class_m_t_counter_1a02fc60a8ffdcaf8c305cdfe4d9f75080">operator--</link> ()</para>
</listitem>
            <listitem><para><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> <link linkend="_class_m_t_counter_1a58bdc4e3b741bf50db4738b837b0c309">operator--</link> (int)</para>
</listitem>
            <listitem><para>template&lt;typename T , typename check_T_is_number  = T_is_number&lt;T&gt;&gt; </para><para>void <link linkend="_class_m_t_counter_1a833a2a1bedd059ba424d8150a418c351">operator=</link> (T const &amp;t)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>std::atomic&lt; <link linkend="_lib_co_8hpp_1a36061a3a05c4802ea9393df730a50d52">ulonglong</link> &gt; <link linkend="_class_m_t_counter_1a284d6290040d3ba03ad1ee201ddc2055">m_counter</link> {0}</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Atomic counter with convenient overloaded operators. </para>



<para>All the setter overloaded operators are std::memory_order_relaxed All the setter methods are std::memory_order_seq_cst </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_m_t_counter_1a41ee2ae0194c65d7d2bbc319f761e526"/>    <section>
    <title>MTCounter()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>MTCounter</primary><secondary>MTCounter</secondary></indexterm>
<indexterm><primary>MTCounter</primary><secondary>MTCounter</secondary></indexterm>
<para><computeroutput>MTCounter::MTCounter ( )<computeroutput>[default]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_m_t_counter_1ac70f9fc54c597480c314bc344a443239"/>    <section>
    <title>MTCounter()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>MTCounter</primary><secondary>MTCounter</secondary></indexterm>
<indexterm><primary>MTCounter</primary><secondary>MTCounter</secondary></indexterm>
<computeroutput>template&lt;typename T , typename check_T_is_number  = T_is_number&lt;T&gt;&gt; </computeroutput><para><computeroutput>MTCounter::MTCounter (T const &amp; value)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_m_t_counter_1a62d12e221986dda2cb740d9e8da4ee55"/>    <section>
    <title>add()</title>
<indexterm><primary>add</primary><secondary>MTCounter</secondary></indexterm>
<indexterm><primary>MTCounter</primary><secondary>add</secondary></indexterm>
<computeroutput>template&lt;typename T , typename check_T_is_number  = T_is_number&lt;T&gt;&gt; </computeroutput><para><computeroutput>void MTCounter::add (T const &amp; t)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_m_t_counter_a62d12e221986dda2cb740d9e8da4ee55_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_m_t_counter_1a0f22cd113e1ab51159f288dd7b04f1ae"/>    <section>
    <title>decr()</title>
<indexterm><primary>decr</primary><secondary>MTCounter</secondary></indexterm>
<indexterm><primary>MTCounter</primary><secondary>decr</secondary></indexterm>
<para><computeroutput><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> MTCounter::decr ( )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_m_t_counter_1a47de3b1465e5f66822131ba49a97132f"/>    <section>
    <title>decrement()</title>
<indexterm><primary>decrement</primary><secondary>MTCounter</secondary></indexterm>
<indexterm><primary>MTCounter</primary><secondary>decrement</secondary></indexterm>
<para><computeroutput><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> MTCounter::decrement ( )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_m_t_counter_1af8ce9a0c5504fc0f3275942dfa247c46"/>    <section>
    <title>get()</title>
<indexterm><primary>get</primary><secondary>MTCounter</secondary></indexterm>
<indexterm><primary>MTCounter</primary><secondary>get</secondary></indexterm>
<para><computeroutput><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> MTCounter::get ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_m_t_counter_af8ce9a0c5504fc0f3275942dfa247c46_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_m_t_counter_1a4f07c44489cc9ad30eb4e90aa31fcaf9"/>    <section>
    <title>incr()</title>
<indexterm><primary>incr</primary><secondary>MTCounter</secondary></indexterm>
<indexterm><primary>MTCounter</primary><secondary>incr</secondary></indexterm>
<para><computeroutput><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> MTCounter::incr ( )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_m_t_counter_1ac39d8dfbf5d1e1c04d8f8e5d01b1bb68"/>    <section>
    <title>increment()</title>
<indexterm><primary>increment</primary><secondary>MTCounter</secondary></indexterm>
<indexterm><primary>MTCounter</primary><secondary>increment</secondary></indexterm>
<para><computeroutput><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> MTCounter::increment ( )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_m_t_counter_1a172c8749fe46af5088b190d96c01f371"/>    <section>
    <title>operator size_t()</title>
<indexterm><primary>operator size_t</primary><secondary>MTCounter</secondary></indexterm>
<indexterm><primary>MTCounter</primary><secondary>operator size_t</secondary></indexterm>
<para><computeroutput>MTCounter::operator <link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_m_t_counter_1a6a496ce44c384cb77ae1bfb0c2cc9386"/>    <section>
    <title>operator++()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>MTCounter</secondary></indexterm>
<indexterm><primary>MTCounter</primary><secondary>operator++</secondary></indexterm>
<para><computeroutput><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> MTCounter::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_m_t_counter_1adf119e63b77446423d7b1ce9b676b4e6"/>    <section>
    <title>operator++()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>MTCounter</secondary></indexterm>
<indexterm><primary>MTCounter</primary><secondary>operator++</secondary></indexterm>
<para><computeroutput><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> MTCounter::operator++ (int )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_m_t_counter_1ad0851e43d22e6ffe02b1ecc66e4b793d"/>    <section>
    <title>operator+=()</title>
<indexterm><primary>operator+=</primary><secondary>MTCounter</secondary></indexterm>
<indexterm><primary>MTCounter</primary><secondary>operator+=</secondary></indexterm>
<computeroutput>template&lt;typename T , typename check_T_is_number  = T_is_number&lt;T&gt;&gt; </computeroutput><para><computeroutput>void MTCounter::operator+= (T const &amp; t)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_m_t_counter_ad0851e43d22e6ffe02b1ecc66e4b793d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_m_t_counter_1a02fc60a8ffdcaf8c305cdfe4d9f75080"/>    <section>
    <title>operator--()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>MTCounter</secondary></indexterm>
<indexterm><primary>MTCounter</primary><secondary>operator--</secondary></indexterm>
<para><computeroutput><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> MTCounter::operator-- ( )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_m_t_counter_1a58bdc4e3b741bf50db4738b837b0c309"/>    <section>
    <title>operator--()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>MTCounter</secondary></indexterm>
<indexterm><primary>MTCounter</primary><secondary>operator--</secondary></indexterm>
<para><computeroutput><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> MTCounter::operator-- (int )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_m_t_counter_1a833a2a1bedd059ba424d8150a418c351"/>    <section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>MTCounter</secondary></indexterm>
<indexterm><primary>MTCounter</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename T , typename check_T_is_number  = T_is_number&lt;T&gt;&gt; </computeroutput><para><computeroutput>void MTCounter::operator= (T const &amp; t)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_m_t_counter_a833a2a1bedd059ba424d8150a418c351_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_m_t_counter_1a284d6290040d3ba03ad1ee201ddc2055"/>    <section>
    <title>m_counter</title>
<indexterm><primary>m_counter</primary><secondary>MTCounter</secondary></indexterm>
<indexterm><primary>MTCounter</primary><secondary>m_counter</secondary></indexterm>
<para><computeroutput>std::atomic&lt;<link linkend="_lib_co_8hpp_1a36061a3a05c4802ea9393df730a50d52">ulonglong</link>&gt; MTCounter::m_counter {0}<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
lib/MTObjects/<link linkend="__m_t_counter_8hpp">MTCounter.hpp</link></section>
</section>
