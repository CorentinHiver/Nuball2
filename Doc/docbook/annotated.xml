<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_annotated" xml:lang="en-US">
<title>Class List</title>
Here are the classes, structs, unions and interfaces with brief descriptions:<link linkend="_class_alignator">Alignator</link><link linkend="_class_analysed_spectra">AnalysedSpectra</link>
<para>Allows one to select which peaks to fit on a spectra </para>
<link linkend="_class_biggest_peak_fitter">BiggestPeakFitter</link>
<para>Allows one to find the most significant peak in the range [low_edge, high_edge] </para>
<link linkend="_class_bools">Bools</link><link linkend="_class_builder">Builder</link>
<para>Base class of event builders (pure virtual class) </para>
<link linkend="_class_calibration">Calibration</link>
<para>A convenient class for handling coefficient calibration up to 3rd order </para>
<link linkend="_class_calibrator">Calibrator</link>
<para>Allows one to calculate and verify calibration coefficients for various sources and detectors for Nuball2 </para>
<link linkend="_class_cast_impossible">CastImpossible</link><link linkend="_class_clover_module">CloverModule</link>
<para>Describes a Clover module </para>
<link linkend="_class_clovers">Clovers</link>
<para>Analyse the clovers in the event </para>
<link linkend="_class_clover_spectra">CloverSpectra</link>
<para>Make usefull calibrated spectra from data in .fast or .root format </para>
<link linkend="_class_cobalt_calorimeter">CobaltCalorimeter</link><link linkend="_class_co_data_frame">CoDataFrame&lt; Index, T &gt;</link><link linkend="_class_coinc_builder">CoincBuilder</link>
<para>Coincidence builder </para>
<link linkend="_class_co_progress_bar">CoProgressBar&lt; T &gt;</link><link linkend="_class_m_t_t_hist_1_1_copy_error">MTTHist&lt; THist &gt;::CopyError</link><link linkend="_class_counters">Counters</link><link linkend="_class_data_file">DataFile&lt; Index, T &gt;</link>
<para>NOT FUNCTIONNAL !!! This is a homemade .data reader </para>
<link linkend="_class_clovers_1_1_delayed_gate">Clovers::DelayedGate</link><link linkend="_class_detectors">Detectors</link>
<para>Loads the ID file and fills lookup tables </para>
<link linkend="_class_d_s_s_d">DSSD</link><link linkend="_class_detectors_1_1_empty_error">Detectors::EmptyError</link><link linkend="_class_timeshifts_1_1_empty_error">Timeshifts::EmptyError</link><link linkend="_class_detectors_1_1_error">Detectors::Error</link><link linkend="_class_event">Event</link>
<para><link linkend="_class_event">Event</link> used for reading and writting event, event building and trigger </para>
<link linkend="_class_event_analyse">EventAnalyse</link><link linkend="_class_event_builder">EventBuilder</link>
<para>NOT UP TO DATE !! LATEST STABLE IS EventBuilder_136 </para>
<link linkend="_class_evolution_peaks">EvolutionPeaks</link>
<para>Shows the evolution of peak position for given detectors </para>
<link linkend="_class_faster2_histo">Faster2Histo</link>
<para>Convert faster data to histograms </para>
<link linkend="_class_faster2_root">Faster2Root</link>
<para>Basic class to perform faster to root tree data conversion </para>
<link linkend="_class_faster_reader">FasterReader</link>
<para>Class used to read .fast files </para>
<link linkend="_class_file">File</link>
<para>EXPERIMENTAL Composed of a <link linkend="_class_path">Path</link> and a <link linkend="_class_filename">Filename</link> </para>
<link linkend="_class_paris_bidim_angles_1_1_file_error">ParisBidimAngles::FileError</link><link linkend="_class_filename">Filename</link>
<para>EXPERIMENTAL Contains the short name and the extension of a given file, without any knowledge of its path </para>
<link linkend="_class_files_manager">FilesManager</link><link linkend="_class_fit">Fit</link>
<para>Allows one to manipulate the results of peak fitting </para>
<link linkend="_class_fits">Fits</link><link linkend="_class_fitted_peak">FittedPeak</link><link linkend="_class_folder">Folder</link>
<para>EXPERIMENTAL Object used to hold a folder&apos;s name </para>
<link linkend="_class_folders">Folders</link>
<para>EXPERIMENTAL Object used to hold a list of folders </para>
<link linkend="_classf_parameters">fParameters&lt; nb_param, T &gt;</link>
<para>Functions parameter </para>
<link linkend="_class_gate__t">Gate_t&lt; T &gt;</link>
<para>Convenient gate class </para>
<link linkend="_class_gates__t">Gates_t&lt; T &gt;</link><link linkend="_struct_calibrator_1_1histograms">Calibrator::histograms</link><link linkend="_class_spectra_co_1_1_histo_null">SpectraCo::HistoNull</link><link linkend="_class_spectra_co_1_1_histo_zombie">SpectraCo::HistoZombie</link><link linkend="_class_hit">Hit</link>
<para><link linkend="_class_hit">Hit</link> class /// </para>
<link linkend="_class_hit_buffer">HitBuffer</link>
<para>Hits container </para>
<link linkend="_class_i_options">IOptions</link>
<para>IO parameters /// </para>
<link linkend="_structis__container">is_container&lt; T &gt;</link><link linkend="_class_manip">Manip</link>
<para>Loads the list file containing the list of the names of the folder containing the faster files to convert </para>
<link linkend="_class_minimisator">Minimisator</link><link linkend="_class_m_t_counter">MTCounter</link>
<para>Atomic counter with convenient overloaded operators </para>
<link linkend="_class_m_t_faster_reader">MTFasterReader</link>
<para>Class used to read in parallel .fast files of the same run </para>
<link linkend="_class_m_t_files_manager">MTFilesManager</link>
<para>Work in progress </para>
<link linkend="_class_m_t_label">MTLabel</link><link linkend="_class_m_t_object">MTObject</link>
<para>Class handeling an easy multi threading </para>
<link linkend="_class_m_t_root_reader">MTRootReader</link><link linkend="_class_m_t_t_hist">MTTHist&lt; THist &gt;</link>
<para>Multithreading wrapper for all THist spectra of root library </para>
<link linkend="_class_m_t_variable">MTVariable&lt; T &gt;</link>
<para>UNUSED </para>
<link linkend="_class_m_t_vector">MTVector&lt; T &gt;</link><link linkend="_class_my_error">MyError</link><link linkend="_class_my_simple_convertor">MySimpleConvertor</link><link linkend="_class_near_line">NearLine</link><link linkend="_struct_minimisator_1_1_nelder_mead_parameters">Minimisator::NelderMeadParameters</link><link linkend="_class_timeshifts_1_1_not_found_error">Timeshifts::NotFoundError</link><link linkend="_class_nuball2_tree">Nuball2Tree</link>
<para>Access to the underlying TTree using -&gt; operator (e.g. nuball2tree-&gt;GetEntry(n);) </para>
<link linkend="_class_objective_function">ObjectiveFunction</link><link linkend="_class_objective_function_chi2">ObjectiveFunctionChi2</link><link linkend="_class_output_t_file">OutputTFile</link><link linkend="_class_overwrite_error">OverwriteError</link><link linkend="_class_paris">Paris</link><link linkend="_class_paris_bidim_angles">ParisBidimAngles</link><link linkend="_class_paris_cluster">ParisCluster&lt; nb_phoswitch &gt;</link><link linkend="_class_paris_label">ParisLabel</link><link linkend="_class_paris_module">ParisModule</link><link linkend="_class_paris_phoswitch">ParisPhoswitch</link><link linkend="_class_paris_x_y">ParisXY</link><link linkend="_class_path">Path</link>
<para>EXPERIMENTAL Object used to hold the complete path of a giver folder </para>
<link linkend="_class_peak_fitter">PeakFitter</link>
<para>Allows one to fit a peak of a histogram in the range [low_edge, high_edge] </para>
<link linkend="_class_peaks_calibrator">PeaksCalibrator</link><link linkend="_class_performances">Performances</link><link linkend="_class_position_x_y">PositionXY</link><link linkend="_class_clovers_1_1_prompt_gate">Clovers::PromptGate</link><link linkend="_class_recalibration">Recalibration</link><link linkend="_class_r_f___extractor">RF_Extractor</link><link linkend="_class_r_f___manager">RF_Manager</link>
<para>Class used to manage the RF </para>
<link linkend="_class_run_matrixator">RunMatrixator</link>
<para>Matrixator is used to create a bunch of matrixes : each crystal of the setup versus the (add-backed &amp; compton cleaned) clovers </para>
<link linkend="_class_r_w_mat">RWMat</link><link linkend="_class_simplex">Simplex</link><link linkend="_class_si_strip">SiStrip</link>
<para>Silicon Strip. Represents a strip of the <link linkend="_class_d_s_s_d">DSSD</link> </para>
<link linkend="_class_spectra_co_1_1_size_missmatch">SpectraCo::SizeMissmatch</link><link linkend="_class_sorted___event">Sorted_Event</link><link linkend="_class_spectra_alignator">SpectraAlignator</link><link linkend="_class_spectra_co">SpectraCo</link><link linkend="_class_static_vector">StaticVector&lt; T &gt;</link>
<para>An efficient container for dynamic arrays with a known and fixed maximum size </para>
<link linkend="_class_test_objective_function">TestObjectiveFunction</link><link linkend="_struct_t_h_binning">THBinning</link>
<para>Binning of a root histogram (TH1) : number of bins, min value, max value </para>
<link linkend="_class_the_t_chain">TheTChain</link>
<para>Not functionnal yet </para>
<link linkend="_class_timer">Timer</link><link linkend="_class_timeshifts">Timeshifts</link>
<para>Calculates the time difference between all detectors and a reference detector </para>
<link linkend="_class_timewalk">Timewalk</link><link linkend="_class_timewalks">Timewalks</link><link linkend="_class_type_root_map">TypeRootMap</link><link linkend="_class_vertice">Vertice</link></section>
