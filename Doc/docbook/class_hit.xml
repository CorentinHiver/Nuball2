<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_hit" xml:lang="en-US">
<title>Hit Class Reference</title>
<indexterm><primary>Hit</primary></indexterm>
<para>

<para><link linkend="_class_hit">Hit</link> class ///. </para>
 
</para>
<para>
<computeroutput>#include &lt;Hit.hpp&gt;</computeroutput>
</para>
Collaboration diagram for Hit:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_hit__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_hit_1ac2727a27933c07b60b6a7ccccba12fff">Hit</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_hit_1abcb26fe11278c6fcb80ddec201b402c1">Hit</link> (<link linkend="_class_hit">Hit</link> const &amp;hit)</para>
</listitem>
            <listitem><para><link linkend="_class_hit">Hit</link> &amp; <link linkend="_class_hit_1a77de7b97444e05abb4f31be7f119e9c8">operator=</link> (<link linkend="_class_hit">Hit</link> const &amp;hit)</para>
</listitem>
            <listitem><para>void <link linkend="_class_hit_1ad809be4a75a5c588504fa77d442e393d">reading</link> (TTree *tree)</para>
</listitem>
            <listitem><para>void <link linkend="_class_hit_1aedefb5565ccfc732c322416ef54d015d">reading</link> (TTree *tree, std::string const &amp;options)</para>
</listitem>
            <listitem><para>void <link linkend="_class_hit_1a11ab514bf16c8173e974b6582ca6d37e">reset</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_hit_1ab60637cf6f374e4394139c3594e4464e">writting</link> (TTree *tree, std::string const &amp;options=&quot;lseqp&quot;)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="__hit_8hpp_1a04b75a9e083a1c44419fdb7c3f87c361">ADC</link> <link linkend="_class_hit_1a3d999e7bbbb470d1d3aa55ee772a98d6">adc</link> = 0</para>
</listitem>
            <listitem><para><link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> <link linkend="_class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1">label</link> = 0</para>
</listitem>
            <listitem><para><link linkend="__hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877">NRJ</link> <link linkend="_class_hit_1abda4857e925c3a6315a6fb41fad59189">nrj</link> = 0.f</para>
</listitem>
            <listitem><para><link linkend="__hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877">NRJ</link> <link linkend="_class_hit_1ab4b93fbbb58d5bf2fd3480238d93065a">nrj2</link> = 0.f</para>
</listitem>
            <listitem><para><link linkend="__hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877">NRJ</link> <link linkend="_class_hit_1a04ef9221b81184bd9617b1b23311cc34">nrj3</link> = 0.f</para>
</listitem>
            <listitem><para>bool <link linkend="_class_hit_1af11540b09cb070a6c2028546b5a35037">pileup</link> = false</para>
</listitem>
            <listitem><para><link linkend="__hit_8hpp_1a04b75a9e083a1c44419fdb7c3f87c361">ADC</link> <link linkend="_class_hit_1a07541ef2177c95ba3de7df1fed1c986f">qdc2</link> = 0</para>
</listitem>
            <listitem><para><link linkend="__hit_8hpp_1a04b75a9e083a1c44419fdb7c3f87c361">ADC</link> <link linkend="_class_hit_1a109d6cdcf0601e11453901833daa7a4b">qdc3</link> = 0</para>
</listitem>
            <listitem><para><link linkend="__hit_8hpp_1a36a1e53eff51015f34900948053c0d69">Timestamp</link> <link linkend="_class_hit_1ad98aea75b451b3246f45b25f1ccb9221">stamp</link> = 0ull</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_class_i_options">IOptions</link> <link linkend="_class_hit_1a4748672c2bd6987972336e488f67bda7">read</link></para>
</listitem>
            <listitem><para>static <link linkend="_class_i_options">IOptions</link> <link linkend="_class_hit_1a6e24a7396ce247f7f49bdf4751cc6a2e">write</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para><link linkend="_class_hit">Hit</link> class ///. </para>



<para>This class is used to store conviniently the data from reading the faster data. You can either treat data directly or write it in root trees</para>

<para>This class is used as an interface between the faster data and root.</para>

<para>Connect it to a <link linkend="_class_faster_reader">FasterReader</link> to read data : <literallayout><computeroutput> Hit hit;
 FasterReader.setHit(&amp;hit);
 while(reader.Read())
 {
   doSomething with the hit...
 }
</computeroutput></literallayout> Connect it to a Root Tree :</para>

<para><orderedlist>
<listitem>
<para>To convert data to a raw root tree :</para>

<para><link linkend="_class_hit">Hit</link> hit; TTree * tree = new TTree(&quot;Nuball2&quot;,&quot;Nuball2&quot;); FasterReader.setHit(&amp;hit); hit.writting(tree); while(reader.Read()) { tree -&gt; Fill(); }</para>
</listitem><listitem>
<para>To read this raw root tree :</para>

<para>hit.reading(tree); for (int hit = 0; hit&lt;tree-&gt;GetEntries(); hit++) { do somethign with the hit ... } </para>
</listitem></orderedlist>
</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_hit_1ac2727a27933c07b60b6a7ccccba12fff"/>    <section>
    <title>Hit()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Hit</primary><secondary>Hit</secondary></indexterm>
<indexterm><primary>Hit</primary><secondary>Hit</secondary></indexterm>
<para><computeroutput>Hit::Hit ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_hit_ac2727a27933c07b60b6a7ccccba12fff_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_hit_1abcb26fe11278c6fcb80ddec201b402c1"/>    <section>
    <title>Hit()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Hit</primary><secondary>Hit</secondary></indexterm>
<indexterm><primary>Hit</primary><secondary>Hit</secondary></indexterm>
<para><computeroutput>Hit::Hit (<link linkend="_class_hit">Hit</link> const &amp; hit)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_hit_1a77de7b97444e05abb4f31be7f119e9c8"/>    <section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>Hit</secondary></indexterm>
<indexterm><primary>Hit</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_class_hit">Hit</link>&amp; Hit::operator= (<link linkend="_class_hit">Hit</link> const &amp; hit)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_hit_1ad809be4a75a5c588504fa77d442e393d"/>    <section>
    <title>reading()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>reading</primary><secondary>Hit</secondary></indexterm>
<indexterm><primary>Hit</primary><secondary>reading</secondary></indexterm>
<para><computeroutput>void Hit::reading (TTree * tree)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_hit_ad809be4a75a5c588504fa77d442e393d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_hit_ad809be4a75a5c588504fa77d442e393d_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_hit_1aedefb5565ccfc732c322416ef54d015d"/>    <section>
    <title>reading()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>reading</primary><secondary>Hit</secondary></indexterm>
<indexterm><primary>Hit</primary><secondary>reading</secondary></indexterm>
<para><computeroutput>void Hit::reading (TTree * tree, std::string const &amp; options)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_hit_aedefb5565ccfc732c322416ef54d015d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_hit_1a11ab514bf16c8173e974b6582ca6d37e"/>    <section>
    <title>reset()</title>
<indexterm><primary>reset</primary><secondary>Hit</secondary></indexterm>
<indexterm><primary>Hit</primary><secondary>reset</secondary></indexterm>
<para><computeroutput>void Hit::reset ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_hit_a11ab514bf16c8173e974b6582ca6d37e_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_hit_1ab60637cf6f374e4394139c3594e4464e"/>    <section>
    <title>writting()</title>
<indexterm><primary>writting</primary><secondary>Hit</secondary></indexterm>
<indexterm><primary>Hit</primary><secondary>writting</secondary></indexterm>
<para><computeroutput>void Hit::writting (TTree * tree, std::string const &amp; options = <computeroutput>&quot;lseqp&quot;</computeroutput>
)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_hit_ab60637cf6f374e4394139c3594e4464e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_hit_ab60637cf6f374e4394139c3594e4464e_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_hit_1a3d999e7bbbb470d1d3aa55ee772a98d6"/>    <section>
    <title>adc</title>
<indexterm><primary>adc</primary><secondary>Hit</secondary></indexterm>
<indexterm><primary>Hit</primary><secondary>adc</secondary></indexterm>
<para><computeroutput><link linkend="__hit_8hpp_1a04b75a9e083a1c44419fdb7c3f87c361">ADC</link> Hit::adc = 0</computeroutput></para>    </section><anchor xml:id="_class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1"/>    <section>
    <title>label</title>
<indexterm><primary>label</primary><secondary>Hit</secondary></indexterm>
<indexterm><primary>Hit</primary><secondary>label</secondary></indexterm>
<para><computeroutput><link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> Hit::label = 0</computeroutput></para>    </section><anchor xml:id="_class_hit_1abda4857e925c3a6315a6fb41fad59189"/>    <section>
    <title>nrj</title>
<indexterm><primary>nrj</primary><secondary>Hit</secondary></indexterm>
<indexterm><primary>Hit</primary><secondary>nrj</secondary></indexterm>
<para><computeroutput><link linkend="__hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877">NRJ</link> Hit::nrj = 0.f</computeroutput></para>    </section><anchor xml:id="_class_hit_1ab4b93fbbb58d5bf2fd3480238d93065a"/>    <section>
    <title>nrj2</title>
<indexterm><primary>nrj2</primary><secondary>Hit</secondary></indexterm>
<indexterm><primary>Hit</primary><secondary>nrj2</secondary></indexterm>
<para><computeroutput><link linkend="__hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877">NRJ</link> Hit::nrj2 = 0.f</computeroutput></para>    </section><anchor xml:id="_class_hit_1a04ef9221b81184bd9617b1b23311cc34"/>    <section>
    <title>nrj3</title>
<indexterm><primary>nrj3</primary><secondary>Hit</secondary></indexterm>
<indexterm><primary>Hit</primary><secondary>nrj3</secondary></indexterm>
<para><computeroutput><link linkend="__hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877">NRJ</link> Hit::nrj3 = 0.f</computeroutput></para>    </section><anchor xml:id="_class_hit_1af11540b09cb070a6c2028546b5a35037"/>    <section>
    <title>pileup</title>
<indexterm><primary>pileup</primary><secondary>Hit</secondary></indexterm>
<indexterm><primary>Hit</primary><secondary>pileup</secondary></indexterm>
<para><computeroutput>bool Hit::pileup = false</computeroutput></para>    </section><anchor xml:id="_class_hit_1a07541ef2177c95ba3de7df1fed1c986f"/>    <section>
    <title>qdc2</title>
<indexterm><primary>qdc2</primary><secondary>Hit</secondary></indexterm>
<indexterm><primary>Hit</primary><secondary>qdc2</secondary></indexterm>
<para><computeroutput><link linkend="__hit_8hpp_1a04b75a9e083a1c44419fdb7c3f87c361">ADC</link> Hit::qdc2 = 0</computeroutput></para>    </section><anchor xml:id="_class_hit_1a109d6cdcf0601e11453901833daa7a4b"/>    <section>
    <title>qdc3</title>
<indexterm><primary>qdc3</primary><secondary>Hit</secondary></indexterm>
<indexterm><primary>Hit</primary><secondary>qdc3</secondary></indexterm>
<para><computeroutput><link linkend="__hit_8hpp_1a04b75a9e083a1c44419fdb7c3f87c361">ADC</link> Hit::qdc3 = 0</computeroutput></para>    </section><anchor xml:id="_class_hit_1a4748672c2bd6987972336e488f67bda7"/>    <section>
    <title>read</title>
<indexterm><primary>read</primary><secondary>Hit</secondary></indexterm>
<indexterm><primary>Hit</primary><secondary>read</secondary></indexterm>
<para><computeroutput><link linkend="_class_i_options">IOptions</link> Hit::read<computeroutput>[static]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_hit_1ad98aea75b451b3246f45b25f1ccb9221"/>    <section>
    <title>stamp</title>
<indexterm><primary>stamp</primary><secondary>Hit</secondary></indexterm>
<indexterm><primary>Hit</primary><secondary>stamp</secondary></indexterm>
<para><computeroutput><link linkend="__hit_8hpp_1a36a1e53eff51015f34900948053c0d69">Timestamp</link> Hit::stamp = 0ull</computeroutput></para>    </section><anchor xml:id="_class_hit_1a6e24a7396ce247f7f49bdf4751cc6a2e"/>    <section>
    <title>write</title>
<indexterm><primary>write</primary><secondary>Hit</secondary></indexterm>
<indexterm><primary>Hit</primary><secondary>write</secondary></indexterm>
<para><computeroutput><link linkend="_class_i_options">IOptions</link> Hit::write<computeroutput>[static]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
lib/Classes/<link linkend="__hit_8hpp">Hit.hpp</link></section>
</section>
