<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_clover_spectra" xml:lang="en-US">
<title>CloverSpectra Class Reference</title>
<indexterm><primary>CloverSpectra</primary></indexterm>
<para>

<para>Make usefull calibrated spectra from data in .fast or .root format. </para>
 
</para>
<para>
<computeroutput>#include &lt;CloverSpectra.hpp&gt;</computeroutput>
</para>
Collaboration diagram for CloverSpectra:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_clover_spectra__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_clover_spectra_1a49112dc4bcc852575a12692c308c4643">CloverSpectra</link> ()=default</para>
</listitem>
            <listitem><para><link linkend="_class_clover_spectra_1a83b3f64fea8bb8fb6743762ec72e2c04">CloverSpectra</link> (int argc, char **argv)</para>
</listitem>
            <listitem><para>void <link linkend="_class_clover_spectra_1ae46c582451bada5b2b8957ee44b92e35">fillHisto</link> (std::string const &amp;datapath=&quot;&quot;, int nb_files=-1)</para>
</listitem>
            <listitem><para>void <link linkend="_class_clover_spectra_1abf805324f6371f19ef0b3ce45705a115">Initialize</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_clover_spectra_1a353ec66774413feefb33a784ce2159cf">Initialize</link> (int argc, char **argv)</para>
</listitem>
            <listitem><para>void <link linkend="_class_clover_spectra_1a4631e5643c2d2d12eb2fab20c381d59c">loadCalibration</link> (std::string const &amp;calibFile)</para>
</listitem>
            <listitem><para>void <link linkend="_class_clover_spectra_1abe2f37c6b8c698dcdf72731cc315f5b7">loadTimeshifts</link> (std::string const &amp;dTfile)</para>
</listitem>
            <listitem><para>void <link linkend="_class_clover_spectra_1a693dcd3c5e09e4da918a6bb095060d37">printParameters</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_clover_spectra_1aeb7bc1e06083ef29b1e48252e570271e">setCalibration</link> (<link linkend="_class_calibration">Calibration</link> const &amp;calibration)</para>
</listitem>
            <listitem><para>void <link linkend="_class_clover_spectra_1ac3e3cf471d8bbdcbe54d5c5c776644e1">setDataPath</link> (std::string const &amp;datapath)</para>
</listitem>
            <listitem><para>void <link linkend="_class_clover_spectra_1a4303950fe7db3328c5dfa1440c6cf911">setNbFiles</link> (int const &amp;nb_files=-1)</para>
</listitem>
            <listitem><para>void <link linkend="_class_clover_spectra_1ae6ec650a1ca74083a135f0693d62c5e2">setNbThreads</link> (int const &amp;nb_threads=-1)</para>
</listitem>
            <listitem><para>void <link linkend="_class_clover_spectra_1a3b050eb699e8f8854ce01bd946aa30c1">setOutName</link> (std::string const &amp;outname)</para>
</listitem>
            <listitem><para>void <link linkend="_class_clover_spectra_1a6c261c0939d01796ace3f0eb19898714">setTimeshifts</link> (<link linkend="_class_timeshifts">Timeshifts</link> const &amp;timeshifts)</para>
</listitem>
            <listitem><para>void <link linkend="_class_clover_spectra_1ab90e1236854aff68a7354b7cdfb3866a">setTimeWindow_ns</link> (int const &amp;timewindow=1500)</para>
</listitem>
            <listitem><para>void <link linkend="_class_clover_spectra_1aea0814fac7c993ad4813804415f3ffab">writeHisto</link> (std::string const &amp;outName=&quot;&quot;)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_clover_spectra_1a614d7deabde77b0ffea91ca2a6002484">runFasterReader</link> (<link linkend="_class_hit">Hit</link> &amp;hit, <link linkend="_class_alignator">Alignator</link> &amp;tree)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Private Member Functions    </title>
        <itemizedlist>
            <listitem><para>static void <link linkend="_class_clover_spectra_1ac087194079e7879a2824f4488db96512">runMTFasterReader</link> (<link linkend="_class_hit">Hit</link> &amp;hit, <link linkend="_class_alignator">Alignator</link> &amp;tree, <link linkend="_class_clover_spectra">CloverSpectra</link> &amp;ce)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>char <link linkend="_class_clover_spectra_1ae9a2badc688b8eac4507af1b787d1244">dataKind</link> = -1</para>
</listitem>
            <listitem><para><link linkend="_class_calibration">Calibration</link> <link linkend="_class_clover_spectra_1a9b061051f7110f57ac4b0077007d95ef">m_calibration</link></para>
</listitem>
            <listitem><para><link linkend="_class_m_t_t_hist">MTTHist</link>&lt; TH1F &gt; <link linkend="_class_clover_spectra_1aaf0011155b817dd2ac3d9755b1eeaa9b">m_clovers</link></para>
</listitem>
            <listitem><para><link linkend="_class_m_t_t_hist">MTTHist</link>&lt; TH2F &gt; <link linkend="_class_clover_spectra_1a813d7f94e931fd6b138de085da6da223">m_clovers_bidim</link></para>
</listitem>
            <listitem><para><link linkend="_class_m_t_t_hist">MTTHist</link>&lt; TH1F &gt; <link linkend="_class_clover_spectra_1a5e7bcd308a1788846d6f6b56df74fb71">m_clovers_crystal</link></para>
</listitem>
            <listitem><para><link linkend="_class_path">Path</link> <link linkend="_class_clover_spectra_1af031eae589df96c7344f6672a26e6066">m_dataPath</link></para>
</listitem>
            <listitem><para>int <link linkend="_class_clover_spectra_1a1bf5810a8e7ea0e3af03fb5572f40b18">m_nb_files</link> = -1</para>
</listitem>
            <listitem><para>int <link linkend="_class_clover_spectra_1a3d4d672e17123820e04c45adf0e84e07">m_nb_threads</link> = 1</para>
</listitem>
            <listitem><para><link linkend="_class_file">File</link> <link linkend="_class_clover_spectra_1ab770b1f9d6ec24f7aae6f3759edd5066">m_outName</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_clover_spectra_1adcdc25f4bd89f0997191793b868db128">m_throw_single</link> = false</para>
</listitem>
            <listitem><para><link linkend="_class_timeshifts">Timeshifts</link> <link linkend="_class_clover_spectra_1ab493c3191a96e697b7175312e079bebd">m_timeshifts</link></para>
</listitem>
            <listitem><para><link linkend="__hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7">Time</link> <link linkend="_class_clover_spectra_1a5afe35a3e805f81cf3b222b297fa4065">m_timewindow</link> = 100000</para>
</listitem>
            <listitem><para>bool <link linkend="_class_clover_spectra_1a4f205f16d76022aa85a8e5bd721c2b2e">m_writeHisto</link> = false</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Make usefull calibrated spectra from data in .fast or .root format. </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_clover_spectra_1a49112dc4bcc852575a12692c308c4643"/>    <section>
    <title>CloverSpectra()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>CloverSpectra</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>CloverSpectra</secondary></indexterm>
<para><computeroutput>CloverSpectra::CloverSpectra ( )<computeroutput>[default]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_clover_spectra_1a83b3f64fea8bb8fb6743762ec72e2c04"/>    <section>
    <title>CloverSpectra()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>CloverSpectra</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>CloverSpectra</secondary></indexterm>
<para><computeroutput>CloverSpectra::CloverSpectra (int argc, char ** argv)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_clover_spectra_a83b3f64fea8bb8fb6743762ec72e2c04_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_clover_spectra_1ae46c582451bada5b2b8957ee44b92e35"/>    <section>
    <title>fillHisto()</title>
<indexterm><primary>fillHisto</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>fillHisto</secondary></indexterm>
<para><computeroutput>void CloverSpectra::fillHisto (std::string const &amp; datapath = <computeroutput>&quot;&quot;</computeroutput>
, int nb_files = <computeroutput>-1</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_clover_spectra_ae46c582451bada5b2b8957ee44b92e35_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_clover_spectra_ae46c582451bada5b2b8957ee44b92e35_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_clover_spectra_1abf805324f6371f19ef0b3ce45705a115"/>    <section>
    <title>Initialize()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Initialize</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>Initialize</secondary></indexterm>
<para><computeroutput>void CloverSpectra::Initialize ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_clover_spectra_abf805324f6371f19ef0b3ce45705a115_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_clover_spectra_abf805324f6371f19ef0b3ce45705a115_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_clover_spectra_1a353ec66774413feefb33a784ce2159cf"/>    <section>
    <title>Initialize()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Initialize</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>Initialize</secondary></indexterm>
<para><computeroutput>void CloverSpectra::Initialize (int argc, char ** argv)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_clover_spectra_a353ec66774413feefb33a784ce2159cf_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_clover_spectra_1a4631e5643c2d2d12eb2fab20c381d59c"/>    <section>
    <title>loadCalibration()</title>
<indexterm><primary>loadCalibration</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>loadCalibration</secondary></indexterm>
<para><computeroutput>void CloverSpectra::loadCalibration (std::string const &amp; calibFile)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_clover_spectra_a4631e5643c2d2d12eb2fab20c381d59c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_clover_spectra_a4631e5643c2d2d12eb2fab20c381d59c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_clover_spectra_1abe2f37c6b8c698dcdf72731cc315f5b7"/>    <section>
    <title>loadTimeshifts()</title>
<indexterm><primary>loadTimeshifts</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>loadTimeshifts</secondary></indexterm>
<para><computeroutput>void CloverSpectra::loadTimeshifts (std::string const &amp; dTfile)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_clover_spectra_abe2f37c6b8c698dcdf72731cc315f5b7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_clover_spectra_abe2f37c6b8c698dcdf72731cc315f5b7_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_clover_spectra_1a693dcd3c5e09e4da918a6bb095060d37"/>    <section>
    <title>printParameters()</title>
<indexterm><primary>printParameters</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>printParameters</secondary></indexterm>
<para><computeroutput>void CloverSpectra::printParameters ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_clover_spectra_a693dcd3c5e09e4da918a6bb095060d37_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_clover_spectra_a693dcd3c5e09e4da918a6bb095060d37_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_clover_spectra_1a614d7deabde77b0ffea91ca2a6002484"/>    <section>
    <title>runFasterReader()</title>
<indexterm><primary>runFasterReader</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>runFasterReader</secondary></indexterm>
<para><computeroutput>void CloverSpectra::runFasterReader (<link linkend="_class_hit">Hit</link> &amp; hit, <link linkend="_class_alignator">Alignator</link> &amp; tree)<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_clover_spectra_a614d7deabde77b0ffea91ca2a6002484_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_clover_spectra_a614d7deabde77b0ffea91ca2a6002484_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_clover_spectra_1ac087194079e7879a2824f4488db96512"/>    <section>
    <title>runMTFasterReader()</title>
<indexterm><primary>runMTFasterReader</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>runMTFasterReader</secondary></indexterm>
<para><computeroutput>static void CloverSpectra::runMTFasterReader (<link linkend="_class_hit">Hit</link> &amp; hit, <link linkend="_class_alignator">Alignator</link> &amp; tree, <link linkend="_class_clover_spectra">CloverSpectra</link> &amp; ce)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_clover_spectra_ac087194079e7879a2824f4488db96512_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_clover_spectra_ac087194079e7879a2824f4488db96512_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_clover_spectra_1aeb7bc1e06083ef29b1e48252e570271e"/>    <section>
    <title>setCalibration()</title>
<indexterm><primary>setCalibration</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>setCalibration</secondary></indexterm>
<para><computeroutput>void CloverSpectra::setCalibration (<link linkend="_class_calibration">Calibration</link> const &amp; calibration)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_clover_spectra_1ac3e3cf471d8bbdcbe54d5c5c776644e1"/>    <section>
    <title>setDataPath()</title>
<indexterm><primary>setDataPath</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>setDataPath</secondary></indexterm>
<para><computeroutput>void CloverSpectra::setDataPath (std::string const &amp; datapath)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_clover_spectra_ac3e3cf471d8bbdcbe54d5c5c776644e1_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_clover_spectra_1a4303950fe7db3328c5dfa1440c6cf911"/>    <section>
    <title>setNbFiles()</title>
<indexterm><primary>setNbFiles</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>setNbFiles</secondary></indexterm>
<para><computeroutput>void CloverSpectra::setNbFiles (int const &amp; nb_files = <computeroutput>-1</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_clover_spectra_a4303950fe7db3328c5dfa1440c6cf911_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_clover_spectra_1ae6ec650a1ca74083a135f0693d62c5e2"/>    <section>
    <title>setNbThreads()</title>
<indexterm><primary>setNbThreads</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>setNbThreads</secondary></indexterm>
<para><computeroutput>void CloverSpectra::setNbThreads (int const &amp; nb_threads = <computeroutput>-1</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_clover_spectra_ae6ec650a1ca74083a135f0693d62c5e2_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_clover_spectra_1a3b050eb699e8f8854ce01bd946aa30c1"/>    <section>
    <title>setOutName()</title>
<indexterm><primary>setOutName</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>setOutName</secondary></indexterm>
<para><computeroutput>void CloverSpectra::setOutName (std::string const &amp; outname)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_clover_spectra_a3b050eb699e8f8854ce01bd946aa30c1_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_clover_spectra_1a6c261c0939d01796ace3f0eb19898714"/>    <section>
    <title>setTimeshifts()</title>
<indexterm><primary>setTimeshifts</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>setTimeshifts</secondary></indexterm>
<para><computeroutput>void CloverSpectra::setTimeshifts (<link linkend="_class_timeshifts">Timeshifts</link> const &amp; timeshifts)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_clover_spectra_1ab90e1236854aff68a7354b7cdfb3866a"/>    <section>
    <title>setTimeWindow_ns()</title>
<indexterm><primary>setTimeWindow_ns</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>setTimeWindow_ns</secondary></indexterm>
<para><computeroutput>void CloverSpectra::setTimeWindow_ns (int const &amp; timewindow = <computeroutput>1500</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_clover_spectra_ab90e1236854aff68a7354b7cdfb3866a_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_clover_spectra_1aea0814fac7c993ad4813804415f3ffab"/>    <section>
    <title>writeHisto()</title>
<indexterm><primary>writeHisto</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>writeHisto</secondary></indexterm>
<para><computeroutput>void CloverSpectra::writeHisto (std::string const &amp; outName = <computeroutput>&quot;&quot;</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_clover_spectra_aea0814fac7c993ad4813804415f3ffab_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_clover_spectra_aea0814fac7c993ad4813804415f3ffab_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_clover_spectra_1ae9a2badc688b8eac4507af1b787d1244"/>    <section>
    <title>dataKind</title>
<indexterm><primary>dataKind</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>dataKind</secondary></indexterm>
<para><computeroutput>char CloverSpectra::dataKind = -1<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_clover_spectra_1a9b061051f7110f57ac4b0077007d95ef"/>    <section>
    <title>m_calibration</title>
<indexterm><primary>m_calibration</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>m_calibration</secondary></indexterm>
<para><computeroutput><link linkend="_class_calibration">Calibration</link> CloverSpectra::m_calibration<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_clover_spectra_1aaf0011155b817dd2ac3d9755b1eeaa9b"/>    <section>
    <title>m_clovers</title>
<indexterm><primary>m_clovers</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>m_clovers</secondary></indexterm>
<para><computeroutput><link linkend="_class_m_t_t_hist">MTTHist</link>&lt;TH1F&gt; CloverSpectra::m_clovers<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_clover_spectra_1a813d7f94e931fd6b138de085da6da223"/>    <section>
    <title>m_clovers_bidim</title>
<indexterm><primary>m_clovers_bidim</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>m_clovers_bidim</secondary></indexterm>
<para><computeroutput><link linkend="_class_m_t_t_hist">MTTHist</link>&lt;TH2F&gt; CloverSpectra::m_clovers_bidim<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_clover_spectra_1a5e7bcd308a1788846d6f6b56df74fb71"/>    <section>
    <title>m_clovers_crystal</title>
<indexterm><primary>m_clovers_crystal</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>m_clovers_crystal</secondary></indexterm>
<para><computeroutput><link linkend="_class_m_t_t_hist">MTTHist</link>&lt;TH1F&gt; CloverSpectra::m_clovers_crystal<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_clover_spectra_1af031eae589df96c7344f6672a26e6066"/>    <section>
    <title>m_dataPath</title>
<indexterm><primary>m_dataPath</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>m_dataPath</secondary></indexterm>
<para><computeroutput><link linkend="_class_path">Path</link> CloverSpectra::m_dataPath<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_clover_spectra_1a1bf5810a8e7ea0e3af03fb5572f40b18"/>    <section>
    <title>m_nb_files</title>
<indexterm><primary>m_nb_files</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>m_nb_files</secondary></indexterm>
<para><computeroutput>int CloverSpectra::m_nb_files = -1<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_clover_spectra_1a3d4d672e17123820e04c45adf0e84e07"/>    <section>
    <title>m_nb_threads</title>
<indexterm><primary>m_nb_threads</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>m_nb_threads</secondary></indexterm>
<para><computeroutput>int CloverSpectra::m_nb_threads = 1<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_clover_spectra_1ab770b1f9d6ec24f7aae6f3759edd5066"/>    <section>
    <title>m_outName</title>
<indexterm><primary>m_outName</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>m_outName</secondary></indexterm>
<para><computeroutput><link linkend="_class_file">File</link> CloverSpectra::m_outName<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_clover_spectra_1adcdc25f4bd89f0997191793b868db128"/>    <section>
    <title>m_throw_single</title>
<indexterm><primary>m_throw_single</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>m_throw_single</secondary></indexterm>
<para><computeroutput>bool CloverSpectra::m_throw_single = false<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_clover_spectra_1ab493c3191a96e697b7175312e079bebd"/>    <section>
    <title>m_timeshifts</title>
<indexterm><primary>m_timeshifts</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>m_timeshifts</secondary></indexterm>
<para><computeroutput><link linkend="_class_timeshifts">Timeshifts</link> CloverSpectra::m_timeshifts<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_clover_spectra_1a5afe35a3e805f81cf3b222b297fa4065"/>    <section>
    <title>m_timewindow</title>
<indexterm><primary>m_timewindow</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>m_timewindow</secondary></indexterm>
<para><computeroutput><link linkend="__hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7">Time</link> CloverSpectra::m_timewindow = 100000<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_clover_spectra_1a4f205f16d76022aa85a8e5bd721c2b2e"/>    <section>
    <title>m_writeHisto</title>
<indexterm><primary>m_writeHisto</primary><secondary>CloverSpectra</secondary></indexterm>
<indexterm><primary>CloverSpectra</primary><secondary>m_writeHisto</secondary></indexterm>
<para><computeroutput>bool CloverSpectra::m_writeHisto = false<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
lib/Modules/<link linkend="__clover_spectra_8hpp">CloverSpectra.hpp</link>lib/Modules/<link linkend="__near_line_8hpp">NearLine.hpp</link></section>
</section>
