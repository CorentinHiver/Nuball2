<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_run_matrixator" xml:lang="en-US">
<title>RunMatrixator Class Reference</title>
<indexterm><primary>RunMatrixator</primary></indexterm>
<para>

<para>Matrixator is used to create a bunch of matrixes : each crystal of the setup versus the (add-backed &amp; compton cleaned) clovers. </para>
 
</para>
<para>
<computeroutput>#include &lt;RunMatrixator.hpp&gt;</computeroutput>
</para>
Collaboration diagram for RunMatrixator:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_run_matrixator_1a1f6ba04bc894d68a6d72ccedf8367ad4">dontMatrixate</link> (<link linkend="__detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a">dType</link> const &amp;type)</para>
</listitem>
            <listitem><para>void <link linkend="_class_run_matrixator_1a142f119b63706f044dc99025ee46f4ca">dontMatrixate</link> (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp;label)</para>
</listitem>
            <listitem><para>void <link linkend="_class_run_matrixator_1af360ec9f7686353b663ce0bdcfa3e2df">fillMatrixes</link> (<link linkend="_class_clovers">Clovers</link> const &amp;clovers, <link linkend="_class_event">Event</link> const &amp;event)</para>
</listitem>
            <listitem><para>void <link linkend="_class_run_matrixator_1ad32109c5c279f520ce19602340aa2293">Initialize</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_run_matrixator_1ae9e13b02718812681204cad70679385d">initialize_dontMatrixate</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_run_matrixator_1ab294e0aa6a89ca1f191f335cae223d57">keepSingles</link> (bool const &amp;b=true)</para>
</listitem>
            <listitem><para>void <link linkend="_class_run_matrixator_1a8d8f01fad64864d032395e18b10c2a7e">loadData_faster</link> (<link linkend="_class_hit">Hit</link> &amp;hit, <link linkend="_class_faster_reader">FasterReader</link> &amp;reader)</para>
</listitem>
            <listitem><para>void <link linkend="_class_run_matrixator_1a526469f6440d19b85fd142c797056c65">loadData_root</link> (TTree *tree, <link linkend="_class_event">Event</link> &amp;event)</para>
</listitem>
            <listitem><para>void <link linkend="_class_run_matrixator_1a42f119527e4771575dfe0e1e85e65e5f">maxRawMult</link> (<link linkend="_lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21">uchar</link> const &amp;max_multiplicity=20)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_run_matrixator_1a22999b8469b20e24241753429d46ce14">parisIsLaBr</link> (<link linkend="__hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877">NRJ</link> const &amp;nrj, <link linkend="__hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877">NRJ</link> const &amp;nrj2)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_run_matrixator_1a2564b1a0b5b4669fa0bb136fd6e4486f">parisIsNaI</link> (<link linkend="__hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877">NRJ</link> const &amp;nrj, <link linkend="__hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877">NRJ</link> const &amp;nrj2)</para>
</listitem>
            <listitem><para>auto <link linkend="_class_run_matrixator_1abed75885e59d6790ba34fccdb48997a3">parisRatio</link> (<link linkend="__hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877">NRJ</link> const &amp;nrj, <link linkend="__hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877">NRJ</link> const &amp;nrj2)</para>
</listitem>
            <listitem><para>void <link linkend="_class_run_matrixator_1aa6d13b08060fef07b50d7ab6b35be0d6">run</link> (std::string const &amp;runpath, std::string const &amp;data=&quot;fast&quot;)</para>
</listitem>
            <listitem><para><link linkend="_class_run_matrixator_1addf156b30f248773029c6be07c243d7a">RunMatrixator</link> ()=default</para>
</listitem>
            <listitem><para>void <link linkend="_class_run_matrixator_1a68ec3f959732a3fa5e65583bc9ad7045">setCalibration</link> (<link linkend="_class_calibration">Calibration</link> const &amp;calibration)</para>
</listitem>
            <listitem><para>void <link linkend="_class_run_matrixator_1ab0f22d301e134b991dbb19ca083c0780">setTimeshifts</link> (<link linkend="_class_timeshifts">Timeshifts</link> const &amp;timeshifts)</para>
</listitem>
            <listitem><para>void <link linkend="_class_run_matrixator_1aeb9889ba763858dfb65e05c3a7bb142e">Write</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Private Member Functions    </title>
        <itemizedlist>
            <listitem><para>static void <link linkend="_class_run_matrixator_1a47322f73c6a9f220f49f9fd85993fcd5">dispatch_faster_reader</link> (<link linkend="_class_hit">Hit</link> &amp;hit, <link linkend="_class_faster_reader">FasterReader</link> &amp;reader, <link linkend="_class_run_matrixator">RunMatrixator</link> &amp;rm)</para>

<para>Multithreading of loadData_faster (you have to pass by a static method in order to multi-thread it) </para>
</listitem>
            <listitem><para>static void <link linkend="_class_run_matrixator_1a2d5326c4e5b0684552e5d72c88e64ef8">dispatch_root_reader</link> (TTree *tree, <link linkend="_class_event">Event</link> &amp;event, <link linkend="_class_run_matrixator">RunMatrixator</link> &amp;rm)</para>

<para>Multithreading of loadData_ (you have to pass by a static method in order to multi-thread it) </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_m_t_t_hist">MTTHist</link>&lt; TH1F &gt; <link linkend="_class_run_matrixator_1a7b1b1f5b80cef42ae89cade92589eb84">clover_singles_delayed</link></para>
</listitem>
            <listitem><para><link linkend="_class_m_t_t_hist">MTTHist</link>&lt; TH1F &gt; <link linkend="_class_run_matrixator_1aba625d564958262437e498d7f1ea8ea3">clover_singles_delayed_Compton_veto</link></para>
</listitem>
            <listitem><para><link linkend="_class_m_t_t_hist">MTTHist</link>&lt; TH1F &gt; <link linkend="_class_run_matrixator_1aaeb5707153689242e99adeea90e2d223">clover_singles_prompt</link></para>
</listitem>
            <listitem><para><link linkend="_class_m_t_t_hist">MTTHist</link>&lt; TH1F &gt; <link linkend="_class_run_matrixator_1a0c8f270cf84d7aeca1eb87e80d51495b">clover_singles_prompt_Compton_veto</link></para>
</listitem>
            <listitem><para><link linkend="_class_calibration">Calibration</link> <link linkend="_class_run_matrixator_1a96930629dddc11947153e3a5042d426c">m_calibration</link></para>
</listitem>
            <listitem><para>std::vector&lt; <link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> &gt; <link linkend="_class_run_matrixator_1af2f5b38bcb1ff671164d3a1b82fdf5cc">m_dontMatrixateLabel</link></para>
</listitem>
            <listitem><para>std::unordered_map&lt; <link linkend="__detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a">dType</link>, bool &gt; <link linkend="_class_run_matrixator_1a9f29fa4e4ebfad487466d3272fd5a920">m_dontMatrixateType</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_run_matrixator_1a2b7e0097b9fdf211f291649020f0ad23">m_keep_singles</link> = 0</para>
</listitem>
            <listitem><para><link linkend="_lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21">uchar</link> <link linkend="_class_run_matrixator_1a36384c50ee570508e06725b7fdd5bb63">m_max_multiplicity</link> = 20</para>
</listitem>
            <listitem><para><link linkend="_class_path">Path</link> <link linkend="_class_run_matrixator_1af1c63e22db1391971bdeb8cebcb31ff0">m_runpath</link></para>
</listitem>
            <listitem><para><link linkend="_class_timeshifts">Timeshifts</link> <link linkend="_class_run_matrixator_1a92dbd9cb82e86444d93b745a16466cd3">m_timeshifts</link></para>
</listitem>
            <listitem><para>std::unordered_map&lt; <link linkend="__detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a">dType</link>, <link linkend="__m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e">Vector_MTTHist</link>&lt; TH2F &gt; &gt; <link linkend="_class_run_matrixator_1a42f31349719f9320cceb39eb8ecb6c4b">matricesDelayed</link></para>
</listitem>
            <listitem><para>std::unordered_map&lt; <link linkend="__detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a">dType</link>, <link linkend="__m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e">Vector_MTTHist</link>&lt; TH2F &gt; &gt; <link linkend="_class_run_matrixator_1a9e194612d5bcd61c913257f683a971a3">matricesDelayed2</link></para>
</listitem>
            <listitem><para>std::unordered_map&lt; <link linkend="__detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a">dType</link>, <link linkend="__m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e">Vector_MTTHist</link>&lt; TH2F &gt; &gt; <link linkend="_class_run_matrixator_1afa913d44012b7ed12db67e5d2900e4a6">matricesPrompt</link></para>
</listitem>
            <listitem><para>std::unordered_map&lt; <link linkend="__detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a">dType</link>, <link linkend="__m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e">Vector_MTTHist</link>&lt; TH2F &gt; &gt; <link linkend="_class_run_matrixator_1a8b7863ec8e2e5be38d01196905fd2009">matricesPrompt2</link></para>
</listitem>
            <listitem><para><link linkend="_class_m_t_t_hist">MTTHist</link>&lt; TH2F &gt; <link linkend="_class_run_matrixator_1a22fdc3576bfff16a1ffc1e17e7076e5e">matrix_Clovers_delayed</link></para>
</listitem>
            <listitem><para><link linkend="_class_m_t_t_hist">MTTHist</link>&lt; TH2F &gt; <link linkend="_class_run_matrixator_1a045df0760364e0b5ffc3241461d423ee">matrix_Clovers_delayed_vs_prompt</link></para>
</listitem>
            <listitem><para><link linkend="_class_m_t_t_hist">MTTHist</link>&lt; TH2F &gt; <link linkend="_class_run_matrixator_1a51381da7ca12e24fd0069f9d03842217">matrix_Clovers_prompt</link></para>
</listitem>
            <listitem><para>std::unordered_map&lt; <link linkend="__detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a">dType</link>, <link linkend="__m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e">Vector_MTTHist</link>&lt; TH1F &gt; &gt; <link linkend="_class_run_matrixator_1ac595f1896e83716b3531c53e66cf7995">singlesDelayed</link></para>
</listitem>
            <listitem><para>std::unordered_map&lt; <link linkend="__detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a">dType</link>, <link linkend="__m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e">Vector_MTTHist</link>&lt; TH1F &gt; &gt; <link linkend="_class_run_matrixator_1a3992675c0d4796654b248614a95ca9da">singlesDelayed2</link></para>
</listitem>
            <listitem><para>std::unordered_map&lt; <link linkend="__detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a">dType</link>, <link linkend="__m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e">Vector_MTTHist</link>&lt; TH1F &gt; &gt; <link linkend="_class_run_matrixator_1a64b9bcb6a98c97a879dd36192a0782b3">singlesPrompt</link></para>
</listitem>
            <listitem><para>std::unordered_map&lt; <link linkend="__detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a">dType</link>, <link linkend="__m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e">Vector_MTTHist</link>&lt; TH1F &gt; &gt; <link linkend="_class_run_matrixator_1a779004b05d613741a85da5cbefa23696">singlesPrompt2</link></para>
</listitem>
            <listitem><para><link linkend="_class_m_t_t_hist">MTTHist</link>&lt; TH2F &gt; <link linkend="_class_run_matrixator_1a3e8757458107f0f0ec8de5a25c6518fe">test_paris_vs_mult</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Matrixator is used to create a bunch of matrixes : each crystal of the setup versus the (add-backed &amp; compton cleaned) clovers. </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_run_matrixator_1addf156b30f248773029c6be07c243d7a"/>    <section>
    <title>RunMatrixator()</title>
<indexterm><primary>RunMatrixator</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>RunMatrixator</secondary></indexterm>
<para><computeroutput>RunMatrixator::RunMatrixator ( )<computeroutput>[default]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_run_matrixator_1a47322f73c6a9f220f49f9fd85993fcd5"/>    <section>
    <title>dispatch_faster_reader()</title>
<indexterm><primary>dispatch_faster_reader</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>dispatch_faster_reader</secondary></indexterm>
<para><computeroutput>void RunMatrixator::dispatch_faster_reader (<link linkend="_class_hit">Hit</link> &amp; hit, <link linkend="_class_faster_reader">FasterReader</link> &amp; reader, <link linkend="_class_run_matrixator">RunMatrixator</link> &amp; rm)<computeroutput>[static]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>Multithreading of loadData_faster (you have to pass by a static method in order to multi-thread it) </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator_a47322f73c6a9f220f49f9fd85993fcd5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator_a47322f73c6a9f220f49f9fd85993fcd5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_run_matrixator_1a2d5326c4e5b0684552e5d72c88e64ef8"/>    <section>
    <title>dispatch_root_reader()</title>
<indexterm><primary>dispatch_root_reader</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>dispatch_root_reader</secondary></indexterm>
<para><computeroutput>void RunMatrixator::dispatch_root_reader (TTree * tree, <link linkend="_class_event">Event</link> &amp; event, <link linkend="_class_run_matrixator">RunMatrixator</link> &amp; rm)<computeroutput>[static]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>

<para>Multithreading of loadData_ (you have to pass by a static method in order to multi-thread it) </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator_a2d5326c4e5b0684552e5d72c88e64ef8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator_a2d5326c4e5b0684552e5d72c88e64ef8_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_run_matrixator_1a1f6ba04bc894d68a6d72ccedf8367ad4"/>    <section>
    <title>dontMatrixate()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>dontMatrixate</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>dontMatrixate</secondary></indexterm>
<para><computeroutput>void RunMatrixator::dontMatrixate (<link linkend="__detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a">dType</link> const &amp; type)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator_a1f6ba04bc894d68a6d72ccedf8367ad4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_run_matrixator_1a142f119b63706f044dc99025ee46f4ca"/>    <section>
    <title>dontMatrixate()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>dontMatrixate</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>dontMatrixate</secondary></indexterm>
<para><computeroutput>void RunMatrixator::dontMatrixate (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp; label)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator_a142f119b63706f044dc99025ee46f4ca_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_run_matrixator_1af360ec9f7686353b663ce0bdcfa3e2df"/>    <section>
    <title>fillMatrixes()</title>
<indexterm><primary>fillMatrixes</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>fillMatrixes</secondary></indexterm>
<para><computeroutput>void RunMatrixator::fillMatrixes (<link linkend="_class_clovers">Clovers</link> const &amp; clovers, <link linkend="_class_event">Event</link> const &amp; event)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator_af360ec9f7686353b663ce0bdcfa3e2df_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator_af360ec9f7686353b663ce0bdcfa3e2df_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_run_matrixator_1ad32109c5c279f520ce19602340aa2293"/>    <section>
    <title>Initialize()</title>
<indexterm><primary>Initialize</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>Initialize</secondary></indexterm>
<para><computeroutput>void RunMatrixator::Initialize ( )</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator_ad32109c5c279f520ce19602340aa2293_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator_ad32109c5c279f520ce19602340aa2293_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_run_matrixator_1ae9e13b02718812681204cad70679385d"/>    <section>
    <title>initialize_dontMatrixate()</title>
<indexterm><primary>initialize_dontMatrixate</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>initialize_dontMatrixate</secondary></indexterm>
<para><computeroutput>void RunMatrixator::initialize_dontMatrixate ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator_ae9e13b02718812681204cad70679385d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator_ae9e13b02718812681204cad70679385d_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_run_matrixator_1ab294e0aa6a89ca1f191f335cae223d57"/>    <section>
    <title>keepSingles()</title>
<indexterm><primary>keepSingles</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>keepSingles</secondary></indexterm>
<para><computeroutput>void RunMatrixator::keepSingles (bool const &amp; b = <computeroutput>true</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1a8d8f01fad64864d032395e18b10c2a7e"/>    <section>
    <title>loadData_faster()</title>
<indexterm><primary>loadData_faster</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>loadData_faster</secondary></indexterm>
<para><computeroutput>void RunMatrixator::loadData_faster (<link linkend="_class_hit">Hit</link> &amp; hit, <link linkend="_class_faster_reader">FasterReader</link> &amp; reader)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator_a8d8f01fad64864d032395e18b10c2a7e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator_a8d8f01fad64864d032395e18b10c2a7e_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_run_matrixator_1a526469f6440d19b85fd142c797056c65"/>    <section>
    <title>loadData_root()</title>
<indexterm><primary>loadData_root</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>loadData_root</secondary></indexterm>
<para><computeroutput>void RunMatrixator::loadData_root (TTree * tree, <link linkend="_class_event">Event</link> &amp; event)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator_a526469f6440d19b85fd142c797056c65_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator_a526469f6440d19b85fd142c797056c65_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_run_matrixator_1a42f119527e4771575dfe0e1e85e65e5f"/>    <section>
    <title>maxRawMult()</title>
<indexterm><primary>maxRawMult</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>maxRawMult</secondary></indexterm>
<para><computeroutput>void RunMatrixator::maxRawMult (<link linkend="_lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21">uchar</link> const &amp; max_multiplicity = <computeroutput>20</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1a22999b8469b20e24241753429d46ce14"/>    <section>
    <title>parisIsLaBr()</title>
<indexterm><primary>parisIsLaBr</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>parisIsLaBr</secondary></indexterm>
<para><computeroutput>bool RunMatrixator::parisIsLaBr (<link linkend="__hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877">NRJ</link> const &amp; nrj, <link linkend="__hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877">NRJ</link> const &amp; nrj2)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator_a22999b8469b20e24241753429d46ce14_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator_a22999b8469b20e24241753429d46ce14_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_run_matrixator_1a2564b1a0b5b4669fa0bb136fd6e4486f"/>    <section>
    <title>parisIsNaI()</title>
<indexterm><primary>parisIsNaI</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>parisIsNaI</secondary></indexterm>
<para><computeroutput>bool RunMatrixator::parisIsNaI (<link linkend="__hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877">NRJ</link> const &amp; nrj, <link linkend="__hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877">NRJ</link> const &amp; nrj2)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator_a2564b1a0b5b4669fa0bb136fd6e4486f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator_a2564b1a0b5b4669fa0bb136fd6e4486f_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_run_matrixator_1abed75885e59d6790ba34fccdb48997a3"/>    <section>
    <title>parisRatio()</title>
<indexterm><primary>parisRatio</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>parisRatio</secondary></indexterm>
<para><computeroutput>auto RunMatrixator::parisRatio (<link linkend="__hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877">NRJ</link> const &amp; nrj, <link linkend="__hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877">NRJ</link> const &amp; nrj2)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator_abed75885e59d6790ba34fccdb48997a3_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_run_matrixator_1aa6d13b08060fef07b50d7ab6b35be0d6"/>    <section>
    <title>run()</title>
<indexterm><primary>run</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>run</secondary></indexterm>
<para><computeroutput>void RunMatrixator::run (std::string const &amp; runpath, std::string const &amp; data = <computeroutput>&quot;fast&quot;</computeroutput>
)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator_aa6d13b08060fef07b50d7ab6b35be0d6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_run_matrixator_1a68ec3f959732a3fa5e65583bc9ad7045"/>    <section>
    <title>setCalibration()</title>
<indexterm><primary>setCalibration</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>setCalibration</secondary></indexterm>
<para><computeroutput>void RunMatrixator::setCalibration (<link linkend="_class_calibration">Calibration</link> const &amp; calibration)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1ab0f22d301e134b991dbb19ca083c0780"/>    <section>
    <title>setTimeshifts()</title>
<indexterm><primary>setTimeshifts</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>setTimeshifts</secondary></indexterm>
<para><computeroutput>void RunMatrixator::setTimeshifts (<link linkend="_class_timeshifts">Timeshifts</link> const &amp; timeshifts)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1aeb9889ba763858dfb65e05c3a7bb142e"/>    <section>
    <title>Write()</title>
<indexterm><primary>Write</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>Write</secondary></indexterm>
<para><computeroutput>void RunMatrixator::Write ( )</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator_aeb9889ba763858dfb65e05c3a7bb142e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_run_matrixator_aeb9889ba763858dfb65e05c3a7bb142e_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_run_matrixator_1a7b1b1f5b80cef42ae89cade92589eb84"/>    <section>
    <title>clover_singles_delayed</title>
<indexterm><primary>clover_singles_delayed</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>clover_singles_delayed</secondary></indexterm>
<para><computeroutput><link linkend="_class_m_t_t_hist">MTTHist</link>&lt;TH1F&gt; RunMatrixator::clover_singles_delayed<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1aba625d564958262437e498d7f1ea8ea3"/>    <section>
    <title>clover_singles_delayed_Compton_veto</title>
<indexterm><primary>clover_singles_delayed_Compton_veto</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>clover_singles_delayed_Compton_veto</secondary></indexterm>
<para><computeroutput><link linkend="_class_m_t_t_hist">MTTHist</link>&lt;TH1F&gt; RunMatrixator::clover_singles_delayed_Compton_veto<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1aaeb5707153689242e99adeea90e2d223"/>    <section>
    <title>clover_singles_prompt</title>
<indexterm><primary>clover_singles_prompt</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>clover_singles_prompt</secondary></indexterm>
<para><computeroutput><link linkend="_class_m_t_t_hist">MTTHist</link>&lt;TH1F&gt; RunMatrixator::clover_singles_prompt<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1a0c8f270cf84d7aeca1eb87e80d51495b"/>    <section>
    <title>clover_singles_prompt_Compton_veto</title>
<indexterm><primary>clover_singles_prompt_Compton_veto</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>clover_singles_prompt_Compton_veto</secondary></indexterm>
<para><computeroutput><link linkend="_class_m_t_t_hist">MTTHist</link>&lt;TH1F&gt; RunMatrixator::clover_singles_prompt_Compton_veto<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1a96930629dddc11947153e3a5042d426c"/>    <section>
    <title>m_calibration</title>
<indexterm><primary>m_calibration</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>m_calibration</secondary></indexterm>
<para><computeroutput><link linkend="_class_calibration">Calibration</link> RunMatrixator::m_calibration<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1af2f5b38bcb1ff671164d3a1b82fdf5cc"/>    <section>
    <title>m_dontMatrixateLabel</title>
<indexterm><primary>m_dontMatrixateLabel</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>m_dontMatrixateLabel</secondary></indexterm>
<para><computeroutput>std::vector&lt;<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link>&gt; RunMatrixator::m_dontMatrixateLabel<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1a9f29fa4e4ebfad487466d3272fd5a920"/>    <section>
    <title>m_dontMatrixateType</title>
<indexterm><primary>m_dontMatrixateType</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>m_dontMatrixateType</secondary></indexterm>
<para><computeroutput>std::unordered_map&lt;<link linkend="__detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a">dType</link>, bool&gt; RunMatrixator::m_dontMatrixateType<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1a2b7e0097b9fdf211f291649020f0ad23"/>    <section>
    <title>m_keep_singles</title>
<indexterm><primary>m_keep_singles</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>m_keep_singles</secondary></indexterm>
<para><computeroutput>bool RunMatrixator::m_keep_singles = 0<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1a36384c50ee570508e06725b7fdd5bb63"/>    <section>
    <title>m_max_multiplicity</title>
<indexterm><primary>m_max_multiplicity</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>m_max_multiplicity</secondary></indexterm>
<para><computeroutput><link linkend="_lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21">uchar</link> RunMatrixator::m_max_multiplicity = 20<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1af1c63e22db1391971bdeb8cebcb31ff0"/>    <section>
    <title>m_runpath</title>
<indexterm><primary>m_runpath</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>m_runpath</secondary></indexterm>
<para><computeroutput><link linkend="_class_path">Path</link> RunMatrixator::m_runpath<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1a92dbd9cb82e86444d93b745a16466cd3"/>    <section>
    <title>m_timeshifts</title>
<indexterm><primary>m_timeshifts</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>m_timeshifts</secondary></indexterm>
<para><computeroutput><link linkend="_class_timeshifts">Timeshifts</link> RunMatrixator::m_timeshifts<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1a42f31349719f9320cceb39eb8ecb6c4b"/>    <section>
    <title>matricesDelayed</title>
<indexterm><primary>matricesDelayed</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>matricesDelayed</secondary></indexterm>
<para><computeroutput>std::unordered_map&lt;<link linkend="__detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a">dType</link>, <link linkend="__m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e">Vector_MTTHist</link>&lt;TH2F&gt; &gt; RunMatrixator::matricesDelayed<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1a9e194612d5bcd61c913257f683a971a3"/>    <section>
    <title>matricesDelayed2</title>
<indexterm><primary>matricesDelayed2</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>matricesDelayed2</secondary></indexterm>
<para><computeroutput>std::unordered_map&lt;<link linkend="__detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a">dType</link>, <link linkend="__m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e">Vector_MTTHist</link>&lt;TH2F&gt; &gt; RunMatrixator::matricesDelayed2<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1afa913d44012b7ed12db67e5d2900e4a6"/>    <section>
    <title>matricesPrompt</title>
<indexterm><primary>matricesPrompt</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>matricesPrompt</secondary></indexterm>
<para><computeroutput>std::unordered_map&lt;<link linkend="__detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a">dType</link>, <link linkend="__m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e">Vector_MTTHist</link>&lt;TH2F&gt; &gt; RunMatrixator::matricesPrompt<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1a8b7863ec8e2e5be38d01196905fd2009"/>    <section>
    <title>matricesPrompt2</title>
<indexterm><primary>matricesPrompt2</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>matricesPrompt2</secondary></indexterm>
<para><computeroutput>std::unordered_map&lt;<link linkend="__detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a">dType</link>, <link linkend="__m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e">Vector_MTTHist</link>&lt;TH2F&gt; &gt; RunMatrixator::matricesPrompt2<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1a22fdc3576bfff16a1ffc1e17e7076e5e"/>    <section>
    <title>matrix_Clovers_delayed</title>
<indexterm><primary>matrix_Clovers_delayed</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>matrix_Clovers_delayed</secondary></indexterm>
<para><computeroutput><link linkend="_class_m_t_t_hist">MTTHist</link>&lt;TH2F&gt; RunMatrixator::matrix_Clovers_delayed<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1a045df0760364e0b5ffc3241461d423ee"/>    <section>
    <title>matrix_Clovers_delayed_vs_prompt</title>
<indexterm><primary>matrix_Clovers_delayed_vs_prompt</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>matrix_Clovers_delayed_vs_prompt</secondary></indexterm>
<para><computeroutput><link linkend="_class_m_t_t_hist">MTTHist</link>&lt;TH2F&gt; RunMatrixator::matrix_Clovers_delayed_vs_prompt<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1a51381da7ca12e24fd0069f9d03842217"/>    <section>
    <title>matrix_Clovers_prompt</title>
<indexterm><primary>matrix_Clovers_prompt</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>matrix_Clovers_prompt</secondary></indexterm>
<para><computeroutput><link linkend="_class_m_t_t_hist">MTTHist</link>&lt;TH2F&gt; RunMatrixator::matrix_Clovers_prompt<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1ac595f1896e83716b3531c53e66cf7995"/>    <section>
    <title>singlesDelayed</title>
<indexterm><primary>singlesDelayed</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>singlesDelayed</secondary></indexterm>
<para><computeroutput>std::unordered_map&lt;<link linkend="__detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a">dType</link>, <link linkend="__m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e">Vector_MTTHist</link>&lt;TH1F&gt; &gt; RunMatrixator::singlesDelayed<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1a3992675c0d4796654b248614a95ca9da"/>    <section>
    <title>singlesDelayed2</title>
<indexterm><primary>singlesDelayed2</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>singlesDelayed2</secondary></indexterm>
<para><computeroutput>std::unordered_map&lt;<link linkend="__detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a">dType</link>, <link linkend="__m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e">Vector_MTTHist</link>&lt;TH1F&gt; &gt; RunMatrixator::singlesDelayed2<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1a64b9bcb6a98c97a879dd36192a0782b3"/>    <section>
    <title>singlesPrompt</title>
<indexterm><primary>singlesPrompt</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>singlesPrompt</secondary></indexterm>
<para><computeroutput>std::unordered_map&lt;<link linkend="__detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a">dType</link>, <link linkend="__m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e">Vector_MTTHist</link>&lt;TH1F&gt; &gt; RunMatrixator::singlesPrompt<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1a779004b05d613741a85da5cbefa23696"/>    <section>
    <title>singlesPrompt2</title>
<indexterm><primary>singlesPrompt2</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>singlesPrompt2</secondary></indexterm>
<para><computeroutput>std::unordered_map&lt;<link linkend="__detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a">dType</link>, <link linkend="__m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e">Vector_MTTHist</link>&lt;TH1F&gt; &gt; RunMatrixator::singlesPrompt2<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_run_matrixator_1a3e8757458107f0f0ec8de5a25c6518fe"/>    <section>
    <title>test_paris_vs_mult</title>
<indexterm><primary>test_paris_vs_mult</primary><secondary>RunMatrixator</secondary></indexterm>
<indexterm><primary>RunMatrixator</primary><secondary>test_paris_vs_mult</secondary></indexterm>
<para><computeroutput><link linkend="_class_m_t_t_hist">MTTHist</link>&lt;TH2F&gt; RunMatrixator::test_paris_vs_mult<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
lib/Modules/<link linkend="__run_matrixator_8hpp">RunMatrixator.hpp</link></section>
</section>
