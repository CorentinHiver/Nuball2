<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__fit_8hpp" xml:lang="en-US">
<title>lib/Classes/Fit.hpp File Reference</title>
<indexterm><primary>lib/Classes/Fit.hpp</primary></indexterm>
<programlisting>#include &quot;../libCo.hpp&quot;
#include &quot;Hit.hpp&quot;
</programlisting>Include dependency graph for Fit.hpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_fit_8hpp__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_fit_8hpp__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class_fit">Fit</link></para>

<para>Allows one to manipulate the results of peak fitting. </para>
</listitem>
            <listitem><para>class <link linkend="_class_fits">Fits</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>std::ofstream &amp; <link linkend="__fit_8hpp_1a4f68d2fe488cf1a3044c1573a16bc394">operator&lt;&lt;</link> (std::ofstream &amp;fout, <link linkend="_class_fit">Fit</link> const &amp;fit)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="__fit_8hpp_1a4f68d2fe488cf1a3044c1573a16bc394"/>    <section>
    <title>operator&lt;&lt;()</title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>Fit.hpp</secondary></indexterm>
<indexterm><primary>Fit.hpp</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<para><computeroutput>std::ofstream&amp; operator&lt;&lt; (std::ofstream &amp; fout, <link linkend="_class_fit">Fit</link> const &amp; fit)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_fit_8hpp_a4f68d2fe488cf1a3044c1573a16bc394_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
