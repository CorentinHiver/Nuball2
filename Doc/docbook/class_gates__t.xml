<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_gates__t" xml:lang="en-US">
<title>Gates_t&lt; T &gt; Class Template Reference</title>
<indexterm><primary>Gates_t&lt; T &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;Gate.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_gates__t_1a07f860c7dcd7110ee0da5d523591b12f">check</link> (std::initializer_list&lt; T &gt; bounds)</para>
</listitem>
            <listitem><para><link linkend="_class_gates__t_1a296ccceb76e5c87c661a6814b2301e80">Gates_t</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_gates__t_1a31ce88cdf09b7b5f9c74d13a22537815">Gates_t</link> (std::initializer_list&lt; T &gt; bounds)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_gates__t_1a0bd9311137fd07879a470fdc692e6503">isIn</link> (T const &amp;t)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_gates__t_1a26ce612cac177fd38e869095069452bf">operator()</link> (T const &amp;t) const</para>
</listitem>
            <listitem><para><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">std::size_t</link> const  &amp; <link linkend="_class_gates__t_1a09ccdefe86716e251d36ac2d5dcea922">size</link> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">std::size_t</link> <link linkend="_class_gates__t_1a78ab2e282a6644a651512e2d3d284204">m_size</link> = 0</para>
</listitem>
            <listitem><para>std::vector&lt; T &gt; <link linkend="_class_gates__t_1a8b864dce704ad3a17d47097e4e68b4c3">start</link></para>
</listitem>
            <listitem><para>std::vector&lt; T &gt; <link linkend="_class_gates__t_1aeb06a1056da00c242a9b8c8854121c3a">stop</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_gates__t_1a296ccceb76e5c87c661a6814b2301e80"/>    <section>
    <title>Gates_t()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Gates_t</primary><secondary>Gates_t&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Gates_t&lt; T &gt;</primary><secondary>Gates_t</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_class_gates__t">Gates_t</link>&lt; T &gt;::<link linkend="_class_gates__t">Gates_t</link> ( )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_gates__t_1a31ce88cdf09b7b5f9c74d13a22537815"/>    <section>
    <title>Gates_t()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Gates_t</primary><secondary>Gates_t&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Gates_t&lt; T &gt;</primary><secondary>Gates_t</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_class_gates__t">Gates_t</link>&lt; T &gt;::<link linkend="_class_gates__t">Gates_t</link> (std::initializer_list&lt; T &gt; bounds)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_gates__t_a31ce88cdf09b7b5f9c74d13a22537815_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_gates__t_1a07f860c7dcd7110ee0da5d523591b12f"/>    <section>
    <title>check()</title>
<indexterm><primary>check</primary><secondary>Gates_t&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Gates_t&lt; T &gt;</primary><secondary>check</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>void <link linkend="_class_gates__t">Gates_t</link>&lt; T &gt;::check (std::initializer_list&lt; T &gt; bounds)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_gates__t_a07f860c7dcd7110ee0da5d523591b12f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_gates__t_a07f860c7dcd7110ee0da5d523591b12f_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_gates__t_1a0bd9311137fd07879a470fdc692e6503"/>    <section>
    <title>isIn()</title>
<indexterm><primary>isIn</primary><secondary>Gates_t&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Gates_t&lt; T &gt;</primary><secondary>isIn</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>bool <link linkend="_class_gates__t">Gates_t</link>&lt; T &gt;::isIn (T const &amp; t)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_gates__t_a0bd9311137fd07879a470fdc692e6503_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_gates__t_1a26ce612cac177fd38e869095069452bf"/>    <section>
    <title>operator()()</title>
<indexterm><primary>operator()</primary><secondary>Gates_t&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Gates_t&lt; T &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>bool <link linkend="_class_gates__t">Gates_t</link>&lt; T &gt;::operator() (T const &amp; t) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_gates__t_a26ce612cac177fd38e869095069452bf_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_gates__t_1a09ccdefe86716e251d36ac2d5dcea922"/>    <section>
    <title>size()</title>
<indexterm><primary>size</primary><secondary>Gates_t&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Gates_t&lt; T &gt;</primary><secondary>size</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">std::size_t</link> const&amp; <link linkend="_class_gates__t">Gates_t</link>&lt; T &gt;::size ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_gates__t_1a78ab2e282a6644a651512e2d3d284204"/>    <section>
    <title>m_size</title>
<indexterm><primary>m_size</primary><secondary>Gates_t&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Gates_t&lt; T &gt;</primary><secondary>m_size</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">std::size_t</link> <link linkend="_class_gates__t">Gates_t</link>&lt; T &gt;::m_size = 0<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_gates__t_1a8b864dce704ad3a17d47097e4e68b4c3"/>    <section>
    <title>start</title>
<indexterm><primary>start</primary><secondary>Gates_t&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Gates_t&lt; T &gt;</primary><secondary>start</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>std::vector&lt;T&gt; <link linkend="_class_gates__t">Gates_t</link>&lt; T &gt;::start<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_gates__t_1aeb06a1056da00c242a9b8c8854121c3a"/>    <section>
    <title>stop</title>
<indexterm><primary>stop</primary><secondary>Gates_t&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Gates_t&lt; T &gt;</primary><secondary>stop</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>std::vector&lt;T&gt; <link linkend="_class_gates__t">Gates_t</link>&lt; T &gt;::stop<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
lib/Classes/<link linkend="__gate_8hpp">Gate.hpp</link></section>
</section>
