<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_manip" xml:lang="en-US">
<title>Manip Class Reference</title>
<indexterm><primary>Manip</primary></indexterm>
<para>

<para>Loads the list file containing the list of the names of the folder containing the faster files to convert. </para>
 
</para>
<para>
<computeroutput>#include &lt;Manip.hpp&gt;</computeroutput>
</para>
Collaboration diagram for Manip:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_manip__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_manip_1a86ed3dd2dc6d3b8b7342a9552bc43e26">addFolder</link> (std::string const &amp;folder)</para>

<para>Clears the previously set list of folders and replace it with folder. </para>
</listitem>
            <listitem><para>auto const  &amp; <link linkend="_class_manip_1a41dfa1aac77e2340abf4f66934af0092">get</link> () const</para>
</listitem>
            <listitem><para>bool <link linkend="_class_manip_1a0192f178496568056b1d17c9e73db064">getNext</link> (std::string &amp;run)</para>
</listitem>
            <listitem><para><link linkend="_class_manip_1a1f5a91129d20b2e3924c54bddde521f6">Manip</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_manip_1aab38d946797ab4e5b03c02d9bf69aa0c">Manip</link> (std::string const &amp;runs_file)</para>
</listitem>
            <listitem><para><link linkend="_class_manip_1ad509e37dce3d5a639115b54f16ded598">operator bool</link> () const &amp;</para>
</listitem>
            <listitem><para>bool <link linkend="_class_manip_1aa8e71952b07876be2dc56e180bdfe5f5">operator&gt;&gt;</link> (std::string &amp;string)</para>
</listitem>
            <listitem><para>void <link linkend="_class_manip_1a4fe55690c18999195a5c4c3bec5e6b17">readFile</link> ()</para>

<para>Reads the list file containing the list of folders. </para>
</listitem>
            <listitem><para>void <link linkend="_class_manip_1ad044eafeb71fda443f77377d44d652d0">readFile</link> (std::string const &amp;runs_file)</para>
</listitem>
            <listitem><para>void <link linkend="_class_manip_1a580f1eee22ca0c4f2419867c7a15cb85">reset</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_manip_1aba047d84e5c3eaff3640c2ed8f31aaea">setDataPath</link> (std::string const &amp;datapath)</para>
</listitem>
            <listitem><para>void <link linkend="_class_manip_1af3f64608a08dd23d186f48e8c1beeba0">setFileName</link> (std::string const &amp;filename)</para>
</listitem>
            <listitem><para>void <link linkend="_class_manip_1aec7bc3a8a74d63eda8ad6e6f7496c985">setFolder</link> (std::string const &amp;folder)</para>

<para>Clears the previously set list of folders and replace it with folder. </para>
</listitem>
            <listitem><para>void <link linkend="_class_manip_1a7f2aa2947cd843abecac34300b6da94e">setManipName</link> (std::string const &amp;manipname)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_manip_1ab0813163118017c1064ec02f091356b8">setMT</link> (bool const &amp;MTOn=true)</para>

<para>To allow several threads to work on different runs on parallel. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_lib_co_8hpp_1a69aa29b598b851b0640aa225a9e5d61d">uint</link> <link linkend="_class_manip_1a48b7346ccf31813912089fe976d9663a">i</link> = 0</para>
</listitem>
            <listitem><para>std::vector&lt; std::string &gt; <link linkend="_class_manip_1a1c4ac027f4eed9e755aca5ba641a27ea">list_runs</link></para>
</listitem>
            <listitem><para><link linkend="__m_t_list_8hpp_1a5645cb48b623bfc2e6e274c70952a8e2">MTList</link> <link linkend="_class_manip_1ac47140bb9d696f5c0cd15edf4171c905">list_runs_MT</link></para>
</listitem>
            <listitem><para><link linkend="_class_path">Path</link> <link linkend="_class_manip_1ac2ac621173f7cd52f01c5b4b50a56e5e">m_datapath</link></para>
</listitem>
            <listitem><para>std::string <link linkend="_class_manip_1a8e335c089c27a67924e3955f5707fc9f">m_file</link></para>
</listitem>
            <listitem><para><link linkend="_class_folder">Folder</link> <link linkend="_class_manip_1a2d82ae040e3db69e9dcac867180f918e">m_manip</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_manip_1a1bc91186338c5bc2d2d76ac0001c7c05">m_MTOn</link> = false</para>
</listitem>
            <listitem><para>bool <link linkend="_class_manip_1ade3e293cfef09fb727b8d549d5190ecf">m_ok</link></para>
</listitem>
            <listitem><para>std::string <link linkend="_class_manip_1af08813391e63fd965d34ff2ff31c6453">m_runs_files</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Loads the list file containing the list of the names of the folder containing the faster files to convert. </para>



<para><para><link linkend="_todo_1_todo000010">Todo</link> 
<para>make it better !! </para>
</para></para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_manip_1a1f5a91129d20b2e3924c54bddde521f6"/>    <section>
    <title>Manip()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Manip</primary><secondary>Manip</secondary></indexterm>
<indexterm><primary>Manip</primary><secondary>Manip</secondary></indexterm>
<para><computeroutput>Manip::Manip ( )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_manip_1aab38d946797ab4e5b03c02d9bf69aa0c"/>    <section>
    <title>Manip()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Manip</primary><secondary>Manip</secondary></indexterm>
<indexterm><primary>Manip</primary><secondary>Manip</secondary></indexterm>
<para><computeroutput>Manip::Manip (std::string const &amp; runs_file)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_manip_aab38d946797ab4e5b03c02d9bf69aa0c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_manip_1a86ed3dd2dc6d3b8b7342a9552bc43e26"/>    <section>
    <title>addFolder()</title>
<indexterm><primary>addFolder</primary><secondary>Manip</secondary></indexterm>
<indexterm><primary>Manip</primary><secondary>addFolder</secondary></indexterm>
<para><computeroutput>void Manip::addFolder (std::string const &amp; folder)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Clears the previously set list of folders and replace it with folder. </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_manip_a86ed3dd2dc6d3b8b7342a9552bc43e26_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_manip_1a41dfa1aac77e2340abf4f66934af0092"/>    <section>
    <title>get()</title>
<indexterm><primary>get</primary><secondary>Manip</secondary></indexterm>
<indexterm><primary>Manip</primary><secondary>get</secondary></indexterm>
<para><computeroutput>auto const&amp; Manip::get ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_manip_a41dfa1aac77e2340abf4f66934af0092_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_manip_1a0192f178496568056b1d17c9e73db064"/>    <section>
    <title>getNext()</title>
<indexterm><primary>getNext</primary><secondary>Manip</secondary></indexterm>
<indexterm><primary>Manip</primary><secondary>getNext</secondary></indexterm>
<para><computeroutput>bool Manip::getNext (std::string &amp; run)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_manip_a0192f178496568056b1d17c9e73db064_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_manip_a0192f178496568056b1d17c9e73db064_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_manip_1ad509e37dce3d5a639115b54f16ded598"/>    <section>
    <title>operator bool()</title>
<indexterm><primary>operator bool</primary><secondary>Manip</secondary></indexterm>
<indexterm><primary>Manip</primary><secondary>operator bool</secondary></indexterm>
<para><computeroutput>Manip::operator bool ( ) const &amp;<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_manip_1aa8e71952b07876be2dc56e180bdfe5f5"/>    <section>
    <title>operator&gt;&gt;()</title>
<indexterm><primary>operator&gt;&gt;</primary><secondary>Manip</secondary></indexterm>
<indexterm><primary>Manip</primary><secondary>operator&gt;&gt;</secondary></indexterm>
<para><computeroutput>bool Manip::operator&gt;&gt; (std::string &amp; string)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_manip_aa8e71952b07876be2dc56e180bdfe5f5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_manip_1a4fe55690c18999195a5c4c3bec5e6b17"/>    <section>
    <title>readFile()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>readFile</primary><secondary>Manip</secondary></indexterm>
<indexterm><primary>Manip</primary><secondary>readFile</secondary></indexterm>
<para><computeroutput>void Manip::readFile ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Reads the list file containing the list of folders. </para>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_manip_a4fe55690c18999195a5c4c3bec5e6b17_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_manip_1ad044eafeb71fda443f77377d44d652d0"/>    <section>
    <title>readFile()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>readFile</primary><secondary>Manip</secondary></indexterm>
<indexterm><primary>Manip</primary><secondary>readFile</secondary></indexterm>
<para><computeroutput>void Manip::readFile (std::string const &amp; runs_file)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_manip_ad044eafeb71fda443f77377d44d652d0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_manip_1a580f1eee22ca0c4f2419867c7a15cb85"/>    <section>
    <title>reset()</title>
<indexterm><primary>reset</primary><secondary>Manip</secondary></indexterm>
<indexterm><primary>Manip</primary><secondary>reset</secondary></indexterm>
<para><computeroutput>void Manip::reset ( )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_manip_1aba047d84e5c3eaff3640c2ed8f31aaea"/>    <section>
    <title>setDataPath()</title>
<indexterm><primary>setDataPath</primary><secondary>Manip</secondary></indexterm>
<indexterm><primary>Manip</primary><secondary>setDataPath</secondary></indexterm>
<para><computeroutput>void Manip::setDataPath (std::string const &amp; datapath)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para><para><link linkend="_deprecated_1_deprecated000004">Deprecated</link> 
<para>Set the path of the list file containing the list of folders </para>
</para></para>
    </section><anchor xml:id="_class_manip_1af3f64608a08dd23d186f48e8c1beeba0"/>    <section>
    <title>setFileName()</title>
<indexterm><primary>setFileName</primary><secondary>Manip</secondary></indexterm>
<indexterm><primary>Manip</primary><secondary>setFileName</secondary></indexterm>
<para><computeroutput>void Manip::setFileName (std::string const &amp; filename)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_manip_1aec7bc3a8a74d63eda8ad6e6f7496c985"/>    <section>
    <title>setFolder()</title>
<indexterm><primary>setFolder</primary><secondary>Manip</secondary></indexterm>
<indexterm><primary>Manip</primary><secondary>setFolder</secondary></indexterm>
<para><computeroutput>void Manip::setFolder (std::string const &amp; folder)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Clears the previously set list of folders and replace it with folder. </para>
</para>
    </section><anchor xml:id="_class_manip_1a7f2aa2947cd843abecac34300b6da94e"/>    <section>
    <title>setManipName()</title>
<indexterm><primary>setManipName</primary><secondary>Manip</secondary></indexterm>
<indexterm><primary>Manip</primary><secondary>setManipName</secondary></indexterm>
<para><computeroutput>void Manip::setManipName (std::string const &amp; manipname)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para><para><link linkend="_deprecated_1_deprecated000005">Deprecated</link> 
<para>Set the name of the folder inside the datapath containing the list file containing the list of folders </para>
</para></para>
    </section><anchor xml:id="_class_manip_1ab0813163118017c1064ec02f091356b8"/>    <section>
    <title>setMT()</title>
<indexterm><primary>setMT</primary><secondary>Manip</secondary></indexterm>
<indexterm><primary>Manip</primary><secondary>setMT</secondary></indexterm>
<para><computeroutput>bool Manip::setMT (bool const &amp; MTOn = <computeroutput>true</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>To allow several threads to work on different runs on parallel. </para>
</para>

<para><link linkend="_class_m_t_object">MTObject</link> needs to have been Initialised before creating the 
<literallayout>&#160;&#xa;</literallayout>
 </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_manip_ab0813163118017c1064ec02f091356b8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_manip_1a48b7346ccf31813912089fe976d9663a"/>    <section>
    <title>i</title>
<indexterm><primary>i</primary><secondary>Manip</secondary></indexterm>
<indexterm><primary>Manip</primary><secondary>i</secondary></indexterm>
<para><computeroutput><link linkend="_lib_co_8hpp_1a69aa29b598b851b0640aa225a9e5d61d">uint</link> Manip::i = 0<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_manip_1a1c4ac027f4eed9e755aca5ba641a27ea"/>    <section>
    <title>list_runs</title>
<indexterm><primary>list_runs</primary><secondary>Manip</secondary></indexterm>
<indexterm><primary>Manip</primary><secondary>list_runs</secondary></indexterm>
<para><computeroutput>std::vector&lt;std::string&gt; Manip::list_runs<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_manip_1ac47140bb9d696f5c0cd15edf4171c905"/>    <section>
    <title>list_runs_MT</title>
<indexterm><primary>list_runs_MT</primary><secondary>Manip</secondary></indexterm>
<indexterm><primary>Manip</primary><secondary>list_runs_MT</secondary></indexterm>
<para><computeroutput><link linkend="__m_t_list_8hpp_1a5645cb48b623bfc2e6e274c70952a8e2">MTList</link> Manip::list_runs_MT<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_manip_1ac2ac621173f7cd52f01c5b4b50a56e5e"/>    <section>
    <title>m_datapath</title>
<indexterm><primary>m_datapath</primary><secondary>Manip</secondary></indexterm>
<indexterm><primary>Manip</primary><secondary>m_datapath</secondary></indexterm>
<para><computeroutput><link linkend="_class_path">Path</link> Manip::m_datapath<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_manip_1a8e335c089c27a67924e3955f5707fc9f"/>    <section>
    <title>m_file</title>
<indexterm><primary>m_file</primary><secondary>Manip</secondary></indexterm>
<indexterm><primary>Manip</primary><secondary>m_file</secondary></indexterm>
<para><computeroutput>std::string Manip::m_file<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_manip_1a2d82ae040e3db69e9dcac867180f918e"/>    <section>
    <title>m_manip</title>
<indexterm><primary>m_manip</primary><secondary>Manip</secondary></indexterm>
<indexterm><primary>Manip</primary><secondary>m_manip</secondary></indexterm>
<para><computeroutput><link linkend="_class_folder">Folder</link> Manip::m_manip<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_manip_1a1bc91186338c5bc2d2d76ac0001c7c05"/>    <section>
    <title>m_MTOn</title>
<indexterm><primary>m_MTOn</primary><secondary>Manip</secondary></indexterm>
<indexterm><primary>Manip</primary><secondary>m_MTOn</secondary></indexterm>
<para><computeroutput>bool Manip::m_MTOn = false<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_manip_1ade3e293cfef09fb727b8d549d5190ecf"/>    <section>
    <title>m_ok</title>
<indexterm><primary>m_ok</primary><secondary>Manip</secondary></indexterm>
<indexterm><primary>Manip</primary><secondary>m_ok</secondary></indexterm>
<para><computeroutput>bool Manip::m_ok<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_manip_1af08813391e63fd965d34ff2ff31c6453"/>    <section>
    <title>m_runs_files</title>
<indexterm><primary>m_runs_files</primary><secondary>Manip</secondary></indexterm>
<indexterm><primary>Manip</primary><secondary>m_runs_files</secondary></indexterm>
<para><computeroutput>std::string Manip::m_runs_files<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
lib/Classes/<link linkend="__manip_8hpp">Manip.hpp</link></section>
</section>
