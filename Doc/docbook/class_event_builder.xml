<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_event_builder" xml:lang="en-US">
<title>EventBuilder Class Reference</title>
<indexterm><primary>EventBuilder</primary></indexterm>
<para>

<para>NOT UP TO DATE !! LATEST STABLE IS EventBuilder_136. </para>
 
</para>
<para>
<computeroutput>#include &lt;EventBuilder.hpp&gt;</computeroutput>
</para>
Inheritance diagram for EventBuilder:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_event_builder__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for EventBuilder:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_event_builder__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>Bool_t <link linkend="_class_event_builder_1a721b4b60a459c5a5c00ed3e1b513d636">build</link> (<link linkend="_class_hit">Hit</link> const &amp;_hit)</para>

<para>Add Hits to the event. Return true when an event is complete, i.e. current hit is outside of time window. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_builder_1aacd0df1ffcecbfb4bbc009e6efd0b541">coincidence</link> (<link linkend="_class_hit">Hit</link> const &amp;hit)=0</para>
</listitem>
            <listitem><para><link linkend="_class_event_builder_1ac0b0fb04d24202c381a11e277f28ec4d">EventBuilder</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_event_builder_1ac556f2cb7bf3048a41178823b60036d5">EventBuilder</link> (<link linkend="_class_event">Event</link> *_event)</para>
</listitem>
            <listitem><para><link linkend="_class_event_builder_1a0711edae85f729dff5d06706d5726644">EventBuilder</link> (<link linkend="_class_event">Event</link> *_event, <link linkend="_class_r_f___manager">RF_Manager</link> *_rf)</para>
</listitem>
            <listitem><para><link linkend="__hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7">Time</link> const  &amp; <link linkend="_class_event_builder_1a7e7a1a33b9530db57eda67c4782e0f25">get_RF_ref_time</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class_event">Event</link> * <link linkend="_class_builder_1a8fd6226096d712de58f78e9ef123c45d">getEvent</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class_hit">Hit</link> const  &amp; <link linkend="_class_builder_1abeb8339305e7a10fb2c67cc0fed9237b">getLastHit</link> () const</para>
</listitem>
            <listitem><para>ULong64_t const  &amp; <link linkend="_class_event_builder_1a1ba56c92ccb4a4188c4a0974ff271a3e">getShift</link> () const</para>
</listitem>
            <listitem><para>bool <link linkend="_class_builder_1a414690f7964ed158937df8a65b1d4760">isBuilding</link> () const</para>
</listitem>
            <listitem><para>bool <link linkend="_class_builder_1af7ce79872abc82e734c72e03380a1f34">isBuilt</link> () const</para>
</listitem>
            <listitem><para>bool <link linkend="_class_builder_1aa476b7d1fd2fe31882a3380769eb60a9">isSingle</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_class_event_builder_1a96d24bbdba6a9cc0770bc1ec81c7c9e0">reset</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_builder_1aebad9a247ffe8dfa74d2738ee7cad755">set_first_hit</link> (<link linkend="_class_hit">Hit</link> const &amp;hit)</para>
</listitem>
            <listitem><para>void <link linkend="_class_event_builder_1a4f56ddbeef9ac86eca830a3742fb30c7">set_last_hit</link> (<link linkend="_class_hit">Hit</link> const &amp;hit)</para>
</listitem>
            <listitem><para>void <link linkend="_class_event_builder_1aa5b10a9ec657ec5927ce34a11ca4b88e">setFirstRF</link> (<link linkend="_class_hit">Hit</link> const &amp;hit)</para>
</listitem>
            <listitem><para>void <link linkend="_class_event_builder_1a85147400938b0f632d7d7378f53a4dd6">setRF</link> (<link linkend="_class_r_f___manager">RF_Manager</link> *rf)</para>
</listitem>
            <listitem><para>void <link linkend="_class_event_builder_1a05a544d681449bacd0ba3aa88dffa0de">setRFTime</link> (<link linkend="__hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7">Time</link> const &amp;_RF_ref_time)</para>
</listitem>
            <listitem><para>void <link linkend="_class_event_builder_1aa10e7b7a47153a208bf4a8a3c4d98445">setShift</link> (Long64_t const &amp;shift)</para>
</listitem>
            <listitem><para>void <link linkend="_class_event_builder_1a90bf2376655073b5501418b5b29d1415">setShift_ns</link> (Long64_t const &amp;shift)</para>
</listitem>
            <listitem><para><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> <link linkend="_class_builder_1a3097a8df520a8ab39c953cb8b659b2ee">size</link> () const</para>
</listitem>
            <listitem><para><link linkend="_lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21">uchar</link> const  &amp; <link linkend="_class_builder_1af86b7b9639bb301f191e6263dd871bf7">status</link> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static void <link linkend="_class_builder_1a4d557d96189a42cbc0a4a0d32db45d6c">keepSingles</link> (bool const &amp;b=true)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_event">Event</link> * <link linkend="_class_builder_1a76749e4cc31025fde18f9cdbeb232cbf">m_event</link> = nullptr</para>
</listitem>
            <listitem><para><link linkend="_class_hit">Hit</link> <link linkend="_class_builder_1a5cce09bc1a95dd0bcaa4f857f1a1b3da">m_last_hit</link></para>
</listitem>
            <listitem><para><link linkend="_lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21">uchar</link> <link linkend="_class_builder_1a81c56e91c1951d25faecf88f390b5bcb">m_status</link> = 0</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>static bool <link linkend="_class_builder_1a7b1399ae5a1a58620dd564754d691348">m_keep_singles</link> = false</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_r_f___manager">RF_Manager</link> * <link linkend="_class_event_builder_1a5f2a208b4757d805b8c9e3f3f2a59c48">m_rf</link> = nullptr</para>
</listitem>
            <listitem><para><link linkend="__hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7">Time</link> <link linkend="_class_event_builder_1ab71f51f2b1bce9a82d7035db746e6e57">m_shift</link> = 0</para>
</listitem>
            <listitem><para><link linkend="__hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7">Time</link> <link linkend="_class_event_builder_1aae65b5dd56d65114847b98becd24634c">RF_ref_time</link> = 0</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>NOT UP TO DATE !! LATEST STABLE IS EventBuilder_136. </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_event_builder_1ac0b0fb04d24202c381a11e277f28ec4d"/>    <section>
    <title>EventBuilder()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>EventBuilder</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>EventBuilder</secondary></indexterm>
<para><computeroutput>EventBuilder::EventBuilder ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_event_builder_1ac556f2cb7bf3048a41178823b60036d5"/>    <section>
    <title>EventBuilder()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>EventBuilder</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>EventBuilder</secondary></indexterm>
<para><computeroutput>EventBuilder::EventBuilder (<link linkend="_class_event">Event</link> * _event)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_event_builder_1a0711edae85f729dff5d06706d5726644"/>    <section>
    <title>EventBuilder()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>EventBuilder</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>EventBuilder</secondary></indexterm>
<para><computeroutput>EventBuilder::EventBuilder (<link linkend="_class_event">Event</link> * _event, <link linkend="_class_r_f___manager">RF_Manager</link> * _rf)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_event_builder_1a721b4b60a459c5a5c00ed3e1b513d636"/>    <section>
    <title>build()</title>
<indexterm><primary>build</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>build</secondary></indexterm>
<para><computeroutput>Bool_t EventBuilder::build (<link linkend="_class_hit">Hit</link> const &amp; _hit)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Add Hits to the event. Return true when an event is complete, i.e. current hit is outside of time window. </para>
</para>

<para>3 status : 0: single | 1: begin of coincidence | 2: coincidence complete </para>
<para>
Implements <link linkend="_class_builder_1a6174fb0019ff2eafed26644d05e374a5">Builder</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_event_builder_a721b4b60a459c5a5c00ed3e1b513d636_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_builder_1aacd0df1ffcecbfb4bbc009e6efd0b541"/>    <section>
    <title>coincidence()</title>
<indexterm><primary>coincidence</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>coincidence</secondary></indexterm>
<para><computeroutput>virtual bool Builder::coincidence (<link linkend="_class_hit">Hit</link> const &amp; hit)<computeroutput>[pure virtual]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para><para>
Implemented in <link linkend="_class_coinc_builder_1a7bb003c28d9b4b43bbd10a09771226ae">CoincBuilder</link>.</para>
    </section><anchor xml:id="_class_event_builder_1a7e7a1a33b9530db57eda67c4782e0f25"/>    <section>
    <title>get_RF_ref_time()</title>
<indexterm><primary>get_RF_ref_time</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>get_RF_ref_time</secondary></indexterm>
<para><computeroutput><link linkend="__hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7">Time</link> const&amp; EventBuilder::get_RF_ref_time ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_builder_1a8fd6226096d712de58f78e9ef123c45d"/>    <section>
    <title>getEvent()</title>
<indexterm><primary>getEvent</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>getEvent</secondary></indexterm>
<para><computeroutput><link linkend="_class_event">Event</link>* Builder::getEvent ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_builder_1abeb8339305e7a10fb2c67cc0fed9237b"/>    <section>
    <title>getLastHit()</title>
<indexterm><primary>getLastHit</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>getLastHit</secondary></indexterm>
<para><computeroutput><link linkend="_class_hit">Hit</link> const&amp; Builder::getLastHit ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_event_builder_1a1ba56c92ccb4a4188c4a0974ff271a3e"/>    <section>
    <title>getShift()</title>
<indexterm><primary>getShift</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>getShift</secondary></indexterm>
<para><computeroutput>ULong64_t const&amp; EventBuilder::getShift ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_builder_1a414690f7964ed158937df8a65b1d4760"/>    <section>
    <title>isBuilding()</title>
<indexterm><primary>isBuilding</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>isBuilding</secondary></indexterm>
<para><computeroutput>bool Builder::isBuilding ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_builder_1af7ce79872abc82e734c72e03380a1f34"/>    <section>
    <title>isBuilt()</title>
<indexterm><primary>isBuilt</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>isBuilt</secondary></indexterm>
<para><computeroutput>bool Builder::isBuilt ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_builder_1aa476b7d1fd2fe31882a3380769eb60a9"/>    <section>
    <title>isSingle()</title>
<indexterm><primary>isSingle</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>isSingle</secondary></indexterm>
<para><computeroutput>bool Builder::isSingle ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_builder_aa476b7d1fd2fe31882a3380769eb60a9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_builder_1a4d557d96189a42cbc0a4a0d32db45d6c"/>    <section>
    <title>keepSingles()</title>
<indexterm><primary>keepSingles</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>keepSingles</secondary></indexterm>
<para><computeroutput>static void Builder::keepSingles (bool const &amp; b = <computeroutput>true</computeroutput>
)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_builder_a4d557d96189a42cbc0a4a0d32db45d6c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_event_builder_1a96d24bbdba6a9cc0770bc1ec81c7c9e0"/>    <section>
    <title>reset()</title>
<indexterm><primary>reset</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>reset</secondary></indexterm>
<para><computeroutput>void EventBuilder::reset ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented from <link linkend="_class_builder_1ae2d72f1157ccaaddc45b6963c7971f30">Builder</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_event_builder_a96d24bbdba6a9cc0770bc1ec81c7c9e0_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_builder_1aebad9a247ffe8dfa74d2738ee7cad755"/>    <section>
    <title>set_first_hit()</title>
<indexterm><primary>set_first_hit</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>set_first_hit</secondary></indexterm>
<para><computeroutput>void Builder::set_first_hit (<link linkend="_class_hit">Hit</link> const &amp; hit)<computeroutput>[inline]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_event_builder_1a4f56ddbeef9ac86eca830a3742fb30c7"/>    <section>
    <title>set_last_hit()</title>
<indexterm><primary>set_last_hit</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>set_last_hit</secondary></indexterm>
<para><computeroutput>void EventBuilder::set_last_hit (<link linkend="_class_hit">Hit</link> const &amp; hit)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_event_builder_a4f56ddbeef9ac86eca830a3742fb30c7_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_event_builder_1aa5b10a9ec657ec5927ce34a11ca4b88e"/>    <section>
    <title>setFirstRF()</title>
<indexterm><primary>setFirstRF</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>setFirstRF</secondary></indexterm>
<para><computeroutput>void EventBuilder::setFirstRF (<link linkend="_class_hit">Hit</link> const &amp; hit)</computeroutput></para>    </section><anchor xml:id="_class_event_builder_1a85147400938b0f632d7d7378f53a4dd6"/>    <section>
    <title>setRF()</title>
<indexterm><primary>setRF</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>setRF</secondary></indexterm>
<para><computeroutput>void EventBuilder::setRF (<link linkend="_class_r_f___manager">RF_Manager</link> * rf)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_event_builder_1a05a544d681449bacd0ba3aa88dffa0de"/>    <section>
    <title>setRFTime()</title>
<indexterm><primary>setRFTime</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>setRFTime</secondary></indexterm>
<para><computeroutput>void EventBuilder::setRFTime (<link linkend="__hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7">Time</link> const &amp; _RF_ref_time)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_event_builder_1aa10e7b7a47153a208bf4a8a3c4d98445"/>    <section>
    <title>setShift()</title>
<indexterm><primary>setShift</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>setShift</secondary></indexterm>
<para><computeroutput>void EventBuilder::setShift (Long64_t const &amp; shift)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_event_builder_1a90bf2376655073b5501418b5b29d1415"/>    <section>
    <title>setShift_ns()</title>
<indexterm><primary>setShift_ns</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>setShift_ns</secondary></indexterm>
<para><computeroutput>void EventBuilder::setShift_ns (Long64_t const &amp; shift)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_builder_1a3097a8df520a8ab39c953cb8b659b2ee"/>    <section>
    <title>size()</title>
<indexterm><primary>size</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>size</secondary></indexterm>
<para><computeroutput><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> Builder::size ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_builder_a3097a8df520a8ab39c953cb8b659b2ee_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_builder_a3097a8df520a8ab39c953cb8b659b2ee_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_builder_1af86b7b9639bb301f191e6263dd871bf7"/>    <section>
    <title>status()</title>
<indexterm><primary>status</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>status</secondary></indexterm>
<para><computeroutput><link linkend="_lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21">uchar</link> const&amp; Builder::status ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_builder_1a76749e4cc31025fde18f9cdbeb232cbf"/>    <section>
    <title>m_event</title>
<indexterm><primary>m_event</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>m_event</secondary></indexterm>
<para><computeroutput><link linkend="_class_event">Event</link>* Builder::m_event = nullptr<computeroutput>[protected]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_builder_1a7b1399ae5a1a58620dd564754d691348"/>    <section>
    <title>m_keep_singles</title>
<indexterm><primary>m_keep_singles</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>m_keep_singles</secondary></indexterm>
<para><computeroutput>bool Builder::m_keep_singles = false<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_builder_1a5cce09bc1a95dd0bcaa4f857f1a1b3da"/>    <section>
    <title>m_last_hit</title>
<indexterm><primary>m_last_hit</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>m_last_hit</secondary></indexterm>
<para><computeroutput><link linkend="_class_hit">Hit</link> Builder::m_last_hit<computeroutput>[protected]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_event_builder_1a5f2a208b4757d805b8c9e3f3f2a59c48"/>    <section>
    <title>m_rf</title>
<indexterm><primary>m_rf</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>m_rf</secondary></indexterm>
<para><computeroutput><link linkend="_class_r_f___manager">RF_Manager</link>* EventBuilder::m_rf = nullptr<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_event_builder_1ab71f51f2b1bce9a82d7035db746e6e57"/>    <section>
    <title>m_shift</title>
<indexterm><primary>m_shift</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>m_shift</secondary></indexterm>
<para><computeroutput><link linkend="__hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7">Time</link> EventBuilder::m_shift = 0<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_builder_1a81c56e91c1951d25faecf88f390b5bcb"/>    <section>
    <title>m_status</title>
<indexterm><primary>m_status</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>m_status</secondary></indexterm>
<para><computeroutput><link linkend="_lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21">uchar</link> Builder::m_status = 0<computeroutput>[protected]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_event_builder_1aae65b5dd56d65114847b98becd24634c"/>    <section>
    <title>RF_ref_time</title>
<indexterm><primary>RF_ref_time</primary><secondary>EventBuilder</secondary></indexterm>
<indexterm><primary>EventBuilder</primary><secondary>RF_ref_time</secondary></indexterm>
<para><computeroutput><link linkend="__hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7">Time</link> EventBuilder::RF_ref_time = 0<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
lib/Classes/<link linkend="__event_builder_8hpp">EventBuilder.hpp</link></section>
</section>
