<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_folder" xml:lang="en-US">
<title>Folder Class Reference</title>
<indexterm><primary>Folder</primary></indexterm>
<para>

<para>EXPERIMENTAL Object used to hold a folder&apos;s name. </para>
 
</para>
<para>
<computeroutput>#include &lt;files_functions.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_folder_1a8af69fd19ba86816c60b4c2291311eb1">Folder</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_folder_1add09c34d4f536e44f1e7b20eecaa8707">Folder</link> (const char *folder)</para>
</listitem>
            <listitem><para><link linkend="_class_folder_1acc9fce9d1c448cd7811a6b22ad900239">Folder</link> (std::string const &amp;folder)</para>

<para>Turns a string to a folder&apos;s name. </para>
</listitem>
            <listitem><para>std::string const  &amp; <link linkend="_class_folder_1a71aba0f5181775b9ed38163de1c89c0b">get</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_class_folder_1a312a16f583b00232be14746555c765bf">make</link> ()</para>
</listitem>
            <listitem><para>std::string <link linkend="_class_folder_1a6aa1e1ebddb2cf4198b76f17f3aa022f">name</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class_folder_1a095c43e75ffe4bb1586f03ec95dc5340">operator bool</link> () const &amp;</para>
</listitem>
            <listitem><para><link linkend="_class_folder">Folder</link> &amp; <link linkend="_class_folder_1aab31dd7afa19f0dd45abf13e61ddfdf7">operator+=</link> (<link linkend="_class_folder">Folder</link> const &amp;folder)</para>
</listitem>
            <listitem><para><link linkend="_class_folder">Folder</link> &amp; <link linkend="_class_folder_1aad6e0351add7357e1e9ebcd1f436f317">operator=</link> (const char *folder)</para>
</listitem>
            <listitem><para><link linkend="_class_folder">Folder</link> &amp; <link linkend="_class_folder_1a92aac747b89056c8dedb623529e8edec">operator=</link> (std::string const &amp;folder)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_folder_1ae5e74edda681a2f533aca24d7d193ac8">operator==</link> (const char *<link linkend="_class_folder_1a9d0e844868f8debec7d50659ef7d3507">string</link>) const</para>
</listitem>
            <listitem><para>bool <link linkend="_class_folder_1a5a62f5e45280e944983bd162878cfe85">operator==</link> (std::string const &amp;<link linkend="_class_folder_1a9d0e844868f8debec7d50659ef7d3507">string</link>) const</para>
</listitem>
            <listitem><para>std::string <link linkend="_class_folder_1a2f8343d495b891134dca56a9767127cc">string</link> ()</para>
</listitem>
            <listitem><para>std::string const  &amp; <link linkend="_class_folder_1a9d0e844868f8debec7d50659ef7d3507">string</link> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>std::string <link linkend="_class_folder_1a244869fac986f183dce6b8725cdc64de">m_folder</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_folder_1aec34aa6cce9b8074a9892c3f7e2eb3c0">m_ok</link> = false</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>EXPERIMENTAL Object used to hold a folder&apos;s name. </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_folder_1a8af69fd19ba86816c60b4c2291311eb1"/>    <section>
    <title>Folder()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>Folder</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>Folder</secondary></indexterm>
<para><computeroutput>Folder::Folder ( )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_folder_1acc9fce9d1c448cd7811a6b22ad900239"/>    <section>
    <title>Folder()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>Folder</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>Folder</secondary></indexterm>
<para><computeroutput>Folder::Folder (std::string const &amp; folder)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Turns a string to a folder&apos;s name. </para>
</para>

<para>Basically, it is simply ensures that the name ends with a &apos;/&apos;</para>

<para>Also, it is the base class of <link linkend="_class_path">Path</link> class </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_folder_acc9fce9d1c448cd7811a6b22ad900239_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_folder_1add09c34d4f536e44f1e7b20eecaa8707"/>    <section>
    <title>Folder()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>Folder</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>Folder</secondary></indexterm>
<para><computeroutput>Folder::Folder (const char * folder)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_folder_add09c34d4f536e44f1e7b20eecaa8707_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_folder_1a71aba0f5181775b9ed38163de1c89c0b"/>    <section>
    <title>get()</title>
<indexterm><primary>get</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>get</secondary></indexterm>
<para><computeroutput>std::string const&amp; Folder::get ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_folder_a71aba0f5181775b9ed38163de1c89c0b_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_folder_1a312a16f583b00232be14746555c765bf"/>    <section>
    <title>make()</title>
<indexterm><primary>make</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>make</secondary></indexterm>
<para><computeroutput>void Folder::make ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_folder_a312a16f583b00232be14746555c765bf_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_folder_1a6aa1e1ebddb2cf4198b76f17f3aa022f"/>    <section>
    <title>name()</title>
<indexterm><primary>name</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>name</secondary></indexterm>
<para><computeroutput>std::string Folder::name ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_folder_a6aa1e1ebddb2cf4198b76f17f3aa022f_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_folder_1a095c43e75ffe4bb1586f03ec95dc5340"/>    <section>
    <title>operator bool()</title>
<indexterm><primary>operator bool</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>operator bool</secondary></indexterm>
<para><computeroutput>Folder::operator bool ( ) const &amp;<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_folder_1aab31dd7afa19f0dd45abf13e61ddfdf7"/>    <section>
    <title>operator+=()</title>
<indexterm><primary>operator+=</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>operator+=</secondary></indexterm>
<para><computeroutput><link linkend="_class_folder">Folder</link>&amp; Folder::operator+= (<link linkend="_class_folder">Folder</link> const &amp; folder)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_folder_1aad6e0351add7357e1e9ebcd1f436f317"/>    <section>
    <title>operator=()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_class_folder">Folder</link>&amp; Folder::operator= (const char * folder)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_folder_1a92aac747b89056c8dedb623529e8edec"/>    <section>
    <title>operator=()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_class_folder">Folder</link>&amp; Folder::operator= (std::string const &amp; folder)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_folder_a92aac747b89056c8dedb623529e8edec_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_folder_1ae5e74edda681a2f533aca24d7d193ac8"/>    <section>
    <title>operator==()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput>bool Folder::operator== (const char * string) const<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_folder_1a5a62f5e45280e944983bd162878cfe85"/>    <section>
    <title>operator==()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator==</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput>bool Folder::operator== (std::string const &amp; string) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_folder_a5a62f5e45280e944983bd162878cfe85_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_folder_1a2f8343d495b891134dca56a9767127cc"/>    <section>
    <title>string()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>string</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>string</secondary></indexterm>
<para><computeroutput>std::string Folder::string ( )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_folder_1a9d0e844868f8debec7d50659ef7d3507"/>    <section>
    <title>string()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>string</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>string</secondary></indexterm>
<para><computeroutput>std::string const&amp; Folder::string ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_folder_a9d0e844868f8debec7d50659ef7d3507_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_folder_1a244869fac986f183dce6b8725cdc64de"/>    <section>
    <title>m_folder</title>
<indexterm><primary>m_folder</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>m_folder</secondary></indexterm>
<para><computeroutput>std::string Folder::m_folder<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_folder_1aec34aa6cce9b8074a9892c3f7e2eb3c0"/>    <section>
    <title>m_ok</title>
<indexterm><primary>m_ok</primary><secondary>Folder</secondary></indexterm>
<indexterm><primary>Folder</primary><secondary>m_ok</secondary></indexterm>
<para><computeroutput>bool Folder::m_ok = false<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
lib/<link linkend="_files__functions_8hpp">files_functions.hpp</link></section>
</section>
