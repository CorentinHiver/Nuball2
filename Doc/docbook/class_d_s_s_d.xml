<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_d_s_s_d" xml:lang="en-US">
<title>DSSD Class Reference</title>
<indexterm><primary>DSSD</primary></indexterm>
<para>
<computeroutput>#include &lt;DSSD.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>auto const  &amp; <link linkend="_class_d_s_s_d_1a37ab599b24b18a5555f79f73ee241277">angle</link> () const</para>

<para>Don&apos;t return any angle but really the label of the ring. </para>
</listitem>
            <listitem><para>auto <link linkend="_class_d_s_s_d_1a075c89fd3226bf59dab1af979c97eb72">begin</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class_d_s_s_d_1ad4a5a45596071c4625903146f32737ff">DSSD</link> ()</para>
</listitem>
            <listitem><para>auto <link linkend="_class_d_s_s_d_1a7c150f5f5df303fee55e0d61510bf2dc">end</link> () const</para>
</listitem>
            <listitem><para>auto const  &amp; <link linkend="_class_d_s_s_d_1ad5b43b9d37891e7df30532ca29b3d19e">energy</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_class_d_s_s_d_1aeb787f13de411a3e801360d85c6ed00b">Fill</link> (<link linkend="_class_event">Event</link> const &amp;evt, int const &amp;index)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_d_s_s_d_1a46c68fcb7d0d1da868173aa028fdb4f3">oneParticle</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_class_d_s_s_d_1a020959f351a871517e9eb50f08ca7be3">Reset</link> ()</para>
</listitem>
            <listitem><para>auto <link linkend="_class_d_s_s_d_1ac2bda0d8a0742f3bd791c6b6cc1cf497">rings</link> () const</para>
</listitem>
            <listitem><para>auto <link linkend="_class_d_s_s_d_1a26c1a50b850b574ffaf0563f27416509">sectors</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_class_d_s_s_d_1adbafd9e43e099f49d3c47b8e597a8926">SetEvent</link> (<link linkend="_class_event">Event</link> const &amp;event)</para>
</listitem>
            <listitem><para>auto const  &amp; <link linkend="_class_d_s_s_d_1af76c53f9a2c3a980ea9d3f598e8afde7">time</link> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static void <link linkend="_class_d_s_s_d_1a2c9fd5c55f23797bdcf66933d7662cb1">InitialiseArrays</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>double const <link linkend="_class_d_s_s_d_1ae8a114aaa994b51924669ce17653c31a">distance</link> = 20</para>
</listitem>
            <listitem><para>double const <link linkend="_class_d_s_s_d_1a5b949d6c8743c915dc0232e8fb20b74d">innerRadius</link> = 15</para>
</listitem>
            <listitem><para>int const <link linkend="_class_d_s_s_d_1ab292ca38f24d4ab2ccfc32425ad031c9">nb_rings</link> = 16</para>
</listitem>
            <listitem><para>int const <link linkend="_class_d_s_s_d_1a958bd3cd28f311c4d60e8b19043e6fea">nb_sectors</link> = 32</para>
</listitem>
            <listitem><para>double const <link linkend="_class_d_s_s_d_1ab77212c2dba9783ac847ee8b8af70f0d">outerRadius</link> = 41</para>
</listitem>
            <listitem><para>std::vector&lt; <link linkend="_lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21">uchar</link> &gt; <link linkend="_class_d_s_s_d_1aed2a8154605b320f03d690623f9894d4">Ring_Hits</link> = std::vector&lt;<link linkend="_lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21">uchar</link>&gt;(<link linkend="_class_d_s_s_d_1ab292ca38f24d4ab2ccfc32425ad031c9">nb_rings</link>)</para>
</listitem>
            <listitem><para>double const <link linkend="_class_d_s_s_d_1a9089ebe569d7635d0ea44dfb9fdaba4e">ring_thickness</link> = (<link linkend="_class_d_s_s_d_1ab77212c2dba9783ac847ee8b8af70f0d">outerRadius</link>-<link linkend="_class_d_s_s_d_1a5b949d6c8743c915dc0232e8fb20b74d">innerRadius</link>)/<link linkend="_class_d_s_s_d_1ab292ca38f24d4ab2ccfc32425ad031c9">nb_rings</link></para>
</listitem>
            <listitem><para><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">std::size_t</link> <link linkend="_class_d_s_s_d_1a28d8b2597e7458b29c399e701f048f17">RingMult</link> = 0u</para>
</listitem>
            <listitem><para>std::vector&lt; <link linkend="_class_si_strip">SiStrip</link> &gt; <link linkend="_class_d_s_s_d_1ac2048ed45b15c5d0c9b7eb749ea40cba">Rings</link></para>
</listitem>
            <listitem><para>std::vector&lt; <link linkend="_lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21">uchar</link> &gt; <link linkend="_class_d_s_s_d_1a07ea2280b92afd2a964cc2956c85011a">Sector_Hits</link> = std::vector&lt;<link linkend="_lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21">uchar</link>&gt;(<link linkend="_class_d_s_s_d_1a958bd3cd28f311c4d60e8b19043e6fea">nb_sectors</link>)</para>
</listitem>
            <listitem><para><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">std::size_t</link> <link linkend="_class_d_s_s_d_1abfc71d4e8b153e59ffb4da0e60f91bd9">SectorMult</link> = 0u</para>
</listitem>
            <listitem><para>std::vector&lt; <link linkend="_class_si_strip">SiStrip</link> &gt; <link linkend="_class_d_s_s_d_1a0b3ccd3ac15793e4ac3037758a8c01da">Sectors</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para>static std::array&lt; <link linkend="_lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21">uchar</link>, 1000 &gt; <link linkend="_class_d_s_s_d_1adb11dca39569b2d7ef71f731354ae73c">indexes</link> = {255}</para>
</listitem>
            <listitem><para>static std::array&lt; bool, 1000 &gt; <link linkend="_class_d_s_s_d_1afeab248c862447291a003301c354feea">isRing</link> = {0}</para>
</listitem>
            <listitem><para>static std::array&lt; bool, 1000 &gt; <link linkend="_class_d_s_s_d_1aafcc60be25bd96add1fc81b67103d3a7">isS1</link> = {0}</para>
</listitem>
            <listitem><para>static std::array&lt; bool, 1000 &gt; <link linkend="_class_d_s_s_d_1a3a039862cf41c328d2d45b4e1770f943">isS2</link> = {0}</para>
</listitem>
            <listitem><para>static std::array&lt; bool, 1000 &gt; <link linkend="_class_d_s_s_d_1aaa3430553b90ea691874fe56fcb5b3db">isSector</link> = {0}</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Private Attributes    </title>
        <itemizedlist>
            <listitem><para>static bool <link linkend="_class_d_s_s_d_1a2b6c7d3c126c7a665067a5fd73e29c81">s_Initialised</link> = false</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_d_s_s_d_1ad4a5a45596071c4625903146f32737ff"/>    <section>
    <title>DSSD()</title>
<indexterm><primary>DSSD</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>DSSD</secondary></indexterm>
<para><computeroutput>DSSD::DSSD ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_d_s_s_d_ad4a5a45596071c4625903146f32737ff_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_d_s_s_d_1a37ab599b24b18a5555f79f73ee241277"/>    <section>
    <title>angle()</title>
<indexterm><primary>angle</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>angle</secondary></indexterm>
<para><computeroutput>auto const&amp; DSSD::angle ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Don&apos;t return any angle but really the label of the ring. </para>
</para>
    </section><anchor xml:id="_class_d_s_s_d_1a075c89fd3226bf59dab1af979c97eb72"/>    <section>
    <title>begin()</title>
<indexterm><primary>begin</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>begin</secondary></indexterm>
<para><computeroutput>auto DSSD::begin ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_d_s_s_d_1a7c150f5f5df303fee55e0d61510bf2dc"/>    <section>
    <title>end()</title>
<indexterm><primary>end</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>end</secondary></indexterm>
<para><computeroutput>auto DSSD::end ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_d_s_s_d_1ad5b43b9d37891e7df30532ca29b3d19e"/>    <section>
    <title>energy()</title>
<indexterm><primary>energy</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>energy</secondary></indexterm>
<para><computeroutput>auto const&amp; DSSD::energy ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_d_s_s_d_1aeb787f13de411a3e801360d85c6ed00b"/>    <section>
    <title>Fill()</title>
<indexterm><primary>Fill</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>Fill</secondary></indexterm>
<para><computeroutput>void DSSD::Fill (<link linkend="_class_event">Event</link> const &amp; evt, int const &amp; index)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_d_s_s_d_aeb787f13de411a3e801360d85c6ed00b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_d_s_s_d_aeb787f13de411a3e801360d85c6ed00b_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_d_s_s_d_1a2c9fd5c55f23797bdcf66933d7662cb1"/>    <section>
    <title>InitialiseArrays()</title>
<indexterm><primary>InitialiseArrays</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>InitialiseArrays</secondary></indexterm>
<para><computeroutput>static void DSSD::InitialiseArrays ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_d_s_s_d_a2c9fd5c55f23797bdcf66933d7662cb1_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_d_s_s_d_a2c9fd5c55f23797bdcf66933d7662cb1_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_d_s_s_d_1a46c68fcb7d0d1da868173aa028fdb4f3"/>    <section>
    <title>oneParticle()</title>
<indexterm><primary>oneParticle</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>oneParticle</secondary></indexterm>
<para><computeroutput>bool DSSD::oneParticle ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_d_s_s_d_a46c68fcb7d0d1da868173aa028fdb4f3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_d_s_s_d_1a020959f351a871517e9eb50f08ca7be3"/>    <section>
    <title>Reset()</title>
<indexterm><primary>Reset</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>Reset</secondary></indexterm>
<para><computeroutput>void DSSD::Reset ( )</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_d_s_s_d_a020959f351a871517e9eb50f08ca7be3_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_d_s_s_d_1ac2bda0d8a0742f3bd791c6b6cc1cf497"/>    <section>
    <title>rings()</title>
<indexterm><primary>rings</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>rings</secondary></indexterm>
<para><computeroutput>auto DSSD::rings ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_d_s_s_d_ac2bda0d8a0742f3bd791c6b6cc1cf497_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_d_s_s_d_1a26c1a50b850b574ffaf0563f27416509"/>    <section>
    <title>sectors()</title>
<indexterm><primary>sectors</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>sectors</secondary></indexterm>
<para><computeroutput>auto DSSD::sectors ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_d_s_s_d_a26c1a50b850b574ffaf0563f27416509_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_d_s_s_d_1adbafd9e43e099f49d3c47b8e597a8926"/>    <section>
    <title>SetEvent()</title>
<indexterm><primary>SetEvent</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>SetEvent</secondary></indexterm>
<para><computeroutput>void DSSD::SetEvent (<link linkend="_class_event">Event</link> const &amp; event)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_d_s_s_d_adbafd9e43e099f49d3c47b8e597a8926_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_d_s_s_d_1af76c53f9a2c3a980ea9d3f598e8afde7"/>    <section>
    <title>time()</title>
<indexterm><primary>time</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>time</secondary></indexterm>
<para><computeroutput>auto const&amp; DSSD::time ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_d_s_s_d_af76c53f9a2c3a980ea9d3f598e8afde7_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_d_s_s_d_1ae8a114aaa994b51924669ce17653c31a"/>    <section>
    <title>distance</title>
<indexterm><primary>distance</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>distance</secondary></indexterm>
<para><computeroutput>double const DSSD::distance = 20</computeroutput></para>    </section><anchor xml:id="_class_d_s_s_d_1adb11dca39569b2d7ef71f731354ae73c"/>    <section>
    <title>indexes</title>
<indexterm><primary>indexes</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>indexes</secondary></indexterm>
<para><computeroutput>std::array&lt; <link linkend="_lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21">uchar</link>, 1000 &gt; DSSD::indexes = {255}<computeroutput>[static]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_d_s_s_d_1a5b949d6c8743c915dc0232e8fb20b74d"/>    <section>
    <title>innerRadius</title>
<indexterm><primary>innerRadius</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>innerRadius</secondary></indexterm>
<para><computeroutput>double const DSSD::innerRadius = 15</computeroutput></para>    </section><anchor xml:id="_class_d_s_s_d_1afeab248c862447291a003301c354feea"/>    <section>
    <title>isRing</title>
<indexterm><primary>isRing</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>isRing</secondary></indexterm>
<para><computeroutput>std::array&lt; bool, 1000 &gt; DSSD::isRing = {0}<computeroutput>[static]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_d_s_s_d_1aafcc60be25bd96add1fc81b67103d3a7"/>    <section>
    <title>isS1</title>
<indexterm><primary>isS1</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>isS1</secondary></indexterm>
<para><computeroutput>std::array&lt; bool, 1000 &gt; DSSD::isS1 = {0}<computeroutput>[static]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_d_s_s_d_1a3a039862cf41c328d2d45b4e1770f943"/>    <section>
    <title>isS2</title>
<indexterm><primary>isS2</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>isS2</secondary></indexterm>
<para><computeroutput>std::array&lt; bool, 1000 &gt; DSSD::isS2 = {0}<computeroutput>[static]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_d_s_s_d_1aaa3430553b90ea691874fe56fcb5b3db"/>    <section>
    <title>isSector</title>
<indexterm><primary>isSector</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>isSector</secondary></indexterm>
<para><computeroutput>std::array&lt; bool, 1000 &gt; DSSD::isSector = {0}<computeroutput>[static]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_d_s_s_d_1ab292ca38f24d4ab2ccfc32425ad031c9"/>    <section>
    <title>nb_rings</title>
<indexterm><primary>nb_rings</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>nb_rings</secondary></indexterm>
<para><computeroutput>int const DSSD::nb_rings = 16</computeroutput></para>    </section><anchor xml:id="_class_d_s_s_d_1a958bd3cd28f311c4d60e8b19043e6fea"/>    <section>
    <title>nb_sectors</title>
<indexterm><primary>nb_sectors</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>nb_sectors</secondary></indexterm>
<para><computeroutput>int const DSSD::nb_sectors = 32</computeroutput></para>    </section><anchor xml:id="_class_d_s_s_d_1ab77212c2dba9783ac847ee8b8af70f0d"/>    <section>
    <title>outerRadius</title>
<indexterm><primary>outerRadius</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>outerRadius</secondary></indexterm>
<para><computeroutput>double const DSSD::outerRadius = 41</computeroutput></para>    </section><anchor xml:id="_class_d_s_s_d_1aed2a8154605b320f03d690623f9894d4"/>    <section>
    <title>Ring_Hits</title>
<indexterm><primary>Ring_Hits</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>Ring_Hits</secondary></indexterm>
<para><computeroutput>std::vector&lt;<link linkend="_lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21">uchar</link>&gt; DSSD::Ring_Hits = std::vector&lt;<link linkend="_lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21">uchar</link>&gt;(<link linkend="_class_d_s_s_d_1ab292ca38f24d4ab2ccfc32425ad031c9">nb_rings</link>)</computeroutput></para>    </section><anchor xml:id="_class_d_s_s_d_1a9089ebe569d7635d0ea44dfb9fdaba4e"/>    <section>
    <title>ring_thickness</title>
<indexterm><primary>ring_thickness</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>ring_thickness</secondary></indexterm>
<para><computeroutput>double const DSSD::ring_thickness = (<link linkend="_class_d_s_s_d_1ab77212c2dba9783ac847ee8b8af70f0d">outerRadius</link>-<link linkend="_class_d_s_s_d_1a5b949d6c8743c915dc0232e8fb20b74d">innerRadius</link>)/<link linkend="_class_d_s_s_d_1ab292ca38f24d4ab2ccfc32425ad031c9">nb_rings</link></computeroutput></para>    </section><anchor xml:id="_class_d_s_s_d_1a28d8b2597e7458b29c399e701f048f17"/>    <section>
    <title>RingMult</title>
<indexterm><primary>RingMult</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>RingMult</secondary></indexterm>
<para><computeroutput><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">std::size_t</link> DSSD::RingMult = 0u</computeroutput></para>    </section><anchor xml:id="_class_d_s_s_d_1ac2048ed45b15c5d0c9b7eb749ea40cba"/>    <section>
    <title>Rings</title>
<indexterm><primary>Rings</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>Rings</secondary></indexterm>
<para><computeroutput>std::vector&lt;<link linkend="_class_si_strip">SiStrip</link>&gt; DSSD::Rings</computeroutput></para>    </section><anchor xml:id="_class_d_s_s_d_1a2b6c7d3c126c7a665067a5fd73e29c81"/>    <section>
    <title>s_Initialised</title>
<indexterm><primary>s_Initialised</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>s_Initialised</secondary></indexterm>
<para><computeroutput>bool DSSD::s_Initialised = false<computeroutput>[static]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_d_s_s_d_1a07ea2280b92afd2a964cc2956c85011a"/>    <section>
    <title>Sector_Hits</title>
<indexterm><primary>Sector_Hits</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>Sector_Hits</secondary></indexterm>
<para><computeroutput>std::vector&lt;<link linkend="_lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21">uchar</link>&gt; DSSD::Sector_Hits = std::vector&lt;<link linkend="_lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21">uchar</link>&gt;(<link linkend="_class_d_s_s_d_1a958bd3cd28f311c4d60e8b19043e6fea">nb_sectors</link>)</computeroutput></para>    </section><anchor xml:id="_class_d_s_s_d_1abfc71d4e8b153e59ffb4da0e60f91bd9"/>    <section>
    <title>SectorMult</title>
<indexterm><primary>SectorMult</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>SectorMult</secondary></indexterm>
<para><computeroutput><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">std::size_t</link> DSSD::SectorMult = 0u</computeroutput></para>    </section><anchor xml:id="_class_d_s_s_d_1a0b3ccd3ac15793e4ac3037758a8c01da"/>    <section>
    <title>Sectors</title>
<indexterm><primary>Sectors</primary><secondary>DSSD</secondary></indexterm>
<indexterm><primary>DSSD</primary><secondary>Sectors</secondary></indexterm>
<para><computeroutput>std::vector&lt;<link linkend="_class_si_strip">SiStrip</link>&gt; DSSD::Sectors</computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
lib/Analyse/<link linkend="__d_s_s_d_8hpp">DSSD.hpp</link></section>
</section>
