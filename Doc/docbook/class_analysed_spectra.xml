<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_analysed_spectra" xml:lang="en-US">
<title>AnalysedSpectra Class Reference</title>
<indexterm><primary>AnalysedSpectra</primary></indexterm>
<para>

<para>Allows one to select which peaks to fit on a spectra. </para>
 
</para>
<para>
<computeroutput>#include &lt;AnalysedSpectra.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_analysed_spectra_1a7f9cc3de0ad2c0e6bf3963881253d6ed">AnalysedSpectra</link> () noexcept=default</para>
</listitem>
            <listitem><para><link linkend="_class_analysed_spectra_1a16ef19c7181b68c3e942895f79e9ea4f">AnalysedSpectra</link> (TH1F *histo) noexcept</para>
</listitem>
            <listitem><para>void <link linkend="_class_analysed_spectra_1aa6f0263d9827ce94c3c9e273c72182c8">autoCanvas</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_analysed_spectra_1aacaab750a4de40051e75424b77948128">cd</link> (TVirtualPad *vpad)</para>
</listitem>
            <listitem><para>void <link linkend="_class_analysed_spectra_1aa810982a33acfa30e512aa45da4461ce">choosePeaks</link> (std::vector&lt; double &gt; const &amp;peaks)</para>
</listitem>
            <listitem><para>void <link linkend="_class_analysed_spectra_1ab4f59dc04de64bdcd8e3c2c5038e0e42">clearPeaks</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_fitted_peak">FittedPeak</link> &amp; <link linkend="_class_analysed_spectra_1a14412f4f3f9b11bf5206be1f586f2560">fitPeak</link> (double const &amp;peaks, bool const &amp;adjustRange=false)</para>
</listitem>
            <listitem><para>std::vector&lt; <link linkend="_class_fitted_peak">FittedPeak</link> &gt; &amp; <link linkend="_class_analysed_spectra_1aa62448f275c4787703e7d77a38dd421a">fitPeaks</link> (std::vector&lt; double &gt; peaks, bool const &amp;adjustRange=false)</para>
</listitem>
            <listitem><para>auto <link linkend="_class_analysed_spectra_1ae9556cbcfc68bf2ba3bebe13967db262">getCanvas</link> ()</para>
</listitem>
            <listitem><para>auto const <link linkend="_class_analysed_spectra_1ab6b1800aa0df04c31298a266f6b59a61">getCanvas</link> () const</para>
</listitem>
            <listitem><para>auto const  &amp; <link linkend="_class_analysed_spectra_1a902f2eb384247213806564ef3d7a6633">getPeaks</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_class_analysed_spectra_1a17f98f42b34ad243753fd19ebcebccd4">load</link> (TH1F *const histo)</para>
</listitem>
            <listitem><para>auto <link linkend="_class_analysed_spectra_1aa61bc91f3ba8c5e823b944abd4aa5f9c">operator-&gt;</link> ()</para>
</listitem>
            <listitem><para>double <link linkend="_class_analysed_spectra_1abb27cafac273c5eb490eeb17596a60a1">selectX</link> (std::string const &amp;instructions)</para>
</listitem>
            <listitem><para>void <link linkend="_class_analysed_spectra_1a1b69d2bc2625934b9c32c41a79de97c0">setChannelsPerBin</link> (double const &amp;cpb)</para>
</listitem>
            <listitem><para>void <link linkend="_class_analysed_spectra_1ae92f07fb00cfde10fe5188eb3f03c71a">setKevPerBin</link> (double const &amp;kpb)</para>
</listitem>
            <listitem><para>void <link linkend="_class_analysed_spectra_1af994d86175a786fe145723a9ca63459b">setMaximumRange</link> (double const &amp;_max)</para>
</listitem>
            <listitem><para>void <link linkend="_class_analysed_spectra_1ab89922675c823b0d01b9a33a85863dae">setMinimumRange</link> (double const &amp;_min)</para>
</listitem>
            <listitem><para>void <link linkend="_class_analysed_spectra_1a884875b22bde2d29d22b41924e18e09d">setRatioRange</link> (double const &amp;min, double const &amp;max)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>std::string <link linkend="_class_analysed_spectra_1a01a3d249379ee0e0d805550ce7d85e58">detector</link> = &quot;PARIS&quot;</para>
</listitem>
            <listitem><para>double <link linkend="_class_analysed_spectra_1ad8c7e6a0110fdae413b9bd47ae9bb8e7">m_apb</link> = 1</para>
</listitem>
            <listitem><para>TH1F * <link linkend="_class_analysed_spectra_1a0a8e8cfab11155dbea0a8d52a0d32983">m_histo</link> = nullptr</para>
</listitem>
            <listitem><para>double <link linkend="_class_analysed_spectra_1a298930c6c6d3ff9c242fb0e4c006b87f">m_kpb</link> = 1</para>
</listitem>
            <listitem><para>TPad * <link linkend="_class_analysed_spectra_1a8381935ad5c99df237ef5749dfb20523">m_pad</link> = nullptr</para>
</listitem>
            <listitem><para>std::vector&lt; <link linkend="_class_fitted_peak">FittedPeak</link> &gt; <link linkend="_class_analysed_spectra_1a1dcb01de4dee7488240dbe8bfd586061">m_peaks</link></para>
</listitem>
            <listitem><para>double <link linkend="_class_analysed_spectra_1ade8353a5064a3e891165ea2922c55f5c">range_max</link> = 0</para>
</listitem>
            <listitem><para>double <link linkend="_class_analysed_spectra_1aaef1cb033207e3c99fb77d02ce1375cb">range_min</link> = 0</para>
</listitem>
            <listitem><para>double <link linkend="_class_analysed_spectra_1aca7013d58146ed540c6ade244166b226">ratio_range_max</link> = 1.25</para>
</listitem>
            <listitem><para>double <link linkend="_class_analysed_spectra_1afe6370bcf60d5d986f7da79e5228f014">ratio_range_min</link> = 0.75</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Allows one to select which peaks to fit on a spectra. </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_analysed_spectra_1a7f9cc3de0ad2c0e6bf3963881253d6ed"/>    <section>
    <title>AnalysedSpectra()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>AnalysedSpectra</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>AnalysedSpectra</secondary></indexterm>
<para><computeroutput>AnalysedSpectra::AnalysedSpectra ( )<computeroutput>[default]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_analysed_spectra_1a16ef19c7181b68c3e942895f79e9ea4f"/>    <section>
    <title>AnalysedSpectra()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>AnalysedSpectra</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>AnalysedSpectra</secondary></indexterm>
<para><computeroutput>AnalysedSpectra::AnalysedSpectra (TH1F * histo)<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_analysed_spectra_1aa6f0263d9827ce94c3c9e273c72182c8"/>    <section>
    <title>autoCanvas()</title>
<indexterm><primary>autoCanvas</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>autoCanvas</secondary></indexterm>
<para><computeroutput>void AnalysedSpectra::autoCanvas ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_analysed_spectra_aa6f0263d9827ce94c3c9e273c72182c8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_analysed_spectra_aa6f0263d9827ce94c3c9e273c72182c8_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_analysed_spectra_1aacaab750a4de40051e75424b77948128"/>    <section>
    <title>cd()</title>
<indexterm><primary>cd</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>cd</secondary></indexterm>
<para><computeroutput>void AnalysedSpectra::cd (TVirtualPad * vpad)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_analysed_spectra_aacaab750a4de40051e75424b77948128_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_analysed_spectra_1aa810982a33acfa30e512aa45da4461ce"/>    <section>
    <title>choosePeaks()</title>
<indexterm><primary>choosePeaks</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>choosePeaks</secondary></indexterm>
<para><computeroutput>void AnalysedSpectra::choosePeaks (std::vector&lt; double &gt; const &amp; peaks)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_analysed_spectra_aa810982a33acfa30e512aa45da4461ce_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_analysed_spectra_1ab4f59dc04de64bdcd8e3c2c5038e0e42"/>    <section>
    <title>clearPeaks()</title>
<indexterm><primary>clearPeaks</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>clearPeaks</secondary></indexterm>
<para><computeroutput>void AnalysedSpectra::clearPeaks ( )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_analysed_spectra_1a14412f4f3f9b11bf5206be1f586f2560"/>    <section>
    <title>fitPeak()</title>
<indexterm><primary>fitPeak</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>fitPeak</secondary></indexterm>
<para><computeroutput><link linkend="_class_fitted_peak">FittedPeak</link> &amp; AnalysedSpectra::fitPeak (double const &amp; peaks, bool const &amp; adjustRange = <computeroutput>false</computeroutput>
)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_analysed_spectra_a14412f4f3f9b11bf5206be1f586f2560_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_analysed_spectra_1aa62448f275c4787703e7d77a38dd421a"/>    <section>
    <title>fitPeaks()</title>
<indexterm><primary>fitPeaks</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>fitPeaks</secondary></indexterm>
<para><computeroutput>std::vector&lt; <link linkend="_class_fitted_peak">FittedPeak</link> &gt; &amp; AnalysedSpectra::fitPeaks (std::vector&lt; double &gt; peaks, bool const &amp; adjustRange = <computeroutput>false</computeroutput>
)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_analysed_spectra_aa62448f275c4787703e7d77a38dd421a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_analysed_spectra_1ae9556cbcfc68bf2ba3bebe13967db262"/>    <section>
    <title>getCanvas()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>getCanvas</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>getCanvas</secondary></indexterm>
<para><computeroutput>auto AnalysedSpectra::getCanvas ( )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_analysed_spectra_1ab6b1800aa0df04c31298a266f6b59a61"/>    <section>
    <title>getCanvas()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>getCanvas</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>getCanvas</secondary></indexterm>
<para><computeroutput>auto const AnalysedSpectra::getCanvas ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_analysed_spectra_1a902f2eb384247213806564ef3d7a6633"/>    <section>
    <title>getPeaks()</title>
<indexterm><primary>getPeaks</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>getPeaks</secondary></indexterm>
<para><computeroutput>auto const&amp; AnalysedSpectra::getPeaks ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_analysed_spectra_a902f2eb384247213806564ef3d7a6633_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_analysed_spectra_1a17f98f42b34ad243753fd19ebcebccd4"/>    <section>
    <title>load()</title>
<indexterm><primary>load</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>load</secondary></indexterm>
<para><computeroutput>void AnalysedSpectra::load (TH1F *const histo)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_analysed_spectra_1aa61bc91f3ba8c5e823b944abd4aa5f9c"/>    <section>
    <title>operator-&gt;()</title>
<indexterm><primary>operator-&gt;</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>operator-&gt;</secondary></indexterm>
<para><computeroutput>auto AnalysedSpectra::operator-&gt; ( )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_analysed_spectra_1abb27cafac273c5eb490eeb17596a60a1"/>    <section>
    <title>selectX()</title>
<indexterm><primary>selectX</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>selectX</secondary></indexterm>
<para><computeroutput>double AnalysedSpectra::selectX (std::string const &amp; instructions)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_analysed_spectra_abb27cafac273c5eb490eeb17596a60a1_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_analysed_spectra_abb27cafac273c5eb490eeb17596a60a1_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_analysed_spectra_1a1b69d2bc2625934b9c32c41a79de97c0"/>    <section>
    <title>setChannelsPerBin()</title>
<indexterm><primary>setChannelsPerBin</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>setChannelsPerBin</secondary></indexterm>
<para><computeroutput>void AnalysedSpectra::setChannelsPerBin (double const &amp; cpb)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_analysed_spectra_1ae92f07fb00cfde10fe5188eb3f03c71a"/>    <section>
    <title>setKevPerBin()</title>
<indexterm><primary>setKevPerBin</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>setKevPerBin</secondary></indexterm>
<para><computeroutput>void AnalysedSpectra::setKevPerBin (double const &amp; kpb)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_analysed_spectra_1af994d86175a786fe145723a9ca63459b"/>    <section>
    <title>setMaximumRange()</title>
<indexterm><primary>setMaximumRange</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>setMaximumRange</secondary></indexterm>
<para><computeroutput>void AnalysedSpectra::setMaximumRange (double const &amp; _max)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_analysed_spectra_af994d86175a786fe145723a9ca63459b_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_analysed_spectra_1ab89922675c823b0d01b9a33a85863dae"/>    <section>
    <title>setMinimumRange()</title>
<indexterm><primary>setMinimumRange</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>setMinimumRange</secondary></indexterm>
<para><computeroutput>void AnalysedSpectra::setMinimumRange (double const &amp; _min)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_analysed_spectra_ab89922675c823b0d01b9a33a85863dae_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_analysed_spectra_1a884875b22bde2d29d22b41924e18e09d"/>    <section>
    <title>setRatioRange()</title>
<indexterm><primary>setRatioRange</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>setRatioRange</secondary></indexterm>
<para><computeroutput>void AnalysedSpectra::setRatioRange (double const &amp; min, double const &amp; max)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_analysed_spectra_1a01a3d249379ee0e0d805550ce7d85e58"/>    <section>
    <title>detector</title>
<indexterm><primary>detector</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>detector</secondary></indexterm>
<para><computeroutput>std::string AnalysedSpectra::detector = &quot;PARIS&quot;<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_analysed_spectra_1ad8c7e6a0110fdae413b9bd47ae9bb8e7"/>    <section>
    <title>m_apb</title>
<indexterm><primary>m_apb</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>m_apb</secondary></indexterm>
<para><computeroutput>double AnalysedSpectra::m_apb = 1<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_analysed_spectra_1a0a8e8cfab11155dbea0a8d52a0d32983"/>    <section>
    <title>m_histo</title>
<indexterm><primary>m_histo</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>m_histo</secondary></indexterm>
<para><computeroutput>TH1F* AnalysedSpectra::m_histo = nullptr<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_analysed_spectra_1a298930c6c6d3ff9c242fb0e4c006b87f"/>    <section>
    <title>m_kpb</title>
<indexterm><primary>m_kpb</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>m_kpb</secondary></indexterm>
<para><computeroutput>double AnalysedSpectra::m_kpb = 1<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_analysed_spectra_1a8381935ad5c99df237ef5749dfb20523"/>    <section>
    <title>m_pad</title>
<indexterm><primary>m_pad</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>m_pad</secondary></indexterm>
<para><computeroutput>TPad* AnalysedSpectra::m_pad = nullptr<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_analysed_spectra_1a1dcb01de4dee7488240dbe8bfd586061"/>    <section>
    <title>m_peaks</title>
<indexterm><primary>m_peaks</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>m_peaks</secondary></indexterm>
<para><computeroutput>std::vector&lt;<link linkend="_class_fitted_peak">FittedPeak</link>&gt; AnalysedSpectra::m_peaks<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_analysed_spectra_1ade8353a5064a3e891165ea2922c55f5c"/>    <section>
    <title>range_max</title>
<indexterm><primary>range_max</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>range_max</secondary></indexterm>
<para><computeroutput>double AnalysedSpectra::range_max = 0<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_analysed_spectra_1aaef1cb033207e3c99fb77d02ce1375cb"/>    <section>
    <title>range_min</title>
<indexterm><primary>range_min</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>range_min</secondary></indexterm>
<para><computeroutput>double AnalysedSpectra::range_min = 0<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_analysed_spectra_1aca7013d58146ed540c6ade244166b226"/>    <section>
    <title>ratio_range_max</title>
<indexterm><primary>ratio_range_max</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>ratio_range_max</secondary></indexterm>
<para><computeroutput>double AnalysedSpectra::ratio_range_max = 1.25<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_analysed_spectra_1afe6370bcf60d5d986f7da79e5228f014"/>    <section>
    <title>ratio_range_min</title>
<indexterm><primary>ratio_range_min</primary><secondary>AnalysedSpectra</secondary></indexterm>
<indexterm><primary>AnalysedSpectra</primary><secondary>ratio_range_min</secondary></indexterm>
<para><computeroutput>double AnalysedSpectra::ratio_range_min = 0.75<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
lib/Analyse/<link linkend="__analysed_spectra_8hpp">AnalysedSpectra.hpp</link></section>
</section>
