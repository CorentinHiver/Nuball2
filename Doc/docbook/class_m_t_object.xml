<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_m_t_object" xml:lang="en-US">
<title>MTObject Class Reference</title>
<indexterm><primary>MTObject</primary></indexterm>
<para>
<computeroutput>#include &lt;MTObject.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_m_t_object_1a12856506adc231bafc0983c881c3fe36">MTObject</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_m_t_object_1a813cbf27a03a3b334ebc9faec99a5158">MTObject</link> (<link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> &amp;_nb_threads)</para>
</listitem>
            <listitem><para><link linkend="_class_m_t_object_1a048c52b4b15fc13667559a5b07d71002">operator bool</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static void <link linkend="_class_m_t_object_1ac76ab61815b5c3a471e6c210b7ba1913">adjustThreadsNumber</link> (<link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> const &amp;limiting_number, std::string const &amp;print_if_limit_reached=&quot;&quot;)</para>
</listitem>
            <listitem><para>static auto const  &amp; <link linkend="_class_m_t_object_1a9c9a57a49a12e1d408a5354e8520b3fe">getThreadIndex</link> ()</para>
</listitem>
            <listitem><para>static auto const  &amp; <link linkend="_class_m_t_object_1ac97399bb34f766e41e7f9a1cd1b7eb7a">getThreadsNb</link> ()</para>
</listitem>
            <listitem><para>static auto const  &amp; <link linkend="_class_m_t_object_1ad156f9b1c68f0e2713abb16890b1fa15">getThreadsNumber</link> ()</para>
</listitem>
            <listitem><para>static auto const  &amp; <link linkend="_class_m_t_object_1af752e86ec494c50d1af7e6442c09733b">index</link> ()</para>
</listitem>
            <listitem><para>static void <link linkend="_class_m_t_object_1aaa3623d88deae3a9311aad39bfff49dc">Initialize</link> ()</para>
</listitem>
            <listitem><para>static void <link linkend="_class_m_t_object_1aaa5354a0915c26979a49d54f36019df1">Initialize</link> (<link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> const &amp;_nb_threads, bool force=false)</para>
</listitem>
            <listitem><para>static bool <link linkend="_class_m_t_object_1a3350577ca839e2abdcd4d6f6449a1408">isMasterThread</link> ()</para>
</listitem>
            <listitem><para>template&lt;class Func , class... ARGS&gt; </para><para>static void <link linkend="_class_m_t_object_1a35c02650eb403bd54e867f93bb26fc47">parallelise_function</link> (Func &amp;&amp;func, ARGS &amp;&amp;... args)</para>
</listitem>
            <listitem><para>static void <link linkend="_class_m_t_object_1a872d9518e0a1936df8e70a2dae303f4f">setThreadsNb</link> (int const &amp;n, bool force=false)</para>
</listitem>
            <listitem><para>static void <link linkend="_class_m_t_object_1a8f91c9269a027d1770d7bae3b6d599a5">setThreadsNb</link> (<link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> const &amp;n, bool force=false)</para>

<para>Sets the number of threads. </para>
</listitem>
            <listitem><para>static void <link linkend="_class_m_t_object_1a8b70d4506ed556d5ca4c23703a80ddb6">setThreadsNumber</link> (<link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> const &amp;n, bool force=false)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para>static std::mutex <link linkend="_class_m_t_object_1a79d86fbc8837ba0f9a4cd1405fddef1c">mutex</link></para>
</listitem>
            <listitem><para>static <link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> <link linkend="_class_m_t_object_1a1c2b3cb0cdccca46c8ebba009503ac88">nb_threads</link> = 1</para>
</listitem>
            <listitem><para>static bool <link linkend="_class_m_t_object_1a6fe86ce1ea64ede7e695490bceb264a3">ON</link> = false</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Private Attributes    </title>
        <itemizedlist>
            <listitem><para>static thread_local <link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> <link linkend="_class_m_t_object_1ac9efab6b9d255529611a250e91779a48">m_thread_index</link> = 0</para>
</listitem>
            <listitem><para>static std::vector&lt; std::thread &gt; <link linkend="_class_m_t_object_1abf0f47fe00f785c060ba2ec35df9819d">m_threads</link></para>
</listitem>
            <listitem><para>static std::thread::id <link linkend="_class_m_t_object_1a16983b3e7be4853da5f32145342fc6b0">master_thread_id</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_m_t_object_1a12856506adc231bafc0983c881c3fe36"/>    <section>
    <title>MTObject()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>MTObject</primary><secondary>MTObject</secondary></indexterm>
<indexterm><primary>MTObject</primary><secondary>MTObject</secondary></indexterm>
<para><computeroutput>MTObject::MTObject ( )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_m_t_object_1a813cbf27a03a3b334ebc9faec99a5158"/>    <section>
    <title>MTObject()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>MTObject</primary><secondary>MTObject</secondary></indexterm>
<indexterm><primary>MTObject</primary><secondary>MTObject</secondary></indexterm>
<para><computeroutput>MTObject::MTObject (<link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> &amp; _nb_threads)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_m_t_object_a813cbf27a03a3b334ebc9faec99a5158_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_m_t_object_1ac76ab61815b5c3a471e6c210b7ba1913"/>    <section>
    <title>adjustThreadsNumber()</title>
<indexterm><primary>adjustThreadsNumber</primary><secondary>MTObject</secondary></indexterm>
<indexterm><primary>MTObject</primary><secondary>adjustThreadsNumber</secondary></indexterm>
<para><computeroutput>static void MTObject::adjustThreadsNumber (<link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> const &amp; limiting_number, std::string const &amp; print_if_limit_reached = <computeroutput>&quot;&quot;</computeroutput>
)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_m_t_object_ac76ab61815b5c3a471e6c210b7ba1913_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_m_t_object_1a9c9a57a49a12e1d408a5354e8520b3fe"/>    <section>
    <title>getThreadIndex()</title>
<indexterm><primary>getThreadIndex</primary><secondary>MTObject</secondary></indexterm>
<indexterm><primary>MTObject</primary><secondary>getThreadIndex</secondary></indexterm>
<para><computeroutput>static auto const&amp; MTObject::getThreadIndex ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_m_t_object_a9c9a57a49a12e1d408a5354e8520b3fe_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_m_t_object_1ac97399bb34f766e41e7f9a1cd1b7eb7a"/>    <section>
    <title>getThreadsNb()</title>
<indexterm><primary>getThreadsNb</primary><secondary>MTObject</secondary></indexterm>
<indexterm><primary>MTObject</primary><secondary>getThreadsNb</secondary></indexterm>
<para><computeroutput>static auto const&amp; MTObject::getThreadsNb ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_m_t_object_ac97399bb34f766e41e7f9a1cd1b7eb7a_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_m_t_object_1ad156f9b1c68f0e2713abb16890b1fa15"/>    <section>
    <title>getThreadsNumber()</title>
<indexterm><primary>getThreadsNumber</primary><secondary>MTObject</secondary></indexterm>
<indexterm><primary>MTObject</primary><secondary>getThreadsNumber</secondary></indexterm>
<para><computeroutput>static auto const&amp; MTObject::getThreadsNumber ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_m_t_object_ad156f9b1c68f0e2713abb16890b1fa15_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_m_t_object_1af752e86ec494c50d1af7e6442c09733b"/>    <section>
    <title>index()</title>
<indexterm><primary>index</primary><secondary>MTObject</secondary></indexterm>
<indexterm><primary>MTObject</primary><secondary>index</secondary></indexterm>
<para><computeroutput>static auto const&amp; MTObject::index ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_m_t_object_1aaa3623d88deae3a9311aad39bfff49dc"/>    <section>
    <title>Initialize()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Initialize</primary><secondary>MTObject</secondary></indexterm>
<indexterm><primary>MTObject</primary><secondary>Initialize</secondary></indexterm>
<para><computeroutput>static void MTObject::Initialize ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_m_t_object_aaa3623d88deae3a9311aad39bfff49dc_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_m_t_object_aaa3623d88deae3a9311aad39bfff49dc_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_m_t_object_1aaa5354a0915c26979a49d54f36019df1"/>    <section>
    <title>Initialize()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Initialize</primary><secondary>MTObject</secondary></indexterm>
<indexterm><primary>MTObject</primary><secondary>Initialize</secondary></indexterm>
<para><computeroutput>static void MTObject::Initialize (<link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> const &amp; _nb_threads, bool force = <computeroutput>false</computeroutput>
)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_m_t_object_aaa5354a0915c26979a49d54f36019df1_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_m_t_object_1a3350577ca839e2abdcd4d6f6449a1408"/>    <section>
    <title>isMasterThread()</title>
<indexterm><primary>isMasterThread</primary><secondary>MTObject</secondary></indexterm>
<indexterm><primary>MTObject</primary><secondary>isMasterThread</secondary></indexterm>
<para><computeroutput>static bool MTObject::isMasterThread ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_m_t_object_a3350577ca839e2abdcd4d6f6449a1408_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_m_t_object_1a048c52b4b15fc13667559a5b07d71002"/>    <section>
    <title>operator bool()</title>
<indexterm><primary>operator bool</primary><secondary>MTObject</secondary></indexterm>
<indexterm><primary>MTObject</primary><secondary>operator bool</secondary></indexterm>
<para><computeroutput>MTObject::operator bool ( )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_m_t_object_1a35c02650eb403bd54e867f93bb26fc47"/>    <section>
    <title>parallelise_function()</title>
<indexterm><primary>parallelise_function</primary><secondary>MTObject</secondary></indexterm>
<indexterm><primary>MTObject</primary><secondary>parallelise_function</secondary></indexterm>
<computeroutput>template&lt;class Func , class... ARGS&gt; </computeroutput><para><computeroutput>static void MTObject::parallelise_function (Func &amp;&amp; func, ARGS &amp;&amp;... args)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_m_t_object_a35c02650eb403bd54e867f93bb26fc47_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_m_t_object_a35c02650eb403bd54e867f93bb26fc47_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_m_t_object_1a872d9518e0a1936df8e70a2dae303f4f"/>    <section>
    <title>setThreadsNb()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>setThreadsNb</primary><secondary>MTObject</secondary></indexterm>
<indexterm><primary>MTObject</primary><secondary>setThreadsNb</secondary></indexterm>
<para><computeroutput>static void MTObject::setThreadsNb (int const &amp; n, bool force = <computeroutput>false</computeroutput>
)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_m_t_object_a872d9518e0a1936df8e70a2dae303f4f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_m_t_object_a872d9518e0a1936df8e70a2dae303f4f_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_m_t_object_1a8f91c9269a027d1770d7bae3b6d599a5"/>    <section>
    <title>setThreadsNb()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>setThreadsNb</primary><secondary>MTObject</secondary></indexterm>
<indexterm><primary>MTObject</primary><secondary>setThreadsNb</secondary></indexterm>
<para><computeroutput>static void MTObject::setThreadsNb (<link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> const &amp; n, bool force = <computeroutput>false</computeroutput>
)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para><para>

<para>Sets the number of threads. </para>
</para>

<para>Check the number of threads. Usually, over 75% of cores is the optimal. Set force parameter to true if you want to use all the cores </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_m_t_object_a8f91c9269a027d1770d7bae3b6d599a5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_m_t_object_1a8b70d4506ed556d5ca4c23703a80ddb6"/>    <section>
    <title>setThreadsNumber()</title>
<indexterm><primary>setThreadsNumber</primary><secondary>MTObject</secondary></indexterm>
<indexterm><primary>MTObject</primary><secondary>setThreadsNumber</secondary></indexterm>
<para><computeroutput>static void MTObject::setThreadsNumber (<link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> const &amp; n, bool force = <computeroutput>false</computeroutput>
)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_m_t_object_a8b70d4506ed556d5ca4c23703a80ddb6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_m_t_object_1ac9efab6b9d255529611a250e91779a48"/>    <section>
    <title>m_thread_index</title>
<indexterm><primary>m_thread_index</primary><secondary>MTObject</secondary></indexterm>
<indexterm><primary>MTObject</primary><secondary>m_thread_index</secondary></indexterm>
<para><computeroutput>thread_local <link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> MTObject::m_thread_index = 0<computeroutput>[static]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_m_t_object_1abf0f47fe00f785c060ba2ec35df9819d"/>    <section>
    <title>m_threads</title>
<indexterm><primary>m_threads</primary><secondary>MTObject</secondary></indexterm>
<indexterm><primary>MTObject</primary><secondary>m_threads</secondary></indexterm>
<para><computeroutput>std::vector&lt; std::thread &gt; MTObject::m_threads<computeroutput>[static]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_m_t_object_1a16983b3e7be4853da5f32145342fc6b0"/>    <section>
    <title>master_thread_id</title>
<indexterm><primary>master_thread_id</primary><secondary>MTObject</secondary></indexterm>
<indexterm><primary>MTObject</primary><secondary>master_thread_id</secondary></indexterm>
<para><computeroutput>std::thread::id MTObject::master_thread_id<computeroutput>[static]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_m_t_object_1a79d86fbc8837ba0f9a4cd1405fddef1c"/>    <section>
    <title>mutex</title>
<indexterm><primary>mutex</primary><secondary>MTObject</secondary></indexterm>
<indexterm><primary>MTObject</primary><secondary>mutex</secondary></indexterm>
<para><computeroutput>std::mutex MTObject::mutex<computeroutput>[static]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_m_t_object_1a1c2b3cb0cdccca46c8ebba009503ac88"/>    <section>
    <title>nb_threads</title>
<indexterm><primary>nb_threads</primary><secondary>MTObject</secondary></indexterm>
<indexterm><primary>MTObject</primary><secondary>nb_threads</secondary></indexterm>
<para><computeroutput><link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> MTObject::nb_threads = 1<computeroutput>[static]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_m_t_object_1a6fe86ce1ea64ede7e695490bceb264a3"/>    <section>
    <title>ON</title>
<indexterm><primary>ON</primary><secondary>MTObject</secondary></indexterm>
<indexterm><primary>MTObject</primary><secondary>ON</secondary></indexterm>
<para><computeroutput>bool MTObject::ON = false<computeroutput>[static]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
lib/MTObjects/<link linkend="__m_t_object_8hpp">MTObject.hpp</link></section>
</section>
