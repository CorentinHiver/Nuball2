<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_gate__t" xml:lang="en-US">
<title>Gate_t&lt; T &gt; Class Template Reference</title>
<indexterm><primary>Gate_t&lt; T &gt;</primary></indexterm>
<para>

<para>Convenient gate class. </para>
 
</para>
<para>
<computeroutput>#include &lt;Gate.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_gate__t_1ad0a2a66e0b675d9b7548e1ee2c821912">Gate_t</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_gate__t_1ad0002de40542bcf95966df6b3193b98b">Gate_t</link> (std::Initialiser_list&lt; T &gt; inputs)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_gate__t_1a6ece805d91b1c54d4b84cc36e652bc0f">isIn</link> (T const &amp;e)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_gate__t_1ae9d46dcc1612852d610d153dbdb2e543">operator()</link> (T const &amp;e)</para>
</listitem>
            <listitem><para>void <link linkend="_class_gate__t_1a5970841a2974301d638fa215a2e1b136">operator=</link> (<link linkend="_class_gate__t">Gate_t</link> const &amp;timegate)</para>
</listitem>
            <listitem><para>void <link linkend="_class_gate__t_1ab746fcf7141d6ad21d142e57e052ff6f">operator=</link> (std::pair&lt; T, T &gt; const &amp;gate)</para>
</listitem>
            <listitem><para>void <link linkend="_class_gate__t_1afc3fa31b695acb0407ee6ea2cad637c2">use</link> (bool const &amp;_use=true)</para>
</listitem>
            <listitem><para>bool const  &amp; <link linkend="_class_gate__t_1a038ec18fa86466548ad20abf05f63115">used</link> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>T <link linkend="_class_gate__t_1a1c49ae7aa44c27b9357e718432c2f93a">start</link> = 0.</para>
</listitem>
            <listitem><para>T <link linkend="_class_gate__t_1aa48ef2734b80f70fbbd37f2760e18724">stop</link> = 0.</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_class_gate__t_1a793714954181bacd4564a3a866a3d1db">m_use</link> = false</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename T&gt;
class Gate_t&lt; T &gt;</title></simplesect>


<para>Convenient gate class. </para>



<para>
                <formalpara>
                    <title>
Template Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>T</entry>
                                <entry>
<para>Type of the data </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_gate__t_1ad0a2a66e0b675d9b7548e1ee2c821912"/>    <section>
    <title>Gate_t()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Gate_t</primary><secondary>Gate_t&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Gate_t&lt; T &gt;</primary><secondary>Gate_t</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_class_gate__t">Gate_t</link>&lt; T &gt;::<link linkend="_class_gate__t">Gate_t</link> ( )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_gate__t_1ad0002de40542bcf95966df6b3193b98b"/>    <section>
    <title>Gate_t()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Gate_t</primary><secondary>Gate_t&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Gate_t&lt; T &gt;</primary><secondary>Gate_t</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput><link linkend="_class_gate__t">Gate_t</link>&lt; T &gt;::<link linkend="_class_gate__t">Gate_t</link> (std::Initialiser_list&lt; T &gt; inputs)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_gate__t_1a6ece805d91b1c54d4b84cc36e652bc0f"/>    <section>
    <title>isIn()</title>
<indexterm><primary>isIn</primary><secondary>Gate_t&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Gate_t&lt; T &gt;</primary><secondary>isIn</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>bool <link linkend="_class_gate__t">Gate_t</link>&lt; T &gt;::isIn (T const &amp; e)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_gate__t_a6ece805d91b1c54d4b84cc36e652bc0f_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_gate__t_1ae9d46dcc1612852d610d153dbdb2e543"/>    <section>
    <title>operator()()</title>
<indexterm><primary>operator()</primary><secondary>Gate_t&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Gate_t&lt; T &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>bool <link linkend="_class_gate__t">Gate_t</link>&lt; T &gt;::operator() (T const &amp; e)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_gate__t_1a5970841a2974301d638fa215a2e1b136"/>    <section>
    <title>operator=()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>Gate_t&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Gate_t&lt; T &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>void <link linkend="_class_gate__t">Gate_t</link>&lt; T &gt;::operator= (<link linkend="_class_gate__t">Gate_t</link>&lt; T &gt; const &amp; timegate)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_gate__t_1ab746fcf7141d6ad21d142e57e052ff6f"/>    <section>
    <title>operator=()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>Gate_t&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Gate_t&lt; T &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>void <link linkend="_class_gate__t">Gate_t</link>&lt; T &gt;::operator= (std::pair&lt; T, T &gt; const &amp; gate)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_gate__t_1afc3fa31b695acb0407ee6ea2cad637c2"/>    <section>
    <title>use()</title>
<indexterm><primary>use</primary><secondary>Gate_t&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Gate_t&lt; T &gt;</primary><secondary>use</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>void <link linkend="_class_gate__t">Gate_t</link>&lt; T &gt;::use (bool const &amp; _use = <computeroutput>true</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_gate__t_1a038ec18fa86466548ad20abf05f63115"/>    <section>
    <title>used()</title>
<indexterm><primary>used</primary><secondary>Gate_t&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Gate_t&lt; T &gt;</primary><secondary>used</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>bool const&amp; <link linkend="_class_gate__t">Gate_t</link>&lt; T &gt;::used ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_gate__t_1a793714954181bacd4564a3a866a3d1db"/>    <section>
    <title>m_use</title>
<indexterm><primary>m_use</primary><secondary>Gate_t&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Gate_t&lt; T &gt;</primary><secondary>m_use</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>bool <link linkend="_class_gate__t">Gate_t</link>&lt; T &gt;::m_use = false<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_gate__t_1a1c49ae7aa44c27b9357e718432c2f93a"/>    <section>
    <title>start</title>
<indexterm><primary>start</primary><secondary>Gate_t&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Gate_t&lt; T &gt;</primary><secondary>start</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>T <link linkend="_class_gate__t">Gate_t</link>&lt; T &gt;::start = 0.</computeroutput></para>    </section><anchor xml:id="_class_gate__t_1aa48ef2734b80f70fbbd37f2760e18724"/>    <section>
    <title>stop</title>
<indexterm><primary>stop</primary><secondary>Gate_t&lt; T &gt;</secondary></indexterm>
<indexterm><primary>Gate_t&lt; T &gt;</primary><secondary>stop</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>T <link linkend="_class_gate__t">Gate_t</link>&lt; T &gt;::stop = 0.</computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
lib/Classes/<link linkend="__gate_8hpp">Gate.hpp</link></section>
</section>
