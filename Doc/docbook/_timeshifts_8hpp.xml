<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__timeshifts_8hpp" xml:lang="en-US">
<title>lib/Modules/Timeshifts.hpp File Reference</title>
<indexterm><primary>lib/Modules/Timeshifts.hpp</primary></indexterm>
<programlisting>#include &quot;../libCo.hpp&quot;
#include &quot;../Classes/Detectors.hpp&quot;
#include &quot;../Classes/FasterReader.hpp&quot;
#include &quot;../Classes/FilesManager.hpp&quot;
#include &quot;../Classes/Hit.hpp&quot;
#include &quot;../Classes/RF_Manager.hpp&quot;
#include &quot;../Classes/Event.hpp&quot;
#include &quot;../Classes/CoincBuilder.hpp&quot;
#include &quot;../Classes/Timer.hpp&quot;
#include &quot;../Classes/Performances.hpp&quot;
#include &quot;../MTObjects/MTObject.hpp&quot;
#include &quot;../MTObjects/MTList.hpp&quot;
#include &quot;../MTObjects/MTTHist.hpp&quot;
</programlisting>Include dependency graph for Timeshifts.hpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_timeshifts_8hpp__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_timeshifts_8hpp__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class_timeshifts_1_1_empty_error">Timeshifts::EmptyError</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_timeshifts_1_1_not_found_error">Timeshifts::NotFoundError</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_timeshifts">Timeshifts</link></para>

<para>Calculates the time difference between all detectors and a reference detector. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="__timeshifts_8hpp_1a202a57630e2aa9744043c30964b64bcd">get_first_RF_of_file</link> (<link linkend="_class_faster_reader">FasterReader</link> &amp;reader, <link linkend="_class_hit">Hit</link> &amp;hit, <link linkend="_class_r_f___manager">RF_Manager</link> &amp;rf)</para>
</listitem>
            <listitem><para>void <link linkend="__timeshifts_8hpp_1a89eb1093b3fdce57af662ed7b004b0f7">get_first_RF_of_file</link> (TTree *tree, <link linkend="_class_event">Event</link> &amp;event, <link linkend="_class_r_f___manager">RF_Manager</link> &amp;rf)</para>
</listitem>
            <listitem><para>double <link linkend="__timeshifts_8hpp_1a1efb60019dbe926cccb8410a806d73a9">getRFGammaPrompt</link> (TH1F *hist, bool const &amp;check_preprompt)</para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="__timeshifts_8hpp_1aecdab429e75a8d9f7a38f3938d9a7173">operator&lt;&lt;</link> (std::ostream &amp;cout, <link linkend="_class_timeshifts">Timeshifts</link> const &amp;ts)</para>
</listitem>
            <listitem><para>template&lt;typename T , typename  = typename std::enable_if&lt;std::is_arithmetic&lt;T&gt;::value&gt;::type&gt; </para><para><link linkend="__hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7">Time</link> <link linkend="__timeshifts_8hpp_1a02c5bf3a1c10d9b086ba64557fdb8995">Timeshift_cast</link> (T const &amp;t)</para>

<para>Casts a number into unsigned Time. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>std::vector&lt; <link linkend="__hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7">Time</link> &gt; <link linkend="__timeshifts_8hpp_1a0f507d9b001b222817bfc9d8ba01e40e">forced_shifts</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="__timeshifts_8hpp_1a202a57630e2aa9744043c30964b64bcd"/>    <section>
    <title>get_first_RF_of_file()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>get_first_RF_of_file</primary><secondary>Timeshifts.hpp</secondary></indexterm>
<indexterm><primary>Timeshifts.hpp</primary><secondary>get_first_RF_of_file</secondary></indexterm>
<para><computeroutput>void get_first_RF_of_file (<link linkend="_class_faster_reader">FasterReader</link> &amp; reader, <link linkend="_class_hit">Hit</link> &amp; hit, <link linkend="_class_r_f___manager">RF_Manager</link> &amp; rf)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_timeshifts_8hpp_a202a57630e2aa9744043c30964b64bcd_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_timeshifts_8hpp_a202a57630e2aa9744043c30964b64bcd_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="__timeshifts_8hpp_1a89eb1093b3fdce57af662ed7b004b0f7"/>    <section>
    <title>get_first_RF_of_file()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>get_first_RF_of_file</primary><secondary>Timeshifts.hpp</secondary></indexterm>
<indexterm><primary>Timeshifts.hpp</primary><secondary>get_first_RF_of_file</secondary></indexterm>
<para><computeroutput>void get_first_RF_of_file (TTree * tree, <link linkend="_class_event">Event</link> &amp; event, <link linkend="_class_r_f___manager">RF_Manager</link> &amp; rf)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_timeshifts_8hpp_a89eb1093b3fdce57af662ed7b004b0f7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="__timeshifts_8hpp_1a1efb60019dbe926cccb8410a806d73a9"/>    <section>
    <title>getRFGammaPrompt()</title>
<indexterm><primary>getRFGammaPrompt</primary><secondary>Timeshifts.hpp</secondary></indexterm>
<indexterm><primary>Timeshifts.hpp</primary><secondary>getRFGammaPrompt</secondary></indexterm>
<para><computeroutput>double getRFGammaPrompt (TH1F * hist, bool const &amp; check_preprompt)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_timeshifts_8hpp_a1efb60019dbe926cccb8410a806d73a9_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="__timeshifts_8hpp_1aecdab429e75a8d9f7a38f3938d9a7173"/>    <section>
    <title>operator&lt;&lt;()</title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>Timeshifts.hpp</secondary></indexterm>
<indexterm><primary>Timeshifts.hpp</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<para><computeroutput>std::ostream&amp; operator&lt;&lt; (std::ostream &amp; cout, <link linkend="_class_timeshifts">Timeshifts</link> const &amp; ts)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_timeshifts_8hpp_aecdab429e75a8d9f7a38f3938d9a7173_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="__timeshifts_8hpp_1a02c5bf3a1c10d9b086ba64557fdb8995"/>    <section>
    <title>Timeshift_cast()</title>
<indexterm><primary>Timeshift_cast</primary><secondary>Timeshifts.hpp</secondary></indexterm>
<indexterm><primary>Timeshifts.hpp</primary><secondary>Timeshift_cast</secondary></indexterm>
<computeroutput>template&lt;typename T , typename  = typename std::enable_if&lt;std::is_arithmetic&lt;T&gt;::value&gt;::type&gt; </computeroutput><para><computeroutput><link linkend="__hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7">Time</link> Timeshift_cast (T const &amp; t)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Casts a number into unsigned Time. </para>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_timeshifts_8hpp_a02c5bf3a1c10d9b086ba64557fdb8995_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="__timeshifts_8hpp_1a0f507d9b001b222817bfc9d8ba01e40e"/>    <section>
    <title>forced_shifts</title>
<indexterm><primary>forced_shifts</primary><secondary>Timeshifts.hpp</secondary></indexterm>
<indexterm><primary>Timeshifts.hpp</primary><secondary>forced_shifts</secondary></indexterm>
<para><computeroutput>std::vector&lt;<link linkend="__hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7">Time</link>&gt; forced_shifts</computeroutput></para></section>
</section>
</section>
