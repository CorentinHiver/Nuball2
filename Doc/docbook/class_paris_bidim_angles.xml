<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_paris_bidim_angles" xml:lang="en-US">
<title>ParisBidimAngles Class Reference</title>
<indexterm><primary>ParisBidimAngles</primary></indexterm>
<para>
<computeroutput>#include &lt;ParisBidimAngles.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class_paris_bidim_angles_1_1_file_error">FileError</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>double <link linkend="_class_paris_bidim_angles_1a737596223de54d2eabbb64a3d674e82f">angleLaBr</link> (std::string name)</para>
</listitem>
            <listitem><para>double const  &amp; <link linkend="_class_paris_bidim_angles_1a72183315a0c50a92612964ed779a7419">angleLaBr</link> (std::string name) const</para>
</listitem>
            <listitem><para>double <link linkend="_class_paris_bidim_angles_1a054559c88ccfa68ffc104ba8cf0c2fe6">angleNaI</link> (std::string name)</para>
</listitem>
            <listitem><para>double const  &amp; <link linkend="_class_paris_bidim_angles_1a799125ee30452e7ba2d5f89b48c57da1">angleNaI</link> (std::string name) const</para>
</listitem>
            <listitem><para>std::unordered_map&lt; std::string, double &gt; const  &amp; <link linkend="_class_paris_bidim_angles_1a7cc946220cdb4f0a42a8793cf6337f58">LaBr_angles</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_paris_bidim_angles_1a904829a187c50059dda2d439ef0d6db1">load</link> (std::string const &amp;filename)</para>
</listitem>
            <listitem><para>std::unordered_map&lt; std::string, double &gt; const  &amp; <link linkend="_class_paris_bidim_angles_1aa0d0e80c56a0e44766c856b3560a0ba0">NaI_angles</link> ()</para>
</listitem>
            <listitem><para>auto <link linkend="_class_paris_bidim_angles_1aa257a0e840f44672aa2bcbf23d103566">names</link> ()</para>
</listitem>
            <listitem><para>auto const  &amp; <link linkend="_class_paris_bidim_angles_1ab8d9a5f52612a296bea2ada2ba64b385">names</link> () const</para>
</listitem>
            <listitem><para>std::pair&lt; double, double &gt; const  &amp; <link linkend="_class_paris_bidim_angles_1a2fc512a76d77f8ecb97c3d46b07c088a">operator[]</link> (std::string name)</para>
</listitem>
            <listitem><para><link linkend="_class_paris_bidim_angles_1a1005f10d8eabebfd02d1dee6fafa9ebd">ParisBidimAngles</link> () noexcept=default</para>
</listitem>
            <listitem><para><link linkend="_class_paris_bidim_angles_1a94f5dc80e2e164186840fdf9915e080e">ParisBidimAngles</link> (std::string const &amp;filename)</para>
</listitem>
            <listitem><para>void <link linkend="_class_paris_bidim_angles_1a00fe25e6cdd8340cab38ba7f6fe2b1d7">printDeg</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_paris_bidim_angles_1afd9e6c297a0cc74001a6180f6b49d253">set</link> (std::string const &amp;name, double const &amp;<link linkend="_class_paris_bidim_angles_1a72183315a0c50a92612964ed779a7419">angleLaBr</link>, double const &amp;<link linkend="_class_paris_bidim_angles_1a799125ee30452e7ba2d5f89b48c57da1">angleNaI</link>)</para>
</listitem>
            <listitem><para>void <link linkend="_class_paris_bidim_angles_1adc78f553d4c386a1ea6230965c11d68a">sortNames</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_paris_bidim_angles_1a0ca1c561f33bc79fc16b630ef4db9144">write</link> (std::string const &amp;filename)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>std::unordered_map&lt; std::string, double &gt; <link linkend="_class_paris_bidim_angles_1aaf84ea92c8f0a178e039c173c71f0b1a">m_angleLaBr</link></para>
</listitem>
            <listitem><para>std::unordered_map&lt; std::string, double &gt; <link linkend="_class_paris_bidim_angles_1aa58045051b25656e3ee374f0e930c6de">m_angleNaI</link></para>
</listitem>
            <listitem><para>std::unordered_map&lt; std::string, std::pair&lt; double, double &gt; &gt; <link linkend="_class_paris_bidim_angles_1ab6053684ae330a5e30a89618044a4e18">m_angles</link></para>
</listitem>
            <listitem><para>std::string <link linkend="_class_paris_bidim_angles_1a86e477b4aad725586be9bcdd64ef738f">m_filename</link></para>
</listitem>
            <listitem><para>std::vector&lt; std::string &gt; <link linkend="_class_paris_bidim_angles_1ad7e9840d2054070758edf03ce757cba0">m_names</link></para>
</listitem>
            <listitem><para>bool <link linkend="_class_paris_bidim_angles_1ab440b2ada4931a8f26eece54a1ec8a16">m_ok</link> = false</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Private Attributes    </title>
        <itemizedlist>
            <listitem><para>static std::string <link linkend="_class_paris_bidim_angles_1a3c71992fbda09a6d859949cba76d0d87">m_extension</link> = &quot;angles&quot;</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_paris_bidim_angles_1a1005f10d8eabebfd02d1dee6fafa9ebd"/>    <section>
    <title>ParisBidimAngles()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>ParisBidimAngles</primary><secondary>ParisBidimAngles</secondary></indexterm>
<indexterm><primary>ParisBidimAngles</primary><secondary>ParisBidimAngles</secondary></indexterm>
<para><computeroutput>ParisBidimAngles::ParisBidimAngles ( )<computeroutput>[default]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_paris_bidim_angles_1a94f5dc80e2e164186840fdf9915e080e"/>    <section>
    <title>ParisBidimAngles()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>ParisBidimAngles</primary><secondary>ParisBidimAngles</secondary></indexterm>
<indexterm><primary>ParisBidimAngles</primary><secondary>ParisBidimAngles</secondary></indexterm>
<para><computeroutput>ParisBidimAngles::ParisBidimAngles (std::string const &amp; filename)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_paris_bidim_angles_a94f5dc80e2e164186840fdf9915e080e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_paris_bidim_angles_1a737596223de54d2eabbb64a3d674e82f"/>    <section>
    <title>angleLaBr()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>angleLaBr</primary><secondary>ParisBidimAngles</secondary></indexterm>
<indexterm><primary>ParisBidimAngles</primary><secondary>angleLaBr</secondary></indexterm>
<para><computeroutput>double ParisBidimAngles::angleLaBr (std::string name)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_paris_bidim_angles_1a72183315a0c50a92612964ed779a7419"/>    <section>
    <title>angleLaBr()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>angleLaBr</primary><secondary>ParisBidimAngles</secondary></indexterm>
<indexterm><primary>ParisBidimAngles</primary><secondary>angleLaBr</secondary></indexterm>
<para><computeroutput>double const&amp; ParisBidimAngles::angleLaBr (std::string name) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_paris_bidim_angles_a72183315a0c50a92612964ed779a7419_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_paris_bidim_angles_1a054559c88ccfa68ffc104ba8cf0c2fe6"/>    <section>
    <title>angleNaI()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>angleNaI</primary><secondary>ParisBidimAngles</secondary></indexterm>
<indexterm><primary>ParisBidimAngles</primary><secondary>angleNaI</secondary></indexterm>
<para><computeroutput>double ParisBidimAngles::angleNaI (std::string name)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_paris_bidim_angles_1a799125ee30452e7ba2d5f89b48c57da1"/>    <section>
    <title>angleNaI()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>angleNaI</primary><secondary>ParisBidimAngles</secondary></indexterm>
<indexterm><primary>ParisBidimAngles</primary><secondary>angleNaI</secondary></indexterm>
<para><computeroutput>double const&amp; ParisBidimAngles::angleNaI (std::string name) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_paris_bidim_angles_a799125ee30452e7ba2d5f89b48c57da1_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_paris_bidim_angles_1a7cc946220cdb4f0a42a8793cf6337f58"/>    <section>
    <title>LaBr_angles()</title>
<indexterm><primary>LaBr_angles</primary><secondary>ParisBidimAngles</secondary></indexterm>
<indexterm><primary>ParisBidimAngles</primary><secondary>LaBr_angles</secondary></indexterm>
<para><computeroutput>std::unordered_map&lt;std::string, double&gt; const&amp; ParisBidimAngles::LaBr_angles ( )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_paris_bidim_angles_1a904829a187c50059dda2d439ef0d6db1"/>    <section>
    <title>load()</title>
<indexterm><primary>load</primary><secondary>ParisBidimAngles</secondary></indexterm>
<indexterm><primary>ParisBidimAngles</primary><secondary>load</secondary></indexterm>
<para><computeroutput>void ParisBidimAngles::load (std::string const &amp; filename)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_paris_bidim_angles_a904829a187c50059dda2d439ef0d6db1_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_paris_bidim_angles_a904829a187c50059dda2d439ef0d6db1_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_paris_bidim_angles_1aa0d0e80c56a0e44766c856b3560a0ba0"/>    <section>
    <title>NaI_angles()</title>
<indexterm><primary>NaI_angles</primary><secondary>ParisBidimAngles</secondary></indexterm>
<indexterm><primary>ParisBidimAngles</primary><secondary>NaI_angles</secondary></indexterm>
<para><computeroutput>std::unordered_map&lt;std::string, double&gt; const&amp; ParisBidimAngles::NaI_angles ( )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_paris_bidim_angles_1aa257a0e840f44672aa2bcbf23d103566"/>    <section>
    <title>names()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>names</primary><secondary>ParisBidimAngles</secondary></indexterm>
<indexterm><primary>ParisBidimAngles</primary><secondary>names</secondary></indexterm>
<para><computeroutput>auto ParisBidimAngles::names ( )<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_paris_bidim_angles_1ab8d9a5f52612a296bea2ada2ba64b385"/>    <section>
    <title>names()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>names</primary><secondary>ParisBidimAngles</secondary></indexterm>
<indexterm><primary>ParisBidimAngles</primary><secondary>names</secondary></indexterm>
<para><computeroutput>auto const&amp; ParisBidimAngles::names ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_paris_bidim_angles_ab8d9a5f52612a296bea2ada2ba64b385_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_paris_bidim_angles_1a2fc512a76d77f8ecb97c3d46b07c088a"/>    <section>
    <title>operator[]()</title>
<indexterm><primary>operator[]</primary><secondary>ParisBidimAngles</secondary></indexterm>
<indexterm><primary>ParisBidimAngles</primary><secondary>operator[]</secondary></indexterm>
<para><computeroutput>std::pair&lt;double, double&gt; const&amp; ParisBidimAngles::operator[] (std::string name)<computeroutput>[inline]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_paris_bidim_angles_1a00fe25e6cdd8340cab38ba7f6fe2b1d7"/>    <section>
    <title>printDeg()</title>
<indexterm><primary>printDeg</primary><secondary>ParisBidimAngles</secondary></indexterm>
<indexterm><primary>ParisBidimAngles</primary><secondary>printDeg</secondary></indexterm>
<para><computeroutput>void ParisBidimAngles::printDeg ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_paris_bidim_angles_a00fe25e6cdd8340cab38ba7f6fe2b1d7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_paris_bidim_angles_1afd9e6c297a0cc74001a6180f6b49d253"/>    <section>
    <title>set()</title>
<indexterm><primary>set</primary><secondary>ParisBidimAngles</secondary></indexterm>
<indexterm><primary>ParisBidimAngles</primary><secondary>set</secondary></indexterm>
<para><computeroutput>void ParisBidimAngles::set (std::string const &amp; name, double const &amp; angleLaBr, double const &amp; angleNaI)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_paris_bidim_angles_afd9e6c297a0cc74001a6180f6b49d253_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_paris_bidim_angles_afd9e6c297a0cc74001a6180f6b49d253_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_paris_bidim_angles_1adc78f553d4c386a1ea6230965c11d68a"/>    <section>
    <title>sortNames()</title>
<indexterm><primary>sortNames</primary><secondary>ParisBidimAngles</secondary></indexterm>
<indexterm><primary>ParisBidimAngles</primary><secondary>sortNames</secondary></indexterm>
<para><computeroutput>void ParisBidimAngles::sortNames ( )<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_paris_bidim_angles_adc78f553d4c386a1ea6230965c11d68a_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_paris_bidim_angles_1a0ca1c561f33bc79fc16b630ef4db9144"/>    <section>
    <title>write()</title>
<indexterm><primary>write</primary><secondary>ParisBidimAngles</secondary></indexterm>
<indexterm><primary>ParisBidimAngles</primary><secondary>write</secondary></indexterm>
<para><computeroutput>void ParisBidimAngles::write (std::string const &amp; filename)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_paris_bidim_angles_a0ca1c561f33bc79fc16b630ef4db9144_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_paris_bidim_angles_a0ca1c561f33bc79fc16b630ef4db9144_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_paris_bidim_angles_1aaf84ea92c8f0a178e039c173c71f0b1a"/>    <section>
    <title>m_angleLaBr</title>
<indexterm><primary>m_angleLaBr</primary><secondary>ParisBidimAngles</secondary></indexterm>
<indexterm><primary>ParisBidimAngles</primary><secondary>m_angleLaBr</secondary></indexterm>
<para><computeroutput>std::unordered_map&lt;std::string, double&gt; ParisBidimAngles::m_angleLaBr<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_paris_bidim_angles_1aa58045051b25656e3ee374f0e930c6de"/>    <section>
    <title>m_angleNaI</title>
<indexterm><primary>m_angleNaI</primary><secondary>ParisBidimAngles</secondary></indexterm>
<indexterm><primary>ParisBidimAngles</primary><secondary>m_angleNaI</secondary></indexterm>
<para><computeroutput>std::unordered_map&lt;std::string, double&gt; ParisBidimAngles::m_angleNaI<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_paris_bidim_angles_1ab6053684ae330a5e30a89618044a4e18"/>    <section>
    <title>m_angles</title>
<indexterm><primary>m_angles</primary><secondary>ParisBidimAngles</secondary></indexterm>
<indexterm><primary>ParisBidimAngles</primary><secondary>m_angles</secondary></indexterm>
<para><computeroutput>std::unordered_map&lt;std::string, std::pair&lt;double, double&gt; &gt; ParisBidimAngles::m_angles<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_paris_bidim_angles_1a3c71992fbda09a6d859949cba76d0d87"/>    <section>
    <title>m_extension</title>
<indexterm><primary>m_extension</primary><secondary>ParisBidimAngles</secondary></indexterm>
<indexterm><primary>ParisBidimAngles</primary><secondary>m_extension</secondary></indexterm>
<para><computeroutput>std::string ParisBidimAngles::m_extension = &quot;angles&quot;<computeroutput>[static]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_paris_bidim_angles_1a86e477b4aad725586be9bcdd64ef738f"/>    <section>
    <title>m_filename</title>
<indexterm><primary>m_filename</primary><secondary>ParisBidimAngles</secondary></indexterm>
<indexterm><primary>ParisBidimAngles</primary><secondary>m_filename</secondary></indexterm>
<para><computeroutput>std::string ParisBidimAngles::m_filename<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_paris_bidim_angles_1ad7e9840d2054070758edf03ce757cba0"/>    <section>
    <title>m_names</title>
<indexterm><primary>m_names</primary><secondary>ParisBidimAngles</secondary></indexterm>
<indexterm><primary>ParisBidimAngles</primary><secondary>m_names</secondary></indexterm>
<para><computeroutput>std::vector&lt;std::string&gt; ParisBidimAngles::m_names<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_paris_bidim_angles_1ab440b2ada4931a8f26eece54a1ec8a16"/>    <section>
    <title>m_ok</title>
<indexterm><primary>m_ok</primary><secondary>ParisBidimAngles</secondary></indexterm>
<indexterm><primary>ParisBidimAngles</primary><secondary>m_ok</secondary></indexterm>
<para><computeroutput>bool ParisBidimAngles::m_ok = false<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
lib/Analyse/<link linkend="__paris_bidim_angles_8hpp">ParisBidimAngles.hpp</link></section>
</section>
