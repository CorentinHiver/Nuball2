<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_minimisator" xml:lang="en-US">
<title>Minimisator Class Reference</title>
<indexterm><primary>Minimisator</primary></indexterm>
<para>
<computeroutput>#include &lt;SpectraAlignator.hpp&gt;</computeroutput>
</para>
Collaboration diagram for Minimisator:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_minimisator__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_minimisator_1_1_nelder_mead_parameters">NelderMeadParameters</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>auto const  &amp; <link linkend="_class_minimisator_1a29123baa85c854b224ef5e93b6029c1d">getMinimum</link> () const</para>
</listitem>
            <listitem><para><link linkend="_class_minimisator_1a79445191945ee55123770aa8c480095f">Minimisator</link> ()=default</para>
</listitem>
            <listitem><para>void <link linkend="_class_minimisator_1a3c467eeb96f716414dbfb6f2348c6340">nelderMead</link> (<link linkend="_class_objective_function">ObjectiveFunction</link> const &amp;function)</para>
</listitem>
            <listitem><para>void <link linkend="_class_minimisator_1a3583b6db1e38e9d0342c8e417d7c67e6">setInitialGuess</link> (<link linkend="_class_vertice">Vertice</link> const &amp;init_vertice)</para>
</listitem>
            <listitem><para>void <link linkend="_class_minimisator_1a1b7709cb6a248889abf24b37adf6904b">setInitialSteps</link> (<link linkend="_class_vertice">Vertice</link> const &amp;steps)</para>
</listitem>
            <listitem><para>void <link linkend="_class_minimisator_1a32ab8b4262d7cfedcd97d3a29c9231d3">simpleGrad</link> (<link linkend="_class_objective_function">ObjectiveFunction</link> &amp;func)</para>

<para>C&apos;est peut-Ãªtre une fausse piste ... </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="__spectra_alignator_8hpp_1afafb4a66ac57eb9c69b1fe6488851c4e">Vertices</link> <link linkend="_class_minimisator_1ae67076dda7b6526d29d6c2bf3c214f73">g_minima_history</link></para>
</listitem>
            <listitem><para>std::vector&lt; double &gt; <link linkend="_class_minimisator_1ab72a4d5cfd7537d1db6e6311c86de906">g_minimums</link></para>
</listitem>
            <listitem><para>std::vector&lt; <link linkend="_class_simplex">Simplex</link> &gt; <link linkend="_class_minimisator_1af3d8f52f276c47128f48ef65d4bd8fca">g_simplex_history</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_minimisator_1_1_nelder_mead_parameters">Minimisator::NelderMeadParameters</link> <link linkend="_class_minimisator_1a60fa32272bc0c844926f7910bcb83e50">nmParam</link></para>
</listitem>
            <listitem><para>double <link linkend="_class_minimisator_1a93438ea5bc6ccb83f42d61624b25355b">tolerance</link> = 1.e-3</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para>static int <link linkend="_class_minimisator_1a66a519bb9c01f483c54b852f2cf91e8b">g_nb_rounds</link> = 5</para>
</listitem>
            <listitem><para>static int <link linkend="_class_minimisator_1a30a70997fa0ae60c9e6599e4fc877087">g_order</link> = 3</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="__spectra_alignator_8hpp_1afafb4a66ac57eb9c69b1fe6488851c4e">Vertices</link> <link linkend="_class_minimisator_1a6aab1f039f729a94fb43b8772e42fffe">m_grad_vertices</link></para>
</listitem>
            <listitem><para><link linkend="_class_vertice">Vertice</link> <link linkend="_class_minimisator_1a2c07b386ca03e3e671d76f8e1c7ef730">m_initial_vertice</link></para>
</listitem>
            <listitem><para><link linkend="_class_vertice">Vertice</link> <link linkend="_class_minimisator_1a99d6193927537f3ed81ef57fcc71d8f6">m_minimum</link> = 0.0</para>
</listitem>
            <listitem><para>int <link linkend="_class_minimisator_1a7b6a46dc81e16c856b4c63c763a39de4">m_nb_steps_grad</link> = 10</para>
</listitem>
            <listitem><para><link linkend="_class_vertice">Vertice</link> <link linkend="_class_minimisator_1a20c98456cee55c4753571284152ad5cd">m_steps</link></para>
</listitem>
            <listitem><para><link linkend="_class_vertice">Vertice</link> <link linkend="_class_minimisator_1adca51f0f7506b810520858fe84e27a54">m_weights</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_minimisator_1a79445191945ee55123770aa8c480095f"/>    <section>
    <title>Minimisator()</title>
<indexterm><primary>Minimisator</primary><secondary>Minimisator</secondary></indexterm>
<indexterm><primary>Minimisator</primary><secondary>Minimisator</secondary></indexterm>
<para><computeroutput>Minimisator::Minimisator ( )<computeroutput>[default]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_minimisator_1a29123baa85c854b224ef5e93b6029c1d"/>    <section>
    <title>getMinimum()</title>
<indexterm><primary>getMinimum</primary><secondary>Minimisator</secondary></indexterm>
<indexterm><primary>Minimisator</primary><secondary>getMinimum</secondary></indexterm>
<para><computeroutput>auto const&amp; Minimisator::getMinimum ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_minimisator_a29123baa85c854b224ef5e93b6029c1d_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_minimisator_1a3c467eeb96f716414dbfb6f2348c6340"/>    <section>
    <title>nelderMead()</title>
<indexterm><primary>nelderMead</primary><secondary>Minimisator</secondary></indexterm>
<indexterm><primary>Minimisator</primary><secondary>nelderMead</secondary></indexterm>
<para><computeroutput>void Minimisator::nelderMead (<link linkend="_class_objective_function">ObjectiveFunction</link> const &amp; function)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_minimisator_a3c467eeb96f716414dbfb6f2348c6340_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_minimisator_a3c467eeb96f716414dbfb6f2348c6340_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_minimisator_1a3583b6db1e38e9d0342c8e417d7c67e6"/>    <section>
    <title>setInitialGuess()</title>
<indexterm><primary>setInitialGuess</primary><secondary>Minimisator</secondary></indexterm>
<indexterm><primary>Minimisator</primary><secondary>setInitialGuess</secondary></indexterm>
<para><computeroutput>void Minimisator::setInitialGuess (<link linkend="_class_vertice">Vertice</link> const &amp; init_vertice)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_minimisator_a3583b6db1e38e9d0342c8e417d7c67e6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_minimisator_a3583b6db1e38e9d0342c8e417d7c67e6_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_minimisator_1a1b7709cb6a248889abf24b37adf6904b"/>    <section>
    <title>setInitialSteps()</title>
<indexterm><primary>setInitialSteps</primary><secondary>Minimisator</secondary></indexterm>
<indexterm><primary>Minimisator</primary><secondary>setInitialSteps</secondary></indexterm>
<para><computeroutput>void Minimisator::setInitialSteps (<link linkend="_class_vertice">Vertice</link> const &amp; steps)<computeroutput>[inline]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_minimisator_a1b7709cb6a248889abf24b37adf6904b_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_minimisator_1a32ab8b4262d7cfedcd97d3a29c9231d3"/>    <section>
    <title>simpleGrad()</title>
<indexterm><primary>simpleGrad</primary><secondary>Minimisator</secondary></indexterm>
<indexterm><primary>Minimisator</primary><secondary>simpleGrad</secondary></indexterm>
<para><computeroutput>void Minimisator::simpleGrad (<link linkend="_class_objective_function">ObjectiveFunction</link> &amp; func)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>C&apos;est peut-Ãªtre une fausse piste ... </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>func</entry>
                                <entry>
<para>
<literallayout>&#160;&#xa;</literallayout>
 </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_minimisator_a32ab8b4262d7cfedcd97d3a29c9231d3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_minimisator_1ae67076dda7b6526d29d6c2bf3c214f73"/>    <section>
    <title>g_minima_history</title>
<indexterm><primary>g_minima_history</primary><secondary>Minimisator</secondary></indexterm>
<indexterm><primary>Minimisator</primary><secondary>g_minima_history</secondary></indexterm>
<para><computeroutput><link linkend="__spectra_alignator_8hpp_1afafb4a66ac57eb9c69b1fe6488851c4e">Vertices</link> Minimisator::g_minima_history</computeroutput></para>    </section><anchor xml:id="_class_minimisator_1ab72a4d5cfd7537d1db6e6311c86de906"/>    <section>
    <title>g_minimums</title>
<indexterm><primary>g_minimums</primary><secondary>Minimisator</secondary></indexterm>
<indexterm><primary>Minimisator</primary><secondary>g_minimums</secondary></indexterm>
<para><computeroutput>std::vector&lt;double&gt; Minimisator::g_minimums</computeroutput></para>    </section><anchor xml:id="_class_minimisator_1a66a519bb9c01f483c54b852f2cf91e8b"/>    <section>
    <title>g_nb_rounds</title>
<indexterm><primary>g_nb_rounds</primary><secondary>Minimisator</secondary></indexterm>
<indexterm><primary>Minimisator</primary><secondary>g_nb_rounds</secondary></indexterm>
<para><computeroutput>int Minimisator::g_nb_rounds = 5<computeroutput>[static]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_minimisator_1a30a70997fa0ae60c9e6599e4fc877087"/>    <section>
    <title>g_order</title>
<indexterm><primary>g_order</primary><secondary>Minimisator</secondary></indexterm>
<indexterm><primary>Minimisator</primary><secondary>g_order</secondary></indexterm>
<para><computeroutput>int Minimisator::g_order = 3<computeroutput>[static]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_minimisator_1af3d8f52f276c47128f48ef65d4bd8fca"/>    <section>
    <title>g_simplex_history</title>
<indexterm><primary>g_simplex_history</primary><secondary>Minimisator</secondary></indexterm>
<indexterm><primary>Minimisator</primary><secondary>g_simplex_history</secondary></indexterm>
<para><computeroutput>std::vector&lt;<link linkend="_class_simplex">Simplex</link>&gt; Minimisator::g_simplex_history</computeroutput></para>    </section><anchor xml:id="_class_minimisator_1a6aab1f039f729a94fb43b8772e42fffe"/>    <section>
    <title>m_grad_vertices</title>
<indexterm><primary>m_grad_vertices</primary><secondary>Minimisator</secondary></indexterm>
<indexterm><primary>Minimisator</primary><secondary>m_grad_vertices</secondary></indexterm>
<para><computeroutput><link linkend="__spectra_alignator_8hpp_1afafb4a66ac57eb9c69b1fe6488851c4e">Vertices</link> Minimisator::m_grad_vertices<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_minimisator_1a2c07b386ca03e3e671d76f8e1c7ef730"/>    <section>
    <title>m_initial_vertice</title>
<indexterm><primary>m_initial_vertice</primary><secondary>Minimisator</secondary></indexterm>
<indexterm><primary>Minimisator</primary><secondary>m_initial_vertice</secondary></indexterm>
<para><computeroutput><link linkend="_class_vertice">Vertice</link> Minimisator::m_initial_vertice<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_minimisator_1a99d6193927537f3ed81ef57fcc71d8f6"/>    <section>
    <title>m_minimum</title>
<indexterm><primary>m_minimum</primary><secondary>Minimisator</secondary></indexterm>
<indexterm><primary>Minimisator</primary><secondary>m_minimum</secondary></indexterm>
<para><computeroutput><link linkend="_class_vertice">Vertice</link> Minimisator::m_minimum = 0.0<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_minimisator_1a7b6a46dc81e16c856b4c63c763a39de4"/>    <section>
    <title>m_nb_steps_grad</title>
<indexterm><primary>m_nb_steps_grad</primary><secondary>Minimisator</secondary></indexterm>
<indexterm><primary>Minimisator</primary><secondary>m_nb_steps_grad</secondary></indexterm>
<para><computeroutput>int Minimisator::m_nb_steps_grad = 10<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_minimisator_1a20c98456cee55c4753571284152ad5cd"/>    <section>
    <title>m_steps</title>
<indexterm><primary>m_steps</primary><secondary>Minimisator</secondary></indexterm>
<indexterm><primary>Minimisator</primary><secondary>m_steps</secondary></indexterm>
<para><computeroutput><link linkend="_class_vertice">Vertice</link> Minimisator::m_steps<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_minimisator_1adca51f0f7506b810520858fe84e27a54"/>    <section>
    <title>m_weights</title>
<indexterm><primary>m_weights</primary><secondary>Minimisator</secondary></indexterm>
<indexterm><primary>Minimisator</primary><secondary>m_weights</secondary></indexterm>
<para><computeroutput><link linkend="_class_vertice">Vertice</link> Minimisator::m_weights<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_minimisator_1a60fa32272bc0c844926f7910bcb83e50"/>    <section>
    <title>nmParam</title>
<indexterm><primary>nmParam</primary><secondary>Minimisator</secondary></indexterm>
<indexterm><primary>Minimisator</primary><secondary>nmParam</secondary></indexterm>
<para><computeroutput>struct <link linkend="_struct_minimisator_1_1_nelder_mead_parameters">Minimisator::NelderMeadParameters</link> Minimisator::nmParam</computeroutput></para>    </section><anchor xml:id="_class_minimisator_1a93438ea5bc6ccb83f42d61624b25355b"/>    <section>
    <title>tolerance</title>
<indexterm><primary>tolerance</primary><secondary>Minimisator</secondary></indexterm>
<indexterm><primary>Minimisator</primary><secondary>tolerance</secondary></indexterm>
<para><computeroutput>double Minimisator::tolerance = 1.e-3</computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
lib/Analyse/<link linkend="__spectra_alignator_8hpp">SpectraAlignator.hpp</link></section>
</section>
