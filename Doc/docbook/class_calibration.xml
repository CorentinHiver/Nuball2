<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_calibration" xml:lang="en-US">
<title>Calibration Class Reference</title>
<indexterm><primary>Calibration</primary></indexterm>
<para>

<para>A convenient class for handling coefficient calibration up to 3rd order. </para>
 
</para>
<para>
<computeroutput>#include &lt;Calibration.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>float <link linkend="_class_calibration_1a6044ac4a0a17e177af66138f75aca6b6">apply</link> (float const &amp;nrj, <link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp;label) const noexcept</para>

<para>Applies the calibration coefficients of the given label to the given energy. </para>
</listitem>
            <listitem><para>auto const  &amp; <link linkend="_class_calibration_1aa3ab2d95f8d0799c7910bc6163f0c2ad">binom</link> (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp;label) const noexcept</para>

<para>Get the quadratic parameter. </para>
</listitem>
            <listitem><para>auto &amp; <link linkend="_class_calibration_1a159877cf15817efee936b0eb3871f505">binom</link> (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp;label) noexcept</para>

<para>Get the quadratic parameter. </para>
</listitem>
            <listitem><para>float <link linkend="_class_calibration_1a2758f6c22e17c9c924f25690240f1b09">calibrate</link> (double const &amp;nrj, <link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp;label) const noexcept</para>
</listitem>
            <listitem><para>float <link linkend="_class_calibration_1aacb494950f95ab8c5e12f548de28afb4">calibrate</link> (float const &amp;nrj, <link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp;label) const noexcept</para>

<para>Calibrate the nrj value using the parameters extracted from the calibration data. </para>
</listitem>
            <listitem><para>void <link linkend="_class_calibration_1ac35a48d4659a122e21143e5e2a01765a">calibrate</link> (<link linkend="_class_hit">Hit</link> &amp;hit) const noexcept</para>

<para>Calibrate a hit. </para>
</listitem>
            <listitem><para>float <link linkend="_class_calibration_1a252f473a9f8a865ab1bdb43dfd571e66">calibrate</link> (int const &amp;adc, <link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp;label) const noexcept</para>
</listitem>
            <listitem><para>float <link linkend="_class_calibration_1ac5e6098a62483aa931b0b0c014615fce">calibrate</link> (<link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> const &amp;bin, <link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp;label) const noexcept</para>
</listitem>
            <listitem><para><link linkend="_class_calibration_1a33f3a180851c479ac5ae4e07053d348c">Calibration</link> ()=default</para>
</listitem>
            <listitem><para><link linkend="_class_calibration_1a8e35cee6894b7e32cb4e6dcbbe26a0c4">Calibration</link> (<link linkend="_class_calibration">Calibration</link> const &amp;otherCalib)</para>

<para>Copy constructor. </para>
</listitem>
            <listitem><para><link linkend="_class_calibration_1aa2a91c92246a15839d6428b0b9058bc8">Calibration</link> (<link linkend="_class_file">File</link> const &amp;<link linkend="_class_calibration_1ac636b26d5725f63ec6d56c0ad51af338">file</link>)</para>

<para>Constructor loading calibration from a file. </para>
</listitem>
            <listitem><para>void <link linkend="_class_calibration_1a8a7104d462b567eee77b85d8f4f7269f">clear</link> () noexcept</para>
</listitem>
            <listitem><para>auto const  &amp; <link linkend="_class_calibration_1ac636b26d5725f63ec6d56c0ad51af338">file</link> () const noexcept</para>

<para>Gets the name of the file from while the data has been loaded. </para>
</listitem>
            <listitem><para>auto &amp; <link linkend="_class_calibration_1ae971a2f379e91734a15f8acc25466802">file</link> () noexcept</para>

<para>Gets the name of the file from while the data has been loaded. </para>
</listitem>
            <listitem><para>std::vector&lt; float &gt; <link linkend="_class_calibration_1a10ce3a8d6680709755f1bd2700876603">get</link> (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp;_label) const noexcept</para>
</listitem>
            <listitem><para>auto const  &amp; <link linkend="_class_calibration_1a444e5a870012ac2760875f19fb415eab">getBinom</link> () const noexcept</para>

<para>Get the quadratic parameter. </para>
</listitem>
            <listitem><para>auto &amp; <link linkend="_class_calibration_1abae0f70552c2cea8cb0f89e4d2bab9cc">getBinom</link> () noexcept</para>

<para>Get the quadratic parameter. </para>
</listitem>
            <listitem><para>auto const  &amp; <link linkend="_class_calibration_1ad6a111e94914e75259ee4f342757b31a">getIntercept</link> () const noexcept</para>

<para>Get the intercept. </para>
</listitem>
            <listitem><para>auto &amp; <link linkend="_class_calibration_1af035f8b320a9513c6b37671fa4740745">getIntercept</link> () noexcept</para>

<para>Get the intercept. </para>
</listitem>
            <listitem><para>auto const  &amp; <link linkend="_class_calibration_1a001b6fab19a0fdc4bd7a420c8eb7517a">getOrder</link> () const noexcept</para>

<para>Get the order of the calibration (0 : linear, 1 : affine, 2 : quadratic, 3 : 3rd order) </para>
</listitem>
            <listitem><para>auto &amp; <link linkend="_class_calibration_1a9b33075dcaf65cff432d2ff201a17302">getOrder</link> () noexcept</para>

<para>Get the order of the calibration (0 : linear, 1 : affine, 2 : quadratic, 3 : 3rd order) </para>
</listitem>
            <listitem><para>auto const  &amp; <link linkend="_class_calibration_1a35f805421eb01ce451a258adf3ad108c">getSlope</link> () const noexcept</para>

<para>Get the slope parameter. </para>
</listitem>
            <listitem><para>auto &amp; <link linkend="_class_calibration_1acbc4cb2b28eed01cec1842c2229bb62c">getSlope</link> () noexcept</para>

<para>Get the slope parameter. </para>
</listitem>
            <listitem><para>auto const  &amp; <link linkend="_class_calibration_1a57d6e4aaf0bf53a680c4d7ad427378e5">getTrinom</link> () const noexcept</para>

<para>Get the 3rd order parameter. </para>
</listitem>
            <listitem><para>auto &amp; <link linkend="_class_calibration_1a7fbd2f46700b76fc2d91bbc1a762d4b1">getTrinom</link> () noexcept</para>

<para>Get the 3rd order parameter. </para>
</listitem>
            <listitem><para>auto const  &amp; <link linkend="_class_calibration_1a60c13a56e81bd8fb738c00a9b70e56b4">intercept</link> (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp;label) const noexcept</para>

<para>Get the intercept. </para>
</listitem>
            <listitem><para>auto &amp; <link linkend="_class_calibration_1aa04775b32f01c4dd9e4501fcf332a994">intercept</link> (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp;label) noexcept</para>

<para>Get the intercept. </para>
</listitem>
            <listitem><para>bool const  &amp; <link linkend="_class_calibration_1ab8717ea59193176a7311b1c425edc3ec">isFilled</link> () const noexcept</para>

<para>Returns true if there is at least one coefficient loaded. </para>
</listitem>
            <listitem><para>bool &amp; <link linkend="_class_calibration_1af6585bac9039b90e931355ca9ded3256">isFilled</link> () noexcept</para>

<para>Returns true if there is at least one coefficient loaded. </para>
</listitem>
            <listitem><para>bool <link linkend="_class_calibration_1a660694835089e0020f014c65f3d6f7e7">load</link> (<link linkend="_class_file">File</link> const &amp;<link linkend="_class_calibration_1ac636b26d5725f63ec6d56c0ad51af338">file</link>)</para>

<para>Loading calibration from a file. </para>
</listitem>
            <listitem><para>auto const  &amp; <link linkend="_class_calibration_1a3929d5f7ebd7a5d611ff297a643bc2bd">nbDetectors</link> () const noexcept</para>

<para>Get the number of detectors with calibration coefficients. </para>
</listitem>
            <listitem><para>auto &amp; <link linkend="_class_calibration_1afdfb23b77b5e0bbd56fde61c3ef4fbb4">nbDetectors</link> () noexcept</para>

<para>Get the number of detectors with calibration coefficients. </para>
</listitem>
            <listitem><para><link linkend="_class_calibration_1afea60036d04f264977103febc61433fa">operator bool</link> () const &amp;noexcept</para>

<para>Return true if the data has been loaded. </para>
</listitem>
            <listitem><para>template&lt;class... ARGS&gt; </para><para>auto <link linkend="_class_calibration_1a218d4c3aba57678304a602248d46d407">operator()</link> (ARGS &amp;&amp;... args) const noexcept</para>

<para>Wrapper around the <link linkend="_class_calibration_1aacb494950f95ab8c5e12f548de28afb4">Calibration::calibrate()</link> methods. </para>
</listitem>
            <listitem><para><link linkend="_class_calibration">Calibration</link> const  &amp; <link linkend="_class_calibration_1a8dccc9ef965732a47d4d47df551baa39">operator=</link> (<link linkend="_class_calibration">Calibration</link> const &amp;otherCalib)</para>

<para>Copy operator. </para>
</listitem>
            <listitem><para><link linkend="_class_calibration">Calibration</link> const  &amp; <link linkend="_class_calibration_1a366198c5f96777e70d3262877baea623">operator=</link> (<link linkend="_class_file">File</link> const &amp;<link linkend="_class_calibration_1ac636b26d5725f63ec6d56c0ad51af338">file</link>)</para>

<para>Copy operator twicked to load calibration from a file. </para>
</listitem>
            <listitem><para>std::vector&lt; float &gt; <link linkend="_class_calibration_1a01f1a4e9586e8f43fa4afce86c4e8d2d">operator[]</link> (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp;label) const noexcept</para>

<para>Returns a vector holding the coefficients. </para>
</listitem>
            <listitem><para>auto const  &amp; <link linkend="_class_calibration_1a91d512d3bcbc3a3439a7902326965b48">order</link> (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp;label) const noexcept</para>

<para>Get the order of the calibration (0 : linear, 1 : affine, 2 : quadratic, 3 : 3rd order) </para>
</listitem>
            <listitem><para>auto &amp; <link linkend="_class_calibration_1a1ddc5dc9bb136ae5dd1b86be4afc2bd9">order</link> (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp;label) noexcept</para>

<para>Get the order of the calibration (0 : linear, 1 : affine, 2 : quadratic, 3 : 3rd order) </para>
</listitem>
            <listitem><para>void <link linkend="_class_calibration_1aaba010db225b8b01931d013eefda800b">Print</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_calibration_1a7545c0c01c4d8e1c5c28fb7930bfd3a0">Print</link> (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp;label)</para>
</listitem>
            <listitem><para>void <link linkend="_class_calibration_1a8cc33cfcd3004d549b87edd2540d9e1d">resize</link> (int const &amp;<link linkend="_class_calibration_1a5070b5faea97d16c53b084a1b82161f0">size</link>)</para>
</listitem>
            <listitem><para>void <link linkend="_class_calibration_1a2ad52fe16c3fef88d1de86ef8f609198">set</link> (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp;_label, float const &amp;_intercept, float const &amp;_slope, float const &amp;_binom, float const &amp;_trinom)</para>
</listitem>
            <listitem><para>auto const  &amp; <link linkend="_class_calibration_1a5070b5faea97d16c53b084a1b82161f0">size</link> () const noexcept</para>

<para>Get the maximum label of detectors. </para>
</listitem>
            <listitem><para>auto &amp; <link linkend="_class_calibration_1a45ad5a7fa9f7ba5007dbec3a7b6a76f1">size</link> () noexcept</para>

<para>Get the maximum label of detectors. </para>
</listitem>
            <listitem><para>auto const  &amp; <link linkend="_class_calibration_1a38f8b48818a42d56682b9267847d2995">slope</link> (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp;label) const noexcept</para>

<para>Get the slope parameter. </para>
</listitem>
            <listitem><para>auto &amp; <link linkend="_class_calibration_1a4ec21083def993dc01de1097692deba1">slope</link> (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp;label) noexcept</para>

<para>Get the slope parameter. </para>
</listitem>
            <listitem><para>auto const  &amp; <link linkend="_class_calibration_1ab2e13b04241551660871aeb23266eb86">trinom</link> (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp;label) const noexcept</para>

<para>Get the 3rd order parameter. </para>
</listitem>
            <listitem><para>auto &amp; <link linkend="_class_calibration_1a27f7f427b210e48762224cd6a7b4bd76">trinom</link> (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp;label) noexcept</para>

<para>Get the 3rd order parameter. </para>
</listitem>
            <listitem><para>void <link linkend="_class_calibration_1a62f73bc45da4c1cd949b4ce32b630916">write</link> (std::string const &amp;outfilename)</para>

<para>Writes down the calibration file. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>std::vector&lt; std::vector&lt; std::vector&lt; float &gt; &gt; &gt; <link linkend="_class_calibration_1a1a424ad63111ec123b66ac09c5f70184">calibration_tables</link></para>
</listitem>
            <listitem><para>std::vector&lt; float &gt; <link linkend="_class_calibration_1ad5cb9c62bdcb6c6e7731678e2097dbff">m_binom</link></para>
</listitem>
            <listitem><para>std::string <link linkend="_class_calibration_1ada2b7de482524ffd3e0a9b6038e3d6de">m_filename</link></para>
</listitem>
            <listitem><para>std::vector&lt; float &gt; <link linkend="_class_calibration_1aa3662eecd6984f081c14c78ce48b426d">m_intercept</link></para>
</listitem>
            <listitem><para><link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> <link linkend="_class_calibration_1a873c0737314dea95849645024deefb61">m_nb_det</link> = 0</para>
</listitem>
            <listitem><para>bool <link linkend="_class_calibration_1aea5e9bf6d006f5e26702953552e97dec">m_ok</link> = false</para>
</listitem>
            <listitem><para>std::vector&lt; char &gt; <link linkend="_class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76">m_order</link></para>
</listitem>
            <listitem><para><link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> <link linkend="_class_calibration_1a8b66733b050e8743b1887fbed7284269">m_size</link> = 0</para>
</listitem>
            <listitem><para>std::vector&lt; float &gt; <link linkend="_class_calibration_1ae2e50bdd8ff2e1cdfb8f85071f28062e">m_slope</link></para>
</listitem>
            <listitem><para>std::vector&lt; float &gt; <link linkend="_class_calibration_1a25eec3ddcb7c771493317f00d6e8b9d4">m_trinom</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>A convenient class for handling coefficient calibration up to 3rd order. </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_calibration_1a33f3a180851c479ac5ae4e07053d348c"/>    <section>
    <title>Calibration()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>Calibration</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>Calibration</secondary></indexterm>
<para><computeroutput>Calibration::Calibration ( )<computeroutput>[default]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_calibration_1a8e35cee6894b7e32cb4e6dcbbe26a0c4"/>    <section>
    <title>Calibration()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>Calibration</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>Calibration</secondary></indexterm>
<para><computeroutput>Calibration::Calibration (<link linkend="_class_calibration">Calibration</link> const &amp; otherCalib)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Copy constructor. </para>
</para>
    </section><anchor xml:id="_class_calibration_1aa2a91c92246a15839d6428b0b9058bc8"/>    <section>
    <title>Calibration()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>Calibration</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>Calibration</secondary></indexterm>
<para><computeroutput>Calibration::Calibration (<link linkend="_class_file">File</link> const &amp; file)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Constructor loading calibration from a file. </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_aa2a91c92246a15839d6428b0b9058bc8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_calibration_1a6044ac4a0a17e177af66138f75aca6b6"/>    <section>
    <title>apply()</title>
<indexterm><primary>apply</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>apply</secondary></indexterm>
<para><computeroutput>float Calibration::apply (float const &amp; nrj, <link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp; label) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Applies the calibration coefficients of the given label to the given energy. </para>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_a6044ac4a0a17e177af66138f75aca6b6_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1aa3ab2d95f8d0799c7910bc6163f0c2ad"/>    <section>
    <title>binom()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>binom</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>binom</secondary></indexterm>
<para><computeroutput>auto const&amp; Calibration::binom (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp; label) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get the quadratic parameter. </para>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_aa3ab2d95f8d0799c7910bc6163f0c2ad_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1a159877cf15817efee936b0eb3871f505"/>    <section>
    <title>binom()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>binom</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>binom</secondary></indexterm>
<para><computeroutput>auto&amp; Calibration::binom (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp; label)<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get the quadratic parameter. </para>
</para>
    </section><anchor xml:id="_class_calibration_1a2758f6c22e17c9c924f25690240f1b09"/>    <section>
    <title>calibrate()<computeroutput>[1/5]</computeroutput></title>
<indexterm><primary>calibrate</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>calibrate</secondary></indexterm>
<para><computeroutput>float Calibration::calibrate (double const &amp; nrj, <link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp; label) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_a2758f6c22e17c9c924f25690240f1b09_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_a2758f6c22e17c9c924f25690240f1b09_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1aacb494950f95ab8c5e12f548de28afb4"/>    <section>
    <title>calibrate()<computeroutput>[2/5]</computeroutput></title>
<indexterm><primary>calibrate</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>calibrate</secondary></indexterm>
<para><computeroutput>float Calibration::calibrate (float const &amp; nrj, <link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp; label) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Calibrate the nrj value using the parameters extracted from the calibration data. </para>
</para>

<para>Calibrate the energy using the coefficients of the given label to the given energy. Shifts the nrj by a value between 0 and 1. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_aacb494950f95ab8c5e12f548de28afb4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_aacb494950f95ab8c5e12f548de28afb4_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1ac35a48d4659a122e21143e5e2a01765a"/>    <section>
    <title>calibrate()<computeroutput>[3/5]</computeroutput></title>
<indexterm><primary>calibrate</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>calibrate</secondary></indexterm>
<para><computeroutput>void Calibration::calibrate (<link linkend="_class_hit">Hit</link> &amp; hit) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Calibrate a hit. </para>
</para>

<para>Reads hit.adc and writes the calibrated value in hit.nrj If hit.qdc2 &gt; 0, writes the calibrated value in hit.nrj2 </para>
    </section><anchor xml:id="_class_calibration_1a252f473a9f8a865ab1bdb43dfd571e66"/>    <section>
    <title>calibrate()<computeroutput>[4/5]</computeroutput></title>
<indexterm><primary>calibrate</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>calibrate</secondary></indexterm>
<para><computeroutput>float Calibration::calibrate (int const &amp; adc, <link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp; label) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_a252f473a9f8a865ab1bdb43dfd571e66_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_a252f473a9f8a865ab1bdb43dfd571e66_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1ac5e6098a62483aa931b0b0c014615fce"/>    <section>
    <title>calibrate()<computeroutput>[5/5]</computeroutput></title>
<indexterm><primary>calibrate</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>calibrate</secondary></indexterm>
<para><computeroutput>float Calibration::calibrate (<link linkend="_lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> const &amp; bin, <link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp; label) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_ac5e6098a62483aa931b0b0c014615fce_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_ac5e6098a62483aa931b0b0c014615fce_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1a8a7104d462b567eee77b85d8f4f7269f"/>    <section>
    <title>clear()</title>
<indexterm><primary>clear</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>clear</secondary></indexterm>
<para><computeroutput>void Calibration::clear ( )<computeroutput>[noexcept]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_calibration_1ac636b26d5725f63ec6d56c0ad51af338"/>    <section>
    <title>file()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>file</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>file</secondary></indexterm>
<para><computeroutput>auto const&amp; Calibration::file ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Gets the name of the file from while the data has been loaded. </para>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_ac636b26d5725f63ec6d56c0ad51af338_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1ae971a2f379e91734a15f8acc25466802"/>    <section>
    <title>file()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>file</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>file</secondary></indexterm>
<para><computeroutput>auto&amp; Calibration::file ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Gets the name of the file from while the data has been loaded. </para>
</para>
    </section><anchor xml:id="_class_calibration_1a10ce3a8d6680709755f1bd2700876603"/>    <section>
    <title>get()</title>
<indexterm><primary>get</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>get</secondary></indexterm>
<para><computeroutput>std::vector&lt; float &gt; Calibration::get (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp; _label) const<computeroutput>[noexcept]</computeroutput></computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_a10ce3a8d6680709755f1bd2700876603_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1a444e5a870012ac2760875f19fb415eab"/>    <section>
    <title>getBinom()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>getBinom</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>getBinom</secondary></indexterm>
<para><computeroutput>auto const&amp; Calibration::getBinom ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get the quadratic parameter. </para>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_a444e5a870012ac2760875f19fb415eab_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1abae0f70552c2cea8cb0f89e4d2bab9cc"/>    <section>
    <title>getBinom()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>getBinom</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>getBinom</secondary></indexterm>
<para><computeroutput>auto&amp; Calibration::getBinom ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get the quadratic parameter. </para>
</para>
    </section><anchor xml:id="_class_calibration_1ad6a111e94914e75259ee4f342757b31a"/>    <section>
    <title>getIntercept()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>getIntercept</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>getIntercept</secondary></indexterm>
<para><computeroutput>auto const&amp; Calibration::getIntercept ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get the intercept. </para>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_ad6a111e94914e75259ee4f342757b31a_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1af035f8b320a9513c6b37671fa4740745"/>    <section>
    <title>getIntercept()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>getIntercept</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>getIntercept</secondary></indexterm>
<para><computeroutput>auto&amp; Calibration::getIntercept ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get the intercept. </para>
</para>
    </section><anchor xml:id="_class_calibration_1a001b6fab19a0fdc4bd7a420c8eb7517a"/>    <section>
    <title>getOrder()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>getOrder</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>getOrder</secondary></indexterm>
<para><computeroutput>auto const&amp; Calibration::getOrder ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get the order of the calibration (0 : linear, 1 : affine, 2 : quadratic, 3 : 3rd order) </para>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_a001b6fab19a0fdc4bd7a420c8eb7517a_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1a9b33075dcaf65cff432d2ff201a17302"/>    <section>
    <title>getOrder()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>getOrder</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>getOrder</secondary></indexterm>
<para><computeroutput>auto&amp; Calibration::getOrder ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get the order of the calibration (0 : linear, 1 : affine, 2 : quadratic, 3 : 3rd order) </para>
</para>
    </section><anchor xml:id="_class_calibration_1a35f805421eb01ce451a258adf3ad108c"/>    <section>
    <title>getSlope()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>getSlope</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>getSlope</secondary></indexterm>
<para><computeroutput>auto const&amp; Calibration::getSlope ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get the slope parameter. </para>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_a35f805421eb01ce451a258adf3ad108c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1acbc4cb2b28eed01cec1842c2229bb62c"/>    <section>
    <title>getSlope()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>getSlope</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>getSlope</secondary></indexterm>
<para><computeroutput>auto&amp; Calibration::getSlope ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get the slope parameter. </para>
</para>
    </section><anchor xml:id="_class_calibration_1a57d6e4aaf0bf53a680c4d7ad427378e5"/>    <section>
    <title>getTrinom()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>getTrinom</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>getTrinom</secondary></indexterm>
<para><computeroutput>auto const&amp; Calibration::getTrinom ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get the 3rd order parameter. </para>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_a57d6e4aaf0bf53a680c4d7ad427378e5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1a7fbd2f46700b76fc2d91bbc1a762d4b1"/>    <section>
    <title>getTrinom()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>getTrinom</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>getTrinom</secondary></indexterm>
<para><computeroutput>auto&amp; Calibration::getTrinom ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get the 3rd order parameter. </para>
</para>
    </section><anchor xml:id="_class_calibration_1a60c13a56e81bd8fb738c00a9b70e56b4"/>    <section>
    <title>intercept()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>intercept</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>intercept</secondary></indexterm>
<para><computeroutput>auto const&amp; Calibration::intercept (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp; label) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get the intercept. </para>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_a60c13a56e81bd8fb738c00a9b70e56b4_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1aa04775b32f01c4dd9e4501fcf332a994"/>    <section>
    <title>intercept()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>intercept</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>intercept</secondary></indexterm>
<para><computeroutput>auto&amp; Calibration::intercept (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp; label)<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get the intercept. </para>
</para>
    </section><anchor xml:id="_class_calibration_1ab8717ea59193176a7311b1c425edc3ec"/>    <section>
    <title>isFilled()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>isFilled</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>isFilled</secondary></indexterm>
<para><computeroutput>bool const&amp; Calibration::isFilled ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Returns true if there is at least one coefficient loaded. </para>
</para>
    </section><anchor xml:id="_class_calibration_1af6585bac9039b90e931355ca9ded3256"/>    <section>
    <title>isFilled()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>isFilled</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>isFilled</secondary></indexterm>
<para><computeroutput>bool&amp; Calibration::isFilled ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Returns true if there is at least one coefficient loaded. </para>
</para>
    </section><anchor xml:id="_class_calibration_1a660694835089e0020f014c65f3d6f7e7"/>    <section>
    <title>load()</title>
<indexterm><primary>load</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>load</secondary></indexterm>
<para><computeroutput>bool Calibration::load (<link linkend="_class_file">File</link> const &amp; file)</computeroutput></para><para>

<para>Loading calibration from a file. </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_a660694835089e0020f014c65f3d6f7e7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_a660694835089e0020f014c65f3d6f7e7_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1a3929d5f7ebd7a5d611ff297a643bc2bd"/>    <section>
    <title>nbDetectors()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>nbDetectors</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>nbDetectors</secondary></indexterm>
<para><computeroutput>auto const&amp; Calibration::nbDetectors ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get the number of detectors with calibration coefficients. </para>
</para>
    </section><anchor xml:id="_class_calibration_1afdfb23b77b5e0bbd56fde61c3ef4fbb4"/>    <section>
    <title>nbDetectors()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>nbDetectors</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>nbDetectors</secondary></indexterm>
<para><computeroutput>auto&amp; Calibration::nbDetectors ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get the number of detectors with calibration coefficients. </para>
</para>
    </section><anchor xml:id="_class_calibration_1afea60036d04f264977103febc61433fa"/>    <section>
    <title>operator bool()</title>
<indexterm><primary>operator bool</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>operator bool</secondary></indexterm>
<para><computeroutput>Calibration::operator bool ( ) const &amp;<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Return true if the data has been loaded. </para>
</para>
    </section><anchor xml:id="_class_calibration_1a218d4c3aba57678304a602248d46d407"/>    <section>
    <title>operator()()</title>
<indexterm><primary>operator()</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;class... ARGS&gt; </computeroutput><para><computeroutput>auto Calibration::operator() (ARGS &amp;&amp;... args) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Wrapper around the <link linkend="_class_calibration_1aacb494950f95ab8c5e12f548de28afb4">Calibration::calibrate()</link> methods. </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_a218d4c3aba57678304a602248d46d407_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1a8dccc9ef965732a47d4d47df551baa39"/>    <section>
    <title>operator=()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_class_calibration">Calibration</link> const&amp; Calibration::operator= (<link linkend="_class_calibration">Calibration</link> const &amp; otherCalib)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Copy operator. </para>
</para>
    </section><anchor xml:id="_class_calibration_1a366198c5f96777e70d3262877baea623"/>    <section>
    <title>operator=()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_class_calibration">Calibration</link> const&amp; Calibration::operator= (<link linkend="_class_file">File</link> const &amp; file)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Copy operator twicked to load calibration from a file. </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_a366198c5f96777e70d3262877baea623_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1a01f1a4e9586e8f43fa4afce86c4e8d2d"/>    <section>
    <title>operator[]()</title>
<indexterm><primary>operator[]</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>operator[]</secondary></indexterm>
<para><computeroutput>std::vector&lt;float&gt; Calibration::operator[] (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp; label) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Returns a vector holding the coefficients. </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_a01f1a4e9586e8f43fa4afce86c4e8d2d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1a91d512d3bcbc3a3439a7902326965b48"/>    <section>
    <title>order()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>order</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>order</secondary></indexterm>
<para><computeroutput>auto const&amp; Calibration::order (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp; label) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get the order of the calibration (0 : linear, 1 : affine, 2 : quadratic, 3 : 3rd order) </para>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_a91d512d3bcbc3a3439a7902326965b48_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1a1ddc5dc9bb136ae5dd1b86be4afc2bd9"/>    <section>
    <title>order()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>order</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>order</secondary></indexterm>
<para><computeroutput>auto&amp; Calibration::order (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp; label)<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get the order of the calibration (0 : linear, 1 : affine, 2 : quadratic, 3 : 3rd order) </para>
</para>
    </section><anchor xml:id="_class_calibration_1aaba010db225b8b01931d013eefda800b"/>    <section>
    <title>Print()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Print</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>Print</secondary></indexterm>
<para><computeroutput>void Calibration::Print ( )</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_aaba010db225b8b01931d013eefda800b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1a7545c0c01c4d8e1c5c28fb7930bfd3a0"/>    <section>
    <title>Print()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Print</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>Print</secondary></indexterm>
<para><computeroutput>void Calibration::Print (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp; label)</computeroutput></para>    </section><anchor xml:id="_class_calibration_1a8cc33cfcd3004d549b87edd2540d9e1d"/>    <section>
    <title>resize()</title>
<indexterm><primary>resize</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>resize</secondary></indexterm>
<para><computeroutput>void Calibration::resize (int const &amp; size)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_a8cc33cfcd3004d549b87edd2540d9e1d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_a8cc33cfcd3004d549b87edd2540d9e1d_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1a2ad52fe16c3fef88d1de86ef8f609198"/>    <section>
    <title>set()</title>
<indexterm><primary>set</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>set</secondary></indexterm>
<para><computeroutput>void Calibration::set (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp; _label, float const &amp; _intercept = <computeroutput>0.f</computeroutput>
, float const &amp; _slope = <computeroutput>1.f</computeroutput>
, float const &amp; _binom = <computeroutput>0.f</computeroutput>
, float const &amp; _trinom = <computeroutput>0.f</computeroutput>
)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_a2ad52fe16c3fef88d1de86ef8f609198_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_a2ad52fe16c3fef88d1de86ef8f609198_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1a5070b5faea97d16c53b084a1b82161f0"/>    <section>
    <title>size()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>size</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>size</secondary></indexterm>
<para><computeroutput>auto const&amp; Calibration::size ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get the maximum label of detectors. </para>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_a5070b5faea97d16c53b084a1b82161f0_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1a45ad5a7fa9f7ba5007dbec3a7b6a76f1"/>    <section>
    <title>size()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>size</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>size</secondary></indexterm>
<para><computeroutput>auto&amp; Calibration::size ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get the maximum label of detectors. </para>
</para>
    </section><anchor xml:id="_class_calibration_1a38f8b48818a42d56682b9267847d2995"/>    <section>
    <title>slope()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>slope</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>slope</secondary></indexterm>
<para><computeroutput>auto const&amp; Calibration::slope (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp; label) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get the slope parameter. </para>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_a38f8b48818a42d56682b9267847d2995_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1a4ec21083def993dc01de1097692deba1"/>    <section>
    <title>slope()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>slope</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>slope</secondary></indexterm>
<para><computeroutput>auto&amp; Calibration::slope (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp; label)<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get the slope parameter. </para>
</para>
    </section><anchor xml:id="_class_calibration_1ab2e13b04241551660871aeb23266eb86"/>    <section>
    <title>trinom()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>trinom</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>trinom</secondary></indexterm>
<para><computeroutput>auto const&amp; Calibration::trinom (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp; label) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get the 3rd order parameter. </para>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_ab2e13b04241551660871aeb23266eb86_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_calibration_1a27f7f427b210e48762224cd6a7b4bd76"/>    <section>
    <title>trinom()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>trinom</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>trinom</secondary></indexterm>
<para><computeroutput>auto&amp; Calibration::trinom (<link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> const &amp; label)<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get the 3rd order parameter. </para>
</para>
    </section><anchor xml:id="_class_calibration_1a62f73bc45da4c1cd949b4ce32b630916"/>    <section>
    <title>write()</title>
<indexterm><primary>write</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>write</secondary></indexterm>
<para><computeroutput>void Calibration::write (std::string const &amp; outfilename)</computeroutput></para><para>

<para>Writes down the calibration file. </para>
</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_calibration_a62f73bc45da4c1cd949b4ce32b630916_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_calibration_1a1a424ad63111ec123b66ac09c5f70184"/>    <section>
    <title>calibration_tables</title>
<indexterm><primary>calibration_tables</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>calibration_tables</secondary></indexterm>
<para><computeroutput>std::vector&lt;std::vector&lt;std::vector&lt;float&gt; &gt; &gt; Calibration::calibration_tables<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_calibration_1ad5cb9c62bdcb6c6e7731678e2097dbff"/>    <section>
    <title>m_binom</title>
<indexterm><primary>m_binom</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>m_binom</secondary></indexterm>
<para><computeroutput>std::vector&lt;float&gt; Calibration::m_binom<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_calibration_1ada2b7de482524ffd3e0a9b6038e3d6de"/>    <section>
    <title>m_filename</title>
<indexterm><primary>m_filename</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>m_filename</secondary></indexterm>
<para><computeroutput>std::string Calibration::m_filename<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_calibration_1aa3662eecd6984f081c14c78ce48b426d"/>    <section>
    <title>m_intercept</title>
<indexterm><primary>m_intercept</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>m_intercept</secondary></indexterm>
<para><computeroutput>std::vector&lt;float&gt; Calibration::m_intercept<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_calibration_1a873c0737314dea95849645024deefb61"/>    <section>
    <title>m_nb_det</title>
<indexterm><primary>m_nb_det</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>m_nb_det</secondary></indexterm>
<para><computeroutput><link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> Calibration::m_nb_det = 0<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_calibration_1aea5e9bf6d006f5e26702953552e97dec"/>    <section>
    <title>m_ok</title>
<indexterm><primary>m_ok</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>m_ok</secondary></indexterm>
<para><computeroutput>bool Calibration::m_ok = false<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76"/>    <section>
    <title>m_order</title>
<indexterm><primary>m_order</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>m_order</secondary></indexterm>
<para><computeroutput>std::vector&lt;char&gt; Calibration::m_order<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_calibration_1a8b66733b050e8743b1887fbed7284269"/>    <section>
    <title>m_size</title>
<indexterm><primary>m_size</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>m_size</secondary></indexterm>
<para><computeroutput><link linkend="__hit_8hpp_1ab5dd24876acad09ec52c250c1668466c">Label</link> Calibration::m_size = 0<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_calibration_1ae2e50bdd8ff2e1cdfb8f85071f28062e"/>    <section>
    <title>m_slope</title>
<indexterm><primary>m_slope</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>m_slope</secondary></indexterm>
<para><computeroutput>std::vector&lt;float&gt; Calibration::m_slope<computeroutput>[private]</computeroutput></computeroutput></para>    </section><anchor xml:id="_class_calibration_1a25eec3ddcb7c771493317f00d6e8b9d4"/>    <section>
    <title>m_trinom</title>
<indexterm><primary>m_trinom</primary><secondary>Calibration</secondary></indexterm>
<indexterm><primary>Calibration</primary><secondary>m_trinom</secondary></indexterm>
<para><computeroutput>std::vector&lt;float&gt; Calibration::m_trinom<computeroutput>[private]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
lib/Classes/<link linkend="__calibration_8hpp">Calibration.hpp</link></section>
</section>
