<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_calibration" kind="class" language="C++" prot="public">
    <compoundname>Calibration</compoundname>
    <includes refid="_calibration_8hpp" local="no">Calibration.hpp</includes>
    <innerclass refid="struct_calibration_1_1histograms" prot="public">Calibration::histograms</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" prot="public" static="no" mutable="no">
        <type>struct <ref refid="struct_calibration_1_1histograms" kindref="compound">Calibration::histograms</ref></type>
        <definition>struct Calibration::histograms Calibration::m_histos</definition>
        <argsstring></argsstring>
        <name>m_histos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="170" column="12"/>
        <referencedby refid="class_calibration_1ae62aaba8d0f0f77aecf89a5ad1e7605a" compoundref="_calibration_8hpp" startline="527" endline="544">fillHisto</referencedby>
        <referencedby refid="class_calibration_1afd14ef8f1b6cee6cf7abc10783ee318e" compoundref="_calibration_8hpp" startline="485" endline="525">fillRootDataHisto</referencedby>
        <referencedby refid="class_calibration_1a2f91a6803bf8008bd7b748d4a1688338" compoundref="_calibration_8hpp" startline="216" endline="216">Initialize</referencedby>
        <referencedby refid="class_calibration_1a7835b1d9192d2c9fa8dcd8efbceb8db3" compoundref="_calibration_8hpp" startline="419" endline="452">loadRootHisto</referencedby>
        <referencedby refid="class_calibration_1ad6db2742477c8ac64787c6fe8a687aff" compoundref="_calibration_8hpp" startline="552" endline="850">peakFinder</referencedby>
        <referencedby refid="class_calibration_1a344dc3d6feab3580e859cc693c2fdd4a" compoundref="_calibration_8hpp" startline="1128" endline="1171">verify</referencedby>
        <referencedby refid="class_calibration_1a6ad79450d0bb55baa744f6436f84dbbe" compoundref="_calibration_8hpp" startline="1194" endline="1201">writeCalibratedData</referencedby>
        <referencedby refid="class_calibration_1a8ff8375eee244f2b22b86914a1d559bc" compoundref="_calibration_8hpp" startline="1173" endline="1180">writeCalibratedHisto</referencedby>
        <referencedby refid="class_calibration_1a062cb134d4b82246ba9c89c567a32963" compoundref="_calibration_8hpp" startline="1119" endline="1126">writeRawRoot</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_calibration_1a6872e57ee372f02373cc14bae2254554" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; std::vector&lt; <ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref> &gt; &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;std::vector&lt;NRJ&gt; &gt; &gt; Calibration::calibration_tables</definition>
        <argsstring></argsstring>
        <name>calibration_tables</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="324" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="324" bodyend="-1"/>
        <referencedby refid="class_calibration_1a72f3838ece8f07239511fac7c09b1e8c" compoundref="_calibration_8hpp" startline="955" endline="967">setCalibrationTables</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref> &gt;</type>
        <definition>std::vector&lt;NRJ&gt; Calibration::m_binom</definition>
        <argsstring></argsstring>
        <name>m_binom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="322" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="322" bodyend="-1"/>
        <referencedby refid="class_calibration_1aa09b700f10eaaa69a97a0cc6da973a06" compoundref="_calibration_8hpp" startline="969" endline="980">calibrate</referencedby>
        <referencedby refid="class_calibration_1a8e35cee6894b7e32cb4e6dcbbe26a0c4" compoundref="_calibration_8hpp" startline="177" endline="187">Calibration</referencedby>
        <referencedby refid="class_calibration_1a723ff9aee7af762a1b7302472008f97b" compoundref="_calibration_8hpp" startline="289" endline="289">getBinom</referencedby>
        <referencedby refid="class_calibration_1a2d2a0d6276fc2c8a4b60c3801ccc16a9" compoundref="_calibration_8hpp" startline="1016" endline="1063">load</referencedby>
        <referencedby refid="class_calibration_1a8dccc9ef965732a47d4d47df551baa39" compoundref="_calibration_8hpp" startline="190" endline="201">operator=</referencedby>
        <referencedby refid="class_calibration_1aa05242b317e800e0c3661e03f219fd19" compoundref="_calibration_8hpp" startline="274" endline="284">operator[]</referencedby>
        <referencedby refid="class_calibration_1aaba010db225b8b01931d013eefda800b" compoundref="_calibration_8hpp" startline="1065" endline="1088">Print</referencedby>
        <referencedby refid="class_calibration_1ab1502564e126e769e782d221d42608c7" compoundref="_calibration_8hpp" startline="990" endline="1014">set</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibration_1afa4ecd691e71e5b13504bfe7d71950ac" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Calibration::m_calibrate_data</definition>
        <argsstring></argsstring>
        <name>m_calibrate_data</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="316" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="316" bodyend="-1"/>
        <referencedby refid="class_calibration_1a0b91d7d6484d4c4b8af93a0709b94291" compoundref="_calibration_8hpp" startline="254" endline="254">calibrate_data</referencedby>
        <referencedby refid="class_calibration_1a5931047806db77858db6886d041db100" compoundref="_calibration_8hpp" startline="1182" endline="1186">calibrateFasterData</referencedby>
        <referencedby refid="class_calibration_1ac7678b0524f8407659a9594b3862e5c3" compoundref="_calibration_8hpp" startline="1188" endline="1192">calibrateRootData</referencedby>
        <referencedby refid="class_calibration_1afd14ef8f1b6cee6cf7abc10783ee318e" compoundref="_calibration_8hpp" startline="485" endline="525">fillRootDataHisto</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibration_1ada2b7de482524ffd3e0a9b6038e3d6de" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Calibration::m_filename</definition>
        <argsstring></argsstring>
        <name>m_filename</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="307" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="307" bodyend="-1"/>
        <referencedby refid="class_calibration_1acfdcf94af247e6907aa09d086c1e4186" compoundref="_calibration_8hpp" startline="261" endline="261">file</referencedby>
        <referencedby refid="class_calibration_1a2d2a0d6276fc2c8a4b60c3801ccc16a9" compoundref="_calibration_8hpp" startline="1016" endline="1063">load</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibration_1ad17169e9dbae0e5ec2e63f60f1eebdf3" prot="private" static="no" mutable="no">
        <type><ref refid="_calibration_8hpp_1a3e47c22fe90cb9e403d05dc134b6a047" kindref="member">Fits</ref></type>
        <definition>Fits Calibration::m_fits</definition>
        <argsstring></argsstring>
        <name>m_fits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="312" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="312" bodyend="-1"/>
        <referencedby refid="class_calibration_1ae6bbaf8b283a345c9936a907fcba1849" compoundref="_calibration_8hpp" startline="944" endline="952">analyse</referencedby>
        <referencedby refid="class_calibration_1a2f91a6803bf8008bd7b748d4a1688338" compoundref="_calibration_8hpp" startline="216" endline="216">Initialize</referencedby>
        <referencedby refid="class_calibration_1ad6db2742477c8ac64787c6fe8a687aff" compoundref="_calibration_8hpp" startline="552" endline="850">peakFinder</referencedby>
        <referencedby refid="class_calibration_1a344dc3d6feab3580e859cc693c2fdd4a" compoundref="_calibration_8hpp" startline="1128" endline="1171">verify</referencedby>
        <referencedby refid="class_calibration_1a7e89a0c788e7ad97c2a9cea5e02ef3f2" compoundref="_calibration_8hpp" startline="1108" endline="1117">writeData</referencedby>
        <referencedby refid="class_calibration_1a53565d0fe7d92fd6d5d94eee5a97f1b8" compoundref="_calibration_8hpp" startline="1090" endline="1106">writePosPeaks</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref> &gt;</type>
        <definition>std::vector&lt;NRJ&gt; Calibration::m_intercept</definition>
        <argsstring></argsstring>
        <name>m_intercept</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="320" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="320" bodyend="-1"/>
        <referencedby refid="class_calibration_1aa09b700f10eaaa69a97a0cc6da973a06" compoundref="_calibration_8hpp" startline="969" endline="980">calibrate</referencedby>
        <referencedby refid="class_calibration_1a8e35cee6894b7e32cb4e6dcbbe26a0c4" compoundref="_calibration_8hpp" startline="177" endline="187">Calibration</referencedby>
        <referencedby refid="class_calibration_1aedbbf3043605ea4bce5044113484b5dd" compoundref="_calibration_8hpp" startline="287" endline="287">getIntercept</referencedby>
        <referencedby refid="class_calibration_1a2d2a0d6276fc2c8a4b60c3801ccc16a9" compoundref="_calibration_8hpp" startline="1016" endline="1063">load</referencedby>
        <referencedby refid="class_calibration_1a8dccc9ef965732a47d4d47df551baa39" compoundref="_calibration_8hpp" startline="190" endline="201">operator=</referencedby>
        <referencedby refid="class_calibration_1aa05242b317e800e0c3661e03f219fd19" compoundref="_calibration_8hpp" startline="274" endline="284">operator[]</referencedby>
        <referencedby refid="class_calibration_1aaba010db225b8b01931d013eefda800b" compoundref="_calibration_8hpp" startline="1065" endline="1088">Print</referencedby>
        <referencedby refid="class_calibration_1ab1502564e126e769e782d221d42608c7" compoundref="_calibration_8hpp" startline="990" endline="1014">set</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibration_1a2988b922363b5d090771be9961254cbc" prot="private" static="no" mutable="no">
        <type><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref></type>
        <definition>Label Calibration::m_nb_detectors</definition>
        <argsstring></argsstring>
        <name>m_nb_detectors</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="317" column="9" bodyfile="lib/Modules/Calibration.hpp" bodystart="317" bodyend="-1"/>
        <referencedby refid="class_calibration_1a8e35cee6894b7e32cb4e6dcbbe26a0c4" compoundref="_calibration_8hpp" startline="177" endline="187">Calibration</referencedby>
        <referencedby refid="class_calibration_1a2d2a0d6276fc2c8a4b60c3801ccc16a9" compoundref="_calibration_8hpp" startline="1016" endline="1063">load</referencedby>
        <referencedby refid="class_calibration_1a8dccc9ef965732a47d4d47df551baa39" compoundref="_calibration_8hpp" startline="190" endline="201">operator=</referencedby>
        <referencedby refid="class_calibration_1ac4b8f57b3d896cda20a6aa3ba04a78e7" compoundref="_calibration_8hpp" startline="271" endline="271">size</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibration_1aea5e9bf6d006f5e26702953552e97dec" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Calibration::m_ok</definition>
        <argsstring></argsstring>
        <name>m_ok</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="315" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="315" bodyend="-1"/>
        <referencedby refid="class_calibration_1a80f51a5ff7ec0f44d5388c9a61d1f20b" compoundref="_calibration_8hpp" startline="174" endline="174">Calibration</referencedby>
        <referencedby refid="class_calibration_1abbc453abf77e6b7a2a10cebd21021578" compoundref="_calibration_8hpp" startline="258" endline="258">isFilled</referencedby>
        <referencedby refid="class_calibration_1a2d2a0d6276fc2c8a4b60c3801ccc16a9" compoundref="_calibration_8hpp" startline="1016" endline="1063">load</referencedby>
        <referencedby refid="class_calibration_1a5c7e1af9dbc7e67aee28e8da897fb29e" compoundref="_calibration_8hpp" startline="263" endline="263">operator bool</referencedby>
        <referencedby refid="class_calibration_1a8dccc9ef965732a47d4d47df551baa39" compoundref="_calibration_8hpp" startline="190" endline="201">operator=</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" prot="private" static="no" mutable="no">
        <type>std::vector&lt; char &gt;</type>
        <definition>std::vector&lt;char&gt; Calibration::m_order</definition>
        <argsstring></argsstring>
        <name>m_order</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="319" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="319" bodyend="-1"/>
        <referencedby refid="class_calibration_1aa09b700f10eaaa69a97a0cc6da973a06" compoundref="_calibration_8hpp" startline="969" endline="980">calibrate</referencedby>
        <referencedby refid="class_calibration_1a8e35cee6894b7e32cb4e6dcbbe26a0c4" compoundref="_calibration_8hpp" startline="177" endline="187">Calibration</referencedby>
        <referencedby refid="class_calibration_1ae62aaba8d0f0f77aecf89a5ad1e7605a" compoundref="_calibration_8hpp" startline="527" endline="544">fillHisto</referencedby>
        <referencedby refid="class_calibration_1a24ea2b9275978de50b573394840c1f37" compoundref="_calibration_8hpp" startline="286" endline="286">getOrder</referencedby>
        <referencedby refid="class_calibration_1a2d2a0d6276fc2c8a4b60c3801ccc16a9" compoundref="_calibration_8hpp" startline="1016" endline="1063">load</referencedby>
        <referencedby refid="class_calibration_1a8dccc9ef965732a47d4d47df551baa39" compoundref="_calibration_8hpp" startline="190" endline="201">operator=</referencedby>
        <referencedby refid="class_calibration_1aa05242b317e800e0c3661e03f219fd19" compoundref="_calibration_8hpp" startline="274" endline="284">operator[]</referencedby>
        <referencedby refid="class_calibration_1aaba010db225b8b01931d013eefda800b" compoundref="_calibration_8hpp" startline="1065" endline="1088">Print</referencedby>
        <referencedby refid="class_calibration_1ab1502564e126e769e782d221d42608c7" compoundref="_calibration_8hpp" startline="990" endline="1014">set</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibration_1aac1e6d5d59bbe89c95efa142544bf754" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Calibration::m_outCalib</definition>
        <argsstring></argsstring>
        <name>m_outCalib</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="305" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_calibration_1aeb59e25057913962bc8ee43d9567e024" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Calibration::m_outDir</definition>
        <argsstring></argsstring>
        <name>m_outDir</name>
        <initializer>= &quot;Calibration/&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="306" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_calibration_1a29b20b0d12f1b9226e1e8c9355e54e09" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Calibration::m_outRoot</definition>
        <argsstring></argsstring>
        <name>m_outRoot</name>
        <initializer>= &quot;calibration.root&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="304" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_calibration_1a70510eaabac228f419cf7c253055292d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Calibration::m_outRoot_b</definition>
        <argsstring></argsstring>
        <name>m_outRoot_b</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="302" column="13" bodyfile="lib/Modules/Calibration.hpp" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_calibration_1af45a5eab10d1d3eb0b15a34baf1908c7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Calibration::m_residus</definition>
        <argsstring></argsstring>
        <name>m_residus</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="301" column="13" bodyfile="lib/Modules/Calibration.hpp" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_calibration_1a8b66733b050e8743b1887fbed7284269" prot="private" static="no" mutable="no">
        <type><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref></type>
        <definition>Label Calibration::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="318" column="9" bodyfile="lib/Modules/Calibration.hpp" bodystart="318" bodyend="-1"/>
        <referencedby refid="class_calibration_1a1732880c01e21df259b4ff45dba24c59" compoundref="_calibration_8hpp" startline="982" endline="988">calibrate</referencedby>
        <referencedby refid="class_calibration_1a8e35cee6894b7e32cb4e6dcbbe26a0c4" compoundref="_calibration_8hpp" startline="177" endline="187">Calibration</referencedby>
        <referencedby refid="class_calibration_1a2d2a0d6276fc2c8a4b60c3801ccc16a9" compoundref="_calibration_8hpp" startline="1016" endline="1063">load</referencedby>
        <referencedby refid="class_calibration_1a5c7e1af9dbc7e67aee28e8da897fb29e" compoundref="_calibration_8hpp" startline="263" endline="263">operator bool</referencedby>
        <referencedby refid="class_calibration_1a8dccc9ef965732a47d4d47df551baa39" compoundref="_calibration_8hpp" startline="190" endline="201">operator=</referencedby>
        <referencedby refid="class_calibration_1aaba010db225b8b01931d013eefda800b" compoundref="_calibration_8hpp" startline="1065" endline="1088">Print</referencedby>
        <referencedby refid="class_calibration_1a72f3838ece8f07239511fac7c09b1e8c" compoundref="_calibration_8hpp" startline="955" endline="967">setCalibrationTables</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibration_1a0a42451d9596c8378387169d08c6000b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref> &gt;</type>
        <definition>std::vector&lt;NRJ&gt; Calibration::m_slope</definition>
        <argsstring></argsstring>
        <name>m_slope</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="321" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="321" bodyend="-1"/>
        <referencedby refid="class_calibration_1aa09b700f10eaaa69a97a0cc6da973a06" compoundref="_calibration_8hpp" startline="969" endline="980">calibrate</referencedby>
        <referencedby refid="class_calibration_1a8e35cee6894b7e32cb4e6dcbbe26a0c4" compoundref="_calibration_8hpp" startline="177" endline="187">Calibration</referencedby>
        <referencedby refid="class_calibration_1abb43af389c40ed02d3bf982ceeb3a8a1" compoundref="_calibration_8hpp" startline="288" endline="288">getSlope</referencedby>
        <referencedby refid="class_calibration_1a2d2a0d6276fc2c8a4b60c3801ccc16a9" compoundref="_calibration_8hpp" startline="1016" endline="1063">load</referencedby>
        <referencedby refid="class_calibration_1a8dccc9ef965732a47d4d47df551baa39" compoundref="_calibration_8hpp" startline="190" endline="201">operator=</referencedby>
        <referencedby refid="class_calibration_1aa05242b317e800e0c3661e03f219fd19" compoundref="_calibration_8hpp" startline="274" endline="284">operator[]</referencedby>
        <referencedby refid="class_calibration_1aaba010db225b8b01931d013eefda800b" compoundref="_calibration_8hpp" startline="1065" endline="1088">Print</referencedby>
        <referencedby refid="class_calibration_1ab1502564e126e769e782d221d42608c7" compoundref="_calibration_8hpp" startline="990" endline="1014">set</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibration_1a9057002e470a0cb2f7b6353ebf8ceb1f" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Calibration::m_source</definition>
        <argsstring></argsstring>
        <name>m_source</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="303" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="303" bodyend="-1"/>
        <referencedby refid="class_calibration_1a1309d57acace816189615a841b38e45e" compoundref="_calibration_8hpp" startline="234" endline="234">setSource</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibration_1a33557fc219e93f9afe9ae38e12e649b7" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref> &gt;</type>
        <definition>std::vector&lt;NRJ&gt; Calibration::m_trinom</definition>
        <argsstring></argsstring>
        <name>m_trinom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="323" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="323" bodyend="-1"/>
        <referencedby refid="class_calibration_1aa09b700f10eaaa69a97a0cc6da973a06" compoundref="_calibration_8hpp" startline="969" endline="980">calibrate</referencedby>
        <referencedby refid="class_calibration_1a8e35cee6894b7e32cb4e6dcbbe26a0c4" compoundref="_calibration_8hpp" startline="177" endline="187">Calibration</referencedby>
        <referencedby refid="class_calibration_1a5cb5385a26267978aa3b9c2846c76ebd" compoundref="_calibration_8hpp" startline="290" endline="290">getTrinom</referencedby>
        <referencedby refid="class_calibration_1a2d2a0d6276fc2c8a4b60c3801ccc16a9" compoundref="_calibration_8hpp" startline="1016" endline="1063">load</referencedby>
        <referencedby refid="class_calibration_1a8dccc9ef965732a47d4d47df551baa39" compoundref="_calibration_8hpp" startline="190" endline="201">operator=</referencedby>
        <referencedby refid="class_calibration_1aa05242b317e800e0c3661e03f219fd19" compoundref="_calibration_8hpp" startline="274" endline="284">operator[]</referencedby>
        <referencedby refid="class_calibration_1aaba010db225b8b01931d013eefda800b" compoundref="_calibration_8hpp" startline="1065" endline="1088">Print</referencedby>
        <referencedby refid="class_calibration_1ab1502564e126e769e782d221d42608c7" compoundref="_calibration_8hpp" startline="990" endline="1014">set</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibration_1a8e0d431465c589e805f74aacfabeb1d7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Calibration::m_verbose</definition>
        <argsstring></argsstring>
        <name>m_verbose</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="300" column="13" bodyfile="lib/Modules/Calibration.hpp" bodystart="300" bodyend="-1"/>
        <referencedby refid="class_calibration_1aea14328cc8a0ab1cf559cd07f8c6a065" compoundref="_calibration_8hpp" startline="852" endline="910">fitCalibration</referencedby>
        <referencedby refid="class_calibration_1ad6db2742477c8ac64787c6fe8a687aff" compoundref="_calibration_8hpp" startline="552" endline="850">peakFinder</referencedby>
        <referencedby refid="class_calibration_1ad7edc19a4eb1ea5d4af680152ce14521" compoundref="_calibration_8hpp" startline="235" endline="235">verbose</referencedby>
        <referencedby refid="class_calibration_1a344dc3d6feab3580e859cc693c2fdd4a" compoundref="_calibration_8hpp" startline="1128" endline="1171">verify</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_calibration_1a75bc8afd8de82f44b5e698aab02ebedc" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool Calibration::m_treatOnlyGe</definition>
        <argsstring></argsstring>
        <name>m_treatOnlyGe</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="310" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="310" bodyend="-1"/>
        <referencedby refid="class_calibration_1ad6db2742477c8ac64787c6fe8a687aff" compoundref="_calibration_8hpp" startline="552" endline="850">peakFinder</referencedby>
        <referencedby refid="class_calibration_1ae0589067deaac25425e5db02d8c06551" compoundref="_calibration_8hpp" startline="293" endline="293">treatOnlyGe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibration_1a5198af653597c26d18433c6f28bdc171" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool Calibration::m_treatOnlyParis</definition>
        <argsstring></argsstring>
        <name>m_treatOnlyParis</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="309" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="309" bodyend="-1"/>
        <referencedby refid="class_calibration_1ad6db2742477c8ac64787c6fe8a687aff" compoundref="_calibration_8hpp" startline="552" endline="850">peakFinder</referencedby>
        <referencedby refid="class_calibration_1ac6510b729a9d8f0803760c2939527df5" compoundref="_calibration_8hpp" startline="292" endline="292">treatOnlyParis</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_calibration_1ae6bbaf8b283a345c9936a907fcba1849" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::analyse</definition>
        <argsstring>(std::string const &amp;source=&quot;152Eu&quot;)</argsstring>
        <name>analyse</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>source</declname>
          <defval>&quot;152Eu&quot;</defval>
        </param>
        <briefdescription>
<para>Analyse the spectra to extract calibration coefficients. </para>
        </briefdescription>
        <detaileddescription>
<para>The peak finding follows the following principle : We start from the bin at the very right side of the spectra. Then we add the value of the bin to the integral counter. Then we add the value of the next bin on the left, then the next, etc.. That is, we integrate the spectra from right to left The moment the first peak is found, the higher energy one, the integral will suddenly increase Then we have to determine a threshold above which we say &quot;we have found the first peak&quot; From this we determine a really rough first linear calibration. This allows us to find, for each other peak, an energy windows in which it should be. Once this window established, we find its centroid. Then we create a smaller window and find again the centroid. A third window (which may not me important ?) event narrower is set around the peak. Then the peak is fitted and the mean value of the gaussian fit added to the calibration curve. Finally, the fit of the calibration curve gives the calibration coefficients.</para>
<para>The threshold is taken as the ratio between the integral and the total integral of the spectra, so that the process do not depend neither on different counting rates nor on different calibration duration. Only issue : it depends on the kind of detector and to some extend to the geometry. That is, this calibration is not well suited for paris detectors... Also, if a peak is absent due to for instance high energy threshold of the detector (typically 121keV of 152Eu is absent in some noisy channels) then the calibration will fail</para>
<para><simplesect kind="attention"><para>The most difficult part is to find the value of the threshold, wich must be different for each kind of detector. If it is different for differents detectors of the same type (e.g. paris) then the calibration requires additionnal work.</para>
</simplesect>
<simplesect kind="attention"><para>Take care of the binning of the spectra. If there is too much or not enough bins then the peak fitting will fail, if the maximum ADC value is lower than the higher energy peak then the peak findind will fail. Also, everything supposes the minimum bin corresponds to 0, otherwise it might fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="224" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="944" bodyend="952"/>
        <references refid="class_calibration_1aea14328cc8a0ab1cf559cd07f8c6a065" compoundref="_calibration_8hpp" startline="852" endline="910">fitCalibration</references>
        <references refid="class_calibration_1ad17169e9dbae0e5ec2e63f60f1eebdf3" compoundref="_calibration_8hpp" startline="312">m_fits</references>
        <references refid="class_calibration_1ad6db2742477c8ac64787c6fe8a687aff" compoundref="_calibration_8hpp" startline="552" endline="850">peakFinder</references>
        <references refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29">print</references>
        <referencedby refid="class_calibration_1aa7e921cbc724d97d1a3ef30a4f988e63" compoundref="_calibration_8hpp" startline="393" endline="406">calculate</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1aa7e921cbc724d97d1a3ef30a4f988e63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::calculate</definition>
        <argsstring>(std::string const &amp;dataDir, int nb_files=-1, std::string const &amp;source=&quot;152Eu&quot;, std::string const &amp;type=&quot;fast&quot;)</argsstring>
        <name>calculate</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>dataDir</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nb_files</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>source</declname>
          <defval>&quot;152Eu&quot;</defval>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>type</declname>
          <defval>&quot;fast&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="210" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="393" bodyend="406"/>
        <references refid="class_calibration_1ae6bbaf8b283a345c9936a907fcba1849" compoundref="_calibration_8hpp" startline="944" endline="952">analyse</references>
        <references refid="class_calibration_1a6514307ca111ecc5d6f02694373dc5ec" compoundref="_calibration_8hpp" startline="454" endline="463">loadFasterData</references>
        <references refid="class_calibration_1a6d6d354f65db38acf12addf1efb7c815" compoundref="_calibration_8hpp" startline="465" endline="474">loadRootData</references>
        <references refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29">print</references>
        <references refid="class_calibration_1a7e89a0c788e7ad97c2a9cea5e02ef3f2" compoundref="_calibration_8hpp" startline="1108" endline="1117">writeData</references>
        <references refid="class_calibration_1a062cb134d4b82246ba9c89c567a32963" compoundref="_calibration_8hpp" startline="1119" endline="1126">writeRawRoot</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a178a349d575d8f0e8b090f828def78b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::calculate</definition>
        <argsstring>(std::string const &amp;histograms, std::string const &amp;source=&quot;152Eu&quot;)</argsstring>
        <name>calculate</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>histograms</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>source</declname>
          <defval>&quot;152Eu&quot;</defval>
        </param>
        <briefdescription>
<para>Calculate calibration from .root histograms. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>TODO </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="214" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="409" bodyend="417"/>
        <references refid="class_calibration_1ae6bbaf8b283a345c9936a907fcba1849" compoundref="_calibration_8hpp" startline="944" endline="952">analyse</references>
        <references refid="class_calibration_1a2f91a6803bf8008bd7b748d4a1688338" compoundref="_calibration_8hpp" startline="216" endline="216">Initialize</references>
        <references refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29">print</references>
        <references refid="class_calibration_1a7e89a0c788e7ad97c2a9cea5e02ef3f2" compoundref="_calibration_8hpp" startline="1108" endline="1117">writeData</references>
        <references refid="class_calibration_1a062cb134d4b82246ba9c89c567a32963" compoundref="_calibration_8hpp" startline="1119" endline="1126">writeRawRoot</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a1732880c01e21df259b4ff45dba24c59" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::calibrate</definition>
        <argsstring>(Hit &amp;hit) const</argsstring>
        <name>calibrate</name>
        <param>
          <type><ref refid="class_hit" kindref="compound">Hit</ref> &amp;</type>
          <declname>hit</declname>
        </param>
        <briefdescription>
<para>avoid using this one </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="240" column="9" bodyfile="lib/Modules/Calibration.hpp" bodystart="982" bodyend="988"/>
        <references refid="class_hit_1a3d999e7bbbb470d1d3aa55ee772a98d6" compoundref="_hit_8hpp" startline="198">Hit::adc</references>
        <references refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" compoundref="_hit_8hpp" startline="196">Hit::label</references>
        <references refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" compoundref="_calibration_8hpp" startline="318">m_size</references>
        <references refid="class_hit_1abda4857e925c3a6315a6fb41fad59189" compoundref="_hit_8hpp" startline="199">Hit::nrj</references>
        <references refid="class_hit_1ab4b93fbbb58d5bf2fd3480238d93065a" compoundref="_hit_8hpp" startline="202">Hit::nrj2</references>
        <references refid="class_hit_1a07541ef2177c95ba3de7df1fed1c986f" compoundref="_hit_8hpp" startline="201">Hit::qdc2</references>
        <referencedby refid="class_calibration_1ae62aaba8d0f0f77aecf89a5ad1e7605a" compoundref="_calibration_8hpp" startline="527" endline="544">fillHisto</referencedby>
        <referencedby refid="class_calibration_1afd14ef8f1b6cee6cf7abc10783ee318e" compoundref="_calibration_8hpp" startline="485" endline="525">fillRootDataHisto</referencedby>
        <referencedby refid="class_run_matrixator_1a8d8f01fad64864d032395e18b10c2a7e" compoundref="_run_matrixator_8hpp" startline="253" endline="299">RunMatrixator::loadData_faster</referencedby>
        <referencedby refid="class_calibration_1a7765db4a6f5a278f82d1462bde812c32" compoundref="_calibration_8hpp" startline="250" endline="250">operator()</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1aa09b700f10eaaa69a97a0cc6da973a06" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref></type>
        <definition>NRJ Calibration::calibrate</definition>
        <argsstring>(NRJ const &amp;nrj, Label const &amp;label) const</argsstring>
        <name>calibrate</name>
        <param>
          <type><ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref> const &amp;</type>
          <declname>nrj</declname>
        </param>
        <param>
          <type><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref> const &amp;</type>
          <declname>label</declname>
        </param>
        <briefdescription>
<para>calibrate the ADC value using the parameters extracted from the calibration data </para>
        </briefdescription>
        <detaileddescription>
<para>calibrate the nrj value using the parameters extracted from the calibration data </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="246" column="7" bodyfile="lib/Modules/Calibration.hpp" bodystart="969" bodyend="980"/>
        <references refid="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" compoundref="_calibration_8hpp" startline="322">m_binom</references>
        <references refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" compoundref="_calibration_8hpp" startline="320">m_intercept</references>
        <references refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" compoundref="_calibration_8hpp" startline="319">m_order</references>
        <references refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" compoundref="_calibration_8hpp" startline="321">m_slope</references>
        <references refid="class_calibration_1a33557fc219e93f9afe9ae38e12e649b7" compoundref="_calibration_8hpp" startline="323">m_trinom</references>
        <references refid="random_8hpp_1a61ebdcf7bf06323f12806134068541a7" compoundref="random_8hpp" startline="10" endline="10">random_uniform</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a1fd883ea005baf150b37cdf8ccf68014" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool const  &amp;</type>
        <definition>bool const&amp; Calibration::calibrate_data</definition>
        <argsstring>()</argsstring>
        <name>calibrate_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="255" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="255" bodyend="255"/>
        <references refid="class_calibration_1afa4ecd691e71e5b13504bfe7d71950ac" compoundref="_calibration_8hpp" startline="316">m_calibrate_data</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a0b91d7d6484d4c4b8af93a0709b94291" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool const  &amp;</type>
        <definition>bool const&amp; Calibration::calibrate_data</definition>
        <argsstring>() const</argsstring>
        <name>calibrate_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="254" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="254" bodyend="254"/>
        <references refid="class_calibration_1afa4ecd691e71e5b13504bfe7d71950ac" compoundref="_calibration_8hpp" startline="316">m_calibrate_data</references>
        <referencedby refid="class_calibration_1ae62aaba8d0f0f77aecf89a5ad1e7605a" compoundref="_calibration_8hpp" startline="527" endline="544">fillHisto</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a5931047806db77858db6886d041db100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::calibrateFasterData</definition>
        <argsstring>(std::string const &amp;folder, int const &amp;nb_files=-1)</argsstring>
        <name>calibrateFasterData</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>folder</declname>
        </param>
        <param>
          <type>int const &amp;</type>
          <declname>nb_files</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="252" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="1182" bodyend="1186"/>
        <references refid="class_calibration_1a6514307ca111ecc5d6f02694373dc5ec" compoundref="_calibration_8hpp" startline="454" endline="463">loadFasterData</references>
        <references refid="class_calibration_1afa4ecd691e71e5b13504bfe7d71950ac" compoundref="_calibration_8hpp" startline="316">m_calibrate_data</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1ac7678b0524f8407659a9594b3862e5c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::calibrateRootData</definition>
        <argsstring>(std::string const &amp;folder, int const &amp;nb_files=-1)</argsstring>
        <name>calibrateRootData</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>folder</declname>
        </param>
        <param>
          <type>int const &amp;</type>
          <declname>nb_files</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="253" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="1188" bodyend="1192"/>
        <references refid="class_calibration_1a6d6d354f65db38acf12addf1efb7c815" compoundref="_calibration_8hpp" startline="465" endline="474">loadRootData</references>
        <references refid="class_calibration_1afa4ecd691e71e5b13504bfe7d71950ac" compoundref="_calibration_8hpp" startline="316">m_calibrate_data</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a80f51a5ff7ec0f44d5388c9a61d1f20b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Calibration::Calibration</definition>
        <argsstring>()</argsstring>
        <name>Calibration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="174" column="3" bodyfile="lib/Modules/Calibration.hpp" bodystart="174" bodyend="174"/>
        <references refid="class_calibration_1aea5e9bf6d006f5e26702953552e97dec" compoundref="_calibration_8hpp" startline="315">m_ok</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a8e35cee6894b7e32cb4e6dcbbe26a0c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Calibration::Calibration</definition>
        <argsstring>(Calibration const &amp;otherCalib)</argsstring>
        <name>Calibration</name>
        <param>
          <type><ref refid="class_calibration" kindref="compound">Calibration</ref> const &amp;</type>
          <declname>otherCalib</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="177" column="3" bodyfile="lib/Modules/Calibration.hpp" bodystart="177" bodyend="187"/>
        <references refid="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" compoundref="_calibration_8hpp" startline="322">m_binom</references>
        <references refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" compoundref="_calibration_8hpp" startline="320">m_intercept</references>
        <references refid="class_calibration_1a2988b922363b5d090771be9961254cbc" compoundref="_calibration_8hpp" startline="317">m_nb_detectors</references>
        <references refid="class_calibration_1aea5e9bf6d006f5e26702953552e97dec" compoundref="_calibration_8hpp" startline="315">m_ok</references>
        <references refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" compoundref="_calibration_8hpp" startline="319">m_order</references>
        <references refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" compoundref="_calibration_8hpp" startline="318">m_size</references>
        <references refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" compoundref="_calibration_8hpp" startline="321">m_slope</references>
        <references refid="class_calibration_1a33557fc219e93f9afe9ae38e12e649b7" compoundref="_calibration_8hpp" startline="323">m_trinom</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a336bd1a54676bff92a192e8df26232ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Calibration::Calibration</definition>
        <argsstring>(const char *calibFileName)</argsstring>
        <name>Calibration</name>
        <param>
          <type>const char *</type>
          <declname>calibFileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="205" column="3" bodyfile="lib/Modules/Calibration.hpp" bodystart="205" bodyend="205"/>
        <references refid="class_calibration_1a2d2a0d6276fc2c8a4b60c3801ccc16a9" compoundref="_calibration_8hpp" startline="1016" endline="1063">load</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a7f6c78bdfc53cf5adc6ec67c2f182f16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Calibration::Calibration</definition>
        <argsstring>(std::string const &amp;calibFileName)</argsstring>
        <name>Calibration</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>calibFileName</declname>
        </param>
        <briefdescription>
<para>Loading calibration from file name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="204" column="3" bodyfile="lib/Modules/Calibration.hpp" bodystart="204" bodyend="204"/>
        <references refid="class_calibration_1a2d2a0d6276fc2c8a4b60c3801ccc16a9" compoundref="_calibration_8hpp" startline="1016" endline="1063">load</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1acfdcf94af247e6907aa09d086c1e4186" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; Calibration::file</definition>
        <argsstring>() const</argsstring>
        <name>file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="261" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="261" bodyend="261"/>
        <references refid="class_calibration_1ada2b7de482524ffd3e0a9b6038e3d6de" compoundref="_calibration_8hpp" startline="307">m_filename</references>
        <referencedby refid="class_calibration_1afd14ef8f1b6cee6cf7abc10783ee318e" compoundref="_calibration_8hpp" startline="485" endline="525">fillRootDataHisto</referencedby>
        <referencedby refid="class_calibration_1a7835b1d9192d2c9fa8dcd8efbceb8db3" compoundref="_calibration_8hpp" startline="419" endline="452">loadRootHisto</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1afd14ef8f1b6cee6cf7abc10783ee318e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::fillRootDataHisto</definition>
        <argsstring>(std::string const &amp;filename)</argsstring>
        <name>fillRootDataHisto</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="220" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="485" bodyend="525"/>
        <references refid="class_event_1a3e0953c870297eee51ce555908923bb3" compoundref="_event_8hpp" startline="181">Event::adcs</references>
        <references refid="struct_calibration_1_1histograms_1a4e3132f86e81180b0e35833ed839057d" compoundref="_calibration_8hpp" startline="162">Calibration::histograms::all_calib</references>
        <references refid="struct_calibration_1_1histograms_1a8b5260e1a8f3434d96c5cd83402a48fc" compoundref="_calibration_8hpp" startline="161">Calibration::histograms::calib_spectra</references>
        <references refid="class_calibration_1a1732880c01e21df259b4ff45dba24c59" compoundref="_calibration_8hpp" startline="982" endline="988">calibrate</references>
        <references refid="_detectors_8hpp_1adc256156b68f8dd6b9f2c2da57808bd3">compressedLabel</references>
        <references refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813">detectors</references>
        <references refid="class_calibration_1acfdcf94af247e6907aa09d086c1e4186" compoundref="_calibration_8hpp" startline="261" endline="261">file</references>
        <references refid="_detectors_8hpp_1a82c5910e3b4f178c276c8b888c5ac162">isParis</references>
        <references refid="class_calibration_1afa4ecd691e71e5b13504bfe7d71950ac" compoundref="_calibration_8hpp" startline="316">m_calibrate_data</references>
        <references refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a">m_histos</references>
        <references refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29">print</references>
        <references refid="class_event_1a7bc76ee166649431e9010875202ca6c1" compoundref="_event_8hpp" startline="183">Event::qdc2s</references>
        <references refid="struct_calibration_1_1histograms_1a4665ea6699e47b50df6103317d87d36b" compoundref="_calibration_8hpp" startline="157">Calibration::histograms::raw_spectra</references>
        <references refid="class_event_1a243e29bac8d969902d32a4d444fc5174" compoundref="_event_8hpp" startline="234" endline="262">Event::reading</references>
        <references refid="class_detectors_1ab4d5e6cc24173a65a35788ba7c680264" compoundref="_detectors_8hpp" startline="94" endline="94">Detectors::typeIndex</references>
        <referencedby refid="class_calibration_1a58f794ed6862bc71c09b440e63ea94f1" compoundref="_calibration_8hpp" startline="476" endline="483">loadRootDataThread</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1aea14328cc8a0ab1cf559cd07f8c6a065" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::fitCalibration</definition>
        <argsstring>(Fits &amp;fits)</argsstring>
        <name>fitCalibration</name>
        <param>
          <type><ref refid="_calibration_8hpp_1a3e47c22fe90cb9e403d05dc134b6a047" kindref="member">Fits</ref> &amp;</type>
          <declname>fits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="226" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="852" bodyend="910"/>
        <references refid="class_fit_1ac128f10e2e52aa39445e4363168d5f73" compoundref="_calibration_8hpp" startline="105">Fit::chi2</references>
        <references refid="class_fit_1ac752a6bea753f20d4a8ed0a887447d7c" compoundref="_calibration_8hpp" startline="93">Fit::cmeasures</references>
        <references refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813">detectors</references>
        <references refid="class_fit_1afffcdcd0341476a634e763b8bb2158ce" compoundref="_calibration_8hpp" startline="100">Fit::ex</references>
        <references refid="class_fit_1aa524861d860cc6384c92425166453e93" compoundref="_calibration_8hpp" startline="70" endline="70">Fit::exists</references>
        <references refid="class_fit_1a6777a3d0b233e491b99c6b22ba1b7290" compoundref="_calibration_8hpp" startline="101">Fit::ey</references>
        <references refid="_detectors_8hpp_1a3148345147f51e96aaa73e5d9f8e9d93">isDSSD</references>
        <references refid="_detectors_8hpp_1a5da74af4e038f2a435565e2e93a6831e">isGe</references>
        <references refid="_detectors_8hpp_1ac1f4e8d98df1dbbcb0c6ccf4a7b9a538">isLaBr3</references>
        <references refid="_detectors_8hpp_1a82c5910e3b4f178c276c8b888c5ac162">isParis</references>
        <references refid="class_calibration_1a8e0d431465c589e805f74aacfabeb1d7" compoundref="_calibration_8hpp" startline="300">m_verbose</references>
        <references refid="class_fit_1a964131fabef1652357c6f1dd08f9f2de" compoundref="_calibration_8hpp" startline="114">Fit::name</references>
        <references refid="class_fit_1a09a8cb0e9a300f8aeef67fcd267cb8f2" compoundref="_calibration_8hpp" startline="112">Fit::order</references>
        <references refid="class_fit_1a6dd1941f173b91a904be34afca6cd5d0" compoundref="_calibration_8hpp" startline="106">Fit::parameter0</references>
        <references refid="class_fit_1abe17456d5a2ccb50497d776f4f63f98b" compoundref="_calibration_8hpp" startline="107">Fit::parameter1</references>
        <references refid="class_fit_1a394d86d19fb25ad5facea296ed71bb1e" compoundref="_calibration_8hpp" startline="108">Fit::parameter2</references>
        <references refid="class_fit_1a8f443c41d92e502b2fe55453560457e2" compoundref="_calibration_8hpp" startline="92">Fit::peaks</references>
        <references refid="class_fit_1a522102240db21bfd9dd69f15ea3b3656" compoundref="_calibration_8hpp" startline="110">Fit::scalefactor</references>
        <references refid="class_detectors_1a1177661fb15c9825755925faf00c8398" compoundref="_detectors_8hpp" startline="74" endline="74">Detectors::size</references>
        <references refid="class_fit_1a5a9406e4e285484650609f696d96ffa2" compoundref="_calibration_8hpp" startline="98">Fit::x</references>
        <references refid="class_fit_1a36eda8829f68c74fdf657a065481a3f8" compoundref="_calibration_8hpp" startline="99">Fit::y</references>
        <referencedby refid="class_calibration_1ae6bbaf8b283a345c9936a907fcba1849" compoundref="_calibration_8hpp" startline="944" endline="952">analyse</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a723ff9aee7af762a1b7302472008f97b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; Calibration::getBinom</definition>
        <argsstring>() const</argsstring>
        <name>getBinom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="289" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="289" bodyend="289"/>
        <references refid="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" compoundref="_calibration_8hpp" startline="322">m_binom</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1aedbbf3043605ea4bce5044113484b5dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; Calibration::getIntercept</definition>
        <argsstring>() const</argsstring>
        <name>getIntercept</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="287" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="287" bodyend="287"/>
        <references refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" compoundref="_calibration_8hpp" startline="320">m_intercept</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a24ea2b9275978de50b573394840c1f37" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; Calibration::getOrder</definition>
        <argsstring>() const</argsstring>
        <name>getOrder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="286" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="286" bodyend="286"/>
        <references refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" compoundref="_calibration_8hpp" startline="319">m_order</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1abb43af389c40ed02d3bf982ceeb3a8a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; Calibration::getSlope</definition>
        <argsstring>() const</argsstring>
        <name>getSlope</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="288" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="288" bodyend="288"/>
        <references refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" compoundref="_calibration_8hpp" startline="321">m_slope</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a5cb5385a26267978aa3b9c2846c76ebd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; Calibration::getTrinom</definition>
        <argsstring>() const</argsstring>
        <name>getTrinom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="290" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="290" bodyend="290"/>
        <references refid="class_calibration_1a33557fc219e93f9afe9ae38e12e649b7" compoundref="_calibration_8hpp" startline="323">m_trinom</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a2f91a6803bf8008bd7b748d4a1688338" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::Initialize</definition>
        <argsstring>()</argsstring>
        <name>Initialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="216" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="216" bodyend="216"/>
        <references refid="struct_calibration_1_1histograms_1a911cfd2064bd94694cd0731aa6afccfa" compoundref="_calibration_8hpp" startline="330" endline="372">Calibration::histograms::Initialize</references>
        <references refid="class_calibration_1ad17169e9dbae0e5ec2e63f60f1eebdf3" compoundref="_calibration_8hpp" startline="312">m_fits</references>
        <references refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a">m_histos</references>
        <referencedby refid="class_calibration_1a178a349d575d8f0e8b090f828def78b6" compoundref="_calibration_8hpp" startline="409" endline="417">calculate</referencedby>
        <referencedby refid="class_calibration_1a6514307ca111ecc5d6f02694373dc5ec" compoundref="_calibration_8hpp" startline="454" endline="463">loadFasterData</referencedby>
        <referencedby refid="class_calibration_1a6d6d354f65db38acf12addf1efb7c815" compoundref="_calibration_8hpp" startline="465" endline="474">loadRootData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1abbc453abf77e6b7a2a10cebd21021578" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool const  &amp;</type>
        <definition>bool const&amp; Calibration::isFilled</definition>
        <argsstring>() const</argsstring>
        <name>isFilled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="258" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="258" bodyend="258"/>
        <references refid="class_calibration_1aea5e9bf6d006f5e26702953552e97dec" compoundref="_calibration_8hpp" startline="315">m_ok</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a2d2a0d6276fc2c8a4b60c3801ccc16a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Calibration::load</definition>
        <argsstring>(std::string const &amp;calibFileName)</argsstring>
        <name>load</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>calibFileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="207" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="1016" bodyend="1063"/>
        <references refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813">detectors</references>
        <references refid="files__functions_8hpp_1afd584978228fac5fae283c12837378dd" compoundref="files__functions_8hpp" startline="30" endline="30">file_is_empty</references>
        <references refid="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" compoundref="_calibration_8hpp" startline="322">m_binom</references>
        <references refid="class_calibration_1ada2b7de482524ffd3e0a9b6038e3d6de" compoundref="_calibration_8hpp" startline="307">m_filename</references>
        <references refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" compoundref="_calibration_8hpp" startline="320">m_intercept</references>
        <references refid="class_calibration_1a2988b922363b5d090771be9961254cbc" compoundref="_calibration_8hpp" startline="317">m_nb_detectors</references>
        <references refid="class_calibration_1aea5e9bf6d006f5e26702953552e97dec" compoundref="_calibration_8hpp" startline="315">m_ok</references>
        <references refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" compoundref="_calibration_8hpp" startline="319">m_order</references>
        <references refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" compoundref="_calibration_8hpp" startline="318">m_size</references>
        <references refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" compoundref="_calibration_8hpp" startline="321">m_slope</references>
        <references refid="class_calibration_1a33557fc219e93f9afe9ae38e12e649b7" compoundref="_calibration_8hpp" startline="323">m_trinom</references>
        <references refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29">print</references>
        <references refid="class_detectors_1af2bb20ee60f504df326b87e9ebbaef30" compoundref="_detectors_8hpp" startline="200" endline="206">Detectors::resize</references>
        <references refid="class_calibration_1ab1502564e126e769e782d221d42608c7" compoundref="_calibration_8hpp" startline="990" endline="1014">set</references>
        <references refid="class_detectors_1a1177661fb15c9825755925faf00c8398" compoundref="_detectors_8hpp" startline="74" endline="74">Detectors::size</references>
        <references refid="class_calibration_1ac4b8f57b3d896cda20a6aa3ba04a78e7" compoundref="_calibration_8hpp" startline="271" endline="271">size</references>
        <referencedby refid="class_calibration_1a7f6c78bdfc53cf5adc6ec67c2f182f16" compoundref="_calibration_8hpp" startline="204" endline="204">Calibration</referencedby>
        <referencedby refid="class_clover_spectra_1a4631e5643c2d2d12eb2fab20c381d59c" compoundref="_clover_spectra_8hpp" startline="22" endline="22">CloverSpectra::loadCalibration</referencedby>
        <referencedby refid="class_faster2_root_1afaec1876151390b71c475885157670a3" compoundref="_faster2_root_8hpp" startline="140" endline="140">Faster2Root::loadCalibration</referencedby>
        <referencedby refid="class_faster2_histo_1a46087c5a676f688d4862304fca62cc24" compoundref="_faster2_histo_8hpp" startline="40" endline="40">Faster2Histo::loadCalibration</referencedby>
        <referencedby refid="class_calibration_1ab070c5678eee652bbb3186e6cbd37b9e" compoundref="_calibration_8hpp" startline="206" endline="206">operator=</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a6514307ca111ecc5d6f02694373dc5ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::loadFasterData</definition>
        <argsstring>(std::string const &amp;dataDir, int const &amp;nb_files=-1)</argsstring>
        <name>loadFasterData</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>dataDir</declname>
        </param>
        <param>
          <type>int const &amp;</type>
          <declname>nb_files</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="222" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="454" bodyend="463"/>
        <references refid="class_m_t_faster_reader_1a58a2fe8f9f9ba39808d43f36f45c8288" compoundref="_m_t_faster_reader_8hpp" startline="127" endline="130">MTFasterReader::addFolder</references>
        <references refid="class_calibration_1ae62aaba8d0f0f77aecf89a5ad1e7605a" compoundref="_calibration_8hpp" startline="527" endline="544">fillHisto</references>
        <references refid="class_calibration_1a2f91a6803bf8008bd7b748d4a1688338" compoundref="_calibration_8hpp" startline="216" endline="216">Initialize</references>
        <references refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29">print</references>
        <references refid="class_m_t_faster_reader_1ae316d31ebcb18ae8689522509d1ba513" compoundref="_m_t_faster_reader_8hpp" startline="184" endline="189">MTFasterReader::readRaw</references>
        <referencedby refid="class_calibration_1aa7e921cbc724d97d1a3ef30a4f988e63" compoundref="_calibration_8hpp" startline="393" endline="406">calculate</referencedby>
        <referencedby refid="class_calibration_1a5931047806db77858db6886d041db100" compoundref="_calibration_8hpp" startline="1182" endline="1186">calibrateFasterData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a6d6d354f65db38acf12addf1efb7c815" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::loadRootData</definition>
        <argsstring>(std::string const &amp;dataDir, int const &amp;nb_files=-1)</argsstring>
        <name>loadRootData</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>dataDir</declname>
        </param>
        <param>
          <type>int const &amp;</type>
          <declname>nb_files</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="218" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="465" bodyend="474"/>
        <references refid="class_files_manager_1a6d05662378bde592075237b9fa0a5168" compoundref="_files_manager_8hpp" startline="136" endline="156">FilesManager::addFolder</references>
        <references refid="class_files_manager_1a2b619786ba65a7ac1e701fc61e2409ae" compoundref="_files_manager_8hpp" startline="32" endline="32">FilesManager::getListFiles</references>
        <references refid="class_calibration_1a2f91a6803bf8008bd7b748d4a1688338" compoundref="_calibration_8hpp" startline="216" endline="216">Initialize</references>
        <references refid="class_calibration_1a58f794ed6862bc71c09b440e63ea94f1" compoundref="_calibration_8hpp" startline="476" endline="483">loadRootDataThread</references>
        <references refid="class_m_t_object_1a35c02650eb403bd54e867f93bb26fc47" compoundref="_m_t_object_8hpp" startline="76" endline="99">MTObject::parallelise_function</references>
        <references refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29">print</references>
        <referencedby refid="class_calibration_1aa7e921cbc724d97d1a3ef30a4f988e63" compoundref="_calibration_8hpp" startline="393" endline="406">calculate</referencedby>
        <referencedby refid="class_calibration_1ac7678b0524f8407659a9594b3862e5c3" compoundref="_calibration_8hpp" startline="1188" endline="1192">calibrateRootData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a7835b1d9192d2c9fa8dcd8efbceb8db3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::loadRootHisto</definition>
        <argsstring>(std::string const &amp;histograms)</argsstring>
        <name>loadRootHisto</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>histograms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="237" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="419" bodyend="452"/>
        <references refid="struct_calibration_1_1histograms_1a8b5260e1a8f3434d96c5cd83402a48fc" compoundref="_calibration_8hpp" startline="161">Calibration::histograms::calib_spectra</references>
        <references refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813">detectors</references>
        <references refid="class_calibration_1acfdcf94af247e6907aa09d086c1e4186" compoundref="_calibration_8hpp" startline="261" endline="261">file</references>
        <references refid="class_detectors_1a538487678aa928ab2956e6fb40c90472" compoundref="_detectors_8hpp" startline="99" endline="99">Detectors::getLabel</references>
        <references refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a">m_histos</references>
        <references refid="struct_calibration_1_1histograms_1a4665ea6699e47b50df6103317d87d36b" compoundref="_calibration_8hpp" startline="157">Calibration::histograms::raw_spectra</references>
        <references refid="struct_calibration_1_1histograms_1a6993a369903dab26282e44875e604d6a" compoundref="_calibration_8hpp" startline="165">Calibration::histograms::spectra</references>
        <references refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" compoundref="lib_co_8hpp" startline="234" endline="234">throw_error</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a5c7e1af9dbc7e67aee28e8da897fb29e" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>Calibration::operator bool</definition>
        <argsstring>() const &amp;</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="263" column="3" bodyfile="lib/Modules/Calibration.hpp" bodystart="263" bodyend="263"/>
        <references refid="class_calibration_1aea5e9bf6d006f5e26702953552e97dec" compoundref="_calibration_8hpp" startline="315">m_ok</references>
        <references refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" compoundref="_calibration_8hpp" startline="318">m_size</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a7765db4a6f5a278f82d1462bde812c32" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>ARGS</declname>
            <defname>ARGS</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Calibration::operator()</definition>
        <argsstring>(ARGS &amp;&amp;... args) const</argsstring>
        <name>operator()</name>
        <param>
          <type>ARGS &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Call for calibrate method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="250" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="250" bodyend="250"/>
        <references refid="class_calibration_1a1732880c01e21df259b4ff45dba24c59" compoundref="_calibration_8hpp" startline="982" endline="988">calibrate</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a8dccc9ef965732a47d4d47df551baa39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_calibration" kindref="compound">Calibration</ref> const  &amp;</type>
        <definition>Calibration const&amp; Calibration::operator=</definition>
        <argsstring>(Calibration const &amp;otherCalib)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_calibration" kindref="compound">Calibration</ref> const &amp;</type>
          <declname>otherCalib</declname>
        </param>
        <briefdescription>
<para>Copy operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="190" column="22" bodyfile="lib/Modules/Calibration.hpp" bodystart="190" bodyend="201"/>
        <references refid="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" compoundref="_calibration_8hpp" startline="322">m_binom</references>
        <references refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" compoundref="_calibration_8hpp" startline="320">m_intercept</references>
        <references refid="class_calibration_1a2988b922363b5d090771be9961254cbc" compoundref="_calibration_8hpp" startline="317">m_nb_detectors</references>
        <references refid="class_calibration_1aea5e9bf6d006f5e26702953552e97dec" compoundref="_calibration_8hpp" startline="315">m_ok</references>
        <references refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" compoundref="_calibration_8hpp" startline="319">m_order</references>
        <references refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" compoundref="_calibration_8hpp" startline="318">m_size</references>
        <references refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" compoundref="_calibration_8hpp" startline="321">m_slope</references>
        <references refid="class_calibration_1a33557fc219e93f9afe9ae38e12e649b7" compoundref="_calibration_8hpp" startline="323">m_trinom</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1ab070c5678eee652bbb3186e6cbd37b9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_calibration" kindref="compound">Calibration</ref> const  &amp;</type>
        <definition>Calibration const&amp; Calibration::operator=</definition>
        <argsstring>(std::string const &amp;calibFileName)</argsstring>
        <name>operator=</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>calibFileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="206" column="22" bodyfile="lib/Modules/Calibration.hpp" bodystart="206" bodyend="206"/>
        <references refid="class_calibration_1a2d2a0d6276fc2c8a4b60c3801ccc16a9" compoundref="_calibration_8hpp" startline="1016" endline="1063">load</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1aa05242b317e800e0c3661e03f219fd19" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref> &gt;</type>
        <definition>std::vector&lt;NRJ&gt; Calibration::operator[]</definition>
        <argsstring>(Label const &amp;label) const</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref> const &amp;</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="274" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="274" bodyend="284"/>
        <references refid="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" compoundref="_calibration_8hpp" startline="322">m_binom</references>
        <references refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" compoundref="_calibration_8hpp" startline="320">m_intercept</references>
        <references refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" compoundref="_calibration_8hpp" startline="319">m_order</references>
        <references refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" compoundref="_calibration_8hpp" startline="321">m_slope</references>
        <references refid="class_calibration_1a33557fc219e93f9afe9ae38e12e649b7" compoundref="_calibration_8hpp" startline="323">m_trinom</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1ad6db2742477c8ac64787c6fe8a687aff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::peakFinder</definition>
        <argsstring>(std::string const &amp;source)</argsstring>
        <name>peakFinder</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="225" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="552" bodyend="850"/>
        <references refid="_hit_8hpp_1a42de29176eeb225c09486aa0dcac5362" compoundref="_hit_8hpp" startline="42" endline="42">ADC_cast</references>
        <references refid="lib_root_8hpp_1a6f95a95b189be45d91548ce3bfb70a55" compoundref="lib_root_8hpp" startline="96" endline="114">AddTH1</references>
        <references refid="struct_calibration_1_1histograms_1a7459f2c745533444d1d7958fa192dd56" compoundref="_calibration_8hpp" startline="158">Calibration::histograms::all_raw_spectra</references>
        <references refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813">detectors</references>
        <references refid="class_detectors_1a47ae394beae7efa2fb8fa1a3c7f8427d" compoundref="_detectors_8hpp" startline="62" endline="62">Detectors::exists</references>
        <references refid="class_m_t_t_hist_1a9c2f7d05c9f8506382211635b35bd97b" compoundref="_m_t_t_hist_8hpp" startline="312" endline="312">MTTHist&lt; THist &gt;::get</references>
        <references refid="lib_co_8hpp_1a48e80fbfd11f9fb219b92ba1c29c1b2a" compoundref="lib_co_8hpp" startline="74" endline="74">int_cast</references>
        <references refid="_calibration_8hpp_1a53eebde5a64b66ea934c2c8a5015b9bb" compoundref="_calibration_8hpp" startline="546" endline="550">isTripleAlpha</references>
        <references refid="class_calibration_1ad17169e9dbae0e5ec2e63f60f1eebdf3" compoundref="_calibration_8hpp" startline="312">m_fits</references>
        <references refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a">m_histos</references>
        <references refid="class_calibration_1a75bc8afd8de82f44b5e698aab02ebedc" compoundref="_calibration_8hpp" startline="310">m_treatOnlyGe</references>
        <references refid="class_calibration_1a5198af653597c26d18433c6f28bdc171" compoundref="_calibration_8hpp" startline="309">m_treatOnlyParis</references>
        <references refid="class_calibration_1a8e0d431465c589e805f74aacfabeb1d7" compoundref="_calibration_8hpp" startline="300">m_verbose</references>
        <references refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29">print</references>
        <references refid="struct_calibration_1_1histograms_1a4665ea6699e47b50df6103317d87d36b" compoundref="_calibration_8hpp" startline="157">Calibration::histograms::raw_spectra</references>
        <references refid="class_detectors_1a1177661fb15c9825755925faf00c8398" compoundref="_detectors_8hpp" startline="74" endline="74">Detectors::size</references>
        <references refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" compoundref="_detectors_8hpp" startline="93" endline="93">Detectors::type</references>
        <referencedby refid="class_calibration_1ae6bbaf8b283a345c9936a907fcba1849" compoundref="_calibration_8hpp" startline="944" endline="952">analyse</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1aaba010db225b8b01931d013eefda800b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::Print</definition>
        <argsstring>()</argsstring>
        <name>Print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="260" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="1065" bodyend="1088"/>
        <references refid="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" compoundref="_calibration_8hpp" startline="322">m_binom</references>
        <references refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" compoundref="_calibration_8hpp" startline="320">m_intercept</references>
        <references refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" compoundref="_calibration_8hpp" startline="319">m_order</references>
        <references refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" compoundref="_calibration_8hpp" startline="318">m_size</references>
        <references refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" compoundref="_calibration_8hpp" startline="321">m_slope</references>
        <references refid="class_calibration_1a33557fc219e93f9afe9ae38e12e649b7" compoundref="_calibration_8hpp" startline="323">m_trinom</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a72f3838ece8f07239511fac7c09b1e8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::setCalibrationTables</definition>
        <argsstring>()</argsstring>
        <name>setCalibrationTables</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="268" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="955" bodyend="967"/>
        <references refid="class_calibration_1a6872e57ee372f02373cc14bae2254554" compoundref="_calibration_8hpp" startline="324">calibration_tables</references>
        <references refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" compoundref="_calibration_8hpp" startline="318">m_size</references>
        <references refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29">print</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a1309d57acace816189615a841b38e45e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::setSource</definition>
        <argsstring>(std::string const &amp;source)</argsstring>
        <name>setSource</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="234" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="234" bodyend="234"/>
        <references refid="class_calibration_1a9057002e470a0cb2f7b6353ebf8ceb1f" compoundref="_calibration_8hpp" startline="303">m_source</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1ac4b8f57b3d896cda20a6aa3ba04a78e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; Calibration::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>DEV. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="271" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="271" bodyend="271"/>
        <references refid="class_calibration_1a2988b922363b5d090771be9961254cbc" compoundref="_calibration_8hpp" startline="317">m_nb_detectors</references>
        <referencedby refid="class_calibration_1a2d2a0d6276fc2c8a4b60c3801ccc16a9" compoundref="_calibration_8hpp" startline="1016" endline="1063">load</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1ad7edc19a4eb1ea5d4af680152ce14521" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::verbose</definition>
        <argsstring>(bool const &amp;_verbose)</argsstring>
        <name>verbose</name>
        <param>
          <type>bool const &amp;</type>
          <declname>_verbose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="235" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="235" bodyend="235"/>
        <references refid="class_calibration_1a8e0d431465c589e805f74aacfabeb1d7" compoundref="_calibration_8hpp" startline="300">m_verbose</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a344dc3d6feab3580e859cc693c2fdd4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::verify</definition>
        <argsstring>(std::string const &amp;outfilename=&quot;verify&quot;)</argsstring>
        <name>verify</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>outfilename</declname>
          <defval>&quot;verify&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="231" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="1128" bodyend="1171"/>
        <references refid="struct_calibration_1_1histograms_1a4e3132f86e81180b0e35833ed839057d" compoundref="_calibration_8hpp" startline="162">Calibration::histograms::all_calib</references>
        <references refid="struct_calibration_1_1histograms_1a8b5260e1a8f3434d96c5cd83402a48fc" compoundref="_calibration_8hpp" startline="161">Calibration::histograms::calib_spectra</references>
        <references refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813">detectors</references>
        <references refid="lib_co_8hpp_1a2052317e56aa118e7ffcdb2e398f551c" compoundref="lib_co_8hpp" startline="86" endline="86">double_cast</references>
        <references refid="class_detectors_1a47ae394beae7efa2fb8fa1a3c7f8427d" compoundref="_detectors_8hpp" startline="62" endline="62">Detectors::exists</references>
        <references refid="lib_root_8hpp_1ae1911f5a7f54d08592ee0879f4d848f3" compoundref="lib_root_8hpp" startline="64">gRandom</references>
        <references refid="class_calibration_1ad17169e9dbae0e5ec2e63f60f1eebdf3" compoundref="_calibration_8hpp" startline="312">m_fits</references>
        <references refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a">m_histos</references>
        <references refid="class_calibration_1a8e0d431465c589e805f74aacfabeb1d7" compoundref="_calibration_8hpp" startline="300">m_verbose</references>
        <references refid="class_detectors_1a24d220832c2f0a03a0d886e11f2c284c" compoundref="_detectors_8hpp" startline="114" endline="114">Detectors::nbTypes</references>
        <references refid="_hit_8hpp_1a394977782e3af344e009b96c7d5bec92" compoundref="_hit_8hpp" startline="50" endline="50">NRJ_cast</references>
        <references refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29">print</references>
        <references refid="struct_calibration_1_1histograms_1a4665ea6699e47b50df6103317d87d36b" compoundref="_calibration_8hpp" startline="157">Calibration::histograms::raw_spectra</references>
        <references refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" compoundref="_detectors_8hpp" startline="93" endline="93">Detectors::type</references>
        <references refid="class_detectors_1ab4d5e6cc24173a65a35788ba7c680264" compoundref="_detectors_8hpp" startline="94" endline="94">Detectors::typeIndex</references>
        <references refid="class_calibration_1a8ff8375eee244f2b22b86914a1d559bc" compoundref="_calibration_8hpp" startline="1173" endline="1180">writeCalibratedHisto</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a6ad79450d0bb55baa744f6436f84dbbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::writeCalibratedData</definition>
        <argsstring>(std::string const &amp;outfilename)</argsstring>
        <name>writeCalibratedData</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>outfilename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="256" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="1194" bodyend="1201"/>
        <references refid="struct_calibration_1_1histograms_1a4e3132f86e81180b0e35833ed839057d" compoundref="_calibration_8hpp" startline="162">Calibration::histograms::all_calib</references>
        <references refid="struct_calibration_1_1histograms_1a8b5260e1a8f3434d96c5cd83402a48fc" compoundref="_calibration_8hpp" startline="161">Calibration::histograms::calib_spectra</references>
        <references refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a">m_histos</references>
        <references refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29">print</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a8ff8375eee244f2b22b86914a1d559bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::writeCalibratedHisto</definition>
        <argsstring>(std::string const &amp;outfilename)</argsstring>
        <name>writeCalibratedHisto</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>outfilename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="232" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="1173" bodyend="1180"/>
        <references refid="struct_calibration_1_1histograms_1a4e3132f86e81180b0e35833ed839057d" compoundref="_calibration_8hpp" startline="162">Calibration::histograms::all_calib</references>
        <references refid="struct_calibration_1_1histograms_1a8b5260e1a8f3434d96c5cd83402a48fc" compoundref="_calibration_8hpp" startline="161">Calibration::histograms::calib_spectra</references>
        <references refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a">m_histos</references>
        <references refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29">print</references>
        <referencedby refid="class_calibration_1a344dc3d6feab3580e859cc693c2fdd4a" compoundref="_calibration_8hpp" startline="1128" endline="1171">verify</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a7e89a0c788e7ad97c2a9cea5e02ef3f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::writeData</definition>
        <argsstring>(std::string const &amp;outfilename)</argsstring>
        <name>writeData</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>outfilename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="228" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="1108" bodyend="1117"/>
        <references refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813">detectors</references>
        <references refid="class_detectors_1a47ae394beae7efa2fb8fa1a3c7f8427d" compoundref="_detectors_8hpp" startline="62" endline="62">Detectors::exists</references>
        <references refid="class_calibration_1ad17169e9dbae0e5ec2e63f60f1eebdf3" compoundref="_calibration_8hpp" startline="312">m_fits</references>
        <references refid="class_file_1aec78af028103207cb2ce88c0120dd4f6" compoundref="files__functions_8hpp" startline="755" endline="755">File::makePath</references>
        <references refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29">print</references>
        <references refid="class_file_1af4dee1c79bf496d505633211177c6ce3" compoundref="files__functions_8hpp" startline="754" endline="754">File::setExtension</references>
        <referencedby refid="class_calibration_1aa7e921cbc724d97d1a3ef30a4f988e63" compoundref="_calibration_8hpp" startline="393" endline="406">calculate</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a53565d0fe7d92fd6d5d94eee5a97f1b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::writePosPeaks</definition>
        <argsstring>(std::string const &amp;outfilename)</argsstring>
        <name>writePosPeaks</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>outfilename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="227" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="1090" bodyend="1106"/>
        <references refid="class_calibration_1ad17169e9dbae0e5ec2e63f60f1eebdf3" compoundref="_calibration_8hpp" startline="312">m_fits</references>
        <references refid="class_file_1aec78af028103207cb2ce88c0120dd4f6" compoundref="files__functions_8hpp" startline="755" endline="755">File::makePath</references>
        <references refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29">print</references>
        <references refid="class_file_1af4dee1c79bf496d505633211177c6ce3" compoundref="files__functions_8hpp" startline="754" endline="754">File::setExtension</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a062cb134d4b82246ba9c89c567a32963" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::writeRawRoot</definition>
        <argsstring>(std::string const &amp;outfilename)</argsstring>
        <name>writeRawRoot</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>outfilename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="229" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="1119" bodyend="1126"/>
        <references refid="struct_calibration_1_1histograms_1a7459f2c745533444d1d7958fa192dd56" compoundref="_calibration_8hpp" startline="158">Calibration::histograms::all_raw_spectra</references>
        <references refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a">m_histos</references>
        <references refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29">print</references>
        <references refid="struct_calibration_1_1histograms_1a4665ea6699e47b50df6103317d87d36b" compoundref="_calibration_8hpp" startline="157">Calibration::histograms::raw_spectra</references>
        <references refid="class_m_t_t_hist_1ae9163b5b4afca69cfdebdf2cf60064cd" compoundref="_m_t_t_hist_8hpp" startline="531" endline="549">MTTHist&lt; THist &gt;::Write</references>
        <referencedby refid="class_calibration_1aa7e921cbc724d97d1a3ef30a4f988e63" compoundref="_calibration_8hpp" startline="393" endline="406">calculate</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_calibration_1ae62aaba8d0f0f77aecf89a5ad1e7605a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::fillHisto</definition>
        <argsstring>(Hit &amp;hit, FasterReader &amp;reader, Calibration &amp;calib)</argsstring>
        <name>fillHisto</name>
        <param>
          <type><ref refid="class_hit" kindref="compound">Hit</ref> &amp;</type>
          <declname>hit</declname>
        </param>
        <param>
          <type><ref refid="class_faster_reader" kindref="compound">FasterReader</ref> &amp;</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="class_calibration" kindref="compound">Calibration</ref> &amp;</type>
          <declname>calib</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="223" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="527" bodyend="544"/>
        <references refid="class_hit_1a3d999e7bbbb470d1d3aa55ee772a98d6" compoundref="_hit_8hpp" startline="198">Hit::adc</references>
        <references refid="struct_calibration_1_1histograms_1a4e3132f86e81180b0e35833ed839057d" compoundref="_calibration_8hpp" startline="162">Calibration::histograms::all_calib</references>
        <references refid="struct_calibration_1_1histograms_1a8b5260e1a8f3434d96c5cd83402a48fc" compoundref="_calibration_8hpp" startline="161">Calibration::histograms::calib_spectra</references>
        <references refid="class_calibration_1a1732880c01e21df259b4ff45dba24c59" compoundref="_calibration_8hpp" startline="982" endline="988">calibrate</references>
        <references refid="class_calibration_1a0b91d7d6484d4c4b8af93a0709b94291" compoundref="_calibration_8hpp" startline="254" endline="254">calibrate_data</references>
        <references refid="_detectors_8hpp_1adc256156b68f8dd6b9f2c2da57808bd3">compressedLabel</references>
        <references refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813">detectors</references>
        <references refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" compoundref="_hit_8hpp" startline="196">Hit::label</references>
        <references refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a">m_histos</references>
        <references refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" compoundref="_calibration_8hpp" startline="319">m_order</references>
        <references refid="struct_calibration_1_1histograms_1a4665ea6699e47b50df6103317d87d36b" compoundref="_calibration_8hpp" startline="157">Calibration::histograms::raw_spectra</references>
        <references refid="class_faster_reader_1a2d05907241b80ed637b2ae5a01503756" compoundref="_faster_reader_8hpp" startline="259" endline="270">FasterReader::Read</references>
        <references refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" compoundref="_detectors_8hpp" startline="93" endline="93">Detectors::type</references>
        <references refid="class_detectors_1ab4d5e6cc24173a65a35788ba7c680264" compoundref="_detectors_8hpp" startline="94" endline="94">Detectors::typeIndex</references>
        <referencedby refid="class_calibration_1a6514307ca111ecc5d6f02694373dc5ec" compoundref="_calibration_8hpp" startline="454" endline="463">loadFasterData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1a58f794ed6862bc71c09b440e63ea94f1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::loadRootDataThread</definition>
        <argsstring>(Calibration &amp;calib, MTList &amp;list)</argsstring>
        <name>loadRootDataThread</name>
        <param>
          <type><ref refid="class_calibration" kindref="compound">Calibration</ref> &amp;</type>
          <declname>calib</declname>
        </param>
        <param>
          <type><ref refid="_m_t_list_8hpp_1a5645cb48b623bfc2e6e274c70952a8e2" kindref="member">MTList</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="219" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="476" bodyend="483"/>
        <references refid="class_calibration_1afd14ef8f1b6cee6cf7abc10783ee318e" compoundref="_calibration_8hpp" startline="485" endline="525">fillRootDataHisto</references>
        <references refid="class_m_t_vector_1a824a9ff009dde921eec4759c69f74ca7" compoundref="_m_t_list_8hpp" startline="81" endline="91">MTVector&lt; T &gt;::getNext</references>
        <referencedby refid="class_calibration_1a6d6d354f65db38acf12addf1efb7c815" compoundref="_calibration_8hpp" startline="465" endline="474">loadRootData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1ae0589067deaac25425e5db02d8c06551" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Calibration::treatOnlyGe</definition>
        <argsstring>(bool const &amp;b=true)</argsstring>
        <name>treatOnlyGe</name>
        <param>
          <type>bool const &amp;</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="293" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="293" bodyend="293"/>
        <references refid="class_calibration_1a75bc8afd8de82f44b5e698aab02ebedc" compoundref="_calibration_8hpp" startline="310">m_treatOnlyGe</references>
      </memberdef>
      <memberdef kind="function" id="class_calibration_1ac6510b729a9d8f0803760c2939527df5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Calibration::treatOnlyParis</definition>
        <argsstring>(bool const &amp;b=true)</argsstring>
        <name>treatOnlyParis</name>
        <param>
          <type>bool const &amp;</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="292" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="292" bodyend="292"/>
        <references refid="class_calibration_1a5198af653597c26d18433c6f28bdc171" compoundref="_calibration_8hpp" startline="309">m_treatOnlyParis</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_calibration_1ab1502564e126e769e782d221d42608c7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibration::set</definition>
        <argsstring>(Label label, NRJ intercept, NRJ slope, NRJ binom, NRJ trinom)</argsstring>
        <name>set</name>
        <param>
          <type><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref></type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref></type>
          <declname>intercept</declname>
        </param>
        <param>
          <type><ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref></type>
          <declname>slope</declname>
        </param>
        <param>
          <type><ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref></type>
          <declname>binom</declname>
        </param>
        <param>
          <type><ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref></type>
          <declname>trinom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="297" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="990" bodyend="1014"/>
        <references refid="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" compoundref="_calibration_8hpp" startline="322">m_binom</references>
        <references refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" compoundref="_calibration_8hpp" startline="320">m_intercept</references>
        <references refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" compoundref="_calibration_8hpp" startline="319">m_order</references>
        <references refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" compoundref="_calibration_8hpp" startline="321">m_slope</references>
        <references refid="class_calibration_1a33557fc219e93f9afe9ae38e12e649b7" compoundref="_calibration_8hpp" startline="323">m_trinom</references>
        <referencedby refid="class_calibration_1a2d2a0d6276fc2c8a4b60c3801ccc16a9" compoundref="_calibration_8hpp" startline="1016" endline="1063">load</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="todo_1_todo000002"><xreftitle>Todo</xreftitle><xrefdescription><para><ref refid="class_calibration_1a344dc3d6feab3580e859cc693c2fdd4a" kindref="member">Calibration::verify()</ref> DO NOT SUPPORT <ref refid="class_m_t_object" kindref="compound">MTObject</ref> !! </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>MTTHist&lt; TH2F &gt;</label>
        <link refid="class_m_t_t_hist"/>
      </node>
      <node id="2">
        <label>Calibration::histograms</label>
        <link refid="struct_calibration_1_1histograms"/>
        <childnode refid="3" relation="usage">
          <edgelabel>all_raw_spectra</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Calibration</label>
        <link refid="class_calibration"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_histos</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="lib/Modules/Calibration.hpp" line="150" column="1" bodyfile="lib/Modules/Calibration.hpp" bodystart="151" bodyend="325"/>
    <listofallmembers>
      <member refid="class_calibration_1ae6bbaf8b283a345c9936a907fcba1849" prot="public" virt="non-virtual"><scope>Calibration</scope><name>analyse</name></member>
      <member refid="class_calibration_1aa7e921cbc724d97d1a3ef30a4f988e63" prot="public" virt="non-virtual"><scope>Calibration</scope><name>calculate</name></member>
      <member refid="class_calibration_1a178a349d575d8f0e8b090f828def78b6" prot="public" virt="non-virtual"><scope>Calibration</scope><name>calculate</name></member>
      <member refid="class_calibration_1a1732880c01e21df259b4ff45dba24c59" prot="public" virt="non-virtual"><scope>Calibration</scope><name>calibrate</name></member>
      <member refid="class_calibration_1aa09b700f10eaaa69a97a0cc6da973a06" prot="public" virt="non-virtual"><scope>Calibration</scope><name>calibrate</name></member>
      <member refid="class_calibration_1a0b91d7d6484d4c4b8af93a0709b94291" prot="public" virt="non-virtual"><scope>Calibration</scope><name>calibrate_data</name></member>
      <member refid="class_calibration_1a1fd883ea005baf150b37cdf8ccf68014" prot="public" virt="non-virtual"><scope>Calibration</scope><name>calibrate_data</name></member>
      <member refid="class_calibration_1a5931047806db77858db6886d041db100" prot="public" virt="non-virtual"><scope>Calibration</scope><name>calibrateFasterData</name></member>
      <member refid="class_calibration_1ac7678b0524f8407659a9594b3862e5c3" prot="public" virt="non-virtual"><scope>Calibration</scope><name>calibrateRootData</name></member>
      <member refid="class_calibration_1a80f51a5ff7ec0f44d5388c9a61d1f20b" prot="public" virt="non-virtual"><scope>Calibration</scope><name>Calibration</name></member>
      <member refid="class_calibration_1a8e35cee6894b7e32cb4e6dcbbe26a0c4" prot="public" virt="non-virtual"><scope>Calibration</scope><name>Calibration</name></member>
      <member refid="class_calibration_1a7f6c78bdfc53cf5adc6ec67c2f182f16" prot="public" virt="non-virtual"><scope>Calibration</scope><name>Calibration</name></member>
      <member refid="class_calibration_1a336bd1a54676bff92a192e8df26232ac" prot="public" virt="non-virtual"><scope>Calibration</scope><name>Calibration</name></member>
      <member refid="class_calibration_1a6872e57ee372f02373cc14bae2254554" prot="private" virt="non-virtual"><scope>Calibration</scope><name>calibration_tables</name></member>
      <member refid="class_calibration_1acfdcf94af247e6907aa09d086c1e4186" prot="public" virt="non-virtual"><scope>Calibration</scope><name>file</name></member>
      <member refid="class_calibration_1ae62aaba8d0f0f77aecf89a5ad1e7605a" prot="public" virt="non-virtual"><scope>Calibration</scope><name>fillHisto</name></member>
      <member refid="class_calibration_1afd14ef8f1b6cee6cf7abc10783ee318e" prot="public" virt="non-virtual"><scope>Calibration</scope><name>fillRootDataHisto</name></member>
      <member refid="class_calibration_1aea14328cc8a0ab1cf559cd07f8c6a065" prot="public" virt="non-virtual"><scope>Calibration</scope><name>fitCalibration</name></member>
      <member refid="class_calibration_1a723ff9aee7af762a1b7302472008f97b" prot="public" virt="non-virtual"><scope>Calibration</scope><name>getBinom</name></member>
      <member refid="class_calibration_1aedbbf3043605ea4bce5044113484b5dd" prot="public" virt="non-virtual"><scope>Calibration</scope><name>getIntercept</name></member>
      <member refid="class_calibration_1a24ea2b9275978de50b573394840c1f37" prot="public" virt="non-virtual"><scope>Calibration</scope><name>getOrder</name></member>
      <member refid="class_calibration_1abb43af389c40ed02d3bf982ceeb3a8a1" prot="public" virt="non-virtual"><scope>Calibration</scope><name>getSlope</name></member>
      <member refid="class_calibration_1a5cb5385a26267978aa3b9c2846c76ebd" prot="public" virt="non-virtual"><scope>Calibration</scope><name>getTrinom</name></member>
      <member refid="class_calibration_1a2f91a6803bf8008bd7b748d4a1688338" prot="public" virt="non-virtual"><scope>Calibration</scope><name>Initialize</name></member>
      <member refid="class_calibration_1abbc453abf77e6b7a2a10cebd21021578" prot="public" virt="non-virtual"><scope>Calibration</scope><name>isFilled</name></member>
      <member refid="class_calibration_1a2d2a0d6276fc2c8a4b60c3801ccc16a9" prot="public" virt="non-virtual"><scope>Calibration</scope><name>load</name></member>
      <member refid="class_calibration_1a6514307ca111ecc5d6f02694373dc5ec" prot="public" virt="non-virtual"><scope>Calibration</scope><name>loadFasterData</name></member>
      <member refid="class_calibration_1a6d6d354f65db38acf12addf1efb7c815" prot="public" virt="non-virtual"><scope>Calibration</scope><name>loadRootData</name></member>
      <member refid="class_calibration_1a58f794ed6862bc71c09b440e63ea94f1" prot="public" virt="non-virtual"><scope>Calibration</scope><name>loadRootDataThread</name></member>
      <member refid="class_calibration_1a7835b1d9192d2c9fa8dcd8efbceb8db3" prot="public" virt="non-virtual"><scope>Calibration</scope><name>loadRootHisto</name></member>
      <member refid="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" prot="private" virt="non-virtual"><scope>Calibration</scope><name>m_binom</name></member>
      <member refid="class_calibration_1afa4ecd691e71e5b13504bfe7d71950ac" prot="private" virt="non-virtual"><scope>Calibration</scope><name>m_calibrate_data</name></member>
      <member refid="class_calibration_1ada2b7de482524ffd3e0a9b6038e3d6de" prot="private" virt="non-virtual"><scope>Calibration</scope><name>m_filename</name></member>
      <member refid="class_calibration_1ad17169e9dbae0e5ec2e63f60f1eebdf3" prot="private" virt="non-virtual"><scope>Calibration</scope><name>m_fits</name></member>
      <member refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" prot="public" virt="non-virtual"><scope>Calibration</scope><name>m_histos</name></member>
      <member refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" prot="private" virt="non-virtual"><scope>Calibration</scope><name>m_intercept</name></member>
      <member refid="class_calibration_1a2988b922363b5d090771be9961254cbc" prot="private" virt="non-virtual"><scope>Calibration</scope><name>m_nb_detectors</name></member>
      <member refid="class_calibration_1aea5e9bf6d006f5e26702953552e97dec" prot="private" virt="non-virtual"><scope>Calibration</scope><name>m_ok</name></member>
      <member refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" prot="private" virt="non-virtual"><scope>Calibration</scope><name>m_order</name></member>
      <member refid="class_calibration_1aac1e6d5d59bbe89c95efa142544bf754" prot="private" virt="non-virtual"><scope>Calibration</scope><name>m_outCalib</name></member>
      <member refid="class_calibration_1aeb59e25057913962bc8ee43d9567e024" prot="private" virt="non-virtual"><scope>Calibration</scope><name>m_outDir</name></member>
      <member refid="class_calibration_1a29b20b0d12f1b9226e1e8c9355e54e09" prot="private" virt="non-virtual"><scope>Calibration</scope><name>m_outRoot</name></member>
      <member refid="class_calibration_1a70510eaabac228f419cf7c253055292d" prot="private" virt="non-virtual"><scope>Calibration</scope><name>m_outRoot_b</name></member>
      <member refid="class_calibration_1af45a5eab10d1d3eb0b15a34baf1908c7" prot="private" virt="non-virtual"><scope>Calibration</scope><name>m_residus</name></member>
      <member refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" prot="private" virt="non-virtual"><scope>Calibration</scope><name>m_size</name></member>
      <member refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" prot="private" virt="non-virtual"><scope>Calibration</scope><name>m_slope</name></member>
      <member refid="class_calibration_1a9057002e470a0cb2f7b6353ebf8ceb1f" prot="private" virt="non-virtual"><scope>Calibration</scope><name>m_source</name></member>
      <member refid="class_calibration_1a75bc8afd8de82f44b5e698aab02ebedc" prot="private" virt="non-virtual"><scope>Calibration</scope><name>m_treatOnlyGe</name></member>
      <member refid="class_calibration_1a5198af653597c26d18433c6f28bdc171" prot="private" virt="non-virtual"><scope>Calibration</scope><name>m_treatOnlyParis</name></member>
      <member refid="class_calibration_1a33557fc219e93f9afe9ae38e12e649b7" prot="private" virt="non-virtual"><scope>Calibration</scope><name>m_trinom</name></member>
      <member refid="class_calibration_1a8e0d431465c589e805f74aacfabeb1d7" prot="private" virt="non-virtual"><scope>Calibration</scope><name>m_verbose</name></member>
      <member refid="class_calibration_1a5c7e1af9dbc7e67aee28e8da897fb29e" prot="public" virt="non-virtual"><scope>Calibration</scope><name>operator bool</name></member>
      <member refid="class_calibration_1a7765db4a6f5a278f82d1462bde812c32" prot="public" virt="non-virtual"><scope>Calibration</scope><name>operator()</name></member>
      <member refid="class_calibration_1a8dccc9ef965732a47d4d47df551baa39" prot="public" virt="non-virtual"><scope>Calibration</scope><name>operator=</name></member>
      <member refid="class_calibration_1ab070c5678eee652bbb3186e6cbd37b9e" prot="public" virt="non-virtual"><scope>Calibration</scope><name>operator=</name></member>
      <member refid="class_calibration_1aa05242b317e800e0c3661e03f219fd19" prot="public" virt="non-virtual"><scope>Calibration</scope><name>operator[]</name></member>
      <member refid="class_calibration_1ad6db2742477c8ac64787c6fe8a687aff" prot="public" virt="non-virtual"><scope>Calibration</scope><name>peakFinder</name></member>
      <member refid="class_calibration_1aaba010db225b8b01931d013eefda800b" prot="public" virt="non-virtual"><scope>Calibration</scope><name>Print</name></member>
      <member refid="class_calibration_1ab1502564e126e769e782d221d42608c7" prot="private" virt="non-virtual"><scope>Calibration</scope><name>set</name></member>
      <member refid="class_calibration_1a72f3838ece8f07239511fac7c09b1e8c" prot="public" virt="non-virtual"><scope>Calibration</scope><name>setCalibrationTables</name></member>
      <member refid="class_calibration_1a1309d57acace816189615a841b38e45e" prot="public" virt="non-virtual"><scope>Calibration</scope><name>setSource</name></member>
      <member refid="class_calibration_1ac4b8f57b3d896cda20a6aa3ba04a78e7" prot="public" virt="non-virtual"><scope>Calibration</scope><name>size</name></member>
      <member refid="class_calibration_1ae0589067deaac25425e5db02d8c06551" prot="public" virt="non-virtual"><scope>Calibration</scope><name>treatOnlyGe</name></member>
      <member refid="class_calibration_1ac6510b729a9d8f0803760c2939527df5" prot="public" virt="non-virtual"><scope>Calibration</scope><name>treatOnlyParis</name></member>
      <member refid="class_calibration_1ad7edc19a4eb1ea5d4af680152ce14521" prot="public" virt="non-virtual"><scope>Calibration</scope><name>verbose</name></member>
      <member refid="class_calibration_1a344dc3d6feab3580e859cc693c2fdd4a" prot="public" virt="non-virtual"><scope>Calibration</scope><name>verify</name></member>
      <member refid="class_calibration_1a6ad79450d0bb55baa744f6436f84dbbe" prot="public" virt="non-virtual"><scope>Calibration</scope><name>writeCalibratedData</name></member>
      <member refid="class_calibration_1a8ff8375eee244f2b22b86914a1d559bc" prot="public" virt="non-virtual"><scope>Calibration</scope><name>writeCalibratedHisto</name></member>
      <member refid="class_calibration_1a7e89a0c788e7ad97c2a9cea5e02ef3f2" prot="public" virt="non-virtual"><scope>Calibration</scope><name>writeData</name></member>
      <member refid="class_calibration_1a53565d0fe7d92fd6d5d94eee5a97f1b8" prot="public" virt="non-virtual"><scope>Calibration</scope><name>writePosPeaks</name></member>
      <member refid="class_calibration_1a062cb134d4b82246ba9c89c567a32963" prot="public" virt="non-virtual"><scope>Calibration</scope><name>writeRawRoot</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
