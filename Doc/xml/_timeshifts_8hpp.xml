<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_timeshifts_8hpp" kind="file" language="C++">
    <compoundname>Timeshifts.hpp</compoundname>
    <includes refid="lib_co_8hpp" local="yes">../libCo.hpp</includes>
    <includes refid="_detectors_8hpp" local="yes">../Classes/Detectors.hpp</includes>
    <includes refid="_faster_reader_8hpp" local="yes">../Classes/FasterReader.hpp</includes>
    <includes refid="_files_manager_8hpp" local="yes">../Classes/FilesManager.hpp</includes>
    <includes refid="_hit_8hpp" local="yes">../Classes/Hit.hpp</includes>
    <includes refid="_r_f___manager_8hpp" local="yes">../Classes/RF_Manager.hpp</includes>
    <includes refid="_event_8hpp" local="yes">../Classes/Event.hpp</includes>
    <includes refid="_coinc_builder_8hpp" local="yes">../Classes/CoincBuilder.hpp</includes>
    <includes refid="_timer_8hpp" local="yes">../Classes/Timer.hpp</includes>
    <includes refid="_performances_8hpp" local="yes">../Classes/Performances.hpp</includes>
    <includes refid="_m_t_object_8hpp" local="yes">../MTObjects/MTObject.hpp</includes>
    <includes refid="_m_t_list_8hpp" local="yes">../MTObjects/MTList.hpp</includes>
    <includes refid="_m_t_t_hist_8hpp" local="yes">../MTObjects/MTTHist.hpp</includes>
    <includedby refid="_clover_spectra_8hpp" local="yes">lib/Modules/CloverSpectra.hpp</includedby>
    <includedby refid="_faster2_root_8hpp" local="yes">lib/Modules/Faster2Root.hpp</includedby>
    <includedby refid="_run_matrixator_8hpp" local="yes">lib/Modules/RunMatrixator.hpp</includedby>
    <incdepgraph>
      <node id="27">
        <label>glob.h</label>
      </node>
      <node id="53">
        <label>TH1S.h</label>
      </node>
      <node id="10">
        <label>iomanip</label>
      </node>
      <node id="9">
        <label>functional</label>
      </node>
      <node id="16">
        <label>queue</label>
      </node>
      <node id="32">
        <label>random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>TTreeIndex.h</label>
      </node>
      <node id="39">
        <label>../libRoot.hpp</label>
        <link refid="lib_root_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>filesystem</label>
      </node>
      <node id="80">
        <label>../Classes/RF_Manager.hpp</label>
        <link refid="_r_f___manager_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>TAxis.h</label>
      </node>
      <node id="29">
        <label>stdlib.h</label>
      </node>
      <node id="69">
        <label>TThread.h</label>
      </node>
      <node id="52">
        <label>TH1D.h</label>
      </node>
      <node id="65">
        <label>TStopwatch.h</label>
      </node>
      <node id="18">
        <label>stdexcept</label>
      </node>
      <node id="15">
        <label>numeric</label>
      </node>
      <node id="73">
        <label>../Classes/FasterReader.hpp</label>
        <link refid="_faster_reader_8hpp"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>string</label>
      </node>
      <node id="78">
        <label>fasterac/utils.h</label>
      </node>
      <node id="12">
        <label>map</label>
      </node>
      <node id="87">
        <label>../MTObjects/MTCounter.hpp</label>
        <link refid="_m_t_counter_8hpp"/>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>fasterac/adc.h</label>
      </node>
      <node id="72">
        <label>Hit.hpp</label>
        <link refid="_hit_8hpp"/>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../libCo.hpp</label>
        <link refid="lib_co_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>fasterac/rf.h</label>
      </node>
      <node id="44">
        <label>TF1.h</label>
      </node>
      <node id="31">
        <label>print.hpp</label>
        <link refid="print_8hpp"/>
      </node>
      <node id="8">
        <label>fstream</label>
      </node>
      <node id="89">
        <label>../MTObjects/MTList.hpp</label>
        <link refid="_m_t_list_8hpp"/>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>TError.h</label>
      </node>
      <node id="67">
        <label>TStyle.h</label>
      </node>
      <node id="3">
        <label>any</label>
      </node>
      <node id="90">
        <label>../MTObjects/MTTHist.hpp</label>
        <link refid="_m_t_t_hist_8hpp"/>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>files_functions.hpp</label>
        <link refid="files__functions_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>random</label>
      </node>
      <node id="63">
        <label>TROOT.h</label>
      </node>
      <node id="30">
        <label>string.h</label>
      </node>
      <node id="23">
        <label>typeinfo</label>
      </node>
      <node id="38">
        <label>../Classes/Detectors.hpp</label>
        <link refid="_detectors_8hpp"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>TChain.h</label>
      </node>
      <node id="81">
        <label>Event.hpp</label>
        <link refid="_event_8hpp"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>TSystem.h</label>
      </node>
      <node id="25">
        <label>vector</label>
      </node>
      <node id="20">
        <label>stack</label>
      </node>
      <node id="45">
        <label>TF2.h</label>
      </node>
      <node id="46">
        <label>TFile.h</label>
      </node>
      <node id="41">
        <label>TCanvas.h</label>
      </node>
      <node id="56">
        <label>TH3I.h</label>
      </node>
      <node id="57">
        <label>TKey.h</label>
      </node>
      <node id="36">
        <label>vector_functions.hpp</label>
        <link refid="vector__functions_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>fasterac/qdc.h</label>
      </node>
      <node id="64">
        <label>TSpectrum.h</label>
      </node>
      <node id="4">
        <label>array</label>
      </node>
      <node id="48">
        <label>TFitResult.h</label>
      </node>
      <node id="17">
        <label>sstream</label>
      </node>
      <node id="60">
        <label>TMarker.h</label>
      </node>
      <node id="50">
        <label>TGraphErrors.h</label>
      </node>
      <node id="54">
        <label>TH2.h</label>
      </node>
      <node id="6">
        <label>cstdlib</label>
      </node>
      <node id="51">
        <label>TH1F.h</label>
      </node>
      <node id="58">
        <label>TLeaf.h</label>
      </node>
      <node id="11">
        <label>iostream</label>
      </node>
      <node id="34">
        <label>string_functions.hpp</label>
        <link refid="string__functions_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>../Classes/Timer.hpp</label>
        <link refid="_timer_8hpp"/>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>unordered_map</label>
      </node>
      <node id="59">
        <label>TLegend.h</label>
      </node>
      <node id="66">
        <label>TString.h</label>
      </node>
      <node id="61">
        <label>TMath.h</label>
      </node>
      <node id="55">
        <label>TH2F.h</label>
      </node>
      <node id="14">
        <label>mutex</label>
      </node>
      <node id="85">
        <label>chrono</label>
      </node>
      <node id="82">
        <label>../Classes/CoincBuilder.hpp</label>
        <link refid="_coinc_builder_8hpp"/>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>Builder.hpp</label>
        <link refid="_builder_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>MTObject.hpp</label>
        <link refid="_m_t_object_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>thread</label>
      </node>
      <node id="62">
        <label>TRandom.h</label>
      </node>
      <node id="70">
        <label>TTree.h</label>
      </node>
      <node id="75">
        <label>fasterac/group.h</label>
      </node>
      <node id="1">
        <label>lib/Modules/Timeshifts.hpp</label>
        <link refid="_timeshifts_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>algorithm</label>
      </node>
      <node id="47">
        <label>TFitResultPtr.h</label>
      </node>
      <node id="28">
        <label>stdio.h</label>
      </node>
      <node id="79">
        <label>../Classes/FilesManager.hpp</label>
        <link refid="_files_manager_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cstring</label>
      </node>
      <node id="49">
        <label>TGraph.h</label>
      </node>
      <node id="13">
        <label>memory</label>
      </node>
      <node id="22">
        <label>typeindex</label>
      </node>
      <node id="86">
        <label>../Classes/Performances.hpp</label>
        <link refid="_performances_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>lib/Modules/CloverSpectra.hpp</label>
        <link refid="_clover_spectra_8hpp"/>
      </node>
      <node id="3">
        <label>lib/Modules/Faster2Root.hpp</label>
        <link refid="_faster2_root_8hpp"/>
      </node>
      <node id="4">
        <label>lib/Modules/RunMatrixator.hpp</label>
        <link refid="_run_matrixator_8hpp"/>
      </node>
      <node id="1">
        <label>lib/Modules/Timeshifts.hpp</label>
        <link refid="_timeshifts_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_timeshifts" prot="public">Timeshifts</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_timeshifts_8hpp_1a0f507d9b001b222817bfc9d8ba01e40e" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="_hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7" kindref="member">Time</ref> &gt;</type>
        <definition>std::vector&lt;Time&gt; forced_shifts</definition>
        <argsstring></argsstring>
        <name>forced_shifts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Timeshifts.hpp" line="825" column="13" bodyfile="lib/Modules/Timeshifts.hpp" bodystart="825" bodyend="-1"/>
        <referencedby refid="class_timeshifts_1a608d9443a15dd669920e10dd8baee23a" compoundref="_timeshifts_8hpp" startline="827" endline="926">Timeshifts::analyse</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_timeshifts_8hpp_1a202a57630e2aa9744043c30964b64bcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_first_RF_of_file</definition>
        <argsstring>(FasterReader &amp;reader, Hit &amp;hit, RF_Manager &amp;rf)</argsstring>
        <name>get_first_RF_of_file</name>
        <param>
          <type><ref refid="class_faster_reader" kindref="compound">FasterReader</ref> &amp;</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="class_hit" kindref="compound">Hit</ref> &amp;</type>
          <declname>hit</declname>
        </param>
        <param>
          <type><ref refid="class_r_f___manager" kindref="compound">RF_Manager</ref> &amp;</type>
          <declname>rf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Timeshifts.hpp" line="612" column="6" bodyfile="lib/Modules/Timeshifts.hpp" bodystart="612" bodyend="618"/>
        <references refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" compoundref="_hit_8hpp" startline="196">Hit::label</references>
        <references refid="class_r_f___manager_1af38019b6bb4e45be94b17c5d193f5e45" compoundref="_r_f___manager_8hpp" startline="91">RF_Manager::label</references>
        <references refid="class_faster_reader_1a2d05907241b80ed637b2ae5a01503756" compoundref="_faster_reader_8hpp" startline="259" endline="270">FasterReader::Read</references>
        <references refid="class_r_f___manager_1a0261f2b02176a3e5562603c25f31d9a6" compoundref="_r_f___manager_8hpp" startline="100" endline="108">RF_Manager::setHit</references>
        <referencedby refid="class_timeshifts_1abef7234fe827ae3c7758788cf22b6921" compoundref="_timeshifts_8hpp" startline="664" endline="705">Timeshifts::treatFasterFile</referencedby>
        <referencedby refid="class_timeshifts_1a32079af1345e308feddd58e0950998ab" compoundref="_timeshifts_8hpp" startline="644" endline="662">Timeshifts::treatRootFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="_timeshifts_8hpp_1a89eb1093b3fdce57af662ed7b004b0f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_first_RF_of_file</definition>
        <argsstring>(TTree *tree, Event &amp;event, RF_Manager &amp;rf)</argsstring>
        <name>get_first_RF_of_file</name>
        <param>
          <type>TTree *</type>
          <declname>tree</declname>
        </param>
        <param>
          <type><ref refid="class_event" kindref="compound">Event</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="class_r_f___manager" kindref="compound">RF_Manager</ref> &amp;</type>
          <declname>rf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Timeshifts.hpp" line="620" column="6" bodyfile="lib/Modules/Timeshifts.hpp" bodystart="620" bodyend="636"/>
        <references refid="class_r_f___manager_1a0261f2b02176a3e5562603c25f31d9a6" compoundref="_r_f___manager_8hpp" startline="100" endline="108">RF_Manager::setHit</references>
      </memberdef>
      <memberdef kind="function" id="_timeshifts_8hpp_1a1efb60019dbe926cccb8410a806d73a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double getRFGammaPrompt</definition>
        <argsstring>(TH1F *hist, bool const &amp;check_preprompt)</argsstring>
        <name>getRFGammaPrompt</name>
        <param>
          <type>TH1F *</type>
          <declname>hist</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>check_preprompt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Timeshifts.hpp" line="785" column="8" bodyfile="lib/Modules/Timeshifts.hpp" bodystart="785" bodyend="823"/>
        <referencedby refid="class_timeshifts_1a608d9443a15dd669920e10dd8baee23a" compoundref="_timeshifts_8hpp" startline="827" endline="926">Timeshifts::analyse</referencedby>
      </memberdef>
      <memberdef kind="function" id="_timeshifts_8hpp_1aecdab429e75a8d9f7a38f3938d9a7173" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;cout, Timeshifts const &amp;ts)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>cout</declname>
        </param>
        <param>
          <type><ref refid="class_timeshifts" kindref="compound">Timeshifts</ref> const &amp;</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Timeshifts.hpp" line="1103" column="1" bodyfile="lib/Modules/Timeshifts.hpp" bodystart="1103" bodyend="1107"/>
        <references refid="class_timeshifts_1a5161a4c343623e92b4e26522ad7ee16a" compoundref="_timeshifts_8hpp" startline="194" endline="194">Timeshifts::get</references>
      </memberdef>
      <memberdef kind="function" id="_timeshifts_8hpp_1a0363984bdeb96360bcf8a0a13163f47a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename</type>
            <defval>typename std::enable_if&lt;std::is_arithmetic&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="_hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7" kindref="member">Time</ref></type>
        <definition>Time Shift_cast</definition>
        <argsstring>(T const &amp;t)</argsstring>
        <name>Shift_cast</name>
        <param>
          <type>T const &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Casts a number into unsigned Time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Timeshifts.hpp" line="39" column="13" bodyfile="lib/Modules/Timeshifts.hpp" bodystart="39" bodyend="39"/>
        <referencedby refid="class_timeshifts_1a608d9443a15dd669920e10dd8baee23a" compoundref="_timeshifts_8hpp" startline="827" endline="926">Timeshifts::analyse</referencedby>
        <referencedby refid="class_timeshifts_1a89dbca371bce4601ee60122f544faf95" compoundref="_timeshifts_8hpp" startline="1065" endline="1101">Timeshifts::shiftTimeSpectra</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>TIMESHIFTS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TIMESHIFTS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../libCo.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Classes/Detectors.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Classes/FasterReader.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Classes/FilesManager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Classes/Hit.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Classes/RF_Manager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Classes/Event.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Classes/CoincBuilder.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Classes/Timer.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Classes/Performances.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../MTObjects/MTObject.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../MTObjects/MTList.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../MTObjects/MTTHist.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Author<sp/>:<sp/>Corentin<sp/>Hiver</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>Module<sp/>part<sp/>of<sp/>the<sp/>NearLine<sp/>software</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>The<sp/>timestamps<sp/>are<sp/>in<sp/>picoseconds,<sp/>so<sp/>are<sp/>the<sp/>timeshifts</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>Goal<sp/>1<sp/>:<sp/>calculate<sp/>the<sp/>time<sp/>shifts<sp/>between<sp/>detectors</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>How<sp/>:<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>*<sp/>Use<sp/>one<sp/>detector<sp/>as<sp/>reference,<sp/>preferencially<sp/>with<sp/>good<sp/>time<sp/>resolution</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>*<sp/>Create<sp/>coincidences<sp/>using<sp/>the<sp/>CoincBuilder<sp/>event<sp/>builder</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>*<sp/>Calculate<sp/>the<sp/>difference<sp/>in<sp/>timestamp<sp/>as<sp/>follow<sp/>:<sp/>ref_time<sp/>-<sp/>detector_time</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>*<sp/>Finally,<sp/>output<sp/>the<sp/>(.dT)<sp/>file<sp/>containing<sp/>the<sp/>time<sp/>shifts<sp/>of<sp/>all<sp/>the<sp/>detectors</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>*<sp/>Also<sp/>produces<sp/>a<sp/>.root<sp/>file<sp/>containing<sp/>the<sp/>raw<sp/>and<sp/>corrected<sp/>time<sp/>spectra.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>*<sp/>This<sp/>module<sp/>includes<sp/>multithreading<sp/>management<sp/>using<sp/>MTObject::parallelise_function(function,<sp/>parameters...)</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>Goal<sp/>2<sp/>:<sp/>read<sp/>a<sp/>timeshift<sp/>file<sp/>(.dT)<sp/>previously<sp/>calculated<sp/>by<sp/>this<sp/>module</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>Goal<sp/>3<sp/>:<sp/>apply<sp/>the<sp/>timeshifts<sp/>by<sp/>calling<sp/>the<sp/>operator[]<sp/>:<sp/>time_correct<sp/>=<sp/>time_shifted<sp/>+<sp/>timeshifts[label];</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>Example<sp/>at<sp/>the<sp/>end</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">template&lt;typename<sp/>T,<sp/><sp/>typename<sp/>=<sp/>typename<sp/>std::enable_if&lt;std::is_arithmetic&lt;T&gt;::value&gt;::type&gt;</highlight></codeline>
<codeline lineno="39" refid="_timeshifts_8hpp_1a0363984bdeb96360bcf8a0a13163f47a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="_hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7" kindref="member">Time</ref><sp/><ref refid="_timeshifts_8hpp_1a0363984bdeb96360bcf8a0a13163f47a" kindref="member">Shift_cast</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>t)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="_hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7" kindref="member">Time</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(t);}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_timeshifts" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_timeshifts" kindref="compound">Timeshifts</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_timeshifts_1ad85f4cabf723d28843393cda47abc2b3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1ad85f4cabf723d28843393cda47abc2b3" kindref="member">Timeshifts</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_timeshifts_1ae47e90a384a5dd891bdc5eed10450971" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1ae47e90a384a5dd891bdc5eed10450971" kindref="member">Timeshifts</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename)<sp/>:<sp/><ref refid="class_timeshifts_1a1a77bd589fc081641e19c5da8b4e19b6" kindref="member">m_filename</ref>(filename)<sp/>{</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_timeshifts_1a28163efe8d487669cf50d5f6e1060d71" kindref="member">load</ref>(<ref refid="class_timeshifts_1a1a77bd589fc081641e19c5da8b4e19b6" kindref="member">m_filename</ref>);}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="class_timeshifts_1a1b9c3b0d8ef43a69bd6e7ce1bd4de5b4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1a1b9c3b0d8ef43a69bd6e7ce1bd4de5b4" kindref="member">Timeshifts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>filename)<sp/>:<sp/><ref refid="class_timeshifts_1a1a77bd589fc081641e19c5da8b4e19b6" kindref="member">m_filename</ref>(filename)<sp/>{</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_timeshifts_1a28163efe8d487669cf50d5f6e1060d71" kindref="member">load</ref>(<ref refid="class_timeshifts_1a1a77bd589fc081641e19c5da8b4e19b6" kindref="member">m_filename</ref>);}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_timeshifts_1a8b7481d4a5405315c9988812a01428ef" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1a8b7481d4a5405315c9988812a01428ef" kindref="member">Timeshifts</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>path,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name)<sp/>:<sp/><ref refid="class_timeshifts_1a1a77bd589fc081641e19c5da8b4e19b6" kindref="member">m_filename</ref>(path+</highlight><highlight class="stringliteral">&quot;Timeshifts/&quot;</highlight><highlight class="normal">+name+</highlight><highlight class="stringliteral">&quot;.dT&quot;</highlight><highlight class="normal">)<sp/>{</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_timeshifts_1a28163efe8d487669cf50d5f6e1060d71" kindref="member">load</ref>(<ref refid="class_timeshifts_1a1a77bd589fc081641e19c5da8b4e19b6" kindref="member">m_filename</ref>);}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="class_timeshifts_1a4c01a876efaee62fa348581470509736" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1a4c01a876efaee62fa348581470509736" kindref="member">Timeshifts</ref>(<ref refid="class_timeshifts" kindref="compound">Timeshifts</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>timeshifts)<sp/>:<sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>(timeshifts.<ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="64" refid="class_timeshifts_1a38aac2aef62c8999bb5da97e397ea64c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts" kindref="compound">Timeshifts</ref>&amp;<sp/><ref refid="class_timeshifts_1a38aac2aef62c8999bb5da97e397ea64c" kindref="member">operator=</ref>(<ref refid="class_timeshifts" kindref="compound">Timeshifts</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>timeshifts)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref><sp/>=<sp/>timeshifts.<ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1a0bf7feef945319722118991949b033d4" kindref="member">m_ok</ref><sp/>=<sp/>timeshifts.<ref refid="class_timeshifts_1a0bf7feef945319722118991949b033d4" kindref="member">m_ok</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1acca1130b271301c5477d4b4a23ae4e5b" kindref="member">setParameters</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>parameter);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a28163efe8d487669cf50d5f6e1060d71" kindref="member">load</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a304c1076d703a78153cfe72d61b28425" kindref="member">setTimeWindow_ns</ref>(<ref refid="_hit_8hpp_1ad7cd28c849adeb8fec74d20155b0113d" kindref="member">Time_ns</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>timewindow_ns);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a304c1076d703a78153cfe72d61b28425" kindref="member">setTimeWindow_ns</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>timewindow_ns_str);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1aa7cb3acf23e80927fa85be636f55a99d" kindref="member">setTimeReference</ref>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>timeRef_label);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1aa7cb3acf23e80927fa85be636f55a99d" kindref="member">setTimeReference</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>timeRef_name);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a26367484f20648d7c3f5b3bbe5679ca8" kindref="member">setOutDir</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outDir);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="class_timeshifts_1a1b6e129787ae7641ecbcb990f6e86bb9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a1b6e129787ae7641ecbcb990f6e86bb9" kindref="member">verbose</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_verbose<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{<ref refid="class_timeshifts_1a985a81e5fa8d1a8866988c6af1b2ff1c" kindref="member">m_verbose</ref><sp/>=<sp/>_verbose;}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1aa9f0f8cc1d96a5408f233449767ef0f6" kindref="member">setOutRoot</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outroot);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1ab877131bc1bd7394f55c3d46729ac9e6" kindref="member">setOutData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outdata);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a082a54cde1bb45feca487f15ab4a14c7" kindref="member">setOutName</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outdata);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="class_timeshifts_1a6206d2b698c88e80bc42bdf4b51fce14" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a6206d2b698c88e80bc42bdf4b51fce14" kindref="member">setMult</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>min_mult,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>max_mult)<sp/>{<ref refid="class_timeshifts_1ad2182e6c34ecf5b760f67d58167df53e" kindref="member">m_min_mult</ref><sp/>=<sp/>min_mult;<sp/><ref refid="class_timeshifts_1a46a97751e517cc9f21d54d04bb16c5f5" kindref="member">m_max_mult</ref><sp/>=<sp/>max_mult;}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="class_timeshifts_1afa21cadd8eac07728df7f51d0dbaa908" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1afa21cadd8eac07728df7f51d0dbaa908" kindref="member">setMaxHits</ref>(<ref refid="lib_co_8hpp_1a92c2ca60527219506deb3325507baee0" kindref="member">ulong</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>max_hits<sp/>=<sp/>-1)<sp/>{<ref refid="class_timeshifts_1a7363de3261a770287e981328276f21dd" kindref="member">m_max_hits</ref><sp/>=<sp/>max_hits;}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="class_timeshifts_1af6cb9cffa9322eabb7fe712c6e6ae798" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1af6cb9cffa9322eabb7fe712c6e6ae798" kindref="member">setRFShift</ref>(<ref refid="_hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7" kindref="member">Time</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>shift)<sp/>{<ref refid="class_r_f___manager_1ac56cba54c3c01c70e45b40093e3d1a89" kindref="member">RF_Manager::set_offset</ref>(shift);}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="class_timeshifts_1a0faeccde5623d6808435414d020d1385" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a0faeccde5623d6808435414d020d1385" kindref="member">setRFOffset_ns</ref>(<ref refid="_hit_8hpp_1ad7cd28c849adeb8fec74d20155b0113d" kindref="member">Time_ns</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>offset_ns)<sp/>{<ref refid="class_r_f___manager_1ac56cba54c3c01c70e45b40093e3d1a89" kindref="member">RF_Manager::set_offset</ref>(<ref refid="_hit_8hpp_1a4ea1ea3a29989c67afc2c4db41e36b15" kindref="member">Time_cast</ref>(offset_ns)*1000);}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="class_timeshifts_1ac2c3e8e47598e28d49932a3720a6fd58" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1ac2c3e8e47598e28d49932a3720a6fd58" kindref="member">setRFOffset</ref>(<ref refid="_hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7" kindref="member">Time</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>offset_ps)<sp/>{<ref refid="class_r_f___manager_1ac56cba54c3c01c70e45b40093e3d1a89" kindref="member">RF_Manager::set_offset</ref>(offset_ps);}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a3d3ab1b3498ca45832d8a8735f16e188" kindref="member">calculate</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>folder,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_files<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a6520eab7a8824f41a2be8517d83fc835" kindref="member">verify</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>folder,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_files<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="class_timeshifts_1abc70d7dc0c400a76d84f2c5cc30edf77" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_timeshifts_1abc70d7dc0c400a76d84f2c5cc30edf77" kindref="member">verification</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>verif<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_timeshifts_1ab4329368cc98918cfd4489788dc4a4f8" kindref="member">m_verification</ref><sp/>=<sp/>verif);}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>Print()<sp/>{print(m_timeshifts);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>TH1F*<sp/><ref refid="class_timeshifts_1a89dbca371bce4601ee60122f544faf95" kindref="member">shiftTimeSpectra</ref>(TH1F*<sp/>histo,<sp/><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>label,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>unit<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ps&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="class_timeshifts_1a942984c1af943a864baf8744babb2d15" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7" kindref="member">Time</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_timeshifts_1a942984c1af943a864baf8744babb2d15" kindref="member">operator[] </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>[i];}</highlight></codeline>
<codeline lineno="192" refid="class_timeshifts_1a60689326cebd96ae4996522530ffefab" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>bool()<sp/>const<sp/>&amp;<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a0bf7feef945319722118991949b033d4" kindref="member">m_ok</ref>;}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="class_timeshifts_1a5161a4c343623e92b4e26522ad7ee16a" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;Time&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_timeshifts_1a5161a4c343623e92b4e26522ad7ee16a" kindref="member">get</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>;}</highlight></codeline>
<codeline lineno="195" refid="class_timeshifts_1a2b9a1cbb93f280215432c4d323d1114d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7" kindref="member">Time</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_timeshifts_1a2b9a1cbb93f280215432c4d323d1114d" kindref="member">get</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>[i];}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a79f5376cf7071865b264989ef46d886f" kindref="member">write</ref><sp/><sp/><sp/><sp/>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a579c8583bd37c3988ffb5cb6df7849f7" kindref="member">writeRoot</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1ad19fdc64b6f8dd54e94665a7170a49a7" kindref="member">writeData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="class_timeshifts_1a82ddafa1c3f1d2c21c33749e70fab876" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a82ddafa1c3f1d2c21c33749e70fab876" kindref="member">setEminADC</ref>(<ref refid="_hit_8hpp_1a04b75a9e083a1c44419fdb7c3f87c361" kindref="member">ADC</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>EminADC)<sp/>{<ref refid="class_timeshifts_1abc19fb99a4d950501fb53430497e34c2" kindref="member">m_Emin_ADC</ref><sp/>=<sp/>EminADC;}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="class_timeshifts_1a2b3ce3e274b28b65f01e336efe99670e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a2b3ce3e274b28b65f01e336efe99670e" kindref="member">dT_with_RF</ref>(<ref refid="_detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a" kindref="member">dType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>type)<sp/>{<ref refid="class_timeshifts_1af643b4246a7e7efb0857cec8f705eeb1" kindref="member">m_RF_preferred</ref>[type]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="204" refid="class_timeshifts_1aea8a9a1e849fca3bf3712385bd2155c3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1aea8a9a1e849fca3bf3712385bd2155c3" kindref="member">dT_with_raising_edge</ref>(<ref refid="_detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a" kindref="member">dType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>type)<sp/>{<ref refid="class_timeshifts_1a0c81995b961c33e22c49d3d180b3cec5" kindref="member">m_edge_preferred</ref>[type]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="class_timeshifts_1a648f30a01a30b44ef675666ddae79f80" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a648f30a01a30b44ef675666ddae79f80" kindref="member">checkForPreprompt</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>check<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{<ref refid="class_timeshifts_1afdd59f1f2d548c6bd8ef89d998e8ed1e" kindref="member">m_check_preprompt</ref><sp/>=<sp/>check;}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="class_timeshifts_1a715283a5be42b86ca70b4e468ccb2931" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a715283a5be42b86ca70b4e468ccb2931" kindref="member">CheckParameters</ref>()</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a47ae394beae7efa2fb8fa1a3c7f8427d" kindref="member">exists</ref>(<ref refid="class_timeshifts_1a149e0f0885280b888df3f2b35ac29af8" kindref="member">m_time_ref_label</ref>))<sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Time<sp/>reference<sp/>detector&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_timeshifts_1a057b1fc1611ed270db718db0b72b801d" kindref="member">m_time_ref_name</ref>,<sp/></highlight><highlight class="stringliteral">&quot;with<sp/>label&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_timeshifts_1a149e0f0885280b888df3f2b35ac29af8" kindref="member">m_time_ref_label</ref>,<sp/></highlight><highlight class="stringliteral">&quot;do<sp/>not<sp/>exists<sp/>in<sp/>ID<sp/>file<sp/>...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="class_timeshifts_1a4338a0a481ffac2a8f8dffbafca76e7d" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;bool&gt;<sp/><sp/><ref refid="class_timeshifts_1a4338a0a481ffac2a8f8dffbafca76e7d" kindref="member">m_RF_preferred_label</ref>;<sp/></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>force<sp/>RF<sp/>measurement<sp/>for<sp/>specific<sp/>labels;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="class_timeshifts_1a53bfccafc7cfbd834754b752a9a4c313" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;uchar&gt;<sp/><ref refid="class_timeshifts_1a53bfccafc7cfbd834754b752a9a4c313" kindref="member">m_nb_shifts_RF_peak</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>peak<sp/>is<sp/>not<sp/>within<sp/>[+-<sp/>RF_period]<sp/>then<sp/>one<sp/>need<sp/>to<sp/>shift<sp/>it<sp/>accordingly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="class_timeshifts_1ab098d455164964ba60b9f5c555de74e4" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;bool&gt;<sp/><sp/><ref refid="class_timeshifts_1ab098d455164964ba60b9f5c555de74e4" kindref="member">m_edge_preferred_label</ref>;<sp/></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>force<sp/>RF<sp/>measurement<sp/>for<sp/>specific<sp/>labels;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="class_timeshifts_1a0ab2718e733f94acda46780191295e3b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a0ab2718e733f94acda46780191295e3b" kindref="member">rebin</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>detector,<sp/><ref refid="_hit_8hpp_1ad7cd28c849adeb8fec74d20155b0113d" kindref="member">Time_ns</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>bin_size_ns)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="lib_co_8hpp_1a3b8ddb099e22657a31515fbcd8d1bf67" kindref="member">find_key</ref>(<ref refid="class_timeshifts_1a4dd5b35444834dca94e9432619e24c47" kindref="member">m_bins_per_ns</ref>,<sp/>detector))<sp/><ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(</highlight><highlight class="stringliteral">&quot;in<sp/>Timeshifts::rebin(std::string<sp/>detector,<sp/>float<sp/>bin_size_ns)<sp/>:<sp/>detector<sp/>not<sp/>known<sp/>!!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1a4dd5b35444834dca94e9432619e24c47" kindref="member">m_bins_per_ns</ref>[detector]<sp/>=<sp/>bin_size_ns;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>rebin(Label<sp/>const<sp/>&amp;<sp/>label,<sp/>Time_ns<sp/>const<sp/>&amp;<sp/>bin_size_ns)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>m_bins_per_ns_labels[label]<sp/>=<sp/>bin_size_ns;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a0753528955e94c43043cd7d68193f960" kindref="member">Initialize</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>initializeRaw<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>initializeCorrected<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a40254b2aa53028b1b5c941ee1cb3833d" kindref="member">InitializeRaw</ref>();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a05ac31a6c49360d94eeff184dc896c6b" kindref="member">InitializeCorrected</ref>();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a79fe955b7d1bbc12fd4c659691727df3" kindref="member">treatFilesMT</ref>(<ref refid="class_timeshifts" kindref="compound">Timeshifts</ref><sp/>&amp;<sp/>ts,<sp/><ref refid="class_m_t_vector" kindref="compound">MTList</ref><sp/>&amp;<sp/>files_MT);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a21dc1e7bf232c6b0637b16aa04e43701" kindref="member">treatFolder</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>folder,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_files<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1aaef5b6fdd23be94ed37a2b4e7fe47b48" kindref="member">treatFile</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a32079af1345e308feddd58e0950998ab" kindref="member">treatRootFile</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1abef7234fe827ae3c7758788cf22b6921" kindref="member">treatFasterFile</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a5c037c5bb4b409c3040982c451c6733d" kindref="member">Fill</ref>(<ref refid="class_event" kindref="compound">Event</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>event,<sp/><ref refid="class_r_f___manager" kindref="compound">RF_Manager</ref><sp/>&amp;<sp/>rf);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>FillRF(Hit<sp/>const<sp/>&amp;<sp/>hit,<sp/>RF_Manager<sp/>&amp;<sp/>rf);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a608d9443a15dd669920e10dd8baee23a" kindref="member">analyse</ref>();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="class_timeshifts_1a0bf7feef945319722118991949b033d4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a0bf7feef945319722118991949b033d4" kindref="member">m_ok</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254" refid="class_timeshifts_1a985a81e5fa8d1a8866988c6af1b2ff1c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a985a81e5fa8d1a8866988c6af1b2ff1c" kindref="member">m_verbose</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255" refid="class_timeshifts_1ab4329368cc98918cfd4489788dc4a4f8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1ab4329368cc98918cfd4489788dc4a4f8" kindref="member">m_verification</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256" refid="class_timeshifts_1af8a8bb48626abf6a9a634b3c826b0e44" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1af8a8bb48626abf6a9a634b3c826b0e44" kindref="member">m_corrected</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="class_timeshifts_1ad6bda9ede24fd63e7a43ad12bd861a98" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1ad6bda9ede24fd63e7a43ad12bd861a98" kindref="member">m_initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259" refid="class_timeshifts_1a025f10899ed33302dee33f2e98d40b3a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a025f10899ed33302dee33f2e98d40b3a" kindref="member">m_energySpectraInitialized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260" refid="class_timeshifts_1a8c7b6bfda5c2dacef69d0b7657d89fce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a8c7b6bfda5c2dacef69d0b7657d89fce" kindref="member">m_initializedRaw</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261" refid="class_timeshifts_1ae3b75fce1fde95be5ca45b20cfbb8350" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1ae3b75fce1fde95be5ca45b20cfbb8350" kindref="member">m_initializedCorrected</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="class_timeshifts_1afdd59f1f2d548c6bd8ef89d998e8ed1e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1afdd59f1f2d548c6bd8ef89d998e8ed1e" kindref="member">m_check_preprompt</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="class_timeshifts_1a4f155373f7d1a70f3f1d06233ebf10c1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_files_manager" kindref="compound">FilesManager</ref><sp/><ref refid="class_timeshifts_1a4f155373f7d1a70f3f1d06233ebf10c1" kindref="member">m_files</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="class_timeshifts_1a1a77bd589fc081641e19c5da8b4e19b6" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_timeshifts_1a1a77bd589fc081641e19c5da8b4e19b6" kindref="member">m_filename</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;Time&gt;<sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>;</highlight></codeline>
<codeline lineno="270" refid="class_timeshifts_1a64966ebd9e0538d9e3160bbfaf4a74de" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;Timestamp&gt;<sp/><ref refid="class_timeshifts_1a64966ebd9e0538d9e3160bbfaf4a74de" kindref="member">mt_ref_time</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="class_timeshifts_1a221c8bebd939cf4a9442f5c9dddfeefb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_hit_8hpp_1ad7cd28c849adeb8fec74d20155b0113d" kindref="member">Time_ns</ref><sp/><ref refid="class_timeshifts_1a221c8bebd939cf4a9442f5c9dddfeefb" kindref="member">m_timewindow_ns</ref><sp/>=<sp/><ref refid="_hit_8hpp_1a04b1f65fe07e6d731225feecab2b66f6" kindref="member">Time_ns_cast</ref>(1500);</highlight></codeline>
<codeline lineno="273" refid="class_timeshifts_1a73dda60d3425a0de61719829231e6d55" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7" kindref="member">Time</ref><sp/><ref refid="class_timeshifts_1a73dda60d3425a0de61719829231e6d55" kindref="member">m_timewindow</ref><sp/>=<sp/><ref refid="_hit_8hpp_1a4ea1ea3a29989c67afc2c4db41e36b15" kindref="member">Time_cast</ref>(<ref refid="class_timeshifts_1a221c8bebd939cf4a9442f5c9dddfeefb" kindref="member">m_timewindow_ns</ref>*1000);</highlight></codeline>
<codeline lineno="274" refid="class_timeshifts_1ad2182e6c34ecf5b760f67d58167df53e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1ad2182e6c34ecf5b760f67d58167df53e" kindref="member">m_min_mult</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="275" refid="class_timeshifts_1a46a97751e517cc9f21d54d04bb16c5f5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a46a97751e517cc9f21d54d04bb16c5f5" kindref="member">m_max_mult</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="276" refid="class_timeshifts_1a149e0f0885280b888df3f2b35ac29af8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/><ref refid="class_timeshifts_1a149e0f0885280b888df3f2b35ac29af8" kindref="member">m_time_ref_label</ref><sp/>=<sp/>252;</highlight></codeline>
<codeline lineno="277" refid="class_timeshifts_1a057b1fc1611ed270db718db0b72b801d" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_timeshifts_1a057b1fc1611ed270db718db0b72b801d" kindref="member">m_time_ref_name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;R1A9_FATIMA_LaBr3&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278" refid="class_timeshifts_1a7363de3261a770287e981328276f21dd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="lib_co_8hpp_1a92c2ca60527219506deb3325507baee0" kindref="member">ulong</ref><sp/><ref refid="class_timeshifts_1a7363de3261a770287e981328276f21dd" kindref="member">m_max_hits</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="279" refid="class_timeshifts_1abc19fb99a4d950501fb53430497e34c2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_hit_8hpp_1a04b75a9e083a1c44419fdb7c3f87c361" kindref="member">ADC</ref><sp/><ref refid="class_timeshifts_1abc19fb99a4d950501fb53430497e34c2" kindref="member">m_Emin_ADC</ref><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="280" refid="class_timeshifts_1a9858ca34e3981520e2c1d5982bb185fd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a9858ca34e3981520e2c1d5982bb185fd" kindref="member">m_nb_detectors</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>map<sp/>holds<sp/>the<sp/>number<sp/>of<sp/>bins<sp/>per<sp/>ns<sp/>(e.g.<sp/>for<sp/>LaBr3<sp/>there<sp/>is<sp/>one<sp/>bin<sp/>every<sp/>100<sp/>ps)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="class_timeshifts_1a4dd5b35444834dca94e9432619e24c47" refkind="member"><highlight class="normal"><sp/><sp/>std::map&lt;dType,<sp/>Time_ns&gt;<sp/><ref refid="class_timeshifts_1a4dd5b35444834dca94e9432619e24c47" kindref="member">m_bins_per_ns</ref><sp/>=<sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;labr&quot;</highlight><highlight class="normal">,<sp/><sp/>10.},<sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ge&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>1.},<sp/></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;bgo&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>2.},<sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;eden&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>2.},<sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;RF&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>10.},<sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;paris&quot;</highlight><highlight class="normal">,<sp/>10.},<sp/></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;dssd&quot;</highlight><highlight class="normal">,<sp/><sp/>0.5}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Idem,<sp/>but<sp/>allows<sp/>to<sp/>handle<sp/>individual<sp/>labels;<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::map&lt;dType,<sp/>Time_ns&gt;<sp/>m_bins_per_ns_labels;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>map<sp/>tell<sp/>if<sp/>the<sp/>timeshift<sp/>is<sp/>preferently<sp/>taken<sp/>as<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="class_timeshifts_1af643b4246a7e7efb0857cec8f705eeb1" refkind="member"><highlight class="normal"><sp/><sp/>std::map&lt;dType,<sp/>bool&gt;<sp/><ref refid="class_timeshifts_1af643b4246a7e7efb0857cec8f705eeb1" kindref="member">m_RF_preferred</ref><sp/>=<sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;labr&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">},<sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ge&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">},<sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;bgo&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">},<sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;eden&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">},<sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;RF&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">},<sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;paris&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">},<sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;dssd&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>map<sp/>tells<sp/>if<sp/>the<sp/>timeshift<sp/>is<sp/>preferently<sp/>taken<sp/>as<sp/>the<sp/>mean<sp/>of<sp/>the<sp/>peak<sp/>(false)<sp/>or<sp/>the<sp/>raising<sp/>edge<sp/>(true)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="class_timeshifts_1a0c81995b961c33e22c49d3d180b3cec5" refkind="member"><highlight class="normal"><sp/><sp/>std::map&lt;dType,<sp/>bool&gt;<sp/><ref refid="class_timeshifts_1a0c81995b961c33e22c49d3d180b3cec5" kindref="member">m_edge_preferred</ref><sp/>=<sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;labr&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">},<sp/></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ge&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">},<sp/></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;bgo&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">},<sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;eden&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">},<sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;RF&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">},<sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;paris&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">},<sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;dssd&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="class_timeshifts_1a8165d76fc5a92d7d49498624ae2b32b5" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_timeshifts_1a8165d76fc5a92d7d49498624ae2b32b5" kindref="member">m_outDir</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322" refid="class_timeshifts_1af567d75bbe3263cece04cf3e6eff5256" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_timeshifts_1af567d75bbe3263cece04cf3e6eff5256" kindref="member">m_ts_outdir</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Timeshifts/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323" refid="class_timeshifts_1a7a9d72db7cd915c282014f63c6020d8e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_path" kindref="compound">Path</ref><sp/><ref refid="class_timeshifts_1a7a9d72db7cd915c282014f63c6020d8e" kindref="member">m_outPath</ref>;</highlight></codeline>
<codeline lineno="324" refid="class_timeshifts_1ae3640104ddce3ee9548d83186f4032e6" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_timeshifts_1ae3640104ddce3ee9548d83186f4032e6" kindref="member">m_outRoot</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;timeshifts.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325" refid="class_timeshifts_1a04a95b4e6269c5a02010909206b24730" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_timeshifts_1a04a95b4e6269c5a02010909206b24730" kindref="member">m_outData</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Histograms<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="class_timeshifts_1a1a70cc43f750599c993c689e62cfb29f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_t_hist" kindref="compound">MTTHist&lt;TH1F&gt;</ref><sp/><ref refid="class_timeshifts_1a1a70cc43f750599c993c689e62cfb29f" kindref="member">m_EnergyRef</ref>;<sp/></highlight><highlight class="comment">//<sp/>Energy<sp/>spectra<sp/>of<sp/>the<sp/>time<sp/>reference<sp/>detector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="class_timeshifts_1a18d1ff66fe0d6be096467ff874c139dc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_t_hist" kindref="compound">MTTHist&lt;TH2F&gt;</ref><sp/><ref refid="class_timeshifts_1a18d1ff66fe0d6be096467ff874c139dc" kindref="member">m_EnergyRef_bidim</ref>;<sp/></highlight><highlight class="comment">//<sp/>Energy<sp/>VS<sp/>Time<sp/>(unused)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="class_timeshifts_1aa45cc86b7201c47bb97f0422dff23725" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e" kindref="member">Vector_MTTHist&lt;TH1F&gt;</ref><sp/><ref refid="class_timeshifts_1aa45cc86b7201c47bb97f0422dff23725" kindref="member">m_time_spectra</ref>;<sp/></highlight><highlight class="comment">//<sp/>Time<sp/>spectra<sp/>from<sp/>coincidence<sp/>with<sp/>the<sp/>time<sp/>reference<sp/>detector,<sp/>one<sp/>TH1F<sp/>for<sp/>each<sp/>detector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="class_timeshifts_1ae8fe2221ac14c7c9920ba2dee69ec719" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e" kindref="member">Vector_MTTHist&lt;TH1F&gt;</ref><sp/><ref refid="class_timeshifts_1ae8fe2221ac14c7c9920ba2dee69ec719" kindref="member">m_time_spectra_corrected</ref>;<sp/></highlight><highlight class="comment">//<sp/>Time<sp/>spectra<sp/>from<sp/>coincidence<sp/>with<sp/>the<sp/>time<sp/>reference<sp/>detector,<sp/>one<sp/>TH1F<sp/>for<sp/>each<sp/>detector,<sp/>after<sp/>timeshift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="class_timeshifts_1ab9b0b763dbe5e2be797d89e9bcb05c1e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_t_hist" kindref="compound">MTTHist&lt;TH2F&gt;</ref><sp/><ref refid="class_timeshifts_1ab9b0b763dbe5e2be797d89e9bcb05c1e" kindref="member">m_time_spectra_corrected_bidim</ref>;<sp/></highlight><highlight class="comment">//<sp/>Time<sp/>spectra<sp/>from<sp/>coincidence<sp/>with<sp/>the<sp/>time<sp/>reference<sp/>detector,<sp/>X<sp/>axis<sp/>label,<sp/>Y<sp/>axis<sp/>time<sp/>spectra,<sp/>after<sp/>timeshift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_period<sp/>=<sp/><ref refid="_run_matrixator_8hpp_1a7063002012536e5c151c84a4d4cb508f" kindref="member">USE_RF</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_t_hist" kindref="compound">MTTHist&lt;TH1F&gt;</ref><sp/>m_histo_ref_VS_RF;<sp/></highlight><highlight class="comment">//<sp/>RF<sp/>time<sp/>spectra<sp/>of<sp/>the<sp/>time<sp/>reference<sp/>detector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_t_hist" kindref="compound">MTTHist&lt;TH2F&gt;</ref><sp/>m_histo_ref_vs_RF_VS_mult;<sp/></highlight><highlight class="comment">//<sp/>RF<sp/>time<sp/>spectra<sp/>VS<sp/>multiplicity<sp/>of<sp/>the<sp/>time<sp/>reference<sp/>detector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_t_hist" kindref="compound">MTTHist&lt;TH1F&gt;</ref><sp/>m_time_spectra_reference_RF_corrected;<sp/></highlight><highlight class="comment">//<sp/>RF<sp/>time<sp/>spectra<sp/>VS<sp/>multiplicity<sp/>of<sp/>the<sp/>time<sp/>reference<sp/>detector,<sp/>after<sp/>timeshift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><ref refid="_m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e" kindref="member">Vector_MTTHist&lt;TH1F&gt;</ref><sp/>m_histograms_VS_RF;<sp/></highlight><highlight class="comment">//<sp/>RF<sp/>time<sp/>spectra,<sp/>one<sp/>TH1F<sp/>for<sp/>each<sp/>detector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><ref refid="_m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e" kindref="member">Vector_MTTHist&lt;TH1F&gt;</ref><sp/>m_time_spectra_corrected_RF;<sp/></highlight><highlight class="comment">//<sp/>RF<sp/>time<sp/>spectra,<sp/>one<sp/>TH1F<sp/>for<sp/>each<sp/>detector,<sp/>after<sp/>timeshift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_t_hist" kindref="compound">MTTHist&lt;TH2F&gt;</ref><sp/>m_time_spectra_corrected_bidim_RF;<sp/></highlight><highlight class="comment">//<sp/>RF<sp/>time<sp/>spectra,<sp/>X<sp/>axis<sp/>label,<sp/>Y<sp/>axis<sp/>time<sp/>spectra,<sp/>after<sp/>timeshift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal">};</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="class_timeshifts_1a28163efe8d487669cf50d5f6e1060d71" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a28163efe8d487669cf50d5f6e1060d71" kindref="member">Timeshifts::load</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename)</highlight></codeline>
<codeline lineno="349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>std::ifstream<sp/>inputfile(filename,<sp/>std::ifstream::in);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inputfile.good())<sp/>{<ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;CAN&apos;T<sp/>OPEN<sp/>THE<sp/>TIMESHIFT<sp/>FILE<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>filename);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="files__functions_8hpp_1afd584978228fac5fae283c12837378dd" kindref="member">file_is_empty</ref>(inputfile))<sp/>{<ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;TIMESHIFT<sp/>FILE&quot;</highlight><highlight class="normal">,<sp/>filename,<sp/></highlight><highlight class="stringliteral">&quot;EMPTY<sp/>!&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>std::string<sp/>line<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Reading<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/>label<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Reading<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-----------------------------------------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>extract<sp/>the<sp/>maximum<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Infer<sp/>the<sp/>number<sp/>of<sp/>detectors<sp/>from<sp/>the<sp/>higher<sp/>label<sp/>in<sp/>calbration<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(getline(inputfile,<sp/>line))</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istringstream<sp/>iss(line);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>iss<sp/>&gt;&gt;<sp/>label;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size&lt;label)<sp/>size<sp/>=<sp/>label;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>size++;<sp/></highlight><highlight class="comment">//<sp/>The<sp/>size<sp/>of<sp/>the<sp/>vector<sp/>must<sp/>be<sp/>label_max+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>there<sp/>is<sp/>no<sp/>mismatch<sp/>with<sp/>the<sp/>detectors<sp/>module<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref><sp/>&amp;&amp;<sp/>size&lt;<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a1177661fb15c9825755925faf00c8398" kindref="member">size</ref>())<sp/>size<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a1177661fb15c9825755925faf00c8398" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>inputfile.clear();<sp/></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>inputfile.seekg(0,<sp/>inputfile.beg);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-----------------------------------------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>fill<sp/>the<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>.resize(size,<sp/>0);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><ref refid="_hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7" kindref="member">Time</ref><sp/>shift<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(getline(inputfile,<sp/>line))</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Then<sp/>fill<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1a9858ca34e3981520e2c1d5982bb185fd" kindref="member">m_nb_detectors</ref>++;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istringstream<sp/>iss(line);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>iss<sp/>&gt;&gt;<sp/>label<sp/>&gt;&gt;<sp/>shift;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>[label]<sp/>=<sp/>shift;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>shift<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>inputfile.close();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Timeshifts<sp/>extracted<sp/>from&quot;</highlight><highlight class="normal">,<sp/>filename);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_timeshifts_1a0bf7feef945319722118991949b033d4" kindref="member">m_ok</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="class_timeshifts_1acca1130b271301c5477d4b4a23ae4e5b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1acca1130b271301c5477d4b4a23ae4e5b" kindref="member">Timeshifts::setParameters</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>parameter)</highlight></codeline>
<codeline lineno="390"><highlight class="normal">{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>std::string<sp/>temp;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>std::istringstream<sp/>is(parameter);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(is<sp/>&gt;&gt;<sp/>temp)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;timewindow:&quot;</highlight><highlight class="normal"><sp/>||<sp/>temp<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;time_window:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>&gt;&gt;<sp/><ref refid="class_timeshifts_1a221c8bebd939cf4a9442f5c9dddfeefb" kindref="member">m_timewindow_ns</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_timeshifts_1a304c1076d703a78153cfe72d61b28425" kindref="member">setTimeWindow_ns</ref>(<ref refid="class_timeshifts_1a221c8bebd939cf4a9442f5c9dddfeefb" kindref="member">m_timewindow_ns</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;time_reference:&quot;</highlight><highlight class="normal"><sp/>||<sp/>temp<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;time_ref:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>&gt;&gt;<sp/><ref refid="class_timeshifts_1a057b1fc1611ed270db718db0b72b801d" kindref="member">m_time_ref_name</ref>;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_timeshifts_1aa7cb3acf23e80927fa85be636f55a99d" kindref="member">setTimeReference</ref>(<ref refid="class_timeshifts_1a057b1fc1611ed270db718db0b72b801d" kindref="member">m_time_ref_name</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;outDir:&quot;</highlight><highlight class="normal">)<sp/><sp/>{is<sp/>&gt;&gt;<sp/><ref refid="class_timeshifts_1a8165d76fc5a92d7d49498624ae2b32b5" kindref="member">m_outDir</ref>;<sp/><ref refid="class_timeshifts_1a26367484f20648d7c3f5b3bbe5679ca8" kindref="member">setOutDir</ref>(<ref refid="class_timeshifts_1a8165d76fc5a92d7d49498624ae2b32b5" kindref="member">m_outDir</ref>);}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;outRoot:&quot;</highlight><highlight class="normal">)<sp/>{is<sp/>&gt;&gt;<sp/><ref refid="class_timeshifts_1ae3640104ddce3ee9548d83186f4032e6" kindref="member">m_outRoot</ref>;<sp/><ref refid="class_timeshifts_1aa9f0f8cc1d96a5408f233449767ef0f6" kindref="member">setOutRoot</ref>(<ref refid="class_timeshifts_1ae3640104ddce3ee9548d83186f4032e6" kindref="member">m_outRoot</ref>);}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;outData:&quot;</highlight><highlight class="normal">)<sp/>{is<sp/>&gt;&gt;<sp/><ref refid="class_timeshifts_1a04a95b4e6269c5a02010909206b24730" kindref="member">m_outData</ref>;<sp/><ref refid="class_timeshifts_1ab877131bc1bd7394f55c3d46729ac9e6" kindref="member">setOutData</ref>(<ref refid="class_timeshifts_1a04a95b4e6269c5a02010909206b24730" kindref="member">m_outData</ref>);}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;mult:&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/>{is<sp/>&gt;&gt;<sp/><ref refid="class_timeshifts_1ad2182e6c34ecf5b760f67d58167df53e" kindref="member">m_min_mult</ref><sp/>&gt;&gt;<sp/><ref refid="class_timeshifts_1a46a97751e517cc9f21d54d04bb16c5f5" kindref="member">m_max_mult</ref>;<sp/><ref refid="class_timeshifts_1a6206d2b698c88e80bc42bdf4b51fce14" kindref="member">setMult</ref>(<ref refid="class_timeshifts_1ad2182e6c34ecf5b760f67d58167df53e" kindref="member">m_min_mult</ref>,<sp/><ref refid="class_timeshifts_1a46a97751e517cc9f21d54d04bb16c5f5" kindref="member">m_max_mult</ref>);}<sp/></highlight><highlight class="comment">//by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;verbose&quot;</highlight><highlight class="normal">)<sp/><sp/>{<ref refid="class_timeshifts_1a1b6e129787ae7641ecbcb990f6e86bb9" kindref="member">verbose</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{std::cout<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ATTENTION,<sp/>parameter<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>temp<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>recognized<sp/>!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/>std::endl;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_timeshifts_1a04a95b4e6269c5a02010909206b24730" kindref="member">m_outData</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1a04a95b4e6269c5a02010909206b24730" kindref="member">m_outData</ref><sp/>=<sp/><ref refid="files__functions_8hpp_1a658fd83a6ed34994ff0742273a3cc358" kindref="member">removeExtension</ref>(<ref refid="class_timeshifts_1ae3640104ddce3ee9548d83186f4032e6" kindref="member">m_outRoot</ref>)+</highlight><highlight class="stringliteral">&quot;.dT&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Name<sp/>of<sp/>the<sp/>output<sp/>timeshifts<sp/>file<sp/>automatically<sp/>set<sp/>to&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_timeshifts_1a04a95b4e6269c5a02010909206b24730" kindref="member">m_outData</ref>);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="class_timeshifts_1a40254b2aa53028b1b5c941ee1cb3833d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a40254b2aa53028b1b5c941ee1cb3833d" kindref="member">Timeshifts::InitializeRaw</ref>()</highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_timeshifts_1a8c7b6bfda5c2dacef69d0b7657d89fce" kindref="member">m_initializedRaw</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight><highlight class="comment">//<sp/>To<sp/>prevent<sp/>multiple<sp/>initializations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Raw<sp/>Timeshifts<sp/>spectra<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1aa45cc86b7201c47bb97f0422dff23725" kindref="member">m_time_spectra</ref>.resize(<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a1177661fb15c9825755925faf00c8398" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Raw<sp/>RF<sp/>Timeshifts<sp/>spectra<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>m_histograms_VS_RF.resize(<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a1177661fb15c9825755925faf00c8398" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>m_histo_ref_VS_RF.reset(<sp/></highlight><highlight class="stringliteral">&quot;Ref_RF_calculated&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Reference<sp/>RF<sp/>calculated;Time[ps];#&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_timeshifts_1a221c8bebd939cf4a9442f5c9dddfeefb" kindref="member">m_timewindow_ns</ref>*<ref refid="class_timeshifts_1a4dd5b35444834dca94e9432619e24c47" kindref="member">m_bins_per_ns</ref>[</highlight><highlight class="stringliteral">&quot;RF&quot;</highlight><highlight class="normal">],<sp/>-<ref refid="class_timeshifts_1a73dda60d3425a0de61719829231e6d55" kindref="member">m_timewindow</ref>/2,<sp/><ref refid="class_timeshifts_1a73dda60d3425a0de61719829231e6d55" kindref="member">m_timewindow</ref>/2);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>m_histo_ref_vs_RF_VS_mult.reset(<sp/></highlight><highlight class="stringliteral">&quot;Ref_RF_VS_mult&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Reference<sp/>RF<sp/>VS<sp/>multiplicity;Time[ps];Multiplicity&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_timeshifts_1a221c8bebd939cf4a9442f5c9dddfeefb" kindref="member">m_timewindow_ns</ref>*<ref refid="class_timeshifts_1a4dd5b35444834dca94e9432619e24c47" kindref="member">m_bins_per_ns</ref>[</highlight><highlight class="stringliteral">&quot;RF&quot;</highlight><highlight class="normal">],-<ref refid="class_timeshifts_1a73dda60d3425a0de61719829231e6d55" kindref="member">m_timewindow</ref>/2,<ref refid="class_timeshifts_1a73dda60d3425a0de61719829231e6d55" kindref="member">m_timewindow</ref>/2,<sp/>10,0,10<sp/>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="lib_co_8hpp_1ad29aff8b0f7fde4ef0291331012e596a" kindref="member">ushort</ref><sp/>label<sp/>=<sp/>0;<sp/>label&lt;<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a1177661fb15c9825755925faf00c8398" kindref="member">size</ref>();<sp/>label++)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a47ae394beae7efa2fb8fa1a3c7f8427d" kindref="member">exists</ref>(label))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>[label];</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>type<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref>(label);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1aa45cc86b7201c47bb97f0422dff23725" kindref="member">m_time_spectra</ref>[label].reset(name.c_str(),<sp/>name.c_str(),<sp/><ref refid="class_timeshifts_1a221c8bebd939cf4a9442f5c9dddfeefb" kindref="member">m_timewindow_ns</ref>*<ref refid="class_timeshifts_1a4dd5b35444834dca94e9432619e24c47" kindref="member">m_bins_per_ns</ref>[type],<sp/>-<ref refid="class_timeshifts_1a73dda60d3425a0de61719829231e6d55" kindref="member">m_timewindow</ref>/2,<sp/><ref refid="class_timeshifts_1a73dda60d3425a0de61719829231e6d55" kindref="member">m_timewindow</ref>/2);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>m_histograms_VS_RF[label].reset((name+</highlight><highlight class="stringliteral">&quot;_RF&quot;</highlight><highlight class="normal">).c_str(),<sp/>(name+</highlight><highlight class="stringliteral">&quot;_RF&quot;</highlight><highlight class="normal">).c_str(),<sp/><ref refid="class_timeshifts_1a221c8bebd939cf4a9442f5c9dddfeefb" kindref="member">m_timewindow_ns</ref>*<ref refid="class_timeshifts_1a4dd5b35444834dca94e9432619e24c47" kindref="member">m_bins_per_ns</ref>[type],<sp/>-<ref refid="class_timeshifts_1a73dda60d3425a0de61719829231e6d55" kindref="member">m_timewindow</ref>/2,<sp/><ref refid="class_timeshifts_1a73dda60d3425a0de61719829231e6d55" kindref="member">m_timewindow</ref>/2);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;RF&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1aa45cc86b7201c47bb97f0422dff23725" kindref="member">m_time_spectra</ref>[label].reset(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1aa45cc86b7201c47bb97f0422dff23725" kindref="member">m_time_spectra</ref>[label].reset(name.c_str(),<sp/>name.c_str(),<sp/>1000,<sp/>-100,<sp/>100);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/></highlight><highlight class="comment">//USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_timeshifts_1a8c7b6bfda5c2dacef69d0b7657d89fce" kindref="member">m_initializedRaw</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="class_timeshifts_1a05ac31a6c49360d94eeff184dc896c6b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a05ac31a6c49360d94eeff184dc896c6b" kindref="member">Timeshifts::InitializeCorrected</ref>()</highlight></codeline>
<codeline lineno="455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_timeshifts_1ae3b75fce1fde95be5ca45b20cfbb8350" kindref="member">m_initializedCorrected</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight><highlight class="comment">//<sp/>To<sp/>prevent<sp/>multiple<sp/>initializations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Corrected<sp/>timeshifts<sp/>spectra<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1ae8fe2221ac14c7c9920ba2dee69ec719" kindref="member">m_time_spectra_corrected</ref>.resize(<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a1177661fb15c9825755925faf00c8398" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1ab9b0b763dbe5e2be797d89e9bcb05c1e" kindref="member">m_time_spectra_corrected_bidim</ref>.<ref refid="class_m_t_t_hist_1ab31bc7c988df03ecae485b391850e2c0" kindref="member">reset</ref>(</highlight><highlight class="stringliteral">&quot;All<sp/>corrected<sp/>time<sp/>spectra&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>corrected<sp/>time<sp/>spectra;Channel;Time[ps];#&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a1177661fb15c9825755925faf00c8398" kindref="member">size</ref>(),<sp/>0,<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a1177661fb15c9825755925faf00c8398" kindref="member">size</ref>(),<sp/>1000,<sp/>-<ref refid="class_timeshifts_1a73dda60d3425a0de61719829231e6d55" kindref="member">m_timewindow</ref>/2,<sp/><ref refid="class_timeshifts_1a73dda60d3425a0de61719829231e6d55" kindref="member">m_timewindow</ref>/2);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>borne_inf<sp/>=<sp/>-100000.f;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>borne_sup<sp/>=<sp/>(<ref refid="_run_matrixator_8hpp_1a7063002012536e5c151c84a4d4cb508f" kindref="member">USE_RF</ref>+100.f)*1000.f;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>RF_time_window<sp/>=<sp/>borne_sup-borne_inf;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>RF_time_window_ns<sp/>=<sp/>RF_time_window/1000.f;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Corrected<sp/>RF<sp/>timeshifts<sp/>spectra<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>m_time_spectra_corrected_RF.resize(<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a1177661fb15c9825755925faf00c8398" kindref="member">size</ref>());</highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>m_time_spectra_reference_RF_corrected.reset(<sp/></highlight><highlight class="stringliteral">&quot;Ref_RF_corrected&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Reference<sp/>RF<sp/>corrected;Time[ps];#&quot;</highlight><highlight class="normal">,<sp/>RF_time_window_ns*<ref refid="class_timeshifts_1a4dd5b35444834dca94e9432619e24c47" kindref="member">m_bins_per_ns</ref>[</highlight><highlight class="stringliteral">&quot;RF&quot;</highlight><highlight class="normal">],<sp/>borne_inf,<sp/>borne_sup);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>m_time_spectra_corrected_bidim_RF.reset(</highlight><highlight class="stringliteral">&quot;All_corrected_time_spectra_RF&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>corrected<sp/>time<sp/>spectra<sp/>VS<sp/>RF;Channel;Time[ps];#&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a1177661fb15c9825755925faf00c8398" kindref="member">size</ref>(),<sp/>0,<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a1177661fb15c9825755925faf00c8398" kindref="member">size</ref>(),<sp/>RF_time_window_ns*2,<sp/>borne_inf,<sp/>borne_sup);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="lib_co_8hpp_1ad29aff8b0f7fde4ef0291331012e596a" kindref="member">ushort</ref><sp/>label<sp/>=<sp/>0;<sp/>label&lt;<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a1177661fb15c9825755925faf00c8398" kindref="member">size</ref>();<sp/>label++)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a47ae394beae7efa2fb8fa1a3c7f8427d" kindref="member">exists</ref>(label))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>[label];</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>type<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref>(label);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1ae8fe2221ac14c7c9920ba2dee69ec719" kindref="member">m_time_spectra_corrected</ref>[label].reset((name+</highlight><highlight class="stringliteral">&quot;_corrected&quot;</highlight><highlight class="normal">).c_str(),<sp/>(name+</highlight><highlight class="stringliteral">&quot;<sp/>corrected;Time[ps];#&quot;</highlight><highlight class="normal">).c_str(),<sp/><ref refid="class_timeshifts_1a221c8bebd939cf4a9442f5c9dddfeefb" kindref="member">m_timewindow_ns</ref>*<ref refid="class_timeshifts_1a4dd5b35444834dca94e9432619e24c47" kindref="member">m_bins_per_ns</ref>[type],<sp/>-<ref refid="class_timeshifts_1a73dda60d3425a0de61719829231e6d55" kindref="member">m_timewindow</ref>/2,<sp/><ref refid="class_timeshifts_1a73dda60d3425a0de61719829231e6d55" kindref="member">m_timewindow</ref>/2);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>m_time_spectra_corrected_RF[label].reset((name+</highlight><highlight class="stringliteral">&quot;_RF_corrected&quot;</highlight><highlight class="normal">).c_str(),<sp/>(name+</highlight><highlight class="stringliteral">&quot;<sp/>RF<sp/>corrected;Time[ps];#&quot;</highlight><highlight class="normal">).c_str(),<sp/>RF_time_window_ns*<ref refid="class_timeshifts_1a4dd5b35444834dca94e9432619e24c47" kindref="member">m_bins_per_ns</ref>[type],<sp/>borne_inf,<sp/>borne_sup);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/></highlight><highlight class="comment">//USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_timeshifts_1ae3b75fce1fde95be5ca45b20cfbb8350" kindref="member">m_initializedCorrected</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="class_timeshifts_1a0753528955e94c43043cd7d68193f960" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a0753528955e94c43043cd7d68193f960" kindref="member">Timeshifts::Initialize</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>initializeRaw,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>initializeCorrected)</highlight></codeline>
<codeline lineno="493"><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(initializeRaw)<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_timeshifts_1a40254b2aa53028b1b5c941ee1cb3833d" kindref="member">InitializeRaw</ref>();</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(initializeCorrected)<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_timeshifts_1a05ac31a6c49360d94eeff184dc896c6b" kindref="member">InitializeCorrected</ref>();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_timeshifts_1a025f10899ed33302dee33f2e98d40b3a" kindref="member">m_energySpectraInitialized</ref><sp/>&amp;&amp;<sp/>(initializeRaw<sp/>||<sp/>initializeCorrected))</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Energy<sp/>spectra<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1a1a70cc43f750599c993c689e62cfb29f" kindref="member">m_EnergyRef</ref>.<ref refid="class_m_t_t_hist_1ab31bc7c988df03ecae485b391850e2c0" kindref="member">reset</ref>(</highlight><highlight class="stringliteral">&quot;Energy_spectra&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Energy_spectra;ADC;#&quot;</highlight><highlight class="normal">,<sp/>10000,<sp/>0,<sp/>1000000);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1a025f10899ed33302dee33f2e98d40b3a" kindref="member">m_energySpectraInitialized</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>m_EnergyRef_bidim.reset(&quot;Energy_VS_time&quot;,<sp/>&quot;Energy<sp/>VS<sp/>time&quot;,<sp/>100,-1,1,<sp/>1000,0,1000000);<sp/>//<sp/>Not<sp/>used<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_timeshifts_1ad6bda9ede24fd63e7a43ad12bd861a98" kindref="member">m_initialized</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>To<sp/>prevent<sp/>multiple<sp/>initializations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1a64966ebd9e0538d9e3160bbfaf4a74de" kindref="member">mt_ref_time</ref>.resize(<ref refid="class_m_t_object_1ad156f9b1c68f0e2713abb16890b1fa15" kindref="member">MTObject::getThreadsNumber</ref>(),<sp/>0);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>Detectors<sp/>module<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>label_max<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a1177661fb15c9825755925faf00c8398" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label_max<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;PLEASE<sp/>LOAD<sp/>THE<sp/>ID<sp/>FILE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_timeshifts_1a0bf7feef945319722118991949b033d4" kindref="member">m_ok</ref><sp/>=<sp/><ref refid="class_timeshifts_1ad6bda9ede24fd63e7a43ad12bd861a98" kindref="member">m_initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>.resize(label_max,<sp/>0);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1a4338a0a481ffac2a8f8dffbafca76e7d" kindref="member">m_RF_preferred_label</ref>.resize(label_max,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1ab098d455164964ba60b9f5c555de74e4" kindref="member">m_edge_preferred_label</ref>.resize(label_max,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1a53bfccafc7cfbd834754b752a9a4c313" kindref="member">m_nb_shifts_RF_peak</ref>.resize(label_max,<sp/>0);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_timeshifts_1a0bf7feef945319722118991949b033d4" kindref="member">m_ok</ref><sp/>=<sp/><ref refid="class_timeshifts_1ad6bda9ede24fd63e7a43ad12bd861a98" kindref="member">m_initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526" refid="class_timeshifts_1a21dc1e7bf232c6b0637b16aa04e43701" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a21dc1e7bf232c6b0637b16aa04e43701" kindref="member">Timeshifts::treatFolder</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>folder,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_files)</highlight></codeline>
<codeline lineno="527"><highlight class="normal">{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><ref refid="class_path" kindref="compound">Path</ref><sp/>path(folder);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><ref refid="class_files_manager" kindref="compound">FilesManager</ref><sp/>files;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>files.<ref refid="class_files_manager_1a6d05662378bde592075237b9fa0a5168" kindref="member">addFolder</ref>(folder,<sp/>nb_files);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_m_t_object_1a6fe86ce1ea64ede7e695490bceb264a3" kindref="member">MTObject::ON</ref>)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="comment">//<sp/>If<sp/>multithreading,<sp/>treat<sp/>each<sp/>data<sp/>file<sp/>of<sp/>the<sp/>folder<sp/>in<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Calculating<sp/>timeshifts<sp/>with&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_m_t_object_1ac97399bb34f766e41e7f9a1cd1b7eb7a" kindref="member">MTObject::getThreadsNb</ref>(),</highlight><highlight class="stringliteral">&quot;threads&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_t_vector" kindref="compound">MTList</ref><sp/>files_MT(files.<ref refid="class_files_manager_1a2b619786ba65a7ac1e701fc61e2409ae" kindref="member">getListFiles</ref>());</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>FileManager<sp/>object<sp/>isn&apos;t<sp/>thread<sp/>safe.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>That<sp/>is<sp/>why<sp/>one<sp/>has<sp/>to<sp/>encapsulate<sp/>the<sp/>files<sp/>list<sp/>inside<sp/>a<sp/>MTList<sp/>(Multi-Threaded<sp/>List)<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_t_object_1a35c02650eb403bd54e867f93bb26fc47" kindref="member">MTObject::parallelise_function</ref>(<ref refid="class_timeshifts_1a79fe955b7d1bbc12fd4c659691727df3" kindref="member">treatFilesMT</ref>,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>files_MT);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="comment">//<sp/>If<sp/>no<sp/>multithreading,<sp/>treat<sp/>each<sp/>data<sp/>file<sp/>sequentially</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Calculating<sp/>timeshifts<sp/>without<sp/>multithreading&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>filename;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(files.<ref refid="class_files_manager_1ac4d90f9590ed90fcbbe23557ae88c892" kindref="member">nextFileName</ref>(filename))</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1aaef5b6fdd23be94ed37a2b4e7fe47b48" kindref="member">treatFile</ref>(filename);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551" refid="class_timeshifts_1a3d3ab1b3498ca45832d8a8735f16e188" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a3d3ab1b3498ca45832d8a8735f16e188" kindref="member">Timeshifts::calculate</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>folder,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_files)</highlight></codeline>
<codeline lineno="552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><ref refid="class_timer" kindref="compound">Timer</ref><sp/>timer;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_timeshifts_1a0753528955e94c43043cd7d68193f960" kindref="member">Initialize</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Someting<sp/>went<sp/>wrong<sp/>in<sp/>the<sp/>timeshifts<sp/>calculation<sp/>initialization...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_timeshifts_1a715283a5be42b86ca70b4e468ccb2931" kindref="member">CheckParameters</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>the<sp/>time<sp/>spectra<sp/>with<sp/>data<sp/>from<sp/>data<sp/>files<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_timeshifts_1a21dc1e7bf232c6b0637b16aa04e43701" kindref="member">treatFolder</ref>(folder,<sp/>nb_files);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Once<sp/>the<sp/>histograms<sp/>have<sp/>been<sp/>filled,<sp/>fit<sp/>the<sp/>peaks<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_timeshifts_1a608d9443a15dd669920e10dd8baee23a" kindref="member">analyse</ref>();</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Timeshifts<sp/>calculated<sp/>in&quot;</highlight><highlight class="normal">,<sp/>timer(),<sp/>timer.<ref refid="class_timer_1a3614503158effc6668bc10001d75d20c" kindref="member">unit</ref>());</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="578" refid="class_timeshifts_1a6520eab7a8824f41a2be8517d83fc835" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a6520eab7a8824f41a2be8517d83fc835" kindref="member">Timeshifts::verify</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>folder,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_files)</highlight></codeline>
<codeline lineno="579"><highlight class="normal">{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><ref refid="class_timer" kindref="compound">Timer</ref><sp/>timer;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_timeshifts_1a0753528955e94c43043cd7d68193f960" kindref="member">Initialize</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Something<sp/>went<sp/>wrong<sp/>in<sp/>the<sp/>timeshifts<sp/>initialization...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Timeshifts<sp/>calculated,<sp/>now<sp/>verification<sp/>time<sp/>!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1af8a8bb48626abf6a9a634b3c826b0e44" kindref="member">m_corrected</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_timeshifts_1a21dc1e7bf232c6b0637b16aa04e43701" kindref="member">treatFolder</ref>(folder,<sp/>nb_files);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1af8a8bb48626abf6a9a634b3c826b0e44" kindref="member">m_corrected</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Timeshifts<sp/>verified<sp/>in&quot;</highlight><highlight class="normal">,<sp/>timer(),<sp/>timer.<ref refid="class_timer_1a3614503158effc6668bc10001d75d20c" kindref="member">unit</ref>());</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599" refid="class_timeshifts_1a79fe955b7d1bbc12fd4c659691727df3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a79fe955b7d1bbc12fd4c659691727df3" kindref="member">Timeshifts::treatFilesMT</ref>(<ref refid="class_timeshifts" kindref="compound">Timeshifts</ref><sp/>&amp;<sp/>ts,<sp/><ref refid="class_m_t_vector" kindref="compound">MTList</ref><sp/>&amp;<sp/>files_MT)</highlight></codeline>
<codeline lineno="600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>method<sp/>has<sp/>to<sp/>be<sp/>static<sp/>in<sp/>order<sp/>to<sp/>be<sp/>multithreaded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Thus,<sp/>the<sp/>only<sp/>way<sp/>it<sp/>can<sp/>be<sp/>&quot;link&quot;<sp/>to<sp/>the<sp/>class<sp/>(i.e.<sp/>having<sp/>access<sp/>to<sp/>its<sp/>public<sp/>members)<sp/>is<sp/>to<sp/>pass<sp/>the<sp/>class<sp/>itself<sp/>as<sp/>an<sp/>argument.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>done<sp/>by<sp/>passing<sp/>&quot;Timeshifts<sp/>&amp;<sp/>ts&quot;<sp/>in<sp/>arguments<sp/>and<sp/>fill<sp/>this<sp/>argument<sp/>with<sp/>&quot;*this&quot;<sp/>in<sp/>the<sp/>piece<sp/>of<sp/>code<sp/>that<sp/>calls<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Finally,<sp/>we<sp/>can<sp/>use<sp/>the<sp/>same<sp/>function<sp/>as<sp/>the<sp/>not<sp/>multithreaded<sp/>piece<sp/>of<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>std::string<sp/>filename;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(files_MT.<ref refid="class_m_t_vector_1a824a9ff009dde921eec4759c69f74ca7" kindref="member">getNext</ref>(filename))</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>ts.<ref refid="class_timeshifts_1aaef5b6fdd23be94ed37a2b4e7fe47b48" kindref="member">treatFile</ref>(filename);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612" refid="_timeshifts_8hpp_1a202a57630e2aa9744043c30964b64bcd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_timeshifts_8hpp_1a202a57630e2aa9744043c30964b64bcd" kindref="member">get_first_RF_of_file</ref>(<ref refid="class_faster_reader" kindref="compound">FasterReader</ref><sp/>&amp;<sp/>reader,<sp/><ref refid="class_hit" kindref="compound">Hit</ref><sp/>&amp;<sp/>hit,<sp/><ref refid="class_r_f___manager" kindref="compound">RF_Manager</ref><sp/>&amp;<sp/>rf)</highlight></codeline>
<codeline lineno="613"><highlight class="normal">{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>i<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(reader.<ref refid="class_faster_reader_1a2d05907241b80ed637b2ae5a01503756" kindref="member">Read</ref>()<sp/>&amp;&amp;<sp/>!(hit.<ref refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" kindref="member">label</ref><sp/>==<sp/><ref refid="class_r_f___manager_1af38019b6bb4e45be94b17c5d193f5e45" kindref="member">RF_Manager::label</ref>))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>rf.<ref refid="class_r_f___manager_1a0261f2b02176a3e5562603c25f31d9a6" kindref="member">setHit</ref>(hit);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TO<sp/>BE<sp/>DONE<sp/>:<sp/>reset<sp/>the<sp/>reader<sp/>to<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620" refid="_timeshifts_8hpp_1a89eb1093b3fdce57af662ed7b004b0f7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_timeshifts_8hpp_1a202a57630e2aa9744043c30964b64bcd" kindref="member">get_first_RF_of_file</ref>(TTree<sp/>*<sp/>tree,<sp/><ref refid="class_event" kindref="compound">Event</ref><sp/>&amp;<sp/>event,<sp/><ref refid="class_r_f___manager" kindref="compound">RF_Manager</ref><sp/>&amp;<sp/>rf)</highlight></codeline>
<codeline lineno="621"><highlight class="normal">{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>event_i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(event_i&lt;tree-&gt;GetEntries()<sp/>&amp;&amp;<sp/>done<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>tree<sp/>-&gt;<sp/>GetEntry(event_i);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hit_i<sp/>=<sp/>0;<sp/>hit_i&lt;</highlight><highlight class="keyword">event</highlight><highlight class="normal">.mult;<sp/>hit_i++)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rf.<ref refid="class_r_f___manager_1a0261f2b02176a3e5562603c25f31d9a6" kindref="member">setHit</ref>(event,hit_i))<sp/></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638" refid="class_timeshifts_1aaef5b6fdd23be94ed37a2b4e7fe47b48" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1aaef5b6fdd23be94ed37a2b4e7fe47b48" kindref="member">Timeshifts::treatFile</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename)</highlight></codeline>
<codeline lineno="639"><highlight class="normal">{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="files__functions_8hpp_1a321abbd0681c4da012deaf49122389c5" kindref="member">extension</ref>(filename)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;root&quot;</highlight><highlight class="normal">)<sp/>{<sp/><ref refid="class_timeshifts_1a32079af1345e308feddd58e0950998ab" kindref="member">treatRootFile</ref>(filename);}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="files__functions_8hpp_1a321abbd0681c4da012deaf49122389c5" kindref="member">extension</ref>(filename)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;fast&quot;</highlight><highlight class="normal">)<sp/>{<sp/><ref refid="class_timeshifts_1abef7234fe827ae3c7758788cf22b6921" kindref="member">treatFasterFile</ref>(filename);}</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644" refid="class_timeshifts_1a32079af1345e308feddd58e0950998ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a32079af1345e308feddd58e0950998ab" kindref="member">Timeshifts::treatRootFile</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename)<sp/></highlight></codeline>
<codeline lineno="645"><highlight class="normal">{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;TFile&gt;<sp/>file<sp/>(TFile::Open(filename.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;READ&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;TTree&gt;<sp/>tree<sp/>(file-&gt;Get&lt;TTree&gt;(</highlight><highlight class="stringliteral">&quot;Nuball&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><ref refid="class_event" kindref="compound">Event</ref><sp/>event(tree.get(),<sp/></highlight><highlight class="stringliteral">&quot;lte&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>nb_events<sp/>=<sp/>tree<sp/>-&gt;<sp/>GetEntries();</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>event_i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><ref refid="class_r_f___manager" kindref="compound">RF_Manager</ref><sp/>rf;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><ref refid="_timeshifts_8hpp_1a202a57630e2aa9744043c30964b64bcd" kindref="member">get_first_RF_of_file</ref>(tree.get(),<sp/>event,<sp/>rf);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(event_i&lt;nb_events)</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>tree<sp/>-&gt;<sp/>GetEntry(event_i);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hit<sp/>=<sp/>0;<sp/>hit&lt;</highlight><highlight class="keyword">event</highlight><highlight class="normal">.mult;<sp/>hit++)<sp/></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_timeshifts_1af8a8bb48626abf6a9a634b3c826b0e44" kindref="member">m_corrected</ref>)<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.times[</highlight><highlight class="keyword">event</highlight><highlight class="normal">.labels[hit]]<sp/>+=<sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>[</highlight><highlight class="keyword">event</highlight><highlight class="normal">.labels[hit]];</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1a5c037c5bb4b409c3040982c451c6733d" kindref="member">Fill</ref>(event,<sp/>rf);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664" refid="class_timeshifts_1abef7234fe827ae3c7758788cf22b6921" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1abef7234fe827ae3c7758788cf22b6921" kindref="member">Timeshifts::treatFasterFile</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename)</highlight></codeline>
<codeline lineno="665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><ref refid="class_hit" kindref="compound">Hit</ref><sp/>hit;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><ref refid="class_faster_reader" kindref="compound">FasterReader</ref><sp/>reader(&amp;hit,<sp/>filename);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><ref refid="class_event" kindref="compound">Event</ref><sp/>event;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><ref refid="class_coinc_builder" kindref="compound">CoincBuilder</ref><sp/>coincBuilder(&amp;event,<sp/><ref refid="class_timeshifts_1a73dda60d3425a0de61719829231e6d55" kindref="member">m_timewindow</ref>);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><ref refid="lib_co_8hpp_1a69aa29b598b851b0640aa225a9e5d61d" kindref="member">uint</ref><sp/>counter<sp/>=<sp/>0;<sp/><sp/></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>maxHitsToRead<sp/>=<sp/>(<ref refid="class_timeshifts_1a7363de3261a770287e981328276f21dd" kindref="member">m_max_hits</ref>&gt;0);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><ref refid="class_r_f___manager" kindref="compound">RF_Manager</ref><sp/>rf;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><ref refid="_timeshifts_8hpp_1a202a57630e2aa9744043c30964b64bcd" kindref="member">get_first_RF_of_file</ref>(reader,<sp/>hit,<sp/>rf);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>the<sp/>first<sp/>hit<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/>reader.<ref refid="class_faster_reader_1a2d05907241b80ed637b2ae5a01503756" kindref="member">Read</ref>();<sp/></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1a64966ebd9e0538d9e3160bbfaf4a74de" kindref="member">mt_ref_time</ref>[<ref refid="class_m_t_object_1a9c9a57a49a12e1d408a5354e8520b3fe" kindref="member">MTObject::getThreadIndex</ref>()]<sp/>=<sp/>hit.<ref refid="class_hit_1ad98aea75b451b3246f45b25f1ccb9221" kindref="member">stamp</ref>;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(reader.<ref refid="class_faster_reader_1a2d05907241b80ed637b2ae5a01503756" kindref="member">Read</ref>()<sp/>&amp;&amp;<sp/>((maxHitsToRead)<sp/>?<sp/>(counter&lt;<ref refid="class_timeshifts_1a7363de3261a770287e981328276f21dd" kindref="member">m_max_hits</ref>)<sp/>:<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(counter%</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="lib_co_8hpp_1a69aa29b598b851b0640aa225a9e5d61d" kindref="member">uint</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1.E+6))<sp/>==<sp/>0<sp/>)<sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(counter);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/></highlight><highlight class="comment">//DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>counter++;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_timeshifts_1af8a8bb48626abf6a9a634b3c826b0e44" kindref="member">m_corrected</ref>)<sp/>hit.<ref refid="class_hit_1ad98aea75b451b3246f45b25f1ccb9221" kindref="member">stamp</ref><sp/>+=<sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>[hit.<ref refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" kindref="member">label</ref>];</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>used<sp/>to<sp/>put<sp/>the<sp/>energy<sp/>value<sp/>of<sp/>the<sp/>time<sp/>reference<sp/>in<sp/>the<sp/>Event<sp/>(used<sp/>in<sp/>the<sp/>Fill<sp/>method)<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hit.<ref refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" kindref="member">label</ref><sp/>==<sp/><ref refid="class_timeshifts_1a149e0f0885280b888df3f2b35ac29af8" kindref="member">m_time_ref_label</ref>)<sp/>hit.<ref refid="class_hit_1abda4857e925c3a6315a6fb41fad59189" kindref="member">nrj</ref><sp/>=<sp/><ref refid="_hit_8hpp_1a394977782e3af344e009b96c7d5bec92" kindref="member">NRJ_cast</ref>(hit.<ref refid="class_hit_1a3d999e7bbbb470d1d3aa55ee772a98d6" kindref="member">adc</ref>);<sp/></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_detectors_8hpp_1ae7667a7434fc704d9dcaf6d5e6bd8e39" kindref="member">isRF</ref>[hit.<ref refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" kindref="member">label</ref>])<sp/>{rf.<ref refid="class_r_f___manager_1a7738dda837846c1dee405dea4d544630" kindref="member">last_hit</ref><sp/>=<sp/>hit.<ref refid="class_hit_1ad98aea75b451b3246f45b25f1ccb9221" kindref="member">stamp</ref>;<sp/>rf.<ref refid="class_r_f___manager_1aaafb0a06fe27f4d3121dd41faa6787cd" kindref="member">period</ref><sp/>=<sp/>hit.<ref refid="class_hit_1a3d999e7bbbb470d1d3aa55ee772a98d6" kindref="member">adc</ref>;}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/></highlight><highlight class="comment">//USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coincBuilder.<ref refid="class_coinc_builder_1a6fbd7caa8ab6ac6bbf4d14eb094b6417" kindref="member">build</ref>(hit))<sp/></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_timeshifts_1a5c037c5bb4b409c3040982c451c6733d" kindref="member">Fill</ref>(event,<sp/>rf);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal">}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="712" refid="class_timeshifts_1a5c037c5bb4b409c3040982c451c6733d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a5c037c5bb4b409c3040982c451c6733d" kindref="member">Timeshifts::Fill</ref>(<ref refid="class_event" kindref="compound">Event</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>event,<sp/><ref refid="class_r_f___manager" kindref="compound">RF_Manager</ref><sp/>&amp;<sp/>rf)</highlight></codeline>
<codeline lineno="713"><highlight class="normal">{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>mult<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.mult;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mult<sp/>&gt;=<sp/><ref refid="class_timeshifts_1a46a97751e517cc9f21d54d04bb16c5f5" kindref="member">m_max_mult</ref><sp/>&amp;&amp;<sp/><sp/>mult<sp/>&lt;=<sp/><ref refid="class_timeshifts_1ad2182e6c34ecf5b760f67d58167df53e" kindref="member">m_min_mult</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>2<sp/>imbricated<sp/>loops<sp/>:<sp/>the<sp/>first<sp/>one<sp/>fills<sp/>the<sp/>time<sp/>spectra<sp/>and<sp/>looks<sp/>for<sp/>the<sp/>time<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>found,<sp/>it<sp/>opens<sp/>another<sp/>loop<sp/>to<sp/>fill<sp/>the<sp/>coincidence<sp/>time<sp/>spectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rf_Ref<sp/>=<sp/>rf.<ref refid="class_r_f___manager_1a15356af241ce65874d01c9479ab48aa4" kindref="member">pulse_ToF</ref>(event.<ref refid="class_event_1a448758bc35a7e830f6385c8c1f17461e" kindref="member">stamp</ref>);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loop_i<sp/>=<sp/>0;<sp/>loop_i<sp/>&lt;<sp/>mult;<sp/>loop_i++)</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>coincFilled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>To<sp/>only<sp/>fill<sp/>the<sp/>coincidence<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>label<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.labels[loop_i];</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>time<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.times[loop_i];</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nrj<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.nrjs[loop_i];</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>ToF<sp/>=<sp/><ref refid="_hit_8hpp_1a4ea1ea3a29989c67afc2c4db41e36b15" kindref="member">Time_cast</ref>(rf_Ref+time);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_timeshifts_1af8a8bb48626abf6a9a634b3c826b0e44" kindref="member">m_corrected</ref>)</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label<sp/>==<sp/><ref refid="class_timeshifts_1a149e0f0885280b888df3f2b35ac29af8" kindref="member">m_time_ref_label</ref><sp/>&amp;&amp;<sp/>nrj&gt;<ref refid="class_timeshifts_1abc19fb99a4d950501fb53430497e34c2" kindref="member">m_Emin_ADC</ref><sp/>&amp;&amp;<sp/>mult&gt;5)<sp/>m_time_spectra_reference_RF_corrected.Fill(ToF);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_time_spectra_corrected_RF[label].Fill(ToF);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_time_spectra_corrected_bidim_RF.Fill(label,<sp/>ToF);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>Raw<sp/>data<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label<sp/>==<sp/><ref refid="class_timeshifts_1a149e0f0885280b888df3f2b35ac29af8" kindref="member">m_time_ref_label</ref><sp/>&amp;&amp;<sp/>nrj&gt;<ref refid="class_timeshifts_1abc19fb99a4d950501fb53430497e34c2" kindref="member">m_Emin_ADC</ref>)<sp/>m_histo_ref_VS_RF.Fill(ToF);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_histograms_VS_RF[label].Fill(ToF);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/></highlight><highlight class="comment">//USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>require<sp/>the<sp/>reference<sp/>detector<sp/>in<sp/>the<sp/>event<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.<ref refid="class_event_1ad016b65deeaef393a94793ef140e1bb8" kindref="member">labels</ref>[loop_i]<sp/>==<sp/><ref refid="class_timeshifts_1a149e0f0885280b888df3f2b35ac29af8" kindref="member">m_time_ref_label</ref><sp/>&amp;&amp;<sp/>!coincFilled)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>coincFilled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>informations<sp/>of<sp/>the<sp/>reference<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>refPos<sp/>=<sp/>loop_i;<sp/></highlight><highlight class="comment">//<sp/>Position<sp/>of<sp/>the<sp/>reference<sp/>in<sp/>the<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>refE<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.nrjs[refPos];<sp/></highlight><highlight class="comment">//<sp/>Energy<sp/>deposited<sp/>in<sp/>the<sp/>reference<sp/>detector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>refT<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.times[refPos];</highlight><highlight class="comment">//<sp/>Timestamp<sp/>of<sp/>the<sp/>hit<sp/>in<sp/>the<sp/>reference<sp/>detector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>reference<sp/>detector<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refE<sp/>&lt;<sp/><ref refid="class_timeshifts_1abc19fb99a4d950501fb53430497e34c2" kindref="member">m_Emin_ADC</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1a1a70cc43f750599c993c689e62cfb29f" kindref="member">m_EnergyRef</ref>.<ref refid="class_m_t_t_hist_1a3413cee45758fa0ec41020ae067e3e71" kindref="member">Fill</ref>(refE);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>the<sp/>other<sp/>hits<sp/>of<sp/>the<sp/>event<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loop_j<sp/>=<sp/>0;<sp/>loop_j&lt;mult;<sp/>loop_j++)</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>label<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.labels[loop_j];</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label<sp/>==<sp/><ref refid="class_timeshifts_1a149e0f0885280b888df3f2b35ac29af8" kindref="member">m_time_ref_label</ref>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>To<sp/>reject<sp/>the<sp/>time<sp/>spectra<sp/>of<sp/>the<sp/>time<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>deltaT<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Long64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>refT<sp/>-<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.times[loop_j]<sp/>);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_timeshifts_1af8a8bb48626abf6a9a634b3c826b0e44" kindref="member">m_corrected</ref>)</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1ae8fe2221ac14c7c9920ba2dee69ec719" kindref="member">m_time_spectra_corrected</ref>[label].Fill(deltaT);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1ab9b0b763dbe5e2be797d89e9bcb05c1e" kindref="member">m_time_spectra_corrected_bidim</ref>.<ref refid="class_m_t_t_hist_1a3413cee45758fa0ec41020ae067e3e71" kindref="member">Fill</ref>(label,<sp/>deltaT);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1aa45cc86b7201c47bb97f0422dff23725" kindref="member">m_time_spectra</ref>[label].Fill(deltaT);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785" refid="_timeshifts_8hpp_1a1efb60019dbe926cccb8410a806d73a9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_timeshifts_8hpp_1a1efb60019dbe926cccb8410a806d73a9" kindref="member">getRFGammaPrompt</ref>(TH1F<sp/>*<sp/>hist,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>check_preprompt)</highlight></codeline>
<codeline lineno="786"><highlight class="normal">{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xAxis<sp/>=<sp/>hist<sp/>-&gt;<sp/>GetXaxis();</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>maxBin<sp/>=<sp/>hist<sp/>-&gt;<sp/>GetMaximumBin();</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>maxBin_ps<sp/>=<sp/>hist<sp/>-&gt;<sp/>GetBinCenter(maxBin);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(check_preprompt)</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>goal<sp/>is<sp/>to<sp/>detect<sp/>the<sp/>moments<sp/>the<sp/>preprompt<sp/>has<sp/>been<sp/>spotted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>we<sp/>got<sp/>the<sp/>preprompt,<sp/>then<sp/>the<sp/>following<sp/>10<sp/>ns<sp/>has<sp/>not<sp/>a<sp/>lot<sp/>of<sp/>hits,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compared<sp/>with<sp/>the<sp/>real<sp/>gamma<sp/>prompt.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Therefore,<sp/>we<sp/>calculate<sp/>the<sp/>ratio<sp/>between<sp/>the<sp/>supposedly<sp/>prompt<sp/>and<sp/>the<sp/>10<sp/>following<sp/>ns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>that<sp/>ratio<sp/>is<sp/>too<sp/>small<sp/>then<sp/>we<sp/>take<sp/>the<sp/>next<sp/>higher<sp/>peak.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CAREFULL<sp/>:<sp/>the<sp/>delayed<sp/>neutron<sp/>peak<sp/>must<sp/>not<sp/>exceed<sp/>the<sp/>hight<sp/>of<sp/>the<sp/>gamma<sp/>prompt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Integral<sp/>of<sp/>the<sp/>peak<sp/>:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>xAxis<sp/>-&gt;<sp/>SetRangeUser(maxBin_ps-5000,<sp/>maxBin_ps+5000);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>integral_peak<sp/>=<sp/>hist<sp/>-&gt;<sp/>Integral();</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Integral<sp/>of<sp/>the<sp/>10<sp/>ns<sp/>after<sp/>the<sp/>peak<sp/>:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>xAxis<sp/>-&gt;<sp/>SetRangeUser(maxBin_ps+5000,<sp/>maxBin_ps+15000);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>integral_10_ns<sp/>=<sp/>hist<sp/>-&gt;<sp/>Integral();</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ratio<sp/>between<sp/>both<sp/>integrals<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ratio<sp/>=<sp/>integral_peak/integral_10_ns;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>too<sp/>big<sp/>then<sp/>move<sp/>to<sp/>next<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ratio&gt;2)</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xAxis<sp/>-&gt;<sp/>SetRangeUser(maxBin_ps+15000,<sp/>xAxis<sp/>-&gt;<sp/>GetXmax());</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>second_maxBin<sp/>=<sp/>hist<sp/>-&gt;<sp/>GetMaximumBin();</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>second_maxBin_ps<sp/>=<sp/>hist<sp/>-&gt;<sp/>GetBinCenter(second_maxBin);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>second_maxBin_ps;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxBin_ps;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxBin_ps;</highlight></codeline>
<codeline lineno="823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825" refid="_timeshifts_8hpp_1a0f507d9b001b222817bfc9d8ba01e40e" refkind="member"><highlight class="normal">std::vector&lt;Time&gt;<sp/><ref refid="_timeshifts_8hpp_1a0f507d9b001b222817bfc9d8ba01e40e" kindref="member">forced_shifts</ref>;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827" refid="class_timeshifts_1a608d9443a15dd669920e10dd8baee23a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a608d9443a15dd669920e10dd8baee23a" kindref="member">Timeshifts::analyse</ref>()</highlight></codeline>
<codeline lineno="828"><highlight class="normal">{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><ref refid="_timeshifts_8hpp_1a0f507d9b001b222817bfc9d8ba01e40e" kindref="member">forced_shifts</ref>.resize(<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a1177661fb15c9825755925faf00c8398" kindref="member">size</ref>(),<sp/>0ll);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="lib_co_8hpp_1a69aa29b598b851b0640aa225a9e5d61d" kindref="member">uint</ref><sp/>label<sp/>=<sp/>0;<sp/>label&lt;<ref refid="_timeshifts_8hpp_1a0f507d9b001b222817bfc9d8ba01e40e" kindref="member">forced_shifts</ref>.size();<sp/>label++)</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(label)</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case<sp/>56:<sp/>case<sp/>58:<sp/>forced_shifts[label]<sp/>=<sp/>-400000;<sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><ref refid="_timeshifts_8hpp_1a0f507d9b001b222817bfc9d8ba01e40e" kindref="member">forced_shifts</ref>[label]<sp/>=<sp/>0;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_RF<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/>has_RF<sp/>=<sp/>(m_histo_ref_VS_RF.Integral()<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_RF)</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculating<sp/>the<sp/>RF<sp/>time<sp/>shift<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>m_histo_ref_VS_RF.Merge();</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>[<ref refid="class_r_f___manager_1af38019b6bb4e45be94b17c5d193f5e45" kindref="member">RF_Manager::label</ref>]<sp/>=<sp/><ref refid="_hit_8hpp_1a4ea1ea3a29989c67afc2c4db41e36b15" kindref="member">Time_cast</ref>(<ref refid="_timeshifts_8hpp_1a1efb60019dbe926cccb8410a806d73a9" kindref="member">getRFGammaPrompt</ref>(m_histo_ref_VS_RF.get(),<sp/><ref refid="class_timeshifts_1afdd59f1f2d548c6bd8ef89d998e8ed1e" kindref="member">m_check_preprompt</ref>));</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;ATTENTION<sp/>:<sp/>THIS<sp/>RUN<sp/>DOES<sp/>NOT<sp/>APPEAR<sp/>TO<sp/>CONTAIN<sp/>ANY<sp/>RF&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;RF<sp/>label<sp/>is<sp/>:&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_r_f___manager_1af38019b6bb4e45be94b17c5d193f5e45" kindref="member">RF_Manager::label</ref>);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Timing<sp/>reference<sp/>is<sp/>:&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_timeshifts_1a149e0f0885280b888df3f2b35ac29af8" kindref="member">m_time_ref_label</ref>);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>all<sp/>the<sp/>channels<sp/>time<sp/>spectra<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/>label<sp/>=<sp/>0;<sp/>label&lt;<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a1177661fb15c9825755925faf00c8398" kindref="member">size</ref>();<sp/>label++)</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a47ae394beae7efa2fb8fa1a3c7f8427d" kindref="member">exists</ref>(label))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Reject<sp/>unused<sp/>detectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label<sp/>==<sp/><ref refid="class_timeshifts_1a149e0f0885280b888df3f2b35ac29af8" kindref="member">m_time_ref_label</ref>)<sp/>{<ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>[label]<sp/>=<sp/>0;<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}<sp/></highlight><highlight class="comment">//<sp/>Force<sp/>the<sp/>reference<sp/>detector<sp/>to<sp/>be<sp/>at<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>type<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref>(label);<sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>detector&apos;s<sp/>type<sp/>(dssd,<sp/>ge,<sp/>...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>[label];</highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>name<sp/>(&quot;R3A11_blue&quot;,<sp/>...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_timeshifts_1a985a81e5fa8d1a8866988c6af1b2ff1c" kindref="member">m_verbose</ref>)<sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>[label]);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;eden&quot;</highlight><highlight class="normal"><sp/>||<sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;RF&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>change<sp/>that<sp/>afterwards<sp/>!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_timeshifts_8hpp_1a0f507d9b001b222817bfc9d8ba01e40e" kindref="member">forced_shifts</ref>[label]<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>[label]<sp/>=<sp/><ref refid="_timeshifts_8hpp_1a0f507d9b001b222817bfc9d8ba01e40e" kindref="member">forced_shifts</ref>[label];</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A.<sp/>If<sp/>RF,<sp/>one<sp/>can<sp/>decide<sp/>to<sp/>use<sp/>the<sp/>RF<sp/>time<sp/>spectra<sp/>to<sp/>calculate<sp/>the<sp/>time<sp/>shifts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attention<sp/>!!!<sp/>This<sp/>works<sp/>only<sp/>if<sp/>the<sp/>peak<sp/>lies<sp/>bewteen<sp/>0<sp/>and<sp/>the<sp/>RF<sp/>period,<sp/>otherwise<sp/>there<sp/>will<sp/>be<sp/>a<sp/>shift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_timeshifts_1af643b4246a7e7efb0857cec8f705eeb1" kindref="member">m_RF_preferred</ref>[type]<sp/>||<sp/><ref refid="class_timeshifts_1a4338a0a481ffac2a8f8dffbafca76e7d" kindref="member">m_RF_preferred_label</ref>[label])<sp/>&amp;&amp;<sp/>has_RF)</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>RF_zero<sp/>=<sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>[<ref refid="class_r_f___manager_1af38019b6bb4e45be94b17c5d193f5e45" kindref="member">RF_Manager::label</ref>];</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_histograms_VS_RF[label].Merge();</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_histograms_VS_RF[label].Integral()<sp/>&lt;<sp/>50<sp/>)<sp/>{<ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Not<sp/>a<sp/>lot<sp/>of<sp/>hits<sp/>:<sp/>only&quot;</highlight><highlight class="normal">,<sp/>m_histograms_VS_RF[label].Integral(),<sp/></highlight><highlight class="stringliteral">&quot;for&quot;</highlight><highlight class="normal">,<sp/>name);<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_timeshifts_1a0c81995b961c33e22c49d3d180b3cec5" kindref="member">m_edge_preferred</ref>[type]<sp/>||<sp/><ref refid="class_timeshifts_1ab098d455164964ba60b9f5c555de74e4" kindref="member">m_edge_preferred_label</ref>[label])</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Not<sp/>taking<sp/>the<sp/>maximum<sp/>but<sp/>the<sp/>raising<sp/>edge<sp/>of<sp/>the<sp/>time<sp/>spectra<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>amppic<sp/>=<sp/>m_histograms_VS_RF[label]<sp/>-&gt;<sp/>GetMaximum();</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>peak_begin<sp/>=<sp/>m_histograms_VS_RF[label]<sp/>-&gt;<sp/>FindFirstBinAbove(amppic*0.8);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>peak_begin_ps<sp/>=<sp/>m_histograms_VS_RF[label]-&gt;GetBinCenter(peak_begin);<sp/></highlight><highlight class="comment">//<sp/>In<sp/>ps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>[label]<sp/>=<sp/>RF_zero<sp/>-<sp/><ref refid="_timeshifts_8hpp_1a0363984bdeb96360bcf8a0a13163f47a" kindref="member">Shift_cast</ref>(peak_begin_ps);<sp/></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_timeshifts_1a985a81e5fa8d1a8866988c6af1b2ff1c" kindref="member">m_verbose</ref>)<sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Edge<sp/>:&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>[label],<sp/></highlight><highlight class="stringliteral">&quot;with<sp/>max<sp/>=&quot;</highlight><highlight class="normal">,<sp/><ref refid="lib_co_8hpp_1a48e80fbfd11f9fb219b92ba1c29c1b2a" kindref="member">int_cast</ref>(amppic),<sp/></highlight><highlight class="stringliteral">&quot;counts.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mean<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="lib_root_8hpp_1accfb8dfb6ee42fa6845013a0cf121ac1" kindref="member">getMeanPeak</ref>(m_histograms_VS_RF[label].<ref refid="class_timeshifts_1a5161a4c343623e92b4e26522ad7ee16a" kindref="member">get</ref>(),<sp/>mean))<sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>[label]<sp/>=<sp/>RF_zero-<ref refid="_timeshifts_8hpp_1a0363984bdeb96360bcf8a0a13163f47a" kindref="member">Shift_cast</ref>(mean);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_timeshifts_1a985a81e5fa8d1a8866988c6af1b2ff1c" kindref="member">m_verbose</ref>)<sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Mean<sp/>:&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>[label],<sp/></highlight><highlight class="stringliteral">&quot;with<sp/>max<sp/>=&quot;</highlight><highlight class="normal">,<sp/><ref refid="lib_co_8hpp_1a48e80fbfd11f9fb219b92ba1c29c1b2a" kindref="member">int_cast</ref>(m_histograms_VS_RF[label]<sp/>-&gt;<sp/>GetMaximum()),<sp/></highlight><highlight class="stringliteral">&quot;counts.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/></highlight><highlight class="comment">//USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>B.<sp/>Using<sp/>normal<sp/>coincidence<sp/>time<sp/>spectra<sp/>:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_timeshifts_1aa45cc86b7201c47bb97f0422dff23725" kindref="member">m_time_spectra</ref>[label].Integral()<sp/>&lt;<sp/>50<sp/>)<sp/>{<ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Not<sp/>a<sp/>lot<sp/>of<sp/>hits<sp/>:<sp/>only&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_timeshifts_1aa45cc86b7201c47bb97f0422dff23725" kindref="member">m_time_spectra</ref>[label].Integral(),<sp/></highlight><highlight class="stringliteral">&quot;for&quot;</highlight><highlight class="normal">,<sp/>name);<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1aa45cc86b7201c47bb97f0422dff23725" kindref="member">m_time_spectra</ref>[label].Merge();</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_timeshifts_1a0c81995b961c33e22c49d3d180b3cec5" kindref="member">m_edge_preferred</ref>[type])</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>amppic<sp/>=<sp/><ref refid="class_timeshifts_1aa45cc86b7201c47bb97f0422dff23725" kindref="member">m_time_spectra</ref>[label]<sp/>-&gt;<sp/>GetMaximum();</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>peak_begin<sp/>=<sp/><ref refid="class_timeshifts_1aa45cc86b7201c47bb97f0422dff23725" kindref="member">m_time_spectra</ref>[label]<sp/>-&gt;<sp/>FindLastBinAbove(amppic*0.8);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>peak_bins<sp/>=<sp/><ref refid="class_timeshifts_1aa45cc86b7201c47bb97f0422dff23725" kindref="member">m_time_spectra</ref>[label]<sp/>-&gt;<sp/>GetBinCenter(peak_begin);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>[label]<sp/>=<sp/><ref refid="_timeshifts_8hpp_1a0363984bdeb96360bcf8a0a13163f47a" kindref="member">Shift_cast</ref>(peak_bins);<sp/></highlight><highlight class="comment">//<sp/>In<sp/>ps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_timeshifts_1a985a81e5fa8d1a8866988c6af1b2ff1c" kindref="member">m_verbose</ref>)<sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Edge<sp/>:&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>[label],<sp/></highlight><highlight class="stringliteral">&quot;with<sp/>max<sp/>=&quot;</highlight><highlight class="normal">,<sp/><ref refid="lib_co_8hpp_1a48e80fbfd11f9fb219b92ba1c29c1b2a" kindref="member">int_cast</ref>(<ref refid="class_timeshifts_1aa45cc86b7201c47bb97f0422dff23725" kindref="member">m_time_spectra</ref>[label]<sp/>-&gt;<sp/>GetMaximum()),<sp/></highlight><highlight class="stringliteral">&quot;counts.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>For<sp/>all<sp/>the<sp/>other<sp/>detectors<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mean<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="lib_root_8hpp_1accfb8dfb6ee42fa6845013a0cf121ac1" kindref="member">getMeanPeak</ref>(<ref refid="class_timeshifts_1aa45cc86b7201c47bb97f0422dff23725" kindref="member">m_time_spectra</ref>[label].<ref refid="class_timeshifts_1a5161a4c343623e92b4e26522ad7ee16a" kindref="member">get</ref>(),<sp/>mean))<sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>[label]<sp/>=<sp/><ref refid="_timeshifts_8hpp_1a0363984bdeb96360bcf8a0a13163f47a" kindref="member">Shift_cast</ref>(mean);<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>[label]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_timeshifts_1a985a81e5fa8d1a8866988c6af1b2ff1c" kindref="member">m_verbose</ref>)<sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Mean<sp/>:&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>[label],<sp/></highlight><highlight class="stringliteral">&quot;with<sp/>max<sp/>=&quot;</highlight><highlight class="normal">,<sp/><ref refid="lib_co_8hpp_1a48e80fbfd11f9fb219b92ba1c29c1b2a" kindref="member">int_cast</ref>(<ref refid="class_timeshifts_1aa45cc86b7201c47bb97f0422dff23725" kindref="member">m_time_spectra</ref>[label]<sp/>-&gt;<sp/>GetMaximum()),<sp/></highlight><highlight class="stringliteral">&quot;counts.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="934" refid="class_timeshifts_1a79f5376cf7071865b264989ef46d886f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a79f5376cf7071865b264989ef46d886f" kindref="member">Timeshifts::write</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name)</highlight></codeline>
<codeline lineno="935"><highlight class="normal">{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1a579c8583bd37c3988ffb5cb6df7849f7" kindref="member">writeRoot</ref>(name);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1ad19fdc64b6f8dd54e94665a7170a49a7" kindref="member">writeData</ref>(name);</highlight></codeline>
<codeline lineno="938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="945" refid="class_timeshifts_1ad19fdc64b6f8dd54e94665a7170a49a7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1ad19fdc64b6f8dd54e94665a7170a49a7" kindref="member">Timeshifts::writeData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name)</highlight></codeline>
<codeline lineno="946"><highlight class="normal">{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1a7a9d72db7cd915c282014f63c6020d8e" kindref="member">m_outPath</ref><sp/>=<sp/><ref refid="class_path" kindref="compound">Path</ref><sp/>(<ref refid="class_timeshifts_1a8165d76fc5a92d7d49498624ae2b32b5" kindref="member">m_outDir</ref>+<ref refid="class_timeshifts_1af567d75bbe3263cece04cf3e6eff5256" kindref="member">m_ts_outdir</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>/path/to/output/directory/Timeshifts/,<sp/>create<sp/>it<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_timeshifts_1a7a9d72db7cd915c282014f63c6020d8e" kindref="member">m_outPath</ref>)<sp/>{<ref refid="class_timeshifts_1a0bf7feef945319722118991949b033d4" kindref="member">m_ok</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>outData<sp/>=<sp/><ref refid="class_timeshifts_1a7a9d72db7cd915c282014f63c6020d8e" kindref="member">m_outPath</ref>+name+</highlight><highlight class="stringliteral">&quot;.dT&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>std::ofstream<sp/>outTimeshiftsFile(outData,<sp/>std::ios::out);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/>label<sp/>=<sp/>0;<sp/>label&lt;<ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>.size();<sp/>label++)</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>dT<sp/>=<sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>[label];</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dT<sp/>!=<sp/>0)<sp/>outTimeshiftsFile<sp/>&lt;&lt;<sp/>label<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dT<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/>outTimeshiftsFile.close();</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Timeshifts<sp/>data<sp/>written<sp/>to&quot;</highlight><highlight class="normal">,<sp/>outData);</highlight></codeline>
<codeline lineno="963"><highlight class="normal">}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="970" refid="class_timeshifts_1a579c8583bd37c3988ffb5cb6df7849f7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a579c8583bd37c3988ffb5cb6df7849f7" kindref="member">Timeshifts::writeRoot</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name)</highlight></codeline>
<codeline lineno="971"><highlight class="normal">{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1a7a9d72db7cd915c282014f63c6020d8e" kindref="member">m_outPath</ref><sp/>=<sp/><ref refid="class_path" kindref="compound">Path</ref><sp/>(<ref refid="class_timeshifts_1a8165d76fc5a92d7d49498624ae2b32b5" kindref="member">m_outDir</ref>+<ref refid="class_timeshifts_1af567d75bbe3263cece04cf3e6eff5256" kindref="member">m_ts_outdir</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>/path/to/output/directory/Timeshifts/,<sp/>create<sp/>it<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_timeshifts_1a7a9d72db7cd915c282014f63c6020d8e" kindref="member">m_outPath</ref>)<sp/>{<ref refid="class_timeshifts_1a0bf7feef945319722118991949b033d4" kindref="member">m_ok</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>outRoot<sp/>=<sp/><ref refid="class_timeshifts_1a7a9d72db7cd915c282014f63c6020d8e" kindref="member">m_outPath</ref>+name+</highlight><highlight class="stringliteral">&quot;_dT.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;TFile&gt;<sp/>outFile(TFile::Open((outRoot).c_str(),</highlight><highlight class="stringliteral">&quot;RECREATE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outFile.get()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>open<sp/>file<sp/>&quot;</highlight><highlight class="normal">,<sp/>outRoot,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>!!!\nAbort<sp/>!&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1a1a70cc43f750599c993c689e62cfb29f" kindref="member">m_EnergyRef</ref>.<ref refid="class_m_t_t_hist_1ae9163b5b4afca69cfdebdf2cf60064cd" kindref="member">Write</ref>();</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1ab9b0b763dbe5e2be797d89e9bcb05c1e" kindref="member">m_time_spectra_corrected_bidim</ref>.<ref refid="class_m_t_t_hist_1ae9163b5b4afca69cfdebdf2cf60064cd" kindref="member">Write</ref>();</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/>m_histo_ref_vs_RF_VS_mult.Write();</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/>m_histo_ref_VS_RF.Write();</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/>m_time_spectra_corrected_bidim_RF.Write();</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>histo<sp/>:<sp/><ref refid="class_timeshifts_1aa45cc86b7201c47bb97f0422dff23725" kindref="member">m_time_spectra</ref>)<sp/>histo.Write();</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>histo<sp/>:<sp/><ref refid="class_timeshifts_1ae8fe2221ac14c7c9920ba2dee69ec719" kindref="member">m_time_spectra_corrected</ref>)<sp/>histo.Write();</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>histo<sp/>:<sp/>m_histograms_VS_RF)<sp/>histo.Write();</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>histo<sp/>:<sp/>m_time_spectra_corrected_RF)<sp/>histo.Write();</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//USE_RF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/>outFile<sp/>-&gt;<sp/>Write();</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/>outFile<sp/>-&gt;<sp/>Close();</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Timeshifts<sp/>root<sp/>file<sp/>saved<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>outRoot<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003" refid="class_timeshifts_1a304c1076d703a78153cfe72d61b28425" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a304c1076d703a78153cfe72d61b28425" kindref="member">Timeshifts::setTimeWindow_ns</ref>(<ref refid="_hit_8hpp_1ad7cd28c849adeb8fec74d20155b0113d" kindref="member">Time_ns</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>timewindow_ns)<sp/></highlight></codeline>
<codeline lineno="1004"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timewindow_ns<sp/>==<sp/>0)<sp/>{std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;NO<sp/>TIME<sp/>WINDOW<sp/>!!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1a221c8bebd939cf4a9442f5c9dddfeefb" kindref="member">m_timewindow_ns</ref><sp/>=<sp/>timewindow_ns;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1a73dda60d3425a0de61719829231e6d55" kindref="member">m_timewindow</ref><sp/>=<sp/><ref refid="_hit_8hpp_1a4ea1ea3a29989c67afc2c4db41e36b15" kindref="member">Time_cast</ref>(<ref refid="class_timeshifts_1a221c8bebd939cf4a9442f5c9dddfeefb" kindref="member">m_timewindow_ns</ref>*1000);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Extracting<sp/>timeshifts<sp/>with<sp/>a<sp/>time<sp/>window<sp/>of<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_timeshifts_1a221c8bebd939cf4a9442f5c9dddfeefb" kindref="member">m_timewindow_ns</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ns&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012" refid="class_timeshifts_1af9da5337ea83092b9a6bb56cdb83f4cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a304c1076d703a78153cfe72d61b28425" kindref="member">Timeshifts::setTimeWindow_ns</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>timewindow_string)<sp/></highlight></codeline>
<codeline lineno="1013"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>timewindow_ns<sp/>=<sp/><ref refid="_hit_8hpp_1a04b1f65fe07e6d731225feecab2b66f6" kindref="member">Time_ns_cast</ref>(stod(timewindow_string));</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a304c1076d703a78153cfe72d61b28425" kindref="member">setTimeWindow_ns</ref>(timewindow_ns);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018" refid="class_timeshifts_1aa7cb3acf23e80927fa85be636f55a99d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1aa7cb3acf23e80927fa85be636f55a99d" kindref="member">Timeshifts::setTimeReference</ref>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>timeRef_label)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1a149e0f0885280b888df3f2b35ac29af8" kindref="member">m_time_ref_label</ref><sp/>=<sp/>timeRef_label;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1a057b1fc1611ed270db718db0b72b801d" kindref="member">m_time_ref_name</ref><sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>[<ref refid="class_timeshifts_1a149e0f0885280b888df3f2b35ac29af8" kindref="member">m_time_ref_label</ref>];</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Reference<sp/>detector<sp/>set<sp/>to<sp/>be<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_timeshifts_1a057b1fc1611ed270db718db0b72b801d" kindref="member">m_time_ref_name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(n°&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_timeshifts_1a149e0f0885280b888df3f2b35ac29af8" kindref="member">m_time_ref_label</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026" refid="class_timeshifts_1aa9f8bdcbeef03f8be872602e6c717d4d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1aa7cb3acf23e80927fa85be636f55a99d" kindref="member">Timeshifts::setTimeReference</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>timeRef_name)</highlight></codeline>
<codeline lineno="1027"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1a057b1fc1611ed270db718db0b72b801d" kindref="member">m_time_ref_name</ref><sp/>=<sp/>timeRef_name;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeRef_name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;NO<sp/>TIME<sp/>REFERENCE<sp/>!!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>string<sp/>contains<sp/>the<sp/>label<sp/>number<sp/>then<sp/>convert<sp/>the<sp/>string<sp/>to<sp/>int<sp/>(stoi)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>string<sp/>contains<sp/>the<sp/>detector<sp/>name<sp/>then<sp/>extract<sp/>the<sp/>label<sp/>number<sp/>from<sp/>the<sp/>detectors<sp/>list<sp/>(detectors)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1aa7cb3acf23e80927fa85be636f55a99d" kindref="member">setTimeReference</ref>(<sp/><ref refid="_hit_8hpp_1af181231d97866aa957e8fe8bd67f7f64" kindref="member">Label_cast</ref>((<ref refid="string__functions_8hpp_1a4adaa91d1b90e1b97cc5fee8998e09b1" kindref="member">isNumber</ref>(timeRef_name))<sp/>?<sp/>std::stoi(timeRef_name)<sp/>:<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a538487678aa928ab2956e6fb40c90472" kindref="member">getLabel</ref>(timeRef_name)));</highlight></codeline>
<codeline lineno="1033"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035" refid="class_timeshifts_1a26367484f20648d7c3f5b3bbe5679ca8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a26367484f20648d7c3f5b3bbe5679ca8" kindref="member">Timeshifts::setOutDir</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outDir)</highlight></codeline>
<codeline lineno="1036"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1a8165d76fc5a92d7d49498624ae2b32b5" kindref="member">m_outDir</ref><sp/>=<sp/>outDir;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><ref refid="files__functions_8hpp_1a4a072faccd444b8907dffd96e6211461" kindref="member">push_back_if_none</ref>(<ref refid="class_timeshifts_1a8165d76fc5a92d7d49498624ae2b32b5" kindref="member">m_outDir</ref>,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041" refid="class_timeshifts_1aa9f0f8cc1d96a5408f233449767ef0f6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1aa9f0f8cc1d96a5408f233449767ef0f6" kindref="member">Timeshifts::setOutRoot</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outroot)<sp/></highlight></codeline>
<codeline lineno="1042"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1ae3640104ddce3ee9548d83186f4032e6" kindref="member">m_outRoot</ref><sp/>=<sp/>outroot+</highlight><highlight class="stringliteral">&quot;dT&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="files__functions_8hpp_1a321abbd0681c4da012deaf49122389c5" kindref="member">extension</ref>(<ref refid="class_timeshifts_1ae3640104ddce3ee9548d83186f4032e6" kindref="member">m_outRoot</ref>)<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;root&quot;</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1ae3640104ddce3ee9548d83186f4032e6" kindref="member">m_outRoot</ref><sp/>=<sp/><ref refid="files__functions_8hpp_1a658fd83a6ed34994ff0742273a3cc358" kindref="member">removeExtension</ref>(<ref refid="class_timeshifts_1ae3640104ddce3ee9548d83186f4032e6" kindref="member">m_outRoot</ref>)+</highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050" refid="class_timeshifts_1ab877131bc1bd7394f55c3d46729ac9e6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1ab877131bc1bd7394f55c3d46729ac9e6" kindref="member">Timeshifts::setOutData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outdata)</highlight></codeline>
<codeline lineno="1051"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1a04a95b4e6269c5a02010909206b24730" kindref="member">m_outData</ref><sp/>=<sp/>outdata;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="files__functions_8hpp_1a321abbd0681c4da012deaf49122389c5" kindref="member">extension</ref>(<ref refid="class_timeshifts_1a04a95b4e6269c5a02010909206b24730" kindref="member">m_outData</ref>)<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;dT&quot;</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_timeshifts_1a04a95b4e6269c5a02010909206b24730" kindref="member">m_outData</ref><sp/>=<sp/><ref refid="files__functions_8hpp_1a658fd83a6ed34994ff0742273a3cc358" kindref="member">removeExtension</ref>(<ref refid="class_timeshifts_1a04a95b4e6269c5a02010909206b24730" kindref="member">m_outData</ref>)+</highlight><highlight class="stringliteral">&quot;.dT&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059" refid="class_timeshifts_1a082a54cde1bb45feca487f15ab4a14c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timeshifts_1a082a54cde1bb45feca487f15ab4a14c7" kindref="member">Timeshifts::setOutName</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outname)</highlight></codeline>
<codeline lineno="1060"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1a04a95b4e6269c5a02010909206b24730" kindref="member">m_outData</ref><sp/>=<sp/>outname+</highlight><highlight class="stringliteral">&quot;.dT&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><ref refid="class_timeshifts_1ae3640104ddce3ee9548d83186f4032e6" kindref="member">m_outRoot</ref><sp/>=<sp/>outname+</highlight><highlight class="stringliteral">&quot;_dT.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065" refid="class_timeshifts_1a89dbca371bce4601ee60122f544faf95" refkind="member"><highlight class="normal">TH1F*<sp/><ref refid="class_timeshifts_1a89dbca371bce4601ee60122f544faf95" kindref="member">Timeshifts::shiftTimeSpectra</ref>(TH1F*<sp/>histo,<sp/><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>label,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>unit)</highlight></codeline>
<codeline lineno="1066"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/>std::string<sp/>name<sp/>=<sp/>histo-&gt;GetName();</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F());</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>axis<sp/>=<sp/>histo<sp/>-&gt;<sp/>GetXaxis();</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bins<sp/><sp/><sp/><sp/>=<sp/>axis<sp/>-&gt;<sp/>GetNbins();</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>timeMax<sp/>=<sp/>axis<sp/>-&gt;<sp/>GetXmax<sp/>();</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>timeMin<sp/>=<sp/>axis<sp/>-&gt;<sp/>GetXmin<sp/>();</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>binToTime<sp/>=<sp/>(timeMax-timeMin)/bins;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><ref refid="_hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7" kindref="member">Time</ref><sp/>time_to_ps<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unit<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;ps&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unit<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ns&quot;</highlight><highlight class="normal">)<sp/>time_to_ps*=1000;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unit<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;clock&quot;</highlight><highlight class="normal">)<sp/>time_to_ps*=128;<sp/></highlight><highlight class="comment">//<sp/>Deprecated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;UNKOWN<sp/>TIME<sp/>UNIT&quot;</highlight><highlight class="normal">,<sp/>unit);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>corrected_histo<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">TH1F*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(histo<sp/>-&gt;<sp/>Clone((name+</highlight><highlight class="stringliteral">&quot;_corrected&quot;</highlight><highlight class="normal">).c_str()));</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>1;<sp/>bin&lt;bins;<sp/>bin++)</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>time_ps<sp/>=<sp/>time_to_ps*<ref refid="_timeshifts_8hpp_1a0363984bdeb96360bcf8a0a13163f47a" kindref="member">Shift_cast</ref>(binToTime*bin<sp/>+<sp/>timeMin);<sp/></highlight><highlight class="comment">//<sp/>time_to_ps<sp/>*<sp/>(coeff*bin<sp/>+<sp/>offset_time)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>new_time_ps<sp/>=<sp/>time_ps<sp/>+<sp/><ref refid="class_timeshifts_1ad10b3d7e16a2d51d3e73d7f2e7b1e0fa" kindref="member">m_timeshifts</ref>[label];</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>new_time<sp/>=<sp/>new_time_ps/time_to_ps;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>newbin<sp/>=<sp/><ref refid="lib_co_8hpp_1a48e80fbfd11f9fb219b92ba1c29c1b2a" kindref="member">int_cast</ref>((<sp/><ref refid="lib_co_8hpp_1a2052317e56aa118e7ffcdb2e398f551c" kindref="member">double_cast</ref>(new_time)<sp/>-<sp/>timeMin<sp/>)<sp/>/<sp/>binToTime);<sp/></highlight><highlight class="comment">//<sp/>(<sp/>(time_ps/time_to_ps)<sp/>-<sp/>offset_time)<sp/>/<sp/>coeff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>newbin&gt;0<sp/>&amp;&amp;<sp/>newbin<sp/>&lt;<sp/>bins<sp/>)</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>corrected_histo<sp/>-&gt;<sp/>SetBinContent(newbin,<sp/>histo-&gt;GetBinContent(bin));</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>corrected_histo;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103" refid="_timeshifts_8hpp_1aecdab429e75a8d9f7a38f3938d9a7173" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="_timeshifts_8hpp_1aecdab429e75a8d9f7a38f3938d9a7173" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>cout,<sp/><ref refid="class_timeshifts" kindref="compound">Timeshifts</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>ts)</highlight></codeline>
<codeline lineno="1104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/>ts.<ref refid="class_timeshifts_1a5161a4c343623e92b4e26522ad7ee16a" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cout;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//TIMESHIFTS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1113"><highlight class="comment">//<sp/>Now<sp/>create<sp/>the<sp/>correctly<sp/>shifted<sp/>time<sp/>spectra<sp/>:</highlight></codeline>
<codeline lineno="1114"><highlight class="comment">//<sp/>for<sp/>(size_t<sp/>label<sp/>=<sp/>0;<sp/>label&lt;m_time_spectra.size();<sp/>label++)</highlight></codeline>
<codeline lineno="1115"><highlight class="comment">//<sp/>{</highlight></codeline>
<codeline lineno="1116"><highlight class="comment">//<sp/><sp/><sp/>auto<sp/>&amp;<sp/>histo<sp/>=<sp/>m_time_spectra[label];</highlight></codeline>
<codeline lineno="1117"><highlight class="comment">//<sp/><sp/><sp/>if<sp/>(histo)<sp/></highlight></codeline>
<codeline lineno="1118"><highlight class="comment">//<sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1119"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>m_time_spectra_corrected[label].reset(<sp/>shiftTimeSpectra(histo,<sp/>label)<sp/>);</highlight></codeline>
<codeline lineno="1120"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>AddTH1(m_time_spectra_corrected_bidim.get(),<sp/>m_time_spectra_corrected[label].get(),<sp/>label,<sp/>true);</highlight></codeline>
<codeline lineno="1121"><highlight class="comment">//<sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1122"><highlight class="comment"></highlight></codeline>
<codeline lineno="1123"><highlight class="comment">//<sp/><sp/><sp/>auto<sp/>&amp;<sp/>histo_RF<sp/>=<sp/>m_histograms_VS_RF[label];</highlight></codeline>
<codeline lineno="1124"><highlight class="comment">//<sp/><sp/><sp/>if<sp/>(histo_RF)<sp/></highlight></codeline>
<codeline lineno="1125"><highlight class="comment">//<sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>m_time_spectra_corrected_RF[label].reset(<sp/>shiftTimeSpectra(histo_RF,<sp/>label)<sp/>);</highlight></codeline>
<codeline lineno="1127"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>AddTH1(m_time_spectra_corrected_bidim_RF.get(),<sp/>m_time_spectra_corrected_RF[label].get(),<sp/>label,<sp/>true);</highlight></codeline>
<codeline lineno="1128"><highlight class="comment">//<sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="comment">//<sp/>}</highlight></codeline>
<codeline lineno="1130"><highlight class="comment">*/</highlight></codeline>
    </programlisting>
    <location file="lib/Modules/Timeshifts.hpp"/>
  </compounddef>
</doxygen>
