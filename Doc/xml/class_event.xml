<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_event" kind="class" language="C++" prot="public">
    <compoundname>Event</compoundname>
    <includes refid="_event_8hpp" local="no">Event.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_event_1a3e0953c870297eee51ce555908923bb3" prot="public" static="no" mutable="no">
        <type><ref refid="_hit_8hpp_1a04b75a9e083a1c44419fdb7c3f87c361" kindref="member">ADC</ref></type>
        <definition>ADC Event::adcs[255]</definition>
        <argsstring>[255]</argsstring>
        <name>adcs</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="181" column="11" bodyfile="lib/Classes/Event.hpp" bodystart="181" bodyend="-1"/>
        <referencedby refid="class_event_1a0e69972fc87ba81fe7ea2b35b53048fa" compoundref="_event_8hpp" startline="94" endline="110">Event</referencedby>
        <referencedby refid="class_calibration_1afd14ef8f1b6cee6cf7abc10783ee318e" compoundref="_calibration_8hpp" startline="485" endline="525">Calibration::fillRootDataHisto</referencedby>
        <referencedby refid="_event_8hpp_1a0486f85c1b0f1aed67847c1e1935fd7b" compoundref="_event_8hpp" startline="367" endline="387">operator&lt;&lt;</referencedby>
        <referencedby refid="class_event_1a2bb3a8e63ac8be551f02fb0963cf0041" compoundref="_event_8hpp" startline="197" endline="209">operator=</referencedby>
        <referencedby refid="class_event_1a65f680e6b4c74419f4aa92e6e772efb0" compoundref="_event_8hpp" startline="313" endline="326">push_back</referencedby>
        <referencedby refid="class_event_1a78b1cb630e7720f205a9c00e2c111102" compoundref="_event_8hpp" startline="337" endline="360">push_front</referencedby>
        <referencedby refid="class_event_1a243e29bac8d969902d32a4d444fc5174" compoundref="_event_8hpp" startline="234" endline="262">reading</referencedby>
        <referencedby refid="class_event_1a0b93fcd8063a3c02edede96bb53b136d" compoundref="_event_8hpp" startline="289" endline="311">writting</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_event_1ad016b65deeaef393a94793ef140e1bb8" prot="public" static="no" mutable="no">
        <type><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref></type>
        <definition>Label Event::labels[255]</definition>
        <argsstring>[255]</argsstring>
        <name>labels</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="178" column="11" bodyfile="lib/Classes/Event.hpp" bodystart="178" bodyend="-1"/>
        <referencedby refid="class_event_1a0e69972fc87ba81fe7ea2b35b53048fa" compoundref="_event_8hpp" startline="94" endline="110">Event</referencedby>
        <referencedby refid="class_timeshifts_1a5c037c5bb4b409c3040982c451c6733d" compoundref="_timeshifts_8hpp" startline="712" endline="783">Timeshifts::Fill</referencedby>
        <referencedby refid="class_paris_1acfde42a5101236f9f4063c22661563f0" compoundref="_paris_8hpp" startline="109" endline="113">Paris::Fill</referencedby>
        <referencedby refid="class_faster2_root_1a5b8a78ef8c54117807c770d21fa4acf0" compoundref="_faster2_root_8hpp" startline="265" endline="280">Faster2Root::loadTriggerFile</referencedby>
        <referencedby refid="class_event_1a2bb3a8e63ac8be551f02fb0963cf0041" compoundref="_event_8hpp" startline="197" endline="209">operator=</referencedby>
        <referencedby refid="class_event_1a65f680e6b4c74419f4aa92e6e772efb0" compoundref="_event_8hpp" startline="313" endline="326">push_back</referencedby>
        <referencedby refid="class_event_1a78b1cb630e7720f205a9c00e2c111102" compoundref="_event_8hpp" startline="337" endline="360">push_front</referencedby>
        <referencedby refid="class_event_1a243e29bac8d969902d32a4d444fc5174" compoundref="_event_8hpp" startline="234" endline="262">reading</referencedby>
        <referencedby refid="class_sorted___event_1a526eefb6a423a59ff6096766c04c98e2" compoundref="_sorted___event_8hpp" startline="254" endline="372">Sorted_Event::sortEvent</referencedby>
        <referencedby refid="class_event_1a0b93fcd8063a3c02edede96bb53b136d" compoundref="_event_8hpp" startline="289" endline="311">writting</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_event_1a455861b2470596b9ee0101ccb61faa26" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Event::mult</definition>
        <argsstring></argsstring>
        <name>mult</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="176" column="7" bodyfile="lib/Classes/Event.hpp" bodystart="176" bodyend="-1"/>
        <referencedby refid="class_coinc_builder_1a6fbd7caa8ab6ac6bbf4d14eb094b6417" compoundref="_coinc_builder_8hpp" startline="49" endline="90">CoincBuilder::build</referencedby>
        <referencedby refid="class_event_builder_1a721b4b60a459c5a5c00ed3e1b513d636" compoundref="_event_builder_8hpp" startline="49" endline="102">EventBuilder::build</referencedby>
        <referencedby refid="class_event_1a0862af1471604bf30a4f50a5e028637a" compoundref="_event_8hpp" startline="152" endline="152">clear</referencedby>
        <referencedby refid="class_event_1a0e69972fc87ba81fe7ea2b35b53048fa" compoundref="_event_8hpp" startline="94" endline="110">Event</referencedby>
        <referencedby refid="class_event_1ae0da185c1abc7223f0bd0184e0937c24" compoundref="_event_8hpp" startline="163" endline="163">isEmpty</referencedby>
        <referencedby refid="class_event_1ac0a49a4178b701a0921ade6bfb1ad143" compoundref="_event_8hpp" startline="162" endline="162">isSingle</referencedby>
        <referencedby refid="class_event_1a2bb3a8e63ac8be551f02fb0963cf0041" compoundref="_event_8hpp" startline="197" endline="209">operator=</referencedby>
        <referencedby refid="class_event_1a65f680e6b4c74419f4aa92e6e772efb0" compoundref="_event_8hpp" startline="313" endline="326">push_back</referencedby>
        <referencedby refid="class_event_1a78b1cb630e7720f205a9c00e2c111102" compoundref="_event_8hpp" startline="337" endline="360">push_front</referencedby>
        <referencedby refid="class_event_1a243e29bac8d969902d32a4d444fc5174" compoundref="_event_8hpp" startline="234" endline="262">reading</referencedby>
        <referencedby refid="class_event_1aadb0c0dcbb31718e69358e9c99a5b633" compoundref="_event_8hpp" startline="153" endline="153">size</referencedby>
        <referencedby refid="class_event_1ad2b15ab9c635d2350f7f03075081ff99" compoundref="_event_8hpp" startline="134" endline="140">timeShift</referencedby>
        <referencedby refid="class_event_1aa69256b1b2f550541a1bc6104cec62d9" compoundref="_event_8hpp" startline="142" endline="148">timeShift_ns</referencedby>
        <referencedby refid="class_event_1a0b93fcd8063a3c02edede96bb53b136d" compoundref="_event_8hpp" startline="289" endline="311">writting</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_event_1acf99e771da7327b904866b80d6cfc45b" prot="public" static="no" mutable="no">
        <type><ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref></type>
        <definition>NRJ Event::nrj2s[255]</definition>
        <argsstring>[255]</argsstring>
        <name>nrj2s</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="184" column="11" bodyfile="lib/Classes/Event.hpp" bodystart="184" bodyend="-1"/>
        <referencedby refid="class_event_1a0e69972fc87ba81fe7ea2b35b53048fa" compoundref="_event_8hpp" startline="94" endline="110">Event</referencedby>
        <referencedby refid="class_paris_phoswitch_1ae42c75c5e5c5a82ebc8e417b7746976e" compoundref="_paris_phoswitch_8hpp" startline="43" endline="49">ParisPhoswitch::Fill</referencedby>
        <referencedby refid="_event_8hpp_1a0486f85c1b0f1aed67847c1e1935fd7b" compoundref="_event_8hpp" startline="367" endline="387">operator&lt;&lt;</referencedby>
        <referencedby refid="class_event_1a2bb3a8e63ac8be551f02fb0963cf0041" compoundref="_event_8hpp" startline="197" endline="209">operator=</referencedby>
        <referencedby refid="class_event_1a65f680e6b4c74419f4aa92e6e772efb0" compoundref="_event_8hpp" startline="313" endline="326">push_back</referencedby>
        <referencedby refid="class_event_1a78b1cb630e7720f205a9c00e2c111102" compoundref="_event_8hpp" startline="337" endline="360">push_front</referencedby>
        <referencedby refid="class_event_1a243e29bac8d969902d32a4d444fc5174" compoundref="_event_8hpp" startline="234" endline="262">reading</referencedby>
        <referencedby refid="class_event_1a0b93fcd8063a3c02edede96bb53b136d" compoundref="_event_8hpp" startline="289" endline="311">writting</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_event_1abdf231115162bb24604c238caceb1b05" prot="public" static="no" mutable="no">
        <type><ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref></type>
        <definition>NRJ Event::nrjs[255]</definition>
        <argsstring>[255]</argsstring>
        <name>nrjs</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="182" column="11" bodyfile="lib/Classes/Event.hpp" bodystart="182" bodyend="-1"/>
        <referencedby refid="class_event_1a0e69972fc87ba81fe7ea2b35b53048fa" compoundref="_event_8hpp" startline="94" endline="110">Event</referencedby>
        <referencedby refid="class_paris_phoswitch_1ae42c75c5e5c5a82ebc8e417b7746976e" compoundref="_paris_phoswitch_8hpp" startline="43" endline="49">ParisPhoswitch::Fill</referencedby>
        <referencedby refid="_event_8hpp_1a0486f85c1b0f1aed67847c1e1935fd7b" compoundref="_event_8hpp" startline="367" endline="387">operator&lt;&lt;</referencedby>
        <referencedby refid="class_event_1a2bb3a8e63ac8be551f02fb0963cf0041" compoundref="_event_8hpp" startline="197" endline="209">operator=</referencedby>
        <referencedby refid="class_event_1a65f680e6b4c74419f4aa92e6e772efb0" compoundref="_event_8hpp" startline="313" endline="326">push_back</referencedby>
        <referencedby refid="class_event_1a78b1cb630e7720f205a9c00e2c111102" compoundref="_event_8hpp" startline="337" endline="360">push_front</referencedby>
        <referencedby refid="class_event_1a243e29bac8d969902d32a4d444fc5174" compoundref="_event_8hpp" startline="234" endline="262">reading</referencedby>
        <referencedby refid="class_event_1a0b93fcd8063a3c02edede96bb53b136d" compoundref="_event_8hpp" startline="289" endline="311">writting</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_event_1a4d88ce4712ef6353c5767a8270a8528f" prot="public" static="no" mutable="no">
        <type><ref refid="_hit_8hpp_1a32b9c8e0ce5bedbf84e93eff0b198eea" kindref="member">Pileup</ref></type>
        <definition>Pileup Event::pileups[255]</definition>
        <argsstring>[255]</argsstring>
        <name>pileups</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="185" column="11" bodyfile="lib/Classes/Event.hpp" bodystart="185" bodyend="-1"/>
        <referencedby refid="class_event_1a0e69972fc87ba81fe7ea2b35b53048fa" compoundref="_event_8hpp" startline="94" endline="110">Event</referencedby>
        <referencedby refid="class_run_matrixator_1af360ec9f7686353b663ce0bdcfa3e2df" compoundref="_run_matrixator_8hpp" startline="313" endline="499">RunMatrixator::fillMatrixes</referencedby>
        <referencedby refid="_event_8hpp_1a0486f85c1b0f1aed67847c1e1935fd7b" compoundref="_event_8hpp" startline="367" endline="387">operator&lt;&lt;</referencedby>
        <referencedby refid="class_event_1a2bb3a8e63ac8be551f02fb0963cf0041" compoundref="_event_8hpp" startline="197" endline="209">operator=</referencedby>
        <referencedby refid="class_event_1a65f680e6b4c74419f4aa92e6e772efb0" compoundref="_event_8hpp" startline="313" endline="326">push_back</referencedby>
        <referencedby refid="class_event_1a78b1cb630e7720f205a9c00e2c111102" compoundref="_event_8hpp" startline="337" endline="360">push_front</referencedby>
        <referencedby refid="class_event_1a243e29bac8d969902d32a4d444fc5174" compoundref="_event_8hpp" startline="234" endline="262">reading</referencedby>
        <referencedby refid="class_event_1a0b93fcd8063a3c02edede96bb53b136d" compoundref="_event_8hpp" startline="289" endline="311">writting</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_event_1a7bc76ee166649431e9010875202ca6c1" prot="public" static="no" mutable="no">
        <type><ref refid="_hit_8hpp_1a04b75a9e083a1c44419fdb7c3f87c361" kindref="member">ADC</ref></type>
        <definition>ADC Event::qdc2s[255]</definition>
        <argsstring>[255]</argsstring>
        <name>qdc2s</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="183" column="11" bodyfile="lib/Classes/Event.hpp" bodystart="183" bodyend="-1"/>
        <referencedby refid="class_event_1a0e69972fc87ba81fe7ea2b35b53048fa" compoundref="_event_8hpp" startline="94" endline="110">Event</referencedby>
        <referencedby refid="class_calibration_1afd14ef8f1b6cee6cf7abc10783ee318e" compoundref="_calibration_8hpp" startline="485" endline="525">Calibration::fillRootDataHisto</referencedby>
        <referencedby refid="_event_8hpp_1a0486f85c1b0f1aed67847c1e1935fd7b" compoundref="_event_8hpp" startline="367" endline="387">operator&lt;&lt;</referencedby>
        <referencedby refid="class_event_1a2bb3a8e63ac8be551f02fb0963cf0041" compoundref="_event_8hpp" startline="197" endline="209">operator=</referencedby>
        <referencedby refid="class_event_1a65f680e6b4c74419f4aa92e6e772efb0" compoundref="_event_8hpp" startline="313" endline="326">push_back</referencedby>
        <referencedby refid="class_event_1a78b1cb630e7720f205a9c00e2c111102" compoundref="_event_8hpp" startline="337" endline="360">push_front</referencedby>
        <referencedby refid="class_event_1a243e29bac8d969902d32a4d444fc5174" compoundref="_event_8hpp" startline="234" endline="262">reading</referencedby>
        <referencedby refid="class_event_1a0b93fcd8063a3c02edede96bb53b136d" compoundref="_event_8hpp" startline="289" endline="311">writting</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_event_1a9c01144b3f06d4cc5234ae3736fec9d2" prot="public" static="no" mutable="no">
        <type><ref refid="class_i_options" kindref="compound">IOptions</ref></type>
        <definition>IOptions Event::read</definition>
        <argsstring></argsstring>
        <name>read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="188" column="12" bodyfile="lib/Classes/Event.hpp" bodystart="188" bodyend="-1"/>
        <referencedby refid="class_event_1a93d81b8139c839326e56f33ef63097e8" compoundref="_event_8hpp" startline="164" endline="173">isCalibrated</referencedby>
        <referencedby refid="class_event_1ae393238c864abbf268c5172572241778" compoundref="_event_8hpp" startline="211" endline="228">operator=</referencedby>
        <referencedby refid="class_event_1a243e29bac8d969902d32a4d444fc5174" compoundref="_event_8hpp" startline="234" endline="262">reading</referencedby>
        <referencedby refid="class_event_1afd2351e3fb971a5f061e5b1b84f78326" compoundref="_event_8hpp" startline="128" endline="132">setT0</referencedby>
        <referencedby refid="class_sorted___event_1a526eefb6a423a59ff6096766c04c98e2" compoundref="_sorted___event_8hpp" startline="254" endline="372">Sorted_Event::sortEvent</referencedby>
        <referencedby refid="class_sorted___event_1a868a20701f8be649bbaf0a0366c378d0" compoundref="_sorted___event_8hpp" startline="231" endline="252">Sorted_Event::sortGeClover</referencedby>
        <referencedby refid="class_event_1a15a45e59b3ce25ab2b72e68578e99c51" compoundref="_event_8hpp" startline="159" endline="159">time_ns</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_event_1a448758bc35a7e830f6385c8c1f17461e" prot="public" static="no" mutable="no">
        <type><ref refid="_hit_8hpp_1a36a1e53eff51015f34900948053c0d69" kindref="member">Timestamp</ref></type>
        <definition>Timestamp Event::stamp</definition>
        <argsstring></argsstring>
        <name>stamp</name>
        <initializer>= 0ull</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="177" column="13" bodyfile="lib/Classes/Event.hpp" bodystart="177" bodyend="-1"/>
        <referencedby refid="class_timeshifts_1a5c037c5bb4b409c3040982c451c6733d" compoundref="_timeshifts_8hpp" startline="712" endline="783">Timeshifts::Fill</referencedby>
        <referencedby refid="_event_8hpp_1a0486f85c1b0f1aed67847c1e1935fd7b" compoundref="_event_8hpp" startline="367" endline="387">operator&lt;&lt;</referencedby>
        <referencedby refid="class_event_1a2bb3a8e63ac8be551f02fb0963cf0041" compoundref="_event_8hpp" startline="197" endline="209">operator=</referencedby>
        <referencedby refid="class_event_1a65f680e6b4c74419f4aa92e6e772efb0" compoundref="_event_8hpp" startline="313" endline="326">push_back</referencedby>
        <referencedby refid="class_event_1a78b1cb630e7720f205a9c00e2c111102" compoundref="_event_8hpp" startline="337" endline="360">push_front</referencedby>
        <referencedby refid="class_event_1a243e29bac8d969902d32a4d444fc5174" compoundref="_event_8hpp" startline="234" endline="262">reading</referencedby>
        <referencedby refid="class_event_1afd2351e3fb971a5f061e5b1b84f78326" compoundref="_event_8hpp" startline="128" endline="132">setT0</referencedby>
        <referencedby refid="class_event_1a0b93fcd8063a3c02edede96bb53b136d" compoundref="_event_8hpp" startline="289" endline="311">writting</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_event_1a24cba1790b71f725050f229c129e91d4" prot="public" static="no" mutable="no">
        <type><ref refid="_hit_8hpp_1ad7cd28c849adeb8fec74d20155b0113d" kindref="member">Time_ns</ref></type>
        <definition>Time_ns Event::time2s[255]</definition>
        <argsstring>[255]</argsstring>
        <name>time2s</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="180" column="11" bodyfile="lib/Classes/Event.hpp" bodystart="180" bodyend="-1"/>
        <referencedby refid="class_event_1a0e69972fc87ba81fe7ea2b35b53048fa" compoundref="_event_8hpp" startline="94" endline="110">Event</referencedby>
        <referencedby refid="class_clovers_1ab1394e718791a5016aa3e0a19828465c" compoundref="_clovers_8hpp" startline="505" endline="604">Clovers::Fill</referencedby>
        <referencedby refid="class_clovers_1a5f280f8b6d043a949b726c7ff2b1e019" compoundref="_clovers_8hpp" startline="470" endline="503">Clovers::FillFast</referencedby>
        <referencedby refid="_event_8hpp_1a0486f85c1b0f1aed67847c1e1935fd7b" compoundref="_event_8hpp" startline="367" endline="387">operator&lt;&lt;</referencedby>
        <referencedby refid="class_event_1ae393238c864abbf268c5172572241778" compoundref="_event_8hpp" startline="211" endline="228">operator=</referencedby>
        <referencedby refid="class_event_1a243e29bac8d969902d32a4d444fc5174" compoundref="_event_8hpp" startline="234" endline="262">reading</referencedby>
        <referencedby refid="class_sorted___event_1a526eefb6a423a59ff6096766c04c98e2" compoundref="_sorted___event_8hpp" startline="254" endline="372">Sorted_Event::sortEvent</referencedby>
        <referencedby refid="class_event_1a15a45e59b3ce25ab2b72e68578e99c51" compoundref="_event_8hpp" startline="159" endline="159">time_ns</referencedby>
        <referencedby refid="class_event_1aa69256b1b2f550541a1bc6104cec62d9" compoundref="_event_8hpp" startline="142" endline="148">timeShift_ns</referencedby>
        <referencedby refid="class_event_1a0b93fcd8063a3c02edede96bb53b136d" compoundref="_event_8hpp" startline="289" endline="311">writting</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_event_1a433bcb1da05d7a6f477d4d1b9ee0f7b0" prot="public" static="no" mutable="no">
        <type><ref refid="_hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7" kindref="member">Time</ref></type>
        <definition>Time Event::times[255]</definition>
        <argsstring>[255]</argsstring>
        <name>times</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="179" column="11" bodyfile="lib/Classes/Event.hpp" bodystart="179" bodyend="-1"/>
        <referencedby refid="class_event_1a0e69972fc87ba81fe7ea2b35b53048fa" compoundref="_event_8hpp" startline="94" endline="110">Event</referencedby>
        <referencedby refid="class_paris_phoswitch_1ae42c75c5e5c5a82ebc8e417b7746976e" compoundref="_paris_phoswitch_8hpp" startline="43" endline="49">ParisPhoswitch::Fill</referencedby>
        <referencedby refid="class_clovers_1ab1394e718791a5016aa3e0a19828465c" compoundref="_clovers_8hpp" startline="505" endline="604">Clovers::Fill</referencedby>
        <referencedby refid="class_clovers_1a5f280f8b6d043a949b726c7ff2b1e019" compoundref="_clovers_8hpp" startline="470" endline="503">Clovers::FillFast</referencedby>
        <referencedby refid="_event_8hpp_1a0486f85c1b0f1aed67847c1e1935fd7b" compoundref="_event_8hpp" startline="367" endline="387">operator&lt;&lt;</referencedby>
        <referencedby refid="class_event_1a2bb3a8e63ac8be551f02fb0963cf0041" compoundref="_event_8hpp" startline="197" endline="209">operator=</referencedby>
        <referencedby refid="class_event_1a65f680e6b4c74419f4aa92e6e772efb0" compoundref="_event_8hpp" startline="313" endline="326">push_back</referencedby>
        <referencedby refid="class_event_1a78b1cb630e7720f205a9c00e2c111102" compoundref="_event_8hpp" startline="337" endline="360">push_front</referencedby>
        <referencedby refid="class_event_1a243e29bac8d969902d32a4d444fc5174" compoundref="_event_8hpp" startline="234" endline="262">reading</referencedby>
        <referencedby refid="class_event_1a15a45e59b3ce25ab2b72e68578e99c51" compoundref="_event_8hpp" startline="159" endline="159">time_ns</referencedby>
        <referencedby refid="class_event_1ad2b15ab9c635d2350f7f03075081ff99" compoundref="_event_8hpp" startline="134" endline="140">timeShift</referencedby>
        <referencedby refid="class_event_1a0b93fcd8063a3c02edede96bb53b136d" compoundref="_event_8hpp" startline="289" endline="311">writting</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_event_1a4db4697dc48d987a650c89b92404f51d" prot="public" static="no" mutable="no">
        <type><ref refid="class_i_options" kindref="compound">IOptions</ref></type>
        <definition>IOptions Event::write</definition>
        <argsstring></argsstring>
        <name>write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="189" column="12" bodyfile="lib/Classes/Event.hpp" bodystart="189" bodyend="-1"/>
        <referencedby refid="class_event_1a93d81b8139c839326e56f33ef63097e8" compoundref="_event_8hpp" startline="164" endline="173">isCalibrated</referencedby>
        <referencedby refid="class_event_1ae393238c864abbf268c5172572241778" compoundref="_event_8hpp" startline="211" endline="228">operator=</referencedby>
        <referencedby refid="class_event_1a0b93fcd8063a3c02edede96bb53b136d" compoundref="_event_8hpp" startline="289" endline="311">writting</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_event_1adefa26c27b8fe8f5d13ba007107103d2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Event::isReading</definition>
        <argsstring></argsstring>
        <name>isReading</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="193" column="8" bodyfile="lib/Classes/Event.hpp" bodystart="193" bodyend="-1"/>
        <referencedby refid="class_event_1a93d81b8139c839326e56f33ef63097e8" compoundref="_event_8hpp" startline="164" endline="173">isCalibrated</referencedby>
        <referencedby refid="class_event_1ae393238c864abbf268c5172572241778" compoundref="_event_8hpp" startline="211" endline="228">operator=</referencedby>
        <referencedby refid="class_event_1a243e29bac8d969902d32a4d444fc5174" compoundref="_event_8hpp" startline="234" endline="262">reading</referencedby>
        <referencedby refid="class_event_1a0b93fcd8063a3c02edede96bb53b136d" compoundref="_event_8hpp" startline="289" endline="311">writting</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_event_1a9ff9ae9c7506bc68fda3edf8658e16fd" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Event::isWritting</definition>
        <argsstring></argsstring>
        <name>isWritting</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="194" column="8" bodyfile="lib/Classes/Event.hpp" bodystart="194" bodyend="-1"/>
        <referencedby refid="class_event_1a93d81b8139c839326e56f33ef63097e8" compoundref="_event_8hpp" startline="164" endline="173">isCalibrated</referencedby>
        <referencedby refid="class_event_1ae393238c864abbf268c5172572241778" compoundref="_event_8hpp" startline="211" endline="228">operator=</referencedby>
        <referencedby refid="class_event_1a243e29bac8d969902d32a4d444fc5174" compoundref="_event_8hpp" startline="234" endline="262">reading</referencedby>
        <referencedby refid="class_event_1a0b93fcd8063a3c02edede96bb53b136d" compoundref="_event_8hpp" startline="289" endline="311">writting</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_event_1afe4f697f53c8ce64e9e7de176ebf27be" prot="private" static="no" mutable="no">
        <type><ref refid="lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
        <definition>size_t Event::m_maxSize</definition>
        <argsstring></argsstring>
        <name>m_maxSize</name>
        <initializer>= 255</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="192" column="10" bodyfile="lib/Classes/Event.hpp" bodystart="192" bodyend="-1"/>
        <referencedby refid="class_event_1ae94819278665e54966a12c494fb65dbc" compoundref="_event_8hpp" startline="156" endline="156">maxSize</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_event_1a0862af1471604bf30a4f50a5e028637a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Event::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="152" column="8" bodyfile="lib/Classes/Event.hpp" bodystart="152" bodyend="152"/>
        <references refid="class_event_1a455861b2470596b9ee0101ccb61faa26" compoundref="_event_8hpp" startline="176">mult</references>
        <referencedby refid="class_builder_1ae2d72f1157ccaaddc45b6963c7971f30" compoundref="_builder_8hpp" startline="73" endline="73">Builder::reset</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_event_1a5a40dd4708297f7031e29b39e039ae10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Event::Event</definition>
        <argsstring>()</argsstring>
        <name>Event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="84" column="3" bodyfile="lib/Classes/Event.hpp" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_event_1a0e69972fc87ba81fe7ea2b35b53048fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Event::Event</definition>
        <argsstring>(Event const &amp;event)</argsstring>
        <name>Event</name>
        <param>
          <type><ref refid="class_event" kindref="compound">Event</ref> const &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="94" column="3" bodyfile="lib/Classes/Event.hpp" bodystart="94" bodyend="110"/>
        <references refid="class_event_1a3e0953c870297eee51ce555908923bb3" compoundref="_event_8hpp" startline="181">adcs</references>
        <references refid="class_event_1ad016b65deeaef393a94793ef140e1bb8" compoundref="_event_8hpp" startline="178">labels</references>
        <references refid="class_event_1a455861b2470596b9ee0101ccb61faa26" compoundref="_event_8hpp" startline="176">mult</references>
        <references refid="class_event_1acf99e771da7327b904866b80d6cfc45b" compoundref="_event_8hpp" startline="184">nrj2s</references>
        <references refid="class_event_1abdf231115162bb24604c238caceb1b05" compoundref="_event_8hpp" startline="182">nrjs</references>
        <references refid="class_event_1a4d88ce4712ef6353c5767a8270a8528f" compoundref="_event_8hpp" startline="185">pileups</references>
        <references refid="class_event_1a7bc76ee166649431e9010875202ca6c1" compoundref="_event_8hpp" startline="183">qdc2s</references>
        <references refid="class_event_1a24cba1790b71f725050f229c129e91d4" compoundref="_event_8hpp" startline="180">time2s</references>
        <references refid="class_event_1a433bcb1da05d7a6f477d4d1b9ee0f7b0" compoundref="_event_8hpp" startline="179">times</references>
      </memberdef>
      <memberdef kind="function" id="class_event_1a0d67aa7db7d129a551208beb934afe7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Event::Event</definition>
        <argsstring>(Hit const &amp;hit)</argsstring>
        <name>Event</name>
        <param>
          <type><ref refid="class_hit" kindref="compound">Hit</ref> const &amp;</type>
          <declname>hit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="89" column="3" bodyfile="lib/Classes/Event.hpp" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_event_1a754f98b2802e8ce25f3d6d35dc24e7b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Event::Event</definition>
        <argsstring>(TTree *tree)</argsstring>
        <name>Event</name>
        <param>
          <type>TTree *</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="112" column="3" bodyfile="lib/Classes/Event.hpp" bodystart="112" bodyend="112"/>
        <references refid="class_event_1a243e29bac8d969902d32a4d444fc5174" compoundref="_event_8hpp" startline="234" endline="262">reading</references>
      </memberdef>
      <memberdef kind="function" id="class_event_1a2c3c93926c72b2138bad6194b3083de4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Event::Event</definition>
        <argsstring>(TTree *tree, std::string const &amp;options)</argsstring>
        <name>Event</name>
        <param>
          <type>TTree *</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="113" column="3" bodyfile="lib/Classes/Event.hpp" bodystart="113" bodyend="113"/>
        <references refid="class_event_1a243e29bac8d969902d32a4d444fc5174" compoundref="_event_8hpp" startline="234" endline="262">reading</references>
      </memberdef>
      <memberdef kind="function" id="class_event_1a93d81b8139c839326e56f33ef63097e8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Event::isCalibrated</definition>
        <argsstring>() const</argsstring>
        <name>isCalibrated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="164" column="8" bodyfile="lib/Classes/Event.hpp" bodystart="164" bodyend="173"/>
        <references refid="class_i_options_1a7d3b074e2027dd608b60f69ede73761e" compoundref="_hit_8hpp" startline="108">IOptions::e</references>
        <references refid="class_i_options_1a1a2ef66e7ce7e5af14029dca3b2f7778" compoundref="_hit_8hpp" startline="109">IOptions::E</references>
        <references refid="class_event_1adefa26c27b8fe8f5d13ba007107103d2" compoundref="_event_8hpp" startline="193">isReading</references>
        <references refid="class_event_1a9ff9ae9c7506bc68fda3edf8658e16fd" compoundref="_event_8hpp" startline="194">isWritting</references>
        <references refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29">print</references>
        <references refid="class_event_1a9c01144b3f06d4cc5234ae3736fec9d2" compoundref="_event_8hpp" startline="188">read</references>
        <references refid="class_event_1a4db4697dc48d987a650c89b92404f51d" compoundref="_event_8hpp" startline="189">write</references>
      </memberdef>
      <memberdef kind="function" id="class_event_1ae0da185c1abc7223f0bd0184e0937c24" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Event::isEmpty</definition>
        <argsstring>() const</argsstring>
        <name>isEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="163" column="8" bodyfile="lib/Classes/Event.hpp" bodystart="163" bodyend="163"/>
        <references refid="class_event_1a455861b2470596b9ee0101ccb61faa26" compoundref="_event_8hpp" startline="176">mult</references>
      </memberdef>
      <memberdef kind="function" id="class_event_1ac0a49a4178b701a0921ade6bfb1ad143" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Event::isSingle</definition>
        <argsstring>() const</argsstring>
        <name>isSingle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="162" column="8" bodyfile="lib/Classes/Event.hpp" bodystart="162" bodyend="162"/>
        <references refid="class_event_1a455861b2470596b9ee0101ccb61faa26" compoundref="_event_8hpp" startline="176">mult</references>
        <referencedby refid="class_builder_1aa476b7d1fd2fe31882a3380769eb60a9" compoundref="_builder_8hpp" startline="63" endline="63">Builder::isSingle</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_event_1ae94819278665e54966a12c494fb65dbc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref> const  &amp;</type>
        <definition>size_t const&amp; Event::maxSize</definition>
        <argsstring>() const</argsstring>
        <name>maxSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="156" column="17" bodyfile="lib/Classes/Event.hpp" bodystart="156" bodyend="156"/>
        <references refid="class_event_1afe4f697f53c8ce64e9e7de176ebf27be" compoundref="_event_8hpp" startline="192">m_maxSize</references>
      </memberdef>
      <memberdef kind="function" id="class_event_1ae393238c864abbf268c5172572241778" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_event" kindref="compound">Event</ref> &amp;</type>
        <definition>Event &amp; Event::operator=</definition>
        <argsstring>(Event const &amp;evt)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_event" kindref="compound">Event</ref> const &amp;</type>
          <declname>evt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="125" column="9" bodyfile="lib/Classes/Event.hpp" bodystart="211" bodyend="228"/>
        <references refid="class_event_1a3e0953c870297eee51ce555908923bb3" compoundref="_event_8hpp" startline="181">adcs</references>
        <references refid="class_i_options_1a7d3b074e2027dd608b60f69ede73761e" compoundref="_hit_8hpp" startline="108">IOptions::e</references>
        <references refid="class_i_options_1a1a2ef66e7ce7e5af14029dca3b2f7778" compoundref="_hit_8hpp" startline="109">IOptions::E</references>
        <references refid="class_event_1adefa26c27b8fe8f5d13ba007107103d2" compoundref="_event_8hpp" startline="193">isReading</references>
        <references refid="class_event_1a9ff9ae9c7506bc68fda3edf8658e16fd" compoundref="_event_8hpp" startline="194">isWritting</references>
        <references refid="class_i_options_1a08938bd98b6894ff1ce8a4a082f5bd7d" compoundref="_hit_8hpp" startline="104">IOptions::l</references>
        <references refid="class_event_1ad016b65deeaef393a94793ef140e1bb8" compoundref="_event_8hpp" startline="178">labels</references>
        <references refid="class_event_1a455861b2470596b9ee0101ccb61faa26" compoundref="_event_8hpp" startline="176">mult</references>
        <references refid="class_event_1acf99e771da7327b904866b80d6cfc45b" compoundref="_event_8hpp" startline="184">nrj2s</references>
        <references refid="class_event_1abdf231115162bb24604c238caceb1b05" compoundref="_event_8hpp" startline="182">nrjs</references>
        <references refid="class_i_options_1a73a8079d9aabef8cd70b9a8713be9ce3" compoundref="_hit_8hpp" startline="112">IOptions::p</references>
        <references refid="class_event_1a4d88ce4712ef6353c5767a8270a8528f" compoundref="_event_8hpp" startline="185">pileups</references>
        <references refid="class_i_options_1adb4538164fb33f5375f1f72601f4aefb" compoundref="_hit_8hpp" startline="110">IOptions::q</references>
        <references refid="class_i_options_1a3b860786dd7c7cef82d6f00b2e64a05e" compoundref="_hit_8hpp" startline="111">IOptions::Q</references>
        <references refid="class_event_1a7bc76ee166649431e9010875202ca6c1" compoundref="_event_8hpp" startline="183">qdc2s</references>
        <references refid="class_event_1a9c01144b3f06d4cc5234ae3736fec9d2" compoundref="_event_8hpp" startline="188">read</references>
        <references refid="class_i_options_1aa727e950a396e908cf8ebd137dc4f539" compoundref="_hit_8hpp" startline="105">IOptions::s</references>
        <references refid="class_event_1a448758bc35a7e830f6385c8c1f17461e" compoundref="_event_8hpp" startline="177">stamp</references>
        <references refid="class_i_options_1af82eb678f8bb2f7984016b278cc24875" compoundref="_hit_8hpp" startline="106">IOptions::t</references>
        <references refid="class_i_options_1a48254b9cb7fdeeacf1f42444333a377a" compoundref="_hit_8hpp" startline="107">IOptions::T</references>
        <references refid="class_event_1a24cba1790b71f725050f229c129e91d4" compoundref="_event_8hpp" startline="180">time2s</references>
        <references refid="class_event_1a433bcb1da05d7a6f477d4d1b9ee0f7b0" compoundref="_event_8hpp" startline="179">times</references>
        <references refid="class_event_1a4db4697dc48d987a650c89b92404f51d" compoundref="_event_8hpp" startline="189">write</references>
      </memberdef>
      <memberdef kind="function" id="class_event_1a2bb3a8e63ac8be551f02fb0963cf0041" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_event" kindref="compound">Event</ref> &amp;</type>
        <definition>Event &amp; Event::operator=</definition>
        <argsstring>(Hit const &amp;hit)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_hit" kindref="compound">Hit</ref> const &amp;</type>
          <declname>hit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="124" column="9" bodyfile="lib/Classes/Event.hpp" bodystart="197" bodyend="209"/>
        <references refid="class_hit_1a3d999e7bbbb470d1d3aa55ee772a98d6" compoundref="_hit_8hpp" startline="198">Hit::adc</references>
        <references refid="class_event_1a3e0953c870297eee51ce555908923bb3" compoundref="_event_8hpp" startline="181">adcs</references>
        <references refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" compoundref="_hit_8hpp" startline="196">Hit::label</references>
        <references refid="class_event_1ad016b65deeaef393a94793ef140e1bb8" compoundref="_event_8hpp" startline="178">labels</references>
        <references refid="class_event_1a455861b2470596b9ee0101ccb61faa26" compoundref="_event_8hpp" startline="176">mult</references>
        <references refid="class_hit_1abda4857e925c3a6315a6fb41fad59189" compoundref="_hit_8hpp" startline="199">Hit::nrj</references>
        <references refid="class_hit_1ab4b93fbbb58d5bf2fd3480238d93065a" compoundref="_hit_8hpp" startline="202">Hit::nrj2</references>
        <references refid="class_event_1acf99e771da7327b904866b80d6cfc45b" compoundref="_event_8hpp" startline="184">nrj2s</references>
        <references refid="class_event_1abdf231115162bb24604c238caceb1b05" compoundref="_event_8hpp" startline="182">nrjs</references>
        <references refid="class_hit_1af11540b09cb070a6c2028546b5a35037" compoundref="_hit_8hpp" startline="208">Hit::pileup</references>
        <references refid="class_event_1a4d88ce4712ef6353c5767a8270a8528f" compoundref="_event_8hpp" startline="185">pileups</references>
        <references refid="class_hit_1a07541ef2177c95ba3de7df1fed1c986f" compoundref="_hit_8hpp" startline="201">Hit::qdc2</references>
        <references refid="class_event_1a7bc76ee166649431e9010875202ca6c1" compoundref="_event_8hpp" startline="183">qdc2s</references>
        <references refid="class_event_1a448758bc35a7e830f6385c8c1f17461e" compoundref="_event_8hpp" startline="177">stamp</references>
        <references refid="class_hit_1ad98aea75b451b3246f45b25f1ccb9221" compoundref="_hit_8hpp" startline="197">Hit::stamp</references>
        <references refid="class_event_1a433bcb1da05d7a6f477d4d1b9ee0f7b0" compoundref="_event_8hpp" startline="179">times</references>
      </memberdef>
      <memberdef kind="function" id="class_event_1a090d2a02b5c85844e1287e7e693af3a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Event::Print</definition>
        <argsstring>() const</argsstring>
        <name>Print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="151" column="8" bodyfile="lib/Classes/Event.hpp" bodystart="362" bodyend="365"/>
        <references refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29">print</references>
      </memberdef>
      <memberdef kind="function" id="class_event_1a65f680e6b4c74419f4aa92e6e772efb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Event::push_back</definition>
        <argsstring>(Hit const &amp;hit)</argsstring>
        <name>push_back</name>
        <param>
          <type><ref refid="class_hit" kindref="compound">Hit</ref> const &amp;</type>
          <declname>hit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="121" column="8" bodyfile="lib/Classes/Event.hpp" bodystart="313" bodyend="326"/>
        <references refid="class_hit_1a3d999e7bbbb470d1d3aa55ee772a98d6" compoundref="_hit_8hpp" startline="198">Hit::adc</references>
        <references refid="class_event_1a3e0953c870297eee51ce555908923bb3" compoundref="_event_8hpp" startline="181">adcs</references>
        <references refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" compoundref="_hit_8hpp" startline="196">Hit::label</references>
        <references refid="class_event_1ad016b65deeaef393a94793ef140e1bb8" compoundref="_event_8hpp" startline="178">labels</references>
        <references refid="class_event_1a455861b2470596b9ee0101ccb61faa26" compoundref="_event_8hpp" startline="176">mult</references>
        <references refid="class_hit_1abda4857e925c3a6315a6fb41fad59189" compoundref="_hit_8hpp" startline="199">Hit::nrj</references>
        <references refid="class_hit_1ab4b93fbbb58d5bf2fd3480238d93065a" compoundref="_hit_8hpp" startline="202">Hit::nrj2</references>
        <references refid="class_event_1acf99e771da7327b904866b80d6cfc45b" compoundref="_event_8hpp" startline="184">nrj2s</references>
        <references refid="class_event_1abdf231115162bb24604c238caceb1b05" compoundref="_event_8hpp" startline="182">nrjs</references>
        <references refid="class_hit_1af11540b09cb070a6c2028546b5a35037" compoundref="_hit_8hpp" startline="208">Hit::pileup</references>
        <references refid="class_event_1a4d88ce4712ef6353c5767a8270a8528f" compoundref="_event_8hpp" startline="185">pileups</references>
        <references refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29">print</references>
        <references refid="class_hit_1a07541ef2177c95ba3de7df1fed1c986f" compoundref="_hit_8hpp" startline="201">Hit::qdc2</references>
        <references refid="class_event_1a7bc76ee166649431e9010875202ca6c1" compoundref="_event_8hpp" startline="183">qdc2s</references>
        <references refid="class_event_1a448758bc35a7e830f6385c8c1f17461e" compoundref="_event_8hpp" startline="177">stamp</references>
        <references refid="class_hit_1ad98aea75b451b3246f45b25f1ccb9221" compoundref="_hit_8hpp" startline="197">Hit::stamp</references>
        <references refid="_hit_8hpp_1a4ea1ea3a29989c67afc2c4db41e36b15" compoundref="_hit_8hpp" startline="46" endline="46">Time_cast</references>
        <references refid="class_event_1a433bcb1da05d7a6f477d4d1b9ee0f7b0" compoundref="_event_8hpp" startline="179">times</references>
      </memberdef>
      <memberdef kind="function" id="class_event_1a78b1cb630e7720f205a9c00e2c111102" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Event::push_front</definition>
        <argsstring>(Hit const &amp;hit)</argsstring>
        <name>push_front</name>
        <param>
          <type><ref refid="class_hit" kindref="compound">Hit</ref> const &amp;</type>
          <declname>hit</declname>
        </param>
        <briefdescription>
<para>Sometimes, we want to select pre-prompt events. In such case, we have to put in in front of the others. </para>
        </briefdescription>
        <detaileddescription>
<para>About the timestamp of the event, we keep the same as this additionnal event is located before the first hit that really represents the &quot;0&quot; of the event </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="122" column="8" bodyfile="lib/Classes/Event.hpp" bodystart="337" bodyend="360"/>
        <references refid="class_hit_1a3d999e7bbbb470d1d3aa55ee772a98d6" compoundref="_hit_8hpp" startline="198">Hit::adc</references>
        <references refid="class_event_1a3e0953c870297eee51ce555908923bb3" compoundref="_event_8hpp" startline="181">adcs</references>
        <references refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" compoundref="_hit_8hpp" startline="196">Hit::label</references>
        <references refid="class_event_1ad016b65deeaef393a94793ef140e1bb8" compoundref="_event_8hpp" startline="178">labels</references>
        <references refid="class_event_1a455861b2470596b9ee0101ccb61faa26" compoundref="_event_8hpp" startline="176">mult</references>
        <references refid="class_hit_1abda4857e925c3a6315a6fb41fad59189" compoundref="_hit_8hpp" startline="199">Hit::nrj</references>
        <references refid="class_hit_1ab4b93fbbb58d5bf2fd3480238d93065a" compoundref="_hit_8hpp" startline="202">Hit::nrj2</references>
        <references refid="class_event_1acf99e771da7327b904866b80d6cfc45b" compoundref="_event_8hpp" startline="184">nrj2s</references>
        <references refid="class_event_1abdf231115162bb24604c238caceb1b05" compoundref="_event_8hpp" startline="182">nrjs</references>
        <references refid="class_hit_1af11540b09cb070a6c2028546b5a35037" compoundref="_hit_8hpp" startline="208">Hit::pileup</references>
        <references refid="class_event_1a4d88ce4712ef6353c5767a8270a8528f" compoundref="_event_8hpp" startline="185">pileups</references>
        <references refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29">print</references>
        <references refid="class_hit_1a07541ef2177c95ba3de7df1fed1c986f" compoundref="_hit_8hpp" startline="201">Hit::qdc2</references>
        <references refid="class_event_1a7bc76ee166649431e9010875202ca6c1" compoundref="_event_8hpp" startline="183">qdc2s</references>
        <references refid="class_event_1a448758bc35a7e830f6385c8c1f17461e" compoundref="_event_8hpp" startline="177">stamp</references>
        <references refid="class_hit_1ad98aea75b451b3246f45b25f1ccb9221" compoundref="_hit_8hpp" startline="197">Hit::stamp</references>
        <references refid="_hit_8hpp_1a4ea1ea3a29989c67afc2c4db41e36b15" compoundref="_hit_8hpp" startline="46" endline="46">Time_cast</references>
        <references refid="class_event_1a433bcb1da05d7a6f477d4d1b9ee0f7b0" compoundref="_event_8hpp" startline="179">times</references>
      </memberdef>
      <memberdef kind="function" id="class_event_1a243e29bac8d969902d32a4d444fc5174" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Event::reading</definition>
        <argsstring>(TTree *tree)</argsstring>
        <name>reading</name>
        <param>
          <type>TTree *</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
<para>Automatically set branches based on the presence or not of branches in the root tree. Reserved for &quot;Nuball2&quot; type of trees. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="116" column="8" bodyfile="lib/Classes/Event.hpp" bodystart="234" bodyend="262"/>
        <references refid="class_event_1a3e0953c870297eee51ce555908923bb3" compoundref="_event_8hpp" startline="181">adcs</references>
        <references refid="class_i_options_1a7d3b074e2027dd608b60f69ede73761e" compoundref="_hit_8hpp" startline="108">IOptions::e</references>
        <references refid="class_i_options_1a1a2ef66e7ce7e5af14029dca3b2f7778" compoundref="_hit_8hpp" startline="109">IOptions::E</references>
        <references refid="class_event_1adefa26c27b8fe8f5d13ba007107103d2" compoundref="_event_8hpp" startline="193">isReading</references>
        <references refid="class_event_1a9ff9ae9c7506bc68fda3edf8658e16fd" compoundref="_event_8hpp" startline="194">isWritting</references>
        <references refid="class_i_options_1a08938bd98b6894ff1ce8a4a082f5bd7d" compoundref="_hit_8hpp" startline="104">IOptions::l</references>
        <references refid="class_event_1ad016b65deeaef393a94793ef140e1bb8" compoundref="_event_8hpp" startline="178">labels</references>
        <references refid="class_event_1a455861b2470596b9ee0101ccb61faa26" compoundref="_event_8hpp" startline="176">mult</references>
        <references refid="class_event_1acf99e771da7327b904866b80d6cfc45b" compoundref="_event_8hpp" startline="184">nrj2s</references>
        <references refid="class_event_1abdf231115162bb24604c238caceb1b05" compoundref="_event_8hpp" startline="182">nrjs</references>
        <references refid="class_i_options_1a73a8079d9aabef8cd70b9a8713be9ce3" compoundref="_hit_8hpp" startline="112">IOptions::p</references>
        <references refid="class_event_1a4d88ce4712ef6353c5767a8270a8528f" compoundref="_event_8hpp" startline="185">pileups</references>
        <references refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29">print</references>
        <references refid="class_i_options_1adb4538164fb33f5375f1f72601f4aefb" compoundref="_hit_8hpp" startline="110">IOptions::q</references>
        <references refid="class_i_options_1a3b860786dd7c7cef82d6f00b2e64a05e" compoundref="_hit_8hpp" startline="111">IOptions::Q</references>
        <references refid="class_event_1a7bc76ee166649431e9010875202ca6c1" compoundref="_event_8hpp" startline="183">qdc2s</references>
        <references refid="class_event_1a9c01144b3f06d4cc5234ae3736fec9d2" compoundref="_event_8hpp" startline="188">read</references>
        <references refid="class_i_options_1aa727e950a396e908cf8ebd137dc4f539" compoundref="_hit_8hpp" startline="105">IOptions::s</references>
        <references refid="class_event_1a448758bc35a7e830f6385c8c1f17461e" compoundref="_event_8hpp" startline="177">stamp</references>
        <references refid="class_i_options_1af82eb678f8bb2f7984016b278cc24875" compoundref="_hit_8hpp" startline="106">IOptions::t</references>
        <references refid="class_i_options_1a48254b9cb7fdeeacf1f42444333a377a" compoundref="_hit_8hpp" startline="107">IOptions::T</references>
        <references refid="class_event_1a24cba1790b71f725050f229c129e91d4" compoundref="_event_8hpp" startline="180">time2s</references>
        <references refid="class_event_1a433bcb1da05d7a6f477d4d1b9ee0f7b0" compoundref="_event_8hpp" startline="179">times</references>
        <referencedby refid="class_event_1a754f98b2802e8ce25f3d6d35dc24e7b2" compoundref="_event_8hpp" startline="112" endline="112">Event</referencedby>
        <referencedby refid="class_calibration_1afd14ef8f1b6cee6cf7abc10783ee318e" compoundref="_calibration_8hpp" startline="485" endline="525">Calibration::fillRootDataHisto</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_event_1af08b47f89112db7279491ab1201ce82d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Event::reading</definition>
        <argsstring>(TTree *tree, std::string const &amp;options)</argsstring>
        <name>reading</name>
        <param>
          <type>TTree *</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="117" column="8" bodyfile="lib/Classes/Event.hpp" bodystart="264" bodyend="287"/>
        <references refid="class_event_1a3e0953c870297eee51ce555908923bb3" compoundref="_event_8hpp" startline="181">adcs</references>
        <references refid="class_i_options_1a7d3b074e2027dd608b60f69ede73761e" compoundref="_hit_8hpp" startline="108">IOptions::e</references>
        <references refid="class_i_options_1a1a2ef66e7ce7e5af14029dca3b2f7778" compoundref="_hit_8hpp" startline="109">IOptions::E</references>
        <references refid="class_event_1adefa26c27b8fe8f5d13ba007107103d2" compoundref="_event_8hpp" startline="193">isReading</references>
        <references refid="class_event_1a9ff9ae9c7506bc68fda3edf8658e16fd" compoundref="_event_8hpp" startline="194">isWritting</references>
        <references refid="class_i_options_1a08938bd98b6894ff1ce8a4a082f5bd7d" compoundref="_hit_8hpp" startline="104">IOptions::l</references>
        <references refid="class_event_1ad016b65deeaef393a94793ef140e1bb8" compoundref="_event_8hpp" startline="178">labels</references>
        <references refid="class_event_1a455861b2470596b9ee0101ccb61faa26" compoundref="_event_8hpp" startline="176">mult</references>
        <references refid="class_event_1acf99e771da7327b904866b80d6cfc45b" compoundref="_event_8hpp" startline="184">nrj2s</references>
        <references refid="class_event_1abdf231115162bb24604c238caceb1b05" compoundref="_event_8hpp" startline="182">nrjs</references>
        <references refid="class_i_options_1a73a8079d9aabef8cd70b9a8713be9ce3" compoundref="_hit_8hpp" startline="112">IOptions::p</references>
        <references refid="class_event_1a4d88ce4712ef6353c5767a8270a8528f" compoundref="_event_8hpp" startline="185">pileups</references>
        <references refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29">print</references>
        <references refid="class_i_options_1adb4538164fb33f5375f1f72601f4aefb" compoundref="_hit_8hpp" startline="110">IOptions::q</references>
        <references refid="class_i_options_1a3b860786dd7c7cef82d6f00b2e64a05e" compoundref="_hit_8hpp" startline="111">IOptions::Q</references>
        <references refid="class_event_1a7bc76ee166649431e9010875202ca6c1" compoundref="_event_8hpp" startline="183">qdc2s</references>
        <references refid="class_event_1a9c01144b3f06d4cc5234ae3736fec9d2" compoundref="_event_8hpp" startline="188">read</references>
        <references refid="class_i_options_1aa727e950a396e908cf8ebd137dc4f539" compoundref="_hit_8hpp" startline="105">IOptions::s</references>
        <references refid="class_i_options_1aab7ee24774fddd6ccb14bb6801fafdb0" compoundref="_hit_8hpp" startline="84" endline="102">IOptions::setOptions</references>
        <references refid="class_event_1a448758bc35a7e830f6385c8c1f17461e" compoundref="_event_8hpp" startline="177">stamp</references>
        <references refid="class_i_options_1af82eb678f8bb2f7984016b278cc24875" compoundref="_hit_8hpp" startline="106">IOptions::t</references>
        <references refid="class_i_options_1a48254b9cb7fdeeacf1f42444333a377a" compoundref="_hit_8hpp" startline="107">IOptions::T</references>
        <references refid="class_event_1a24cba1790b71f725050f229c129e91d4" compoundref="_event_8hpp" startline="180">time2s</references>
        <references refid="class_event_1a433bcb1da05d7a6f477d4d1b9ee0f7b0" compoundref="_event_8hpp" startline="179">times</references>
      </memberdef>
      <memberdef kind="function" id="class_event_1afd2351e3fb971a5f061e5b1b84f78326" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Event::setT0</definition>
        <argsstring>(Timestamp const &amp;timestamp)</argsstring>
        <name>setT0</name>
        <param>
          <type><ref refid="_hit_8hpp_1a36a1e53eff51015f34900948053c0d69" kindref="member">Timestamp</ref> const &amp;</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="128" column="8" bodyfile="lib/Classes/Event.hpp" bodystart="128" bodyend="132"/>
        <references refid="class_event_1a9c01144b3f06d4cc5234ae3736fec9d2" compoundref="_event_8hpp" startline="188">read</references>
        <references refid="class_event_1a448758bc35a7e830f6385c8c1f17461e" compoundref="_event_8hpp" startline="177">stamp</references>
        <references refid="class_i_options_1a48254b9cb7fdeeacf1f42444333a377a" compoundref="_hit_8hpp" startline="107">IOptions::T</references>
        <references refid="_hit_8hpp_1a4ea1ea3a29989c67afc2c4db41e36b15" compoundref="_hit_8hpp" startline="46" endline="46">Time_cast</references>
        <references refid="class_event_1ad2b15ab9c635d2350f7f03075081ff99" compoundref="_event_8hpp" startline="134" endline="140">timeShift</references>
        <references refid="class_event_1aa69256b1b2f550541a1bc6104cec62d9" compoundref="_event_8hpp" startline="142" endline="148">timeShift_ns</references>
      </memberdef>
      <memberdef kind="function" id="class_event_1aadb0c0dcbb31718e69358e9c99a5b633" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
        <definition>size_t Event::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="153" column="10" bodyfile="lib/Classes/Event.hpp" bodystart="153" bodyend="153"/>
        <references refid="class_event_1a455861b2470596b9ee0101ccb61faa26" compoundref="_event_8hpp" startline="176">mult</references>
        <references refid="lib_co_8hpp_1a237f678c718382f74a68364c0fc1779a" compoundref="lib_co_8hpp" startline="125" endline="125">size_cast</references>
      </memberdef>
      <memberdef kind="function" id="class_event_1a15a45e59b3ce25ab2b72e68578e99c51" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_hit_8hpp_1ad7cd28c849adeb8fec74d20155b0113d" kindref="member">Time_ns</ref></type>
        <definition>Time_ns Event::time_ns</definition>
        <argsstring>(int const &amp;i) const</argsstring>
        <name>time_ns</name>
        <param>
          <type>int const &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="159" column="11" bodyfile="lib/Classes/Event.hpp" bodystart="159" bodyend="159"/>
        <references refid="class_event_1a9c01144b3f06d4cc5234ae3736fec9d2" compoundref="_event_8hpp" startline="188">read</references>
        <references refid="class_i_options_1a48254b9cb7fdeeacf1f42444333a377a" compoundref="_hit_8hpp" startline="107">IOptions::T</references>
        <references refid="class_event_1a24cba1790b71f725050f229c129e91d4" compoundref="_event_8hpp" startline="180">time2s</references>
        <references refid="_hit_8hpp_1a04b1f65fe07e6d731225feecab2b66f6" compoundref="_hit_8hpp" startline="54" endline="54">Time_ns_cast</references>
        <references refid="class_event_1a433bcb1da05d7a6f477d4d1b9ee0f7b0" compoundref="_event_8hpp" startline="179">times</references>
      </memberdef>
      <memberdef kind="function" id="class_event_1ad2b15ab9c635d2350f7f03075081ff99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Event::timeShift</definition>
        <argsstring>(Time const &amp;shift)</argsstring>
        <name>timeShift</name>
        <param>
          <type><ref refid="_hit_8hpp_1a808363c27c30b41f6ed40b62ebde3ee7" kindref="member">Time</ref> const &amp;</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="134" column="8" bodyfile="lib/Classes/Event.hpp" bodystart="134" bodyend="140"/>
        <references refid="class_event_1a455861b2470596b9ee0101ccb61faa26" compoundref="_event_8hpp" startline="176">mult</references>
        <references refid="class_event_1a433bcb1da05d7a6f477d4d1b9ee0f7b0" compoundref="_event_8hpp" startline="179">times</references>
        <referencedby refid="class_event_1afd2351e3fb971a5f061e5b1b84f78326" compoundref="_event_8hpp" startline="128" endline="132">setT0</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_event_1aa69256b1b2f550541a1bc6104cec62d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Event::timeShift_ns</definition>
        <argsstring>(double const &amp;shift)</argsstring>
        <name>timeShift_ns</name>
        <param>
          <type>double const &amp;</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="142" column="8" bodyfile="lib/Classes/Event.hpp" bodystart="142" bodyend="148"/>
        <references refid="class_event_1a455861b2470596b9ee0101ccb61faa26" compoundref="_event_8hpp" startline="176">mult</references>
        <references refid="class_event_1a24cba1790b71f725050f229c129e91d4" compoundref="_event_8hpp" startline="180">time2s</references>
        <referencedby refid="class_event_1afd2351e3fb971a5f061e5b1b84f78326" compoundref="_event_8hpp" startline="128" endline="132">setT0</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_event_1a0b93fcd8063a3c02edede96bb53b136d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Event::writting</definition>
        <argsstring>(TTree *tree, std::string const &amp;options=&quot;lstTeEqQ&quot;)</argsstring>
        <name>writting</name>
        <param>
          <type>TTree *</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>options</declname>
          <defval>&quot;lstTeEqQ&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Event.hpp" line="118" column="8" bodyfile="lib/Classes/Event.hpp" bodystart="289" bodyend="311"/>
        <references refid="class_event_1a3e0953c870297eee51ce555908923bb3" compoundref="_event_8hpp" startline="181">adcs</references>
        <references refid="lib_root_8hpp_1a03e7d6c734bc80bcdea8985f46a45f41" compoundref="lib_root_8hpp" startline="277" endline="280">createBranch</references>
        <references refid="lib_root_8hpp_1a458b3c1dc8d1ee210a87a2cd07d4f8b2" compoundref="lib_root_8hpp" startline="285" endline="289">createBranchArray</references>
        <references refid="class_i_options_1a7d3b074e2027dd608b60f69ede73761e" compoundref="_hit_8hpp" startline="108">IOptions::e</references>
        <references refid="class_i_options_1a1a2ef66e7ce7e5af14029dca3b2f7778" compoundref="_hit_8hpp" startline="109">IOptions::E</references>
        <references refid="class_event_1adefa26c27b8fe8f5d13ba007107103d2" compoundref="_event_8hpp" startline="193">isReading</references>
        <references refid="class_event_1a9ff9ae9c7506bc68fda3edf8658e16fd" compoundref="_event_8hpp" startline="194">isWritting</references>
        <references refid="class_i_options_1a08938bd98b6894ff1ce8a4a082f5bd7d" compoundref="_hit_8hpp" startline="104">IOptions::l</references>
        <references refid="class_event_1ad016b65deeaef393a94793ef140e1bb8" compoundref="_event_8hpp" startline="178">labels</references>
        <references refid="class_event_1a455861b2470596b9ee0101ccb61faa26" compoundref="_event_8hpp" startline="176">mult</references>
        <references refid="class_event_1acf99e771da7327b904866b80d6cfc45b" compoundref="_event_8hpp" startline="184">nrj2s</references>
        <references refid="class_event_1abdf231115162bb24604c238caceb1b05" compoundref="_event_8hpp" startline="182">nrjs</references>
        <references refid="class_i_options_1a73a8079d9aabef8cd70b9a8713be9ce3" compoundref="_hit_8hpp" startline="112">IOptions::p</references>
        <references refid="class_event_1a4d88ce4712ef6353c5767a8270a8528f" compoundref="_event_8hpp" startline="185">pileups</references>
        <references refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29">print</references>
        <references refid="class_i_options_1adb4538164fb33f5375f1f72601f4aefb" compoundref="_hit_8hpp" startline="110">IOptions::q</references>
        <references refid="class_i_options_1a3b860786dd7c7cef82d6f00b2e64a05e" compoundref="_hit_8hpp" startline="111">IOptions::Q</references>
        <references refid="class_event_1a7bc76ee166649431e9010875202ca6c1" compoundref="_event_8hpp" startline="183">qdc2s</references>
        <references refid="class_i_options_1aa727e950a396e908cf8ebd137dc4f539" compoundref="_hit_8hpp" startline="105">IOptions::s</references>
        <references refid="class_i_options_1aab7ee24774fddd6ccb14bb6801fafdb0" compoundref="_hit_8hpp" startline="84" endline="102">IOptions::setOptions</references>
        <references refid="class_event_1a448758bc35a7e830f6385c8c1f17461e" compoundref="_event_8hpp" startline="177">stamp</references>
        <references refid="class_i_options_1af82eb678f8bb2f7984016b278cc24875" compoundref="_hit_8hpp" startline="106">IOptions::t</references>
        <references refid="class_i_options_1a48254b9cb7fdeeacf1f42444333a377a" compoundref="_hit_8hpp" startline="107">IOptions::T</references>
        <references refid="class_event_1a24cba1790b71f725050f229c129e91d4" compoundref="_event_8hpp" startline="180">time2s</references>
        <references refid="class_event_1a433bcb1da05d7a6f477d4d1b9ee0f7b0" compoundref="_event_8hpp" startline="179">times</references>
        <references refid="class_event_1a4db4697dc48d987a650c89b92404f51d" compoundref="_event_8hpp" startline="189">write</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_event" kindref="compound">Event</ref> used for reading and writting event, event building and trigger. </para>
    </briefdescription>
    <detaileddescription>
<para>An <ref refid="class_event" kindref="compound">Event</ref> is in principle a collection of Hits. However, in order to be an efficient interface with ROOT TTree, in practice it consist of a collections of arrays that stores values of a specific branch.</para>
<para>The following are public members (i.e. you can call it directly with <ref refid="class_event" kindref="compound">Event</ref>::[array_name]) <verbatim>   int mult = 0;                  Number of hits currently stored in the event.
   Timestamp stamp = 0ull;         Absolute timestamp of the whole event
   Label   labels  [255] = {0};    Labels of the hits
   Time    times   [255] = {0};    Time in ps (Long64_t) relative to the first hit
   Time_ns time2s  [255] = {0};    Time in ns (float) relative either to the first hit or to the pulse
   ADC     adcs    [255] = {0};    Uncalibrated ADC value of the energy
   NRJ     nrjs    [255] = {0};    Calibrated (or simply gain matched) energy value in keV
   ADC     qdc2s   [255] = {0};    Uncalibrated QDC value of the energy measured in the second time gate for QDC2 channels
   NRJ     nrj2s   [255] = {0};    Calibrated (or simply gain matched) energy value in keV. By default, the energy calibration is the same as the nrj so that the ratio remains the same
   Pileup  pileups [255] = {0};    Pileup or saturation bit
</verbatim> Format of a branch inside the root tree : <verbatim>   &quot;array[mult]/type&quot;
</verbatim> Only the two first members are not arrays because they are true for the entire event.</para>
<para>To read any Nuball2-like TTree : <verbatim>   // Loads the TTree or TChain ...
   Event event;
   event.reading(ttree);
</verbatim> If you are only interested in a few branches, you can choose them by adding an option : <verbatim>   event.reading(ttree, &quot;lst&quot;); // Reads only the multiplicity, label, timestamp and relatative time.
</verbatim> Note the multiplicity will always be activated, because it is mandatory to read the root file.</para>
<para>A list of all the options available so far : <verbatim>   l : label  label                 ushort
   s : stamp  absolute timestamp ps ULong64_t
   t : time   relative timestamp ps Long64_t
   T : time2  relative timestamp ns float
   e : adc    energy in ADC         int
   E : nrj    energy in keV         float
   q : qdc2   energy qdc2 in ADC    float
   Q : nrj2   energy qdc2 in keV    float
   p : pileup pilepup               bool
</verbatim> You can access the readed branches via the <ref refid="class_event_1a9c01144b3f06d4cc5234ae3736fec9d2" kindref="member">Event::read</ref> member (see the ReadIO struct definition)</para>
<para>You can use this class to write in another root tree. To do so, use the <ref refid="class_event_1a0b93fcd8063a3c02edede96bb53b136d" kindref="member">Event::writting</ref> method : <verbatim>   event.writting(outTree, &quot;lstEQ&quot;); Will write the multiplicity, timestamp, relative time and calibrated energy and QDC2
</verbatim> You can as well access the written branches via the <ref refid="class_event_1a4db4697dc48d987a650c89b92404f51d" kindref="member">Event::write</ref> member (see the WriteIO struct definition)</para>
<para>Interface with <ref refid="class_hit" kindref="compound">Hit</ref> class :</para>
<para>You can add Hits to an event using the <ref refid="class_event_1a65f680e6b4c74419f4aa92e6e772efb0" kindref="member">Event::push_back</ref> or <ref refid="class_event_1a78b1cb630e7720f205a9c00e2c111102" kindref="member">Event::push_front</ref> methods : <verbatim>   event.push_back(hit);

   event.push_front(hit);
</verbatim> When the event is complete (e.g. in an event builder), you can for instance write it down or analyse it, then call <ref refid="class_event_1a0862af1471604bf30a4f50a5e028637a" kindref="member">Event::clear()</ref> to empty it. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>IOptions</label>
        <link refid="class_i_options"/>
      </node>
      <node id="1">
        <label>Event</label>
        <link refid="class_event"/>
        <childnode refid="2" relation="usage">
          <edgelabel>read</edgelabel>
          <edgelabel>write</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="lib/Classes/Event.hpp" line="79" column="1" bodyfile="lib/Classes/Event.hpp" bodystart="80" bodyend="195"/>
    <listofallmembers>
      <member refid="class_event_1a3e0953c870297eee51ce555908923bb3" prot="public" virt="non-virtual"><scope>Event</scope><name>adcs</name></member>
      <member refid="class_event_1a0862af1471604bf30a4f50a5e028637a" prot="public" virt="non-virtual"><scope>Event</scope><name>clear</name></member>
      <member refid="class_event_1a5a40dd4708297f7031e29b39e039ae10" prot="public" virt="non-virtual"><scope>Event</scope><name>Event</name></member>
      <member refid="class_event_1a0d67aa7db7d129a551208beb934afe7f" prot="public" virt="non-virtual"><scope>Event</scope><name>Event</name></member>
      <member refid="class_event_1a0e69972fc87ba81fe7ea2b35b53048fa" prot="public" virt="non-virtual"><scope>Event</scope><name>Event</name></member>
      <member refid="class_event_1a754f98b2802e8ce25f3d6d35dc24e7b2" prot="public" virt="non-virtual"><scope>Event</scope><name>Event</name></member>
      <member refid="class_event_1a2c3c93926c72b2138bad6194b3083de4" prot="public" virt="non-virtual"><scope>Event</scope><name>Event</name></member>
      <member refid="class_event_1a93d81b8139c839326e56f33ef63097e8" prot="public" virt="non-virtual"><scope>Event</scope><name>isCalibrated</name></member>
      <member refid="class_event_1ae0da185c1abc7223f0bd0184e0937c24" prot="public" virt="non-virtual"><scope>Event</scope><name>isEmpty</name></member>
      <member refid="class_event_1adefa26c27b8fe8f5d13ba007107103d2" prot="private" virt="non-virtual"><scope>Event</scope><name>isReading</name></member>
      <member refid="class_event_1ac0a49a4178b701a0921ade6bfb1ad143" prot="public" virt="non-virtual"><scope>Event</scope><name>isSingle</name></member>
      <member refid="class_event_1a9ff9ae9c7506bc68fda3edf8658e16fd" prot="private" virt="non-virtual"><scope>Event</scope><name>isWritting</name></member>
      <member refid="class_event_1ad016b65deeaef393a94793ef140e1bb8" prot="public" virt="non-virtual"><scope>Event</scope><name>labels</name></member>
      <member refid="class_event_1afe4f697f53c8ce64e9e7de176ebf27be" prot="private" virt="non-virtual"><scope>Event</scope><name>m_maxSize</name></member>
      <member refid="class_event_1ae94819278665e54966a12c494fb65dbc" prot="public" virt="non-virtual"><scope>Event</scope><name>maxSize</name></member>
      <member refid="class_event_1a455861b2470596b9ee0101ccb61faa26" prot="public" virt="non-virtual"><scope>Event</scope><name>mult</name></member>
      <member refid="class_event_1acf99e771da7327b904866b80d6cfc45b" prot="public" virt="non-virtual"><scope>Event</scope><name>nrj2s</name></member>
      <member refid="class_event_1abdf231115162bb24604c238caceb1b05" prot="public" virt="non-virtual"><scope>Event</scope><name>nrjs</name></member>
      <member refid="class_event_1a2bb3a8e63ac8be551f02fb0963cf0041" prot="public" virt="non-virtual"><scope>Event</scope><name>operator=</name></member>
      <member refid="class_event_1ae393238c864abbf268c5172572241778" prot="public" virt="non-virtual"><scope>Event</scope><name>operator=</name></member>
      <member refid="class_event_1a4d88ce4712ef6353c5767a8270a8528f" prot="public" virt="non-virtual"><scope>Event</scope><name>pileups</name></member>
      <member refid="class_event_1a090d2a02b5c85844e1287e7e693af3a7" prot="public" virt="non-virtual"><scope>Event</scope><name>Print</name></member>
      <member refid="class_event_1a65f680e6b4c74419f4aa92e6e772efb0" prot="public" virt="non-virtual"><scope>Event</scope><name>push_back</name></member>
      <member refid="class_event_1a78b1cb630e7720f205a9c00e2c111102" prot="public" virt="non-virtual"><scope>Event</scope><name>push_front</name></member>
      <member refid="class_event_1a7bc76ee166649431e9010875202ca6c1" prot="public" virt="non-virtual"><scope>Event</scope><name>qdc2s</name></member>
      <member refid="class_event_1a9c01144b3f06d4cc5234ae3736fec9d2" prot="public" virt="non-virtual"><scope>Event</scope><name>read</name></member>
      <member refid="class_event_1a243e29bac8d969902d32a4d444fc5174" prot="public" virt="non-virtual"><scope>Event</scope><name>reading</name></member>
      <member refid="class_event_1af08b47f89112db7279491ab1201ce82d" prot="public" virt="non-virtual"><scope>Event</scope><name>reading</name></member>
      <member refid="class_event_1afd2351e3fb971a5f061e5b1b84f78326" prot="public" virt="non-virtual"><scope>Event</scope><name>setT0</name></member>
      <member refid="class_event_1aadb0c0dcbb31718e69358e9c99a5b633" prot="public" virt="non-virtual"><scope>Event</scope><name>size</name></member>
      <member refid="class_event_1a448758bc35a7e830f6385c8c1f17461e" prot="public" virt="non-virtual"><scope>Event</scope><name>stamp</name></member>
      <member refid="class_event_1a24cba1790b71f725050f229c129e91d4" prot="public" virt="non-virtual"><scope>Event</scope><name>time2s</name></member>
      <member refid="class_event_1a15a45e59b3ce25ab2b72e68578e99c51" prot="public" virt="non-virtual"><scope>Event</scope><name>time_ns</name></member>
      <member refid="class_event_1a433bcb1da05d7a6f477d4d1b9ee0f7b0" prot="public" virt="non-virtual"><scope>Event</scope><name>times</name></member>
      <member refid="class_event_1ad2b15ab9c635d2350f7f03075081ff99" prot="public" virt="non-virtual"><scope>Event</scope><name>timeShift</name></member>
      <member refid="class_event_1aa69256b1b2f550541a1bc6104cec62d9" prot="public" virt="non-virtual"><scope>Event</scope><name>timeShift_ns</name></member>
      <member refid="class_event_1a4db4697dc48d987a650c89b92404f51d" prot="public" virt="non-virtual"><scope>Event</scope><name>write</name></member>
      <member refid="class_event_1a0b93fcd8063a3c02edede96bb53b136d" prot="public" virt="non-virtual"><scope>Event</scope><name>writting</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
