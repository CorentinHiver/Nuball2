<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_timewalk_8hpp" kind="file" language="C++">
    <compoundname>Timewalk.hpp</compoundname>
    <includes refid="lib_co_8hpp" local="yes">../libCo.hpp</includes>
    <includedby refid="_d_s_s_d_8hpp" local="no">lib/Analyse/DSSD.hpp</includedby>
    <includedby refid="_sorted___event_8hpp" local="no">lib/Analyse/Sorted_Event.hpp</includedby>
    <incdepgraph>
      <node id="27">
        <label>glob.h</label>
      </node>
      <node id="10">
        <label>iomanip</label>
      </node>
      <node id="9">
        <label>functional</label>
      </node>
      <node id="16">
        <label>queue</label>
      </node>
      <node id="32">
        <label>random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>filesystem</label>
      </node>
      <node id="29">
        <label>stdlib.h</label>
      </node>
      <node id="18">
        <label>stdexcept</label>
      </node>
      <node id="15">
        <label>numeric</label>
      </node>
      <node id="19">
        <label>string</label>
      </node>
      <node id="12">
        <label>map</label>
      </node>
      <node id="2">
        <label>../libCo.hpp</label>
        <link refid="lib_co_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>print.hpp</label>
        <link refid="print_8hpp"/>
      </node>
      <node id="8">
        <label>fstream</label>
      </node>
      <node id="1">
        <label>lib/Modules/Timewalk.hpp</label>
        <link refid="_timewalk_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>any</label>
      </node>
      <node id="35">
        <label>files_functions.hpp</label>
        <link refid="files__functions_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>random</label>
      </node>
      <node id="30">
        <label>string.h</label>
      </node>
      <node id="23">
        <label>typeinfo</label>
      </node>
      <node id="25">
        <label>vector</label>
      </node>
      <node id="20">
        <label>stack</label>
      </node>
      <node id="36">
        <label>vector_functions.hpp</label>
        <link refid="vector__functions_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>array</label>
      </node>
      <node id="17">
        <label>sstream</label>
      </node>
      <node id="6">
        <label>cstdlib</label>
      </node>
      <node id="11">
        <label>iostream</label>
      </node>
      <node id="34">
        <label>string_functions.hpp</label>
        <link refid="string__functions_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>unordered_map</label>
      </node>
      <node id="14">
        <label>mutex</label>
      </node>
      <node id="21">
        <label>thread</label>
      </node>
      <node id="5">
        <label>algorithm</label>
      </node>
      <node id="28">
        <label>stdio.h</label>
      </node>
      <node id="7">
        <label>cstring</label>
      </node>
      <node id="13">
        <label>memory</label>
      </node>
      <node id="22">
        <label>typeindex</label>
      </node>
      <node id="26">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>lib/Analyse/DSSD.hpp</label>
        <link refid="_d_s_s_d_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>lib/Analyse/EventAnalyse.hpp</label>
        <link refid="_event_analyse_8hpp"/>
      </node>
      <node id="1">
        <label>lib/Modules/Timewalk.hpp</label>
        <link refid="_timewalk_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>lib/Analyse/Sorted_Event.hpp</label>
        <link refid="_sorted___event_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classf_parameters" prot="public">fParameters</innerclass>
    <innerclass refid="class_timewalk" prot="public">Timewalk</innerclass>
    <innerclass refid="class_timewalks" prot="public">Timewalks</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_timewalk_8hpp_1ae5188088e56a7674fae0e9648f41ab6e" prot="public" static="no">
        <type><ref refid="classf_parameters" kindref="compound">fParameters</ref>&lt; 4, float &gt;</type>
        <definition>using TWparameters =  fParameters&lt;4, float&gt;</definition>
        <argsstring></argsstring>
        <name>TWparameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Timewalk.hpp" line="88" column="1" bodyfile="lib/Modules/Timewalk.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>TIMEWALK_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TIMEWALK_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../libCo.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="class_timewalk" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_timewalk" kindref="compound">Timewalk</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="9" refid="class_timewalk_1a7c5110fd80b5bdd2aa245f14451b9a41" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_timewalk_1a7c5110fd80b5bdd2aa245f14451b9a41" kindref="member">Timewalk</ref>(){}</highlight></codeline>
<codeline lineno="10" refid="class_timewalk_1ac6d66ef44ed399a2d12c24d083d71b3f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_timewalk_1ac6d66ef44ed399a2d12c24d083d71b3f" kindref="member">Timewalk</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename){<ref refid="class_timewalk_1abe911d2d25eefb7886fe35c41f1d61db" kindref="member">loadFile</ref>(filename);}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timewalk_1abe911d2d25eefb7886fe35c41f1d61db" kindref="member">loadFile</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_timewalk_1aea302190deccd4d6e51c306db01e7341" kindref="member">get</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nrj);</highlight></codeline>
<codeline lineno="13" refid="class_timewalk_1a6f804cbc759f0980dce1aaee6cf5cd5a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timewalk_1a6f804cbc759f0980dce1aaee6cf5cd5a" kindref="member">Print</ref>(){</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i&lt;<ref refid="class_timewalk_1a38ee691b54eb47a48c43146d803a3e74" kindref="member">m_Timewalk</ref>.size();<sp/>i++)<sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i)*<ref refid="class_timewalk_1a048a7979d8424c55ca0d545b3ec589d3" kindref="member">m_keVperBin</ref>,<sp/><ref refid="class_timewalk_1a38ee691b54eb47a48c43146d803a3e74" kindref="member">m_Timewalk</ref>[i]);}</highlight></codeline>
<codeline lineno="14" refid="class_timewalk_1a760b5d3b33b49d022b4ba352f76de157" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timewalk_1a760b5d3b33b49d022b4ba352f76de157" kindref="member">resize</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>size,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>value<sp/>=<sp/>0.)<sp/>{<ref refid="class_timewalk_1a38ee691b54eb47a48c43146d803a3e74" kindref="member">m_Timewalk</ref>.resize(size,<sp/>value);}</highlight></codeline>
<codeline lineno="15" refid="class_timewalk_1a5a9bf52d569022f6260d820a8b070606" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timewalk_1a5a9bf52d569022f6260d820a8b070606" kindref="member">resize</ref>()<sp/>{<ref refid="class_timewalk_1a38ee691b54eb47a48c43146d803a3e74" kindref="member">m_Timewalk</ref>.resize(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_timewalk_1a63ec5a22a054be2b6bd511e27cf46ef5" kindref="member">max</ref>),<sp/>0.);}</highlight></codeline>
<codeline lineno="16" refid="class_timewalk_1a5fcb34cdafa277bc367708edfad4508d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timewalk_1a5fcb34cdafa277bc367708edfad4508d" kindref="member">setMax</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_max)<sp/>{<ref refid="class_timewalk_1a63ec5a22a054be2b6bd511e27cf46ef5" kindref="member">max</ref><sp/>=<sp/>_max;}</highlight></codeline>
<codeline lineno="17" refid="class_timewalk_1abbe59aeb889198a2849c329ebcf15e0a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_timewalk_1abbe59aeb889198a2849c329ebcf15e0a" kindref="member">getMax</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_timewalk_1a63ec5a22a054be2b6bd511e27cf46ef5" kindref="member">max</ref>;}</highlight></codeline>
<codeline lineno="18" refid="class_timewalk_1acf3359a58961b4c14ea29bb542bb1a3c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_timewalk_1acf3359a58961b4c14ea29bb542bb1a3c" kindref="member">operator[] </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_timewalk_1a38ee691b54eb47a48c43146d803a3e74" kindref="member">m_Timewalk</ref>[i];}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21" refid="class_timewalk_1a048a7979d8424c55ca0d545b3ec589d3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_timewalk_1a048a7979d8424c55ca0d545b3ec589d3" kindref="member">m_keVperBin</ref><sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="22" refid="class_timewalk_1a38ee691b54eb47a48c43146d803a3e74" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/><ref refid="class_timewalk_1a38ee691b54eb47a48c43146d803a3e74" kindref="member">m_Timewalk</ref>;</highlight></codeline>
<codeline lineno="23" refid="class_timewalk_1a63ec5a22a054be2b6bd511e27cf46ef5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_timewalk_1a63ec5a22a054be2b6bd511e27cf46ef5" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="24" refid="class_timewalk_1a4757707dc2702478007fd1aed630b5a7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timewalk_1a4757707dc2702478007fd1aed630b5a7" kindref="member">isON</ref>;</highlight></codeline>
<codeline lineno="25" refid="class_timewalk_1a3f011c6087272a223f93ec9298ddc905" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_timewalk_1a3f011c6087272a223f93ec9298ddc905" kindref="member">m_float_zero</ref><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_timewalk_1a63ec5a22a054be2b6bd511e27cf46ef5" kindref="member">Timewalk::max</ref><sp/>=<sp/>10000.f;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_timewalk_1aea302190deccd4d6e51c306db01e7341" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_timewalk_1aea302190deccd4d6e51c306db01e7341" kindref="member">Timewalk::get</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nrj)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_timewalk_1a4757707dc2702478007fd1aed630b5a7" kindref="member">isON</ref>)<sp/>?<sp/>((nrj&gt;<ref refid="class_timewalk_1a63ec5a22a054be2b6bd511e27cf46ef5" kindref="member">Timewalk::max</ref>)<sp/>?<sp/><ref refid="class_timewalk_1a3f011c6087272a223f93ec9298ddc905" kindref="member">m_float_zero</ref><sp/>:<sp/><ref refid="class_timewalk_1a38ee691b54eb47a48c43146d803a3e74" kindref="member">m_Timewalk</ref>[</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(nrj/<ref refid="class_timewalk_1a048a7979d8424c55ca0d545b3ec589d3" kindref="member">m_keVperBin</ref>)])</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_timewalk_1a3f011c6087272a223f93ec9298ddc905" kindref="member">m_float_zero</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="class_timewalk_1abe911d2d25eefb7886fe35c41f1d61db" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timewalk_1abe911d2d25eefb7886fe35c41f1d61db" kindref="member">Timewalk::loadFile</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>Loading<sp/>file<sp/>----<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/>Energies;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/><ref refid="class_timewalk_1a7c5110fd80b5bdd2aa245f14451b9a41" kindref="member">Timewalk</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>std::ifstream<sp/>f<sp/>(filename,<sp/>std::ios::in);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f.good())<sp/>{<ref refid="class_timewalk_1a4757707dc2702478007fd1aed630b5a7" kindref="member">isON</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>std::string<sp/>line;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>getline(f,line);<sp/></highlight><highlight class="comment">//<sp/>To<sp/>get<sp/>rid<sp/>of<sp/>the<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(getline(f,line))</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istringstream<sp/>is(line);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>is<sp/>&gt;&gt;<sp/>Energies<sp/>&gt;&gt;<sp/><ref refid="class_timewalk_1a7c5110fd80b5bdd2aa245f14451b9a41" kindref="member">Timewalk</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Energies.size()&lt;2)<sp/>{<ref refid="class_timewalk_1a4757707dc2702478007fd1aed630b5a7" kindref="member">isON</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="class_timewalk_1a4757707dc2702478007fd1aed630b5a7" kindref="member">isON</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="class_timewalk_1a048a7979d8424c55ca0d545b3ec589d3" kindref="member">m_keVperBin</ref><sp/>=<sp/>Energies[2]-Energies[1];</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>Filling<sp/>arrays<sp/>----<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>:<sp/>extend<sp/>the<sp/>first<sp/>bin<sp/>timewalk<sp/>towards<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bin*<ref refid="class_timewalk_1a048a7979d8424c55ca0d545b3ec589d3" kindref="member">m_keVperBin</ref><sp/>&lt;<sp/>Energies[0])<sp/>{<ref refid="class_timewalk_1a38ee691b54eb47a48c43146d803a3e74" kindref="member">m_Timewalk</ref>.push_back(<ref refid="class_timewalk" kindref="compound">Timewalk</ref>[0]);bin++;}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>:<sp/>fill<sp/>normally<sp/>the<sp/>vector<sp/>until<sp/>max<sp/>is<sp/>reached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bin*<ref refid="class_timewalk_1a048a7979d8424c55ca0d545b3ec589d3" kindref="member">m_keVperBin</ref><sp/>&lt;<sp/><ref refid="class_timewalk_1a63ec5a22a054be2b6bd511e27cf46ef5" kindref="member">max</ref>)<sp/>{<ref refid="class_timewalk_1a38ee691b54eb47a48c43146d803a3e74" kindref="member">m_Timewalk</ref>.push_back(<ref refid="class_timewalk" kindref="compound">Timewalk</ref>[j]);bin++;j++;}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>---<sp/>Check<sp/>for<sp/>aberrous<sp/>values<sp/>---<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i&lt;<ref refid="class_timewalk_1a38ee691b54eb47a48c43146d803a3e74" kindref="member">m_Timewalk</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i)*<ref refid="class_timewalk_1a048a7979d8424c55ca0d545b3ec589d3" kindref="member">m_keVperBin</ref>&gt;5000<sp/>&amp;&amp;<sp/>abs(<ref refid="class_timewalk_1a38ee691b54eb47a48c43146d803a3e74" kindref="member">m_Timewalk</ref>[i]-<ref refid="class_timewalk_1a38ee691b54eb47a48c43146d803a3e74" kindref="member">m_Timewalk</ref>[i-1])<sp/>&gt;<sp/>15)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(<ref refid="files__functions_8hpp_1a58f50a6390692cff52eef37fdaa94e56" kindref="member">rmPathAndExt</ref>(filename),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i)*<ref refid="class_timewalk_1a048a7979d8424c55ca0d545b3ec589d3" kindref="member">m_keVperBin</ref>,<sp/><ref refid="class_timewalk_1a38ee691b54eb47a48c43146d803a3e74" kindref="member">m_Timewalk</ref>[i]);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_timewalk_1a38ee691b54eb47a48c43146d803a3e74" kindref="member">m_Timewalk</ref>[i]<sp/>=<sp/><ref refid="class_timewalk_1a38ee691b54eb47a48c43146d803a3e74" kindref="member">m_Timewalk</ref>[i-1];</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;u</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>nb_param,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="77" refid="classf_parameters" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classf_parameters" kindref="compound">fParameters</ref><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="80" refid="classf_parameters_1a0fec2d7f5d67a607a5a040b8c3c2e5ba" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classf_parameters_1a0fec2d7f5d67a607a5a040b8c3c2e5ba" kindref="member">fParameters</ref>()<sp/>{<ref refid="classf_parameters_1a5ae05c46288020f9d73b6bf0be593227" kindref="member">m_parameters</ref>.resize(nb_param);}</highlight></codeline>
<codeline lineno="81" refid="classf_parameters_1a33d244ebfe2024343a2b1d1c2f7ef2db" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="classf_parameters_1a33d244ebfe2024343a2b1d1c2f7ef2db" kindref="member">operator[] </ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classf_parameters_1a5ae05c46288020f9d73b6bf0be593227" kindref="member">m_parameters</ref>[i];}</highlight></codeline>
<codeline lineno="82" refid="classf_parameters_1a035a376af9f731a1a97fec7b6eb1205e" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/>&amp;<sp/><ref refid="classf_parameters_1a035a376af9f731a1a97fec7b6eb1205e" kindref="member">get</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classf_parameters_1a5ae05c46288020f9d73b6bf0be593227" kindref="member">m_parameters</ref>[i];}</highlight></codeline>
<codeline lineno="83" refid="classf_parameters_1ae8c10c3b0eec5c7e490e6d571e9c5581" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classf_parameters_1a5ae05c46288020f9d73b6bf0be593227" kindref="member">m_parameters</ref>;}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="85" refid="classf_parameters_1a5ae05c46288020f9d73b6bf0be593227" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;T&gt;<sp/><ref refid="classf_parameters_1a5ae05c46288020f9d73b6bf0be593227" kindref="member">m_parameters</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="_timewalk_8hpp_1ae5188088e56a7674fae0e9648f41ab6e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classf_parameters" kindref="compound">TWparameters</ref><sp/>=<sp/><ref refid="classf_parameters" kindref="compound">fParameters&lt;4, float&gt;</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="class_timewalks" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_timewalks" kindref="compound">Timewalks</ref></highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="93" refid="class_timewalks_1aca00a2aca957ce15e80077b0bea43f00" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_timewalks_1aca00a2aca957ce15e80077b0bea43f00" kindref="member">Timewalks</ref>(){};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timewalks_1a4292dfbeb4cff4c470bd04d2206dc28a" kindref="member">loadFile</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename);</highlight></codeline>
<codeline lineno="95" refid="class_timewalks_1a3e7e2cf3e36a942ddab22ebf7f36ee23" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/>&amp;<sp/><ref refid="class_timewalks_1a3e7e2cf3e36a942ddab22ebf7f36ee23" kindref="member">operator[] </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_timewalks_1ab0d7d65cd6bdf7f84fd20613437282b2" kindref="member">m_timewalks</ref>[i];}</highlight></codeline>
<codeline lineno="96" refid="class_timewalks_1a72fdfa46fc95d2bf895082b30ccb6bbf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timewalks_1a72fdfa46fc95d2bf895082b30ccb6bbf" kindref="member">resize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i<sp/>=<sp/>0)<sp/>{<ref refid="class_timewalks_1ab0d7d65cd6bdf7f84fd20613437282b2" kindref="member">m_timewalks</ref>.resize(i);<sp/><ref refid="class_timewalks_1aab3e21528f8046cd94121c4471a0c171" kindref="member">m_parameters</ref>.resize(i);}</highlight></codeline>
<codeline lineno="97" refid="class_timewalks_1a0eb355e8b668dcc6ffe0dd8f11896b0e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_timewalks_1a0eb355e8b668dcc6ffe0dd8f11896b0e" kindref="member">timewalk</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Q,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>factor)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>factor*(t0+a/</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(TMath::Sqrt(Q+b)));}</highlight></codeline>
<codeline lineno="98" refid="class_timewalks_1a830692d798ce165213e2c984c73113b3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_timewalks_1a830692d798ce165213e2c984c73113b3" kindref="member">timewalk</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Q,<sp/><ref refid="classf_parameters" kindref="compound">TWparameters</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>p)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p[3]*(p[2]+p[0]/</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(TMath::Sqrt(Q+p[1])));}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_timewalks_1ab225d0299ef0edc2dc125030f43fcf05" kindref="member">get</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>Q);</highlight></codeline>
<codeline lineno="100" refid="class_timewalks_1af97cc14dd7d0ab5ac1f6e7b21b8badad" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timewalks_1af97cc14dd7d0ab5ac1f6e7b21b8badad" kindref="member">setMax</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_max)<sp/>{<ref refid="class_timewalk_1a5fcb34cdafa277bc367708edfad4508d" kindref="member">Timewalk::setMax</ref>(_max);}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="103" refid="class_timewalks_1ab0d7d65cd6bdf7f84fd20613437282b2" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::vector&lt;float&gt;&gt;<sp/><ref refid="class_timewalks_1ab0d7d65cd6bdf7f84fd20613437282b2" kindref="member">m_timewalks</ref>;</highlight></codeline>
<codeline lineno="104" refid="class_timewalks_1aab3e21528f8046cd94121c4471a0c171" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;TWparameters&gt;<sp/><ref refid="class_timewalks_1aab3e21528f8046cd94121c4471a0c171" kindref="member">m_parameters</ref>;</highlight></codeline>
<codeline lineno="105" refid="class_timewalks_1a6c6a07853a50b8e4bee20d4ca42b6528" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_timewalks_1a6c6a07853a50b8e4bee20d4ca42b6528" kindref="member">Emin</ref><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="106" refid="class_timewalks_1a0f6e8332a9733536a77d7d33c9462de5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_timewalks_1a0f6e8332a9733536a77d7d33c9462de5" kindref="member">Emax</ref><sp/>=<sp/>20000.;</highlight></codeline>
<codeline lineno="107" refid="class_timewalks_1aa585b7e6f829821705530c962f8cb252" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_timewalks_1aa585b7e6f829821705530c962f8cb252" kindref="member">Tmax</ref><sp/>=<sp/>100.;</highlight></codeline>
<codeline lineno="108" refid="class_timewalks_1a99bee54027c71031c1e6757a66bf82fc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_timewalks_1a99bee54027c71031c1e6757a66bf82fc" kindref="member">Tmin</ref><sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="109" refid="class_timewalks_1a35a9676041331c3c1bbad0a95551e092" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_timewalks_1a35a9676041331c3c1bbad0a95551e092" kindref="member">isON</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="class_timewalks_1ab225d0299ef0edc2dc125030f43fcf05" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_timewalks_1ab225d0299ef0edc2dc125030f43fcf05" kindref="member">Timewalks::get</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>label,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>Q)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Q&gt;<ref refid="class_timewalks_1a0f6e8332a9733536a77d7d33c9462de5" kindref="member">Emax</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_timewalks_1a99bee54027c71031c1e6757a66bf82fc" kindref="member">Tmin</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>y<sp/>=<sp/><ref refid="class_timewalks_1ab0d7d65cd6bdf7f84fd20613437282b2" kindref="member">m_timewalks</ref>[label][</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Q)];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(y&gt;<ref refid="class_timewalks_1aa585b7e6f829821705530c962f8cb252" kindref="member">Tmax</ref>)<sp/>?<sp/><ref refid="class_timewalks_1aa585b7e6f829821705530c962f8cb252" kindref="member">Tmax</ref><sp/>:<sp/>y;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="class_timewalks_1a4292dfbeb4cff4c470bd04d2206dc28a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_timewalks_1a4292dfbeb4cff4c470bd04d2206dc28a" kindref="member">Timewalks::loadFile</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>std::ifstream<sp/>f<sp/>(filename,<sp/>std::ios::in);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f.good())<sp/>{<ref refid="class_timewalks_1a35a9676041331c3c1bbad0a95551e092" kindref="member">isON</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>std::string<sp/>line;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>getline(f,line);<sp/>getline(f,line);<sp/></highlight><highlight class="comment">//<sp/>To<sp/>get<sp/>rid<sp/>of<sp/>the<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>extract<sp/>the<sp/>informations<sp/>about<sp/>the<sp/>fit<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>getline(f,line);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istringstream<sp/>is(line);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>temp;<sp/>is<sp/>&gt;&gt;<sp/>temp;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Settings:&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>&gt;&gt;<sp/>temp;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;minE=&quot;</highlight><highlight class="normal">)<sp/>is<sp/>&gt;&gt;<sp/><ref refid="class_timewalks_1a6c6a07853a50b8e4bee20d4ca42b6528" kindref="member">Emin</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>the<sp/>function<sp/>for<sp/>each<sp/>channel<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(getline(f,line)<sp/>&amp;&amp;<sp/>line<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istringstream<sp/>is(line);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>is<sp/>&gt;&gt;<sp/>l;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>l-=800;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>param<sp/>=<sp/>0.;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(is<sp/>&gt;&gt;<sp/>param){<ref refid="class_timewalks_1aab3e21528f8046cd94121c4471a0c171" kindref="member">m_parameters</ref>[l].get(i)<sp/>=<sp/>param;<sp/>i++;}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>0;<sp/>l&lt;<ref refid="class_timewalks_1ab0d7d65cd6bdf7f84fd20613437282b2" kindref="member">m_timewalks</ref>.size();<sp/>l++)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>p<sp/>=<sp/><ref refid="class_timewalks_1aab3e21528f8046cd94121c4471a0c171" kindref="member">m_parameters</ref>[l];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_timewalks_1ab0d7d65cd6bdf7f84fd20613437282b2" kindref="member">m_timewalks</ref>[l].resize(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_timewalks_1a0f6e8332a9733536a77d7d33c9462de5" kindref="member">Emax</ref>));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>e<sp/>=<sp/>0;<sp/>e&lt;<ref refid="class_timewalks_1ab0d7d65cd6bdf7f84fd20613437282b2" kindref="member">m_timewalks</ref>[l].size();<sp/>e++)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ef<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(e);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_timewalks_1ab0d7d65cd6bdf7f84fd20613437282b2" kindref="member">m_timewalks</ref>[l][e]<sp/>=<sp/>(ef&lt;<ref refid="class_timewalks_1a6c6a07853a50b8e4bee20d4ca42b6528" kindref="member">Emin</ref>)<sp/>?<sp/><ref refid="class_timewalks_1a0eb355e8b668dcc6ffe0dd8f11896b0e" kindref="member">timewalk</ref>(<ref refid="class_timewalks_1a6c6a07853a50b8e4bee20d4ca42b6528" kindref="member">Emin</ref>,<sp/>p)<sp/>:<sp/><ref refid="class_timewalks_1a0eb355e8b668dcc6ffe0dd8f11896b0e" kindref="member">timewalk</ref>(ef,<sp/>p);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_timewalks_1ab0d7d65cd6bdf7f84fd20613437282b2" kindref="member">m_timewalks</ref>[l][e]&lt;<ref refid="class_timewalks_1a99bee54027c71031c1e6757a66bf82fc" kindref="member">Tmin</ref>)<sp/><ref refid="class_timewalks_1a99bee54027c71031c1e6757a66bf82fc" kindref="member">Tmin</ref><sp/>=<sp/><ref refid="class_timewalks_1ab0d7d65cd6bdf7f84fd20613437282b2" kindref="member">m_timewalks</ref>[l][e];</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>l<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Timewalk::setMax(20000);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(auto<sp/>const<sp/>&amp;<sp/>p<sp/>:<sp/>m_parameters)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>print(l,p);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>print(&quot;____________________&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>m_timewalks[l].resize(20000);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>if(p.size()==0)<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>for<sp/>(size_t<sp/>i<sp/>=<sp/>0;<sp/>i&lt;20000ul;<sp/>i++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>(i&lt;minE)<sp/>m_timewalks[l][i]<sp/>=<sp/>timewalk(minE,<sp/>p[0],<sp/>p[1],<sp/>p[2],<sp/>p[3]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>else<sp/>m_timewalks[l][i]<sp/>=<sp/>timewalk(i,<sp/>p[0],<sp/>p[1],<sp/>p[2],<sp/>p[3]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>l++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Timewalk<sp/>arrays<sp/>ready&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><ref refid="class_timewalks_1a35a9676041331c3c1bbad0a95551e092" kindref="member">isON</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//TIMEWALK_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="lib/Modules/Timewalk.hpp"/>
  </compounddef>
</doxygen>
