<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_m_t_object" kind="class" language="C++" prot="public">
    <compoundname>MTObject</compoundname>
    <includes refid="_m_t_object_8hpp" local="no">MTObject.hpp</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_m_t_object_1aa76149992bd58e1e5918b418db04a7ca" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool MTObject::activated</definition>
        <argsstring></argsstring>
        <name>activated</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTObject.hpp" line="248" column="15" bodyfile="lib/MTObjects/MTObject.hpp" bodystart="248" bodyend="-1"/>
        <referencedby refid="class_m_t_object_1a35c02650eb403bd54e867f93bb26fc47" compoundref="_m_t_object_8hpp" startline="214" endline="238">parallelise_function</referencedby>
        <referencedby refid="class_m_t_object_1a76b267be14d83c4c257f8451058f8099" compoundref="_m_t_object_8hpp" startline="161" endline="185">signalHandler</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_t_object_1a67041891e1cebcb79af3180e55e702d6" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool MTObject::kill</definition>
        <argsstring></argsstring>
        <name>kill</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTObject.hpp" line="159" column="15" bodyfile="lib/MTObjects/MTObject.hpp" bodystart="159" bodyend="-1"/>
        <referencedby refid="class_m_t_faster_reader_1a7e26b2201486cd489b66ab12b83427e0" compoundref="_m_t_faster_reader_8hpp" startline="194" endline="208">MTFasterReader::Read</referencedby>
        <referencedby refid="class_m_t_object_1a76b267be14d83c4c257f8451058f8099" compoundref="_m_t_object_8hpp" startline="161" endline="185">signalHandler</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_t_object_1a79d86fbc8837ba0f9a4cd1405fddef1c" prot="public" static="yes" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex MTObject::mutex</definition>
        <argsstring></argsstring>
        <name>mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTObject.hpp" line="246" column="21" bodyfile="lib/MTObjects/MTObject.hpp" bodystart="246" bodyend="-1"/>
        <referencedby refid="files__functions_8hpp_1af52310dd2d55713265daa0e58dd7bf21" compoundref="files__functions_8hpp" startline="117" endline="133">create_folder_if_none</referencedby>
        <referencedby refid="class_faster2_histo_1a327a8348f79c5ecf27a58baef32b81d8" compoundref="_faster2_histo_8hpp" startline="216" endline="270">Faster2Histo::fillHisto</referencedby>
        <referencedby refid="class_clovers_1aaeeef6197466b4fb5e445e5742bdf6c7" compoundref="_clovers_8hpp" startline="102" endline="122">Clovers::InitialiseArrays</referencedby>
        <referencedby refid="class_d_s_s_d_1a2c9fd5c55f23797bdcf66933d7662cb1" compoundref="_d_s_s_d_8hpp" startline="56" endline="78">DSSD::InitialiseArrays</referencedby>
        <referencedby refid="class_paris_1aaa7a70ca124d8c0428ee54c7d9d42256" compoundref="_paris_8hpp" startline="45" endline="61">Paris::InitialiseArrays</referencedby>
        <referencedby refid="lib_co_8hpp_1a6cca31a5d1658456b486e6fa135c690b" compoundref="lib_co_8hpp" startline="163" endline="171">pauseCo</referencedby>
        <referencedby refid="class_m_t_variable_1af2f966c9e57eb54bd8fb27595e8c39ac" compoundref="_m_t_variable_8hpp" startline="28" endline="33">MTVariable&lt; T &gt;::resize</referencedby>
        <referencedby refid="class_faster_reader_1aa1fcb8d6721212bc982cac0ae4e597eb" compoundref="_faster_reader_8hpp" startline="117" endline="117">FasterReader::setMaxHits</referencedby>
        <referencedby refid="class_m_t_object_1a76b267be14d83c4c257f8451058f8099" compoundref="_m_t_object_8hpp" startline="161" endline="185">signalHandler</referencedby>
        <referencedby refid="class_cobalt_calorimeter_1a760c56b79865a37984edc07165a7bc73" compoundref="_cobalt_calorimeter_8hpp" startline="332" endline="660">CobaltCalorimeter::work</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_t_object_1a1c2b3cb0cdccca46c8ebba009503ac88" prot="public" static="yes" mutable="no">
        <type><ref refid="lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
        <definition>size_t MTObject::nb_threads</definition>
        <argsstring></argsstring>
        <name>nb_threads</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTObject.hpp" line="245" column="17" bodyfile="lib/MTObjects/MTObject.hpp" bodystart="245" bodyend="-1"/>
        <referencedby refid="class_m_t_object_1ac76ab61815b5c3a471e6c210b7ba1913" compoundref="_m_t_object_8hpp" startline="149" endline="157">adjustThreadsNumber</referencedby>
        <referencedby refid="class_m_t_object_1ac97399bb34f766e41e7f9a1cd1b7eb7a" compoundref="_m_t_object_8hpp" startline="240" endline="240">getThreadsNb</referencedby>
        <referencedby refid="class_m_t_object_1ad156f9b1c68f0e2713abb16890b1fa15" compoundref="_m_t_object_8hpp" startline="241" endline="241">getThreadsNumber</referencedby>
        <referencedby refid="class_m_t_object_1a14b970709f027b42787a5a0471a93dd1" compoundref="_m_t_object_8hpp" startline="187" endline="209">Initialise</referencedby>
        <referencedby refid="class_m_t_object_1a35c02650eb403bd54e867f93bb26fc47" compoundref="_m_t_object_8hpp" startline="214" endline="238">parallelise_function</referencedby>
        <referencedby refid="class_m_t_object_1aef24cd9329ac7f05228cfb26418f8f47" compoundref="_m_t_object_8hpp" startline="135" endline="147">setThreadsNb</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_t_object_1a6fe86ce1ea64ede7e695490bceb264a3" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool MTObject::ON</definition>
        <argsstring></argsstring>
        <name>ON</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTObject.hpp" line="247" column="15" bodyfile="lib/MTObjects/MTObject.hpp" bodystart="247" bodyend="-1"/>
        <referencedby refid="class_m_t_object_1ac76ab61815b5c3a471e6c210b7ba1913" compoundref="_m_t_object_8hpp" startline="149" endline="157">adjustThreadsNumber</referencedby>
        <referencedby refid="class_m_t_t_hist_1a9a97821ee8dae32294f5bf0c240c59ef" compoundref="_m_t_t_hist_8hpp" startline="174" endline="185">MTTHist&lt; THist &gt;::cleanMove</referencedby>
        <referencedby refid="class_m_t_object_1a14b970709f027b42787a5a0471a93dd1" compoundref="_m_t_object_8hpp" startline="187" endline="209">Initialise</referencedby>
        <referencedby refid="class_m_t_t_hist_1a0412e3cb8d1db4278f3b09316d4ec139" compoundref="_m_t_t_hist_8hpp" startline="495" endline="521">MTTHist&lt; THist &gt;::Merge</referencedby>
        <referencedby refid="class_m_t_object_1a35c02650eb403bd54e867f93bb26fc47" compoundref="_m_t_object_8hpp" startline="214" endline="238">parallelise_function</referencedby>
        <referencedby refid="class_m_t_t_hist_1a18ddf8bef1fdb6dfc3a95ffc76e20efb" compoundref="_m_t_t_hist_8hpp" startline="232" endline="237">MTTHist&lt; THist &gt;::reset</referencedby>
        <referencedby refid="class_manip_1ab0813163118017c1064ec02f091356b8" compoundref="_manip_8hpp" startline="73" endline="81">Manip::setMT</referencedby>
        <referencedby refid="class_timeshifts_1a21dc1e7bf232c6b0637b16aa04e43701" compoundref="_timeshifts_8hpp" startline="568" endline="592">Timeshifts::treatFolder</referencedby>
        <referencedby refid="class_m_t_t_hist_1a84c745f09bbccc075589f8531c4454e3" compoundref="_m_t_t_hist_8hpp" startline="554" endline="578">MTTHist&lt; THist &gt;::Write</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_m_t_object_1a36ab81d1d7e7bee29a08bfb8f0e3ac49" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool MTObject::m_Initialised</definition>
        <argsstring></argsstring>
        <name>m_Initialised</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTObject.hpp" line="259" column="15" bodyfile="lib/MTObjects/MTObject.hpp" bodystart="259" bodyend="-1"/>
        <referencedby refid="class_m_t_object_1a14b970709f027b42787a5a0471a93dd1" compoundref="_m_t_object_8hpp" startline="187" endline="209">Initialise</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_t_object_1ac9efab6b9d255529611a250e91779a48" prot="private" static="yes" mutable="no">
        <type>thread_local <ref refid="lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
        <definition>thread_local size_t MTObject::m_thread_index</definition>
        <argsstring></argsstring>
        <name>m_thread_index</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTObject.hpp" line="257" column="30" bodyfile="lib/MTObjects/MTObject.hpp" bodystart="257" bodyend="-1"/>
        <referencedby refid="class_m_t_object_1a9c9a57a49a12e1d408a5354e8520b3fe" compoundref="_m_t_object_8hpp" startline="250" endline="250">getThreadIndex</referencedby>
        <referencedby refid="class_m_t_object_1af752e86ec494c50d1af7e6442c09733b" compoundref="_m_t_object_8hpp" startline="251" endline="251">index</referencedby>
        <referencedby refid="class_m_t_object_1a35c02650eb403bd54e867f93bb26fc47" compoundref="_m_t_object_8hpp" startline="214" endline="238">parallelise_function</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_t_object_1abf0f47fe00f785c060ba2ec35df9819d" prot="private" static="yes" mutable="no">
        <type>std::vector&lt; std::thread &gt;</type>
        <definition>std::vector&lt; std::thread &gt; MTObject::m_threads</definition>
        <argsstring></argsstring>
        <name>m_threads</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTObject.hpp" line="258" column="22" bodyfile="lib/MTObjects/MTObject.hpp" bodystart="258" bodyend="-1"/>
        <referencedby refid="class_m_t_object_1a35c02650eb403bd54e867f93bb26fc47" compoundref="_m_t_object_8hpp" startline="214" endline="238">parallelise_function</referencedby>
        <referencedby refid="class_m_t_object_1a76b267be14d83c4c257f8451058f8099" compoundref="_m_t_object_8hpp" startline="161" endline="185">signalHandler</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_t_object_1a16983b3e7be4853da5f32145342fc6b0" prot="private" static="yes" mutable="no">
        <type>std::thread::id</type>
        <definition>std::thread::id MTObject::master_thread_id</definition>
        <argsstring></argsstring>
        <name>master_thread_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTObject.hpp" line="256" column="26" bodyfile="lib/MTObjects/MTObject.hpp" bodystart="256" bodyend="-1"/>
        <referencedby refid="class_m_t_object_1a14b970709f027b42787a5a0471a93dd1" compoundref="_m_t_object_8hpp" startline="187" endline="209">Initialise</referencedby>
        <referencedby refid="class_m_t_object_1a3350577ca839e2abdcd4d6f6449a1408" compoundref="_m_t_object_8hpp" startline="243" endline="243">isMasterThread</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_m_t_object_1a12856506adc231bafc0983c881c3fe36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MTObject::MTObject</definition>
        <argsstring>()</argsstring>
        <name>MTObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTObject.hpp" line="114" column="3" bodyfile="lib/MTObjects/MTObject.hpp" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_m_t_object_1a813cbf27a03a3b334ebc9faec99a5158" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MTObject::MTObject</definition>
        <argsstring>(size_t &amp;_nb_threads)</argsstring>
        <name>MTObject</name>
        <param>
          <type><ref refid="lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref> &amp;</type>
          <declname>_nb_threads</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTObject.hpp" line="115" column="3" bodyfile="lib/MTObjects/MTObject.hpp" bodystart="115" bodyend="115"/>
        <references refid="class_m_t_object_1a14b970709f027b42787a5a0471a93dd1" compoundref="_m_t_object_8hpp" startline="187" endline="209">Initialise</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_m_t_object_1ac76ab61815b5c3a471e6c210b7ba1913" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void MTObject::adjustThreadsNumber</definition>
        <argsstring>(size_t const &amp;limiting_number, std::string const &amp;print_if_limit_reached=&quot;&quot;)</argsstring>
        <name>adjustThreadsNumber</name>
        <param>
          <type><ref refid="lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref> const &amp;</type>
          <declname>limiting_number</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>print_if_limit_reached</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTObject.hpp" line="149" column="15" bodyfile="lib/MTObjects/MTObject.hpp" bodystart="149" bodyend="157"/>
        <references refid="class_m_t_object_1a1c2b3cb0cdccca46c8ebba009503ac88" compoundref="_m_t_object_8hpp" startline="245">nb_threads</references>
        <references refid="class_m_t_object_1a6fe86ce1ea64ede7e695490bceb264a3" compoundref="_m_t_object_8hpp" startline="247">ON</references>
        <references refid="class_m_t_object_1aaf17bd02ca52dbe0702ee0d9d0f51d58" compoundref="_m_t_object_8hpp" startline="128" endline="128">setThreadsNb</references>
      </memberdef>
      <memberdef kind="function" id="class_m_t_object_1a9c9a57a49a12e1d408a5354e8520b3fe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>static auto const&amp; MTObject::getThreadIndex</definition>
        <argsstring>()</argsstring>
        <name>getThreadIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTObject.hpp" line="250" column="22" bodyfile="lib/MTObjects/MTObject.hpp" bodystart="250" bodyend="250"/>
        <references refid="class_m_t_object_1ac9efab6b9d255529611a250e91779a48" compoundref="_m_t_object_8hpp" startline="257">m_thread_index</references>
        <referencedby refid="class_m_t_t_hist_1a3413cee45758fa0ec41020ae067e3e71" compoundref="_m_t_t_hist_8hpp" startline="442" endline="453">MTTHist&lt; THist &gt;::Fill</referencedby>
        <referencedby refid="class_m_t_t_hist_1a02c41970872fdf5dba693eaa7ef368b6" compoundref="_m_t_t_hist_8hpp" startline="308" endline="308">MTTHist&lt; THist &gt;::Get</referencedby>
        <referencedby refid="class_m_t_t_hist_1a90048d486361aa8a3bb18d17f02df241" compoundref="_m_t_t_hist_8hpp" startline="435" endline="438">MTTHist&lt; THist &gt;::GetBinContent</referencedby>
        <referencedby refid="class_m_t_faster_reader_1a7e26b2201486cd489b66ab12b83427e0" compoundref="_m_t_faster_reader_8hpp" startline="194" endline="208">MTFasterReader::Read</referencedby>
        <referencedby refid="class_m_t_t_hist_1a6524d02003fa4d77ae22b33e14b977d9" compoundref="_m_t_t_hist_8hpp" startline="370" endline="422">MTTHist&lt; THist &gt;::reset</referencedby>
        <referencedby refid="class_m_t_t_hist_1aa354c892da959ee2c25f894adf98064c" compoundref="_m_t_t_hist_8hpp" startline="426" endline="431">MTTHist&lt; THist &gt;::SetBinContent</referencedby>
        <referencedby refid="class_timeshifts_1abef7234fe827ae3c7758788cf22b6921" compoundref="_timeshifts_8hpp" startline="732" endline="771">Timeshifts::treatFasterFile</referencedby>
        <referencedby refid="class_cobalt_calorimeter_1a760c56b79865a37984edc07165a7bc73" compoundref="_cobalt_calorimeter_8hpp" startline="332" endline="660">CobaltCalorimeter::work</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_t_object_1ac97399bb34f766e41e7f9a1cd1b7eb7a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>static auto const&amp; MTObject::getThreadsNb</definition>
        <argsstring>()</argsstring>
        <name>getThreadsNb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTObject.hpp" line="240" column="22" bodyfile="lib/MTObjects/MTObject.hpp" bodystart="240" bodyend="240"/>
        <references refid="class_m_t_object_1a1c2b3cb0cdccca46c8ebba009503ac88" compoundref="_m_t_object_8hpp" startline="245">nb_threads</references>
        <referencedby refid="class_m_t_variable_1afeaf590e18d11bba1ca0e82be8d1cb26" compoundref="_m_t_variable_8hpp" startline="13" endline="26">MTVariable&lt; T &gt;::MTVariable</referencedby>
        <referencedby refid="class_m_t_t_hist_1a6524d02003fa4d77ae22b33e14b977d9" compoundref="_m_t_t_hist_8hpp" startline="370" endline="422">MTTHist&lt; THist &gt;::reset</referencedby>
        <referencedby refid="class_timeshifts_1a21dc1e7bf232c6b0637b16aa04e43701" compoundref="_timeshifts_8hpp" startline="568" endline="592">Timeshifts::treatFolder</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_t_object_1ad156f9b1c68f0e2713abb16890b1fa15" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>static auto const&amp; MTObject::getThreadsNumber</definition>
        <argsstring>()</argsstring>
        <name>getThreadsNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTObject.hpp" line="241" column="22" bodyfile="lib/MTObjects/MTObject.hpp" bodystart="241" bodyend="241"/>
        <references refid="class_m_t_object_1a1c2b3cb0cdccca46c8ebba009503ac88" compoundref="_m_t_object_8hpp" startline="245">nb_threads</references>
        <referencedby refid="class_timeshifts_1a95e126cc70243c24a016af24652ecb0b" compoundref="_timeshifts_8hpp" startline="533" endline="566">Timeshifts::Initialise</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_t_object_1af752e86ec494c50d1af7e6442c09733b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>static auto const&amp; MTObject::index</definition>
        <argsstring>()</argsstring>
        <name>index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTObject.hpp" line="251" column="22" bodyfile="lib/MTObjects/MTObject.hpp" bodystart="251" bodyend="251"/>
        <references refid="class_m_t_object_1ac9efab6b9d255529611a250e91779a48" compoundref="_m_t_object_8hpp" startline="257">m_thread_index</references>
      </memberdef>
      <memberdef kind="function" id="class_m_t_object_1a14b970709f027b42787a5a0471a93dd1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void MTObject::Initialise</definition>
        <argsstring>()</argsstring>
        <name>Initialise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTObject.hpp" line="187" column="15" bodyfile="lib/MTObjects/MTObject.hpp" bodystart="187" bodyend="209"/>
        <references refid="class_m_t_object_1a36ab81d1d7e7bee29a08bfb8f0e3ac49" compoundref="_m_t_object_8hpp" startline="259">m_Initialised</references>
        <references refid="class_m_t_object_1a16983b3e7be4853da5f32145342fc6b0" compoundref="_m_t_object_8hpp" startline="256">master_thread_id</references>
        <references refid="class_m_t_object_1a1c2b3cb0cdccca46c8ebba009503ac88" compoundref="_m_t_object_8hpp" startline="245">nb_threads</references>
        <references refid="class_m_t_object_1a6fe86ce1ea64ede7e695490bceb264a3" compoundref="_m_t_object_8hpp" startline="247">ON</references>
        <references refid="class_m_t_object_1a76b267be14d83c4c257f8451058f8099" compoundref="_m_t_object_8hpp" startline="161" endline="185">signalHandler</references>
        <referencedby refid="class_clover_spectra_1a8b3eedd382c6e2d0de9d4863efdccaea" compoundref="_clover_spectra_8hpp" startline="147" endline="159">CloverSpectra::Initialise</referencedby>
        <referencedby refid="class_cobalt_calorimeter_1ac6d58077dbdb6d0b166097146dc17083" compoundref="_cobalt_calorimeter_8hpp" startline="168" endline="279">CobaltCalorimeter::Initialise</referencedby>
        <referencedby refid="class_m_t_object_1a47f15f1545383d3476ae6614984d3e07" compoundref="_m_t_object_8hpp" startline="117" endline="121">Initialise</referencedby>
        <referencedby refid="class_faster2_root_1ad30ccf937150bbd3504ec3a354b76c8f" compoundref="_faster2_root_8hpp" startline="211" endline="265">Faster2Root::load</referencedby>
        <referencedby refid="class_m_t_object_1a813cbf27a03a3b334ebc9faec99a5158" compoundref="_m_t_object_8hpp" startline="115" endline="115">MTObject</referencedby>
        <referencedby refid="class_faster2_histo_1a20fd8b47b9a9aecef8682ad5442db16d" compoundref="_faster2_histo_8hpp" startline="189" endline="199">Faster2Histo::multirun</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_t_object_1a47f15f1545383d3476ae6614984d3e07" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void MTObject::Initialise</definition>
        <argsstring>(size_t const &amp;_nb_threads, bool force=false)</argsstring>
        <name>Initialise</name>
        <param>
          <type><ref refid="lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref> const &amp;</type>
          <declname>_nb_threads</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>force</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTObject.hpp" line="117" column="15" bodyfile="lib/MTObjects/MTObject.hpp" bodystart="117" bodyend="121"/>
        <references refid="class_m_t_object_1a14b970709f027b42787a5a0471a93dd1" compoundref="_m_t_object_8hpp" startline="187" endline="209">Initialise</references>
        <references refid="class_m_t_object_1aaf17bd02ca52dbe0702ee0d9d0f51d58" compoundref="_m_t_object_8hpp" startline="128" endline="128">setThreadsNb</references>
      </memberdef>
      <memberdef kind="function" id="class_m_t_object_1a3350577ca839e2abdcd4d6f6449a1408" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool MTObject::isMasterThread</definition>
        <argsstring>()</argsstring>
        <name>isMasterThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTObject.hpp" line="243" column="15" bodyfile="lib/MTObjects/MTObject.hpp" bodystart="243" bodyend="243"/>
        <references refid="class_m_t_object_1a16983b3e7be4853da5f32145342fc6b0" compoundref="_m_t_object_8hpp" startline="256">master_thread_id</references>
        <referencedby refid="class_m_t_t_hist_1a6524d02003fa4d77ae22b33e14b977d9" compoundref="_m_t_t_hist_8hpp" startline="370" endline="422">MTTHist&lt; THist &gt;::reset</referencedby>
        <referencedby refid="class_m_t_t_hist_1a84c745f09bbccc075589f8531c4454e3" compoundref="_m_t_t_hist_8hpp" startline="554" endline="578">MTTHist&lt; THist &gt;::Write</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_t_object_1a35c02650eb403bd54e867f93bb26fc47" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Func</type>
          </param>
          <param>
            <type>class...</type>
            <declname>ARGS</declname>
            <defname>ARGS</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void MTObject::parallelise_function</definition>
        <argsstring>(Func &amp;&amp;func, ARGS &amp;&amp;... args)</argsstring>
        <name>parallelise_function</name>
        <param>
          <type>Func &amp;&amp;</type>
          <declname>func</declname>
        </param>
        <param>
          <type>ARGS &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000021"><xreftitle>Todo</xreftitle><xrefdescription><para>check if I can replace Func by std::function </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTObject.hpp" line="214" column="15" bodyfile="lib/MTObjects/MTObject.hpp" bodystart="214" bodyend="238"/>
        <references refid="class_m_t_object_1aa76149992bd58e1e5918b418db04a7ca" compoundref="_m_t_object_8hpp" startline="248">activated</references>
        <references refid="class_m_t_object_1ac9efab6b9d255529611a250e91779a48" compoundref="_m_t_object_8hpp" startline="257">m_thread_index</references>
        <references refid="class_m_t_object_1abf0f47fe00f785c060ba2ec35df9819d" compoundref="_m_t_object_8hpp" startline="258">m_threads</references>
        <references refid="class_m_t_object_1a1c2b3cb0cdccca46c8ebba009503ac88" compoundref="_m_t_object_8hpp" startline="245">nb_threads</references>
        <references refid="class_m_t_object_1a6fe86ce1ea64ede7e695490bceb264a3" compoundref="_m_t_object_8hpp" startline="247">ON</references>
        <referencedby refid="class_calibrator_1af067fee0c3a37336851ea63f2561b59f" compoundref="_calibrator_8hpp" startline="328" endline="337">Calibrator::loadRootData</referencedby>
        <referencedby refid="class_m_t_root_reader_1a81c87315eaaf2147d6f30639194fd4e8" compoundref="_m_t_root_reader_8hpp" startline="34" endline="39">MTRootReader::read</referencedby>
        <referencedby refid="class_m_t_faster_reader_1af1ec563da5602cc23d7b0cd98b63bee0" compoundref="_m_t_faster_reader_8hpp" startline="225" endline="231">MTFasterReader::readAligned</referencedby>
        <referencedby refid="class_m_t_faster_reader_1ae316d31ebcb18ae8689522509d1ba513" compoundref="_m_t_faster_reader_8hpp" startline="186" endline="191">MTFasterReader::readRaw</referencedby>
        <referencedby refid="class_timeshifts_1a21dc1e7bf232c6b0637b16aa04e43701" compoundref="_timeshifts_8hpp" startline="568" endline="592">Timeshifts::treatFolder</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_t_object_1aaf17bd02ca52dbe0702ee0d9d0f51d58" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void MTObject::setThreadsNb</definition>
        <argsstring>(int const &amp;n, bool force=false) noexcept</argsstring>
        <name>setThreadsNb</name>
        <param>
          <type>int const &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>force</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Sets the number of threads. </para>
        </briefdescription>
        <detaileddescription>
<para>Check the number of threads. Usually, over 75% of cores is the optimal. Set force parameter to true if you want to use all the cores </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTObject.hpp" line="128" column="15" bodyfile="lib/MTObjects/MTObject.hpp" bodystart="128" bodyend="128"/>
        <references refid="class_m_t_object_1aaf17bd02ca52dbe0702ee0d9d0f51d58" compoundref="_m_t_object_8hpp" startline="128" endline="128">setThreadsNb</references>
        <referencedby refid="class_m_t_object_1ac76ab61815b5c3a471e6c210b7ba1913" compoundref="_m_t_object_8hpp" startline="149" endline="157">adjustThreadsNumber</referencedby>
        <referencedby refid="class_m_t_object_1a47f15f1545383d3476ae6614984d3e07" compoundref="_m_t_object_8hpp" startline="117" endline="121">Initialise</referencedby>
        <referencedby refid="class_faster2_histo_1a18454db0c46d7acbcf87315fc123462d" compoundref="_faster2_histo_8hpp" startline="78" endline="78">Faster2Histo::setNbThreads</referencedby>
        <referencedby refid="class_m_t_object_1aaf17bd02ca52dbe0702ee0d9d0f51d58" compoundref="_m_t_object_8hpp" startline="128" endline="128">setThreadsNb</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_t_object_1aef24cd9329ac7f05228cfb26418f8f47" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void MTObject::setThreadsNb</definition>
        <argsstring>(size_t const &amp;n, bool force=false) noexcept</argsstring>
        <name>setThreadsNb</name>
        <param>
          <type><ref refid="lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref> const &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>force</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Sets the number of threads. </para>
        </briefdescription>
        <detaileddescription>
<para>Check the number of threads. Usually, over 75% of cores is the optimal. Set force parameter to true if you want to use all the cores </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTObject.hpp" line="135" column="15" bodyfile="lib/MTObjects/MTObject.hpp" bodystart="135" bodyend="147"/>
        <references refid="class_m_t_object_1a1c2b3cb0cdccca46c8ebba009503ac88" compoundref="_m_t_object_8hpp" startline="245">nb_threads</references>
      </memberdef>
      <memberdef kind="function" id="class_m_t_object_1a76b267be14d83c4c257f8451058f8099" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void MTObject::signalHandler</definition>
        <argsstring>(int signal)</argsstring>
        <name>signalHandler</name>
        <param>
          <type>int</type>
          <declname>signal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTObject.hpp" line="161" column="15" bodyfile="lib/MTObjects/MTObject.hpp" bodystart="161" bodyend="185"/>
        <references refid="class_m_t_object_1aa76149992bd58e1e5918b418db04a7ca" compoundref="_m_t_object_8hpp" startline="248">activated</references>
        <references refid="class_m_t_object_1a67041891e1cebcb79af3180e55e702d6" compoundref="_m_t_object_8hpp" startline="159">kill</references>
        <references refid="class_m_t_object_1abf0f47fe00f785c060ba2ec35df9819d" compoundref="_m_t_object_8hpp" startline="258">m_threads</references>
        <references refid="class_m_t_object_1a79d86fbc8837ba0f9a4cd1405fddef1c" compoundref="_m_t_object_8hpp" startline="246">mutex</references>
        <referencedby refid="class_m_t_object_1a14b970709f027b42787a5a0471a93dd1" compoundref="_m_t_object_8hpp" startline="187" endline="209">Initialise</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class handeling an easy multi threading. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="attention"><para>Include this class before any other in order to activate multithreading additions</para>
</simplesect>
POSIX-based multithreading. If you want to use the power of multithreading, this class can be convenient. Please include this class before any other in order to activate multithreading additions in the rest of the library.</para>
<para>First thing to do is to setup the number of threads then to Initialise them : <verbatim>   MTObject::setThreadsNb(nb_threads);
   MTObject::Initialise();
</verbatim> Or more consisley : <verbatim>   MTObject::Initialise(nb_threads);
</verbatim> Then you can multithread any function or static method : <verbatim>   MTObject::parallelise_function(function, param1, param2, ....);
</verbatim> If you want to multithread a non-static method (regular methods in an object), you need to pass through a static function first.</para>
<para>Example 1 : simplest example : parallelise a lambda. <verbatim>   main()
   {
     MTObject::Initialise(2); // Using two concurrent threads
     int a = 0;
     int b = 0;
     // Here, the [&amp;] allows the lambda to have access at everything that has been declared above. 
     // Therefore, in this case the lambda don&apos;t need any argument and the &apos;()&apos; is empty
     MTObject::parallelise_function([&amp;](){
       if (random_uniform(0, 1)&gt;0.5) ++a; // the random_uniform() is thread safe if &apos;#include&lt;MTObject&gt;&apos; is included first
       else                          ++b;
     });
     print(a, b);
</verbatim> Example 2 : parallelise a lambda and fill a histogram using <ref refid="class_m_t_t_hist" kindref="compound">MTTHist</ref> <verbatim>   main()
   {
     MTObject::Initialise(2); // Using two concurrent threads
     MTTHist&lt;TH1F&gt; test(&quot;test&quot;, &quot;test&quot;, 1000,0,1000); // MTTHist holds a vector of TH1F to be filled using its own Fill method

     MTObject::parallelise_function([&amp;]()
     { // Here starts the parallelised portion of code
       print(&quot;thread id :&quot;, MTObject::getThreadIndex()); // You can access the current thread index (0 or 1 in this case)
       // This method automatically fills the copy of the histogram that corresponds to its thread index :
       for(int i = 0; i&lt;10000000; i++) test.Fill(random_gaussian(500, 100)); 
     });
     // Now, you may want to perform some operations on the MTTHist. 
     // But before, you need to merge the copies into one single spectra using MTTHist::Merge
     test.Merge();
     // Now, you can access the fused histogram using &apos;-&gt;&apos; operator.
     // It calls the TH1F itself, so you have access at all the 
     print(test-&gt;GetMean());
     auto outfile(TFile::Open(&quot;test.root&quot;, &quot;RECREATE&quot;));
     outfile-&gt;cd();
     // Note : you can use the MTTHist::Write method without already merged it
     test.Write();
     outfile-&gt;Write();
     outfile-&gt;Close();
     return 0;
   }
</verbatim> Example 3 : paralellise a non-static method of a class : <verbatim>   class MyClass
   {
   public:
     MyClass() {}
     void function_to_multithread(argument_1, argument_2, ...){....}

     static void helper_function(MyClass &amp; myclass, argument_1, argument_2, ...) {return myclass.function_to_multithread(argument_1, argument_2, ...);}
   };

   int main()
   {
    ...
     MTObject::parallelise_function(myclass.helper_function, argument_1, argument_2, ....);
    ...
   }
</verbatim> <xrefsect id="todo_1_todo000020"><xreftitle>Todo</xreftitle><xrefdescription><para>Trying to make this work : template&lt;class... ARGS&gt; static ret_type helper_function(MyClass &amp; myclass, ARGS... args) {return myclass.function_to_multithread(std::forward&lt;ARGS&gt;(args)...);} </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <location file="lib/MTObjects/MTObject.hpp" line="111" column="1" bodyfile="lib/MTObjects/MTObject.hpp" bodystart="112" bodyend="261"/>
    <listofallmembers>
      <member refid="class_m_t_object_1aa76149992bd58e1e5918b418db04a7ca" prot="public" virt="non-virtual"><scope>MTObject</scope><name>activated</name></member>
      <member refid="class_m_t_object_1ac76ab61815b5c3a471e6c210b7ba1913" prot="public" virt="non-virtual"><scope>MTObject</scope><name>adjustThreadsNumber</name></member>
      <member refid="class_m_t_object_1a9c9a57a49a12e1d408a5354e8520b3fe" prot="public" virt="non-virtual"><scope>MTObject</scope><name>getThreadIndex</name></member>
      <member refid="class_m_t_object_1ac97399bb34f766e41e7f9a1cd1b7eb7a" prot="public" virt="non-virtual"><scope>MTObject</scope><name>getThreadsNb</name></member>
      <member refid="class_m_t_object_1ad156f9b1c68f0e2713abb16890b1fa15" prot="public" virt="non-virtual"><scope>MTObject</scope><name>getThreadsNumber</name></member>
      <member refid="class_m_t_object_1af752e86ec494c50d1af7e6442c09733b" prot="public" virt="non-virtual"><scope>MTObject</scope><name>index</name></member>
      <member refid="class_m_t_object_1a47f15f1545383d3476ae6614984d3e07" prot="public" virt="non-virtual"><scope>MTObject</scope><name>Initialise</name></member>
      <member refid="class_m_t_object_1a14b970709f027b42787a5a0471a93dd1" prot="public" virt="non-virtual"><scope>MTObject</scope><name>Initialise</name></member>
      <member refid="class_m_t_object_1a3350577ca839e2abdcd4d6f6449a1408" prot="public" virt="non-virtual"><scope>MTObject</scope><name>isMasterThread</name></member>
      <member refid="class_m_t_object_1a67041891e1cebcb79af3180e55e702d6" prot="public" virt="non-virtual"><scope>MTObject</scope><name>kill</name></member>
      <member refid="class_m_t_object_1a36ab81d1d7e7bee29a08bfb8f0e3ac49" prot="private" virt="non-virtual"><scope>MTObject</scope><name>m_Initialised</name></member>
      <member refid="class_m_t_object_1ac9efab6b9d255529611a250e91779a48" prot="private" virt="non-virtual"><scope>MTObject</scope><name>m_thread_index</name></member>
      <member refid="class_m_t_object_1abf0f47fe00f785c060ba2ec35df9819d" prot="private" virt="non-virtual"><scope>MTObject</scope><name>m_threads</name></member>
      <member refid="class_m_t_object_1a16983b3e7be4853da5f32145342fc6b0" prot="private" virt="non-virtual"><scope>MTObject</scope><name>master_thread_id</name></member>
      <member refid="class_m_t_object_1a12856506adc231bafc0983c881c3fe36" prot="public" virt="non-virtual"><scope>MTObject</scope><name>MTObject</name></member>
      <member refid="class_m_t_object_1a813cbf27a03a3b334ebc9faec99a5158" prot="public" virt="non-virtual"><scope>MTObject</scope><name>MTObject</name></member>
      <member refid="class_m_t_object_1a79d86fbc8837ba0f9a4cd1405fddef1c" prot="public" virt="non-virtual"><scope>MTObject</scope><name>mutex</name></member>
      <member refid="class_m_t_object_1a1c2b3cb0cdccca46c8ebba009503ac88" prot="public" virt="non-virtual"><scope>MTObject</scope><name>nb_threads</name></member>
      <member refid="class_m_t_object_1a6fe86ce1ea64ede7e695490bceb264a3" prot="public" virt="non-virtual"><scope>MTObject</scope><name>ON</name></member>
      <member refid="class_m_t_object_1a35c02650eb403bd54e867f93bb26fc47" prot="public" virt="non-virtual"><scope>MTObject</scope><name>parallelise_function</name></member>
      <member refid="class_m_t_object_1aaf17bd02ca52dbe0702ee0d9d0f51d58" prot="public" virt="non-virtual"><scope>MTObject</scope><name>setThreadsNb</name></member>
      <member refid="class_m_t_object_1aef24cd9329ac7f05228cfb26418f8f47" prot="public" virt="non-virtual"><scope>MTObject</scope><name>setThreadsNb</name></member>
      <member refid="class_m_t_object_1a76b267be14d83c4c257f8451058f8099" prot="public" virt="non-virtual"><scope>MTObject</scope><name>signalHandler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
