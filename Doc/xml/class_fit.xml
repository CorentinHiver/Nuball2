<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_fit" kind="class" language="C++" prot="public">
    <compoundname>Fit</compoundname>
    <includes refid="_calibration_8hpp" local="no">Calibration.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_fit_1ac128f10e2e52aa39445e4363168d5f73" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Fit::chi2</definition>
        <argsstring></argsstring>
        <name>chi2</name>
        <initializer>= -1.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="105" column="10" bodyfile="lib/Modules/Calibration.hpp" bodystart="105" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_calibration_8hpp" startline="33" endline="62">clear</referencedby>
        <referencedby refid="class_calibration_1aea14328cc8a0ab1cf559cd07f8c6a065" compoundref="_calibration_8hpp" startline="852" endline="910">Calibration::fitCalibration</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1ac752a6bea753f20d4a8ed0a887447d7c" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Fit::cmeasures</definition>
        <argsstring></argsstring>
        <name>cmeasures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="93" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="93" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_calibration_8hpp" startline="33" endline="62">clear</referencedby>
        <referencedby refid="class_calibration_1aea14328cc8a0ab1cf559cd07f8c6a065" compoundref="_calibration_8hpp" startline="852" endline="910">Calibration::fitCalibration</referencedby>
        <referencedby refid="class_fit_1a9b69dacd5f0264c1760f38d9dd19f5dd" compoundref="_calibration_8hpp" startline="25" endline="31">resize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1afffcdcd0341476a634e763b8bb2158ce" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Fit::ex</definition>
        <argsstring></argsstring>
        <name>ex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="100" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="100" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_calibration_8hpp" startline="33" endline="62">clear</referencedby>
        <referencedby refid="class_calibration_1aea14328cc8a0ab1cf559cd07f8c6a065" compoundref="_calibration_8hpp" startline="852" endline="910">Calibration::fitCalibration</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a6777a3d0b233e491b99c6b22ba1b7290" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Fit::ey</definition>
        <argsstring></argsstring>
        <name>ey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="101" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="101" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_calibration_8hpp" startline="33" endline="62">clear</referencedby>
        <referencedby refid="class_calibration_1aea14328cc8a0ab1cf559cd07f8c6a065" compoundref="_calibration_8hpp" startline="852" endline="910">Calibration::fitCalibration</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a73dca59c79cb77deda29c834c50e00b6" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Fit::integral</definition>
        <argsstring></argsstring>
        <name>integral</name>
        <initializer>= -1.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="104" column="10" bodyfile="lib/Modules/Calibration.hpp" bodystart="104" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_calibration_8hpp" startline="33" endline="62">clear</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a8f850d65b0e25b4f54f321308370b938" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Fit::keVperADC</definition>
        <argsstring></argsstring>
        <name>keVperADC</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="111" column="10" bodyfile="lib/Modules/Calibration.hpp" bodystart="111" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_calibration_8hpp" startline="33" endline="62">clear</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a75cecf55da1498d8bdd870108123245e" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Fit::mean</definition>
        <argsstring></argsstring>
        <name>mean</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="95" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="95" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_calibration_8hpp" startline="33" endline="62">clear</referencedby>
        <referencedby refid="class_fit_1a9b69dacd5f0264c1760f38d9dd19f5dd" compoundref="_calibration_8hpp" startline="25" endline="31">resize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a964131fabef1652357c6f1dd08f9f2de" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Fit::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="114" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="114" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_calibration_8hpp" startline="33" endline="62">clear</referencedby>
        <referencedby refid="class_calibration_1aea14328cc8a0ab1cf559cd07f8c6a065" compoundref="_calibration_8hpp" startline="852" endline="910">Calibration::fitCalibration</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a09a8cb0e9a300f8aeef67fcd267cb8f2" prot="public" static="no" mutable="no">
        <type><ref refid="lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21" kindref="member">uchar</ref></type>
        <definition>uchar Fit::order</definition>
        <argsstring></argsstring>
        <name>order</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="112" column="9" bodyfile="lib/Modules/Calibration.hpp" bodystart="112" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_calibration_8hpp" startline="33" endline="62">clear</referencedby>
        <referencedby refid="class_calibration_1aea14328cc8a0ab1cf559cd07f8c6a065" compoundref="_calibration_8hpp" startline="852" endline="910">Calibration::fitCalibration</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a6dd1941f173b91a904be34afca6cd5d0" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Fit::parameter0</definition>
        <argsstring></argsstring>
        <name>parameter0</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="106" column="10" bodyfile="lib/Modules/Calibration.hpp" bodystart="106" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_calibration_8hpp" startline="33" endline="62">clear</referencedby>
        <referencedby refid="class_calibration_1aea14328cc8a0ab1cf559cd07f8c6a065" compoundref="_calibration_8hpp" startline="852" endline="910">Calibration::fitCalibration</referencedby>
        <referencedby refid="_calibration_8hpp_1a4f68d2fe488cf1a3044c1573a16bc394" compoundref="_calibration_8hpp" startline="123" endline="142">operator&lt;&lt;</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1abe17456d5a2ccb50497d776f4f63f98b" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Fit::parameter1</definition>
        <argsstring></argsstring>
        <name>parameter1</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="107" column="10" bodyfile="lib/Modules/Calibration.hpp" bodystart="107" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_calibration_8hpp" startline="33" endline="62">clear</referencedby>
        <referencedby refid="class_calibration_1aea14328cc8a0ab1cf559cd07f8c6a065" compoundref="_calibration_8hpp" startline="852" endline="910">Calibration::fitCalibration</referencedby>
        <referencedby refid="_calibration_8hpp_1a4f68d2fe488cf1a3044c1573a16bc394" compoundref="_calibration_8hpp" startline="123" endline="142">operator&lt;&lt;</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a394d86d19fb25ad5facea296ed71bb1e" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Fit::parameter2</definition>
        <argsstring></argsstring>
        <name>parameter2</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="108" column="10" bodyfile="lib/Modules/Calibration.hpp" bodystart="108" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_calibration_8hpp" startline="33" endline="62">clear</referencedby>
        <referencedby refid="class_calibration_1aea14328cc8a0ab1cf559cd07f8c6a065" compoundref="_calibration_8hpp" startline="852" endline="910">Calibration::fitCalibration</referencedby>
        <referencedby refid="_calibration_8hpp_1a4f68d2fe488cf1a3044c1573a16bc394" compoundref="_calibration_8hpp" startline="123" endline="142">operator&lt;&lt;</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a4367b73a3883f085dea1ed2e67a97ac9" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Fit::parameter3</definition>
        <argsstring></argsstring>
        <name>parameter3</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="109" column="10" bodyfile="lib/Modules/Calibration.hpp" bodystart="109" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_calibration_8hpp" startline="33" endline="62">clear</referencedby>
        <referencedby refid="_calibration_8hpp_1a4f68d2fe488cf1a3044c1573a16bc394" compoundref="_calibration_8hpp" startline="123" endline="142">operator&lt;&lt;</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a8f443c41d92e502b2fe55453560457e2" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Fit::peaks</definition>
        <argsstring></argsstring>
        <name>peaks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="92" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="92" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_calibration_8hpp" startline="33" endline="62">clear</referencedby>
        <referencedby refid="class_calibration_1aea14328cc8a0ab1cf559cd07f8c6a065" compoundref="_calibration_8hpp" startline="852" endline="910">Calibration::fitCalibration</referencedby>
        <referencedby refid="class_fit_1a9b69dacd5f0264c1760f38d9dd19f5dd" compoundref="_calibration_8hpp" startline="25" endline="31">resize</referencedby>
        <referencedby refid="class_fit_1a9c248d8b560bede53a0c550418bf2604" compoundref="_calibration_8hpp" startline="67" endline="67">size</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a522102240db21bfd9dd69f15ea3b3656" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Fit::scalefactor</definition>
        <argsstring></argsstring>
        <name>scalefactor</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="110" column="10" bodyfile="lib/Modules/Calibration.hpp" bodystart="110" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_calibration_8hpp" startline="33" endline="62">clear</referencedby>
        <referencedby refid="class_calibration_1aea14328cc8a0ab1cf559cd07f8c6a065" compoundref="_calibration_8hpp" startline="852" endline="910">Calibration::fitCalibration</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a32663082748ab547b85b14a6f198f086" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Fit::sigma</definition>
        <argsstring></argsstring>
        <name>sigma</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="96" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="96" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_calibration_8hpp" startline="33" endline="62">clear</referencedby>
        <referencedby refid="class_fit_1a9b69dacd5f0264c1760f38d9dd19f5dd" compoundref="_calibration_8hpp" startline="25" endline="31">resize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a5a9406e4e285484650609f696d96ffa2" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Fit::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="98" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="98" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_calibration_8hpp" startline="33" endline="62">clear</referencedby>
        <referencedby refid="class_calibration_1aea14328cc8a0ab1cf559cd07f8c6a065" compoundref="_calibration_8hpp" startline="852" endline="910">Calibration::fitCalibration</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a36eda8829f68c74fdf657a065481a3f8" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Fit::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="99" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="99" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_calibration_8hpp" startline="33" endline="62">clear</referencedby>
        <referencedby refid="class_calibration_1aea14328cc8a0ab1cf559cd07f8c6a065" compoundref="_calibration_8hpp" startline="852" endline="910">Calibration::fitCalibration</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_fit_1af46c866fd64724443acf723c14270584" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Fit::m_enough_counts</definition>
        <argsstring></argsstring>
        <name>m_enough_counts</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="119" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="119" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_calibration_8hpp" startline="33" endline="62">clear</referencedby>
        <referencedby refid="class_fit_1a0c3b74202459b21a89949d1764c821ac" compoundref="_calibration_8hpp" startline="73" endline="73">enough_counts</referencedby>
        <referencedby refid="class_fit_1ad12c75a87a239da0768c9c6b869da431" compoundref="_calibration_8hpp" startline="86" endline="86">too_few_counts</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a9d7412f72df96bb282ed09d2657e949a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Fit::m_exist</definition>
        <argsstring></argsstring>
        <name>m_exist</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="118" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="118" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_calibration_8hpp" startline="33" endline="62">clear</referencedby>
        <referencedby refid="class_fit_1aa524861d860cc6384c92425166453e93" compoundref="_calibration_8hpp" startline="70" endline="70">exists</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a6d22c746466b2251a9f9d9e1f5f54ba8" prot="private" static="no" mutable="no">
        <type><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref></type>
        <definition>Label Fit::m_label</definition>
        <argsstring></argsstring>
        <name>m_label</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="117" column="9" bodyfile="lib/Modules/Calibration.hpp" bodystart="117" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_calibration_8hpp" startline="33" endline="62">clear</referencedby>
        <referencedby refid="class_fit_1a4874f1cf7e73d3add3b14956618a52c8" compoundref="_calibration_8hpp" startline="64" endline="64">label</referencedby>
        <referencedby refid="class_fit_1a5f9e21546ed32f5b53c0692d2c199f1d" compoundref="_calibration_8hpp" startline="80" endline="80">setLabel</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1af724fb046ea4e5c1bf6cdffd5f9cacb5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Fit::m_peaks_found</definition>
        <argsstring></argsstring>
        <name>m_peaks_found</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="120" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="120" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_calibration_8hpp" startline="33" endline="62">clear</referencedby>
        <referencedby refid="class_fit_1abaca326b14541eeb51a3bcac88c1d40e" compoundref="_calibration_8hpp" startline="76" endline="76">found_peaks</referencedby>
        <referencedby refid="class_fit_1a861a69c651863dcb3b41a788fe73f69d" compoundref="_calibration_8hpp" startline="89" endline="89">peaks_found</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_fit_1a8c319eaa8c1924d691ca348e60032392" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Fit::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="33" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="33" bodyend="62"/>
        <references refid="class_fit_1ac128f10e2e52aa39445e4363168d5f73" compoundref="_calibration_8hpp" startline="105">chi2</references>
        <references refid="class_fit_1ac752a6bea753f20d4a8ed0a887447d7c" compoundref="_calibration_8hpp" startline="93">cmeasures</references>
        <references refid="class_fit_1afffcdcd0341476a634e763b8bb2158ce" compoundref="_calibration_8hpp" startline="100">ex</references>
        <references refid="class_fit_1a6777a3d0b233e491b99c6b22ba1b7290" compoundref="_calibration_8hpp" startline="101">ey</references>
        <references refid="class_fit_1a73dca59c79cb77deda29c834c50e00b6" compoundref="_calibration_8hpp" startline="104">integral</references>
        <references refid="class_fit_1a8f850d65b0e25b4f54f321308370b938" compoundref="_calibration_8hpp" startline="111">keVperADC</references>
        <references refid="class_fit_1af46c866fd64724443acf723c14270584" compoundref="_calibration_8hpp" startline="119">m_enough_counts</references>
        <references refid="class_fit_1a9d7412f72df96bb282ed09d2657e949a" compoundref="_calibration_8hpp" startline="118">m_exist</references>
        <references refid="class_fit_1a6d22c746466b2251a9f9d9e1f5f54ba8" compoundref="_calibration_8hpp" startline="117">m_label</references>
        <references refid="class_fit_1af724fb046ea4e5c1bf6cdffd5f9cacb5" compoundref="_calibration_8hpp" startline="120">m_peaks_found</references>
        <references refid="class_fit_1a75cecf55da1498d8bdd870108123245e" compoundref="_calibration_8hpp" startline="95">mean</references>
        <references refid="class_fit_1a964131fabef1652357c6f1dd08f9f2de" compoundref="_calibration_8hpp" startline="114">name</references>
        <references refid="class_fit_1a09a8cb0e9a300f8aeef67fcd267cb8f2" compoundref="_calibration_8hpp" startline="112">order</references>
        <references refid="class_fit_1a6dd1941f173b91a904be34afca6cd5d0" compoundref="_calibration_8hpp" startline="106">parameter0</references>
        <references refid="class_fit_1abe17456d5a2ccb50497d776f4f63f98b" compoundref="_calibration_8hpp" startline="107">parameter1</references>
        <references refid="class_fit_1a394d86d19fb25ad5facea296ed71bb1e" compoundref="_calibration_8hpp" startline="108">parameter2</references>
        <references refid="class_fit_1a4367b73a3883f085dea1ed2e67a97ac9" compoundref="_calibration_8hpp" startline="109">parameter3</references>
        <references refid="class_fit_1a8f443c41d92e502b2fe55453560457e2" compoundref="_calibration_8hpp" startline="92">peaks</references>
        <references refid="class_fit_1a522102240db21bfd9dd69f15ea3b3656" compoundref="_calibration_8hpp" startline="110">scalefactor</references>
        <references refid="class_fit_1a32663082748ab547b85b14a6f198f086" compoundref="_calibration_8hpp" startline="96">sigma</references>
        <references refid="class_fit_1a5a9406e4e285484650609f696d96ffa2" compoundref="_calibration_8hpp" startline="98">x</references>
        <references refid="class_fit_1a36eda8829f68c74fdf657a065481a3f8" compoundref="_calibration_8hpp" startline="99">y</references>
      </memberdef>
      <memberdef kind="function" id="class_fit_1a0c3b74202459b21a89949d1764c821ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Fit::enough_counts</definition>
        <argsstring>() const</argsstring>
        <name>enough_counts</name>
        <briefdescription>
<para>Returns true if fit had enough counts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="73" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="73" bodyend="73"/>
        <references refid="class_fit_1af46c866fd64724443acf723c14270584" compoundref="_calibration_8hpp" startline="119">m_enough_counts</references>
      </memberdef>
      <memberdef kind="function" id="class_fit_1aa524861d860cc6384c92425166453e93" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool const  &amp;</type>
        <definition>bool const&amp; Fit::exists</definition>
        <argsstring>() const</argsstring>
        <name>exists</name>
        <briefdescription>
<para>Returns true if fit succeeded. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="70" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="70" bodyend="70"/>
        <references refid="class_fit_1a9d7412f72df96bb282ed09d2657e949a" compoundref="_calibration_8hpp" startline="118">m_exist</references>
        <referencedby refid="class_calibration_1aea14328cc8a0ab1cf559cd07f8c6a065" compoundref="_calibration_8hpp" startline="852" endline="910">Calibration::fitCalibration</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_fit_1aace9236c432ee27bd3c208911b7a396d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool const  &amp;</type>
        <definition>bool const&amp; Fit::exists</definition>
        <argsstring>(bool exist)</argsstring>
        <name>exists</name>
        <param>
          <type>bool</type>
          <declname>exist</declname>
        </param>
        <briefdescription>
<para>Set if the fit succeeded : </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="83" column="15" bodyfile="lib/Modules/Calibration.hpp" bodystart="83" bodyend="83"/>
        <references refid="lib_co_8hpp_1a79092fe2f0694bdbb860894b0f983e32" compoundref="lib_co_8hpp" startline="62" endline="62">bool_cast</references>
        <references refid="class_fit_1a9d7412f72df96bb282ed09d2657e949a" compoundref="_calibration_8hpp" startline="118">m_exist</references>
      </memberdef>
      <memberdef kind="function" id="class_fit_1abd77d8fae160b06c58643a7f11e64625" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Fit::Fit</definition>
        <argsstring>()</argsstring>
        <name>Fit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="23" column="3" bodyfile="lib/Modules/Calibration.hpp" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="class_fit_1abaca326b14541eeb51a3bcac88c1d40e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Fit::found_peaks</definition>
        <argsstring>() const</argsstring>
        <name>found_peaks</name>
        <briefdescription>
<para>Returns true if the fit found the peaks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="76" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="76" bodyend="76"/>
        <references refid="class_fit_1af724fb046ea4e5c1bf6cdffd5f9cacb5" compoundref="_calibration_8hpp" startline="120">m_peaks_found</references>
      </memberdef>
      <memberdef kind="function" id="class_fit_1a4874f1cf7e73d3add3b14956618a52c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref> const  &amp;</type>
        <definition>Label const&amp; Fit::label</definition>
        <argsstring>() const</argsstring>
        <name>label</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="64" column="16" bodyfile="lib/Modules/Calibration.hpp" bodystart="64" bodyend="64"/>
        <references refid="class_fit_1a6d22c746466b2251a9f9d9e1f5f54ba8" compoundref="_calibration_8hpp" startline="117">m_label</references>
        <referencedby refid="_calibration_8hpp_1a4f68d2fe488cf1a3044c1573a16bc394" compoundref="_calibration_8hpp" startline="123" endline="142">operator&lt;&lt;</referencedby>
        <referencedby refid="class_fit_1a5f9e21546ed32f5b53c0692d2c199f1d" compoundref="_calibration_8hpp" startline="80" endline="80">setLabel</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_fit_1a861a69c651863dcb3b41a788fe73f69d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Fit::peaks_found</definition>
        <argsstring>(bool found)</argsstring>
        <name>peaks_found</name>
        <param>
          <type>bool</type>
          <declname>found</declname>
        </param>
        <briefdescription>
<para>Set if there was not enough counts : </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="89" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="89" bodyend="89"/>
        <references refid="lib_co_8hpp_1a79092fe2f0694bdbb860894b0f983e32" compoundref="lib_co_8hpp" startline="62" endline="62">bool_cast</references>
        <references refid="string__functions_8hpp_1a03fb03d95885354ac3c329693588097b" compoundref="string__functions_8hpp" startline="113" endline="116">found</references>
        <references refid="class_fit_1af724fb046ea4e5c1bf6cdffd5f9cacb5" compoundref="_calibration_8hpp" startline="120">m_peaks_found</references>
      </memberdef>
      <memberdef kind="function" id="class_fit_1a9b69dacd5f0264c1760f38d9dd19f5dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Fit::resize</definition>
        <argsstring>(int size)</argsstring>
        <name>resize</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="25" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="25" bodyend="31"/>
        <references refid="class_fit_1ac752a6bea753f20d4a8ed0a887447d7c" compoundref="_calibration_8hpp" startline="93">cmeasures</references>
        <references refid="class_fit_1a75cecf55da1498d8bdd870108123245e" compoundref="_calibration_8hpp" startline="95">mean</references>
        <references refid="class_fit_1a8f443c41d92e502b2fe55453560457e2" compoundref="_calibration_8hpp" startline="92">peaks</references>
        <references refid="class_fit_1a32663082748ab547b85b14a6f198f086" compoundref="_calibration_8hpp" startline="96">sigma</references>
        <references refid="class_fit_1a9c248d8b560bede53a0c550418bf2604" compoundref="_calibration_8hpp" startline="67" endline="67">size</references>
      </memberdef>
      <memberdef kind="function" id="class_fit_1a5f9e21546ed32f5b53c0692d2c199f1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Fit::setLabel</definition>
        <argsstring>(Label const &amp;label)</argsstring>
        <name>setLabel</name>
        <param>
          <type><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref> const &amp;</type>
          <declname>label</declname>
        </param>
        <briefdescription>
<para>Set the label. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="80" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="80" bodyend="80"/>
        <references refid="class_fit_1a4874f1cf7e73d3add3b14956618a52c8" compoundref="_calibration_8hpp" startline="64" endline="64">label</references>
        <references refid="class_fit_1a6d22c746466b2251a9f9d9e1f5f54ba8" compoundref="_calibration_8hpp" startline="117">m_label</references>
      </memberdef>
      <memberdef kind="function" id="class_fit_1a9c248d8b560bede53a0c550418bf2604" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
        <definition>size_t Fit::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>Returns the number of peaks used for calibration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="67" column="10" bodyfile="lib/Modules/Calibration.hpp" bodystart="67" bodyend="67"/>
        <references refid="class_fit_1a8f443c41d92e502b2fe55453560457e2" compoundref="_calibration_8hpp" startline="92">peaks</references>
        <referencedby refid="class_fit_1a9b69dacd5f0264c1760f38d9dd19f5dd" compoundref="_calibration_8hpp" startline="25" endline="31">resize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_fit_1ad12c75a87a239da0768c9c6b869da431" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Fit::too_few_counts</definition>
        <argsstring>(bool few_counts)</argsstring>
        <name>too_few_counts</name>
        <param>
          <type>bool</type>
          <declname>few_counts</declname>
        </param>
        <briefdescription>
<para>Set if there was not enough counts : </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="86" column="8" bodyfile="lib/Modules/Calibration.hpp" bodystart="86" bodyend="86"/>
        <references refid="lib_co_8hpp_1a79092fe2f0694bdbb860894b0f983e32" compoundref="lib_co_8hpp" startline="62" endline="62">bool_cast</references>
        <references refid="class_fit_1af46c866fd64724443acf723c14270584" compoundref="_calibration_8hpp" startline="119">m_enough_counts</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Allows one to manipulate the results of peaks. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="lib/Modules/Calibration.hpp" line="20" column="1" bodyfile="lib/Modules/Calibration.hpp" bodystart="21" bodyend="121"/>
    <listofallmembers>
      <member refid="class_fit_1ac128f10e2e52aa39445e4363168d5f73" prot="public" virt="non-virtual"><scope>Fit</scope><name>chi2</name></member>
      <member refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" prot="public" virt="non-virtual"><scope>Fit</scope><name>clear</name></member>
      <member refid="class_fit_1ac752a6bea753f20d4a8ed0a887447d7c" prot="public" virt="non-virtual"><scope>Fit</scope><name>cmeasures</name></member>
      <member refid="class_fit_1a0c3b74202459b21a89949d1764c821ac" prot="public" virt="non-virtual"><scope>Fit</scope><name>enough_counts</name></member>
      <member refid="class_fit_1afffcdcd0341476a634e763b8bb2158ce" prot="public" virt="non-virtual"><scope>Fit</scope><name>ex</name></member>
      <member refid="class_fit_1aa524861d860cc6384c92425166453e93" prot="public" virt="non-virtual"><scope>Fit</scope><name>exists</name></member>
      <member refid="class_fit_1aace9236c432ee27bd3c208911b7a396d" prot="public" virt="non-virtual"><scope>Fit</scope><name>exists</name></member>
      <member refid="class_fit_1a6777a3d0b233e491b99c6b22ba1b7290" prot="public" virt="non-virtual"><scope>Fit</scope><name>ey</name></member>
      <member refid="class_fit_1abd77d8fae160b06c58643a7f11e64625" prot="public" virt="non-virtual"><scope>Fit</scope><name>Fit</name></member>
      <member refid="class_fit_1abaca326b14541eeb51a3bcac88c1d40e" prot="public" virt="non-virtual"><scope>Fit</scope><name>found_peaks</name></member>
      <member refid="class_fit_1a73dca59c79cb77deda29c834c50e00b6" prot="public" virt="non-virtual"><scope>Fit</scope><name>integral</name></member>
      <member refid="class_fit_1a8f850d65b0e25b4f54f321308370b938" prot="public" virt="non-virtual"><scope>Fit</scope><name>keVperADC</name></member>
      <member refid="class_fit_1a4874f1cf7e73d3add3b14956618a52c8" prot="public" virt="non-virtual"><scope>Fit</scope><name>label</name></member>
      <member refid="class_fit_1af46c866fd64724443acf723c14270584" prot="private" virt="non-virtual"><scope>Fit</scope><name>m_enough_counts</name></member>
      <member refid="class_fit_1a9d7412f72df96bb282ed09d2657e949a" prot="private" virt="non-virtual"><scope>Fit</scope><name>m_exist</name></member>
      <member refid="class_fit_1a6d22c746466b2251a9f9d9e1f5f54ba8" prot="private" virt="non-virtual"><scope>Fit</scope><name>m_label</name></member>
      <member refid="class_fit_1af724fb046ea4e5c1bf6cdffd5f9cacb5" prot="private" virt="non-virtual"><scope>Fit</scope><name>m_peaks_found</name></member>
      <member refid="class_fit_1a75cecf55da1498d8bdd870108123245e" prot="public" virt="non-virtual"><scope>Fit</scope><name>mean</name></member>
      <member refid="class_fit_1a964131fabef1652357c6f1dd08f9f2de" prot="public" virt="non-virtual"><scope>Fit</scope><name>name</name></member>
      <member refid="class_fit_1a09a8cb0e9a300f8aeef67fcd267cb8f2" prot="public" virt="non-virtual"><scope>Fit</scope><name>order</name></member>
      <member refid="class_fit_1a6dd1941f173b91a904be34afca6cd5d0" prot="public" virt="non-virtual"><scope>Fit</scope><name>parameter0</name></member>
      <member refid="class_fit_1abe17456d5a2ccb50497d776f4f63f98b" prot="public" virt="non-virtual"><scope>Fit</scope><name>parameter1</name></member>
      <member refid="class_fit_1a394d86d19fb25ad5facea296ed71bb1e" prot="public" virt="non-virtual"><scope>Fit</scope><name>parameter2</name></member>
      <member refid="class_fit_1a4367b73a3883f085dea1ed2e67a97ac9" prot="public" virt="non-virtual"><scope>Fit</scope><name>parameter3</name></member>
      <member refid="class_fit_1a8f443c41d92e502b2fe55453560457e2" prot="public" virt="non-virtual"><scope>Fit</scope><name>peaks</name></member>
      <member refid="class_fit_1a861a69c651863dcb3b41a788fe73f69d" prot="public" virt="non-virtual"><scope>Fit</scope><name>peaks_found</name></member>
      <member refid="class_fit_1a9b69dacd5f0264c1760f38d9dd19f5dd" prot="public" virt="non-virtual"><scope>Fit</scope><name>resize</name></member>
      <member refid="class_fit_1a522102240db21bfd9dd69f15ea3b3656" prot="public" virt="non-virtual"><scope>Fit</scope><name>scalefactor</name></member>
      <member refid="class_fit_1a5f9e21546ed32f5b53c0692d2c199f1d" prot="public" virt="non-virtual"><scope>Fit</scope><name>setLabel</name></member>
      <member refid="class_fit_1a32663082748ab547b85b14a6f198f086" prot="public" virt="non-virtual"><scope>Fit</scope><name>sigma</name></member>
      <member refid="class_fit_1a9c248d8b560bede53a0c550418bf2604" prot="public" virt="non-virtual"><scope>Fit</scope><name>size</name></member>
      <member refid="class_fit_1ad12c75a87a239da0768c9c6b869da431" prot="public" virt="non-virtual"><scope>Fit</scope><name>too_few_counts</name></member>
      <member refid="class_fit_1a5a9406e4e285484650609f696d96ffa2" prot="public" virt="non-virtual"><scope>Fit</scope><name>x</name></member>
      <member refid="class_fit_1a36eda8829f68c74fdf657a065481a3f8" prot="public" virt="non-virtual"><scope>Fit</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
