<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_fit" kind="class" language="C++" prot="public">
    <compoundname>Fit</compoundname>
    <includes refid="_fit_8hpp" local="no">Fit.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_fit_1ac128f10e2e52aa39445e4363168d5f73" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Fit::chi2</definition>
        <argsstring></argsstring>
        <name>chi2</name>
        <initializer>= -1.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="92" column="10" bodyfile="lib/Classes/Fit.hpp" bodystart="92" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_fit_8hpp" startline="23" endline="52">clear</referencedby>
        <referencedby refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" compoundref="_calibrator_8hpp" startline="722" endline="780">Calibrator::fitCalibration</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1ac752a6bea753f20d4a8ed0a887447d7c" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Fit::cmeasures</definition>
        <argsstring></argsstring>
        <name>cmeasures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="81" column="15" bodyfile="lib/Classes/Fit.hpp" bodystart="81" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_fit_8hpp" startline="23" endline="52">clear</referencedby>
        <referencedby refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" compoundref="_calibrator_8hpp" startline="722" endline="780">Calibrator::fitCalibration</referencedby>
        <referencedby refid="class_fit_1a9b69dacd5f0264c1760f38d9dd19f5dd" compoundref="_fit_8hpp" startline="15" endline="21">resize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1afffcdcd0341476a634e763b8bb2158ce" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Fit::ex</definition>
        <argsstring></argsstring>
        <name>ex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="88" column="15" bodyfile="lib/Classes/Fit.hpp" bodystart="88" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_fit_8hpp" startline="23" endline="52">clear</referencedby>
        <referencedby refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" compoundref="_calibrator_8hpp" startline="722" endline="780">Calibrator::fitCalibration</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a6777a3d0b233e491b99c6b22ba1b7290" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Fit::ey</definition>
        <argsstring></argsstring>
        <name>ey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="89" column="15" bodyfile="lib/Classes/Fit.hpp" bodystart="89" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_fit_8hpp" startline="23" endline="52">clear</referencedby>
        <referencedby refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" compoundref="_calibrator_8hpp" startline="722" endline="780">Calibrator::fitCalibration</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a73dca59c79cb77deda29c834c50e00b6" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Fit::integral</definition>
        <argsstring></argsstring>
        <name>integral</name>
        <initializer>= -1.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="91" column="10" bodyfile="lib/Classes/Fit.hpp" bodystart="91" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_fit_8hpp" startline="23" endline="52">clear</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a8f850d65b0e25b4f54f321308370b938" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Fit::keVperADC</definition>
        <argsstring></argsstring>
        <name>keVperADC</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="98" column="10" bodyfile="lib/Classes/Fit.hpp" bodystart="98" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_fit_8hpp" startline="23" endline="52">clear</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a75cecf55da1498d8bdd870108123245e" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Fit::mean</definition>
        <argsstring></argsstring>
        <name>mean</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="83" column="15" bodyfile="lib/Classes/Fit.hpp" bodystart="83" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_fit_8hpp" startline="23" endline="52">clear</referencedby>
        <referencedby refid="class_fit_1a9b69dacd5f0264c1760f38d9dd19f5dd" compoundref="_fit_8hpp" startline="15" endline="21">resize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a964131fabef1652357c6f1dd08f9f2de" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Fit::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="101" column="15" bodyfile="lib/Classes/Fit.hpp" bodystart="101" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_fit_8hpp" startline="23" endline="52">clear</referencedby>
        <referencedby refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" compoundref="_calibrator_8hpp" startline="722" endline="780">Calibrator::fitCalibration</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a09a8cb0e9a300f8aeef67fcd267cb8f2" prot="public" static="no" mutable="no">
        <type><ref refid="lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21" kindref="member">uchar</ref></type>
        <definition>uchar Fit::order</definition>
        <argsstring></argsstring>
        <name>order</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="99" column="9" bodyfile="lib/Classes/Fit.hpp" bodystart="99" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_fit_8hpp" startline="23" endline="52">clear</referencedby>
        <referencedby refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" compoundref="_calibrator_8hpp" startline="722" endline="780">Calibrator::fitCalibration</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a6dd1941f173b91a904be34afca6cd5d0" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Fit::parameter0</definition>
        <argsstring></argsstring>
        <name>parameter0</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="93" column="10" bodyfile="lib/Classes/Fit.hpp" bodystart="93" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_fit_8hpp" startline="23" endline="52">clear</referencedby>
        <referencedby refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" compoundref="_calibrator_8hpp" startline="722" endline="780">Calibrator::fitCalibration</referencedby>
        <referencedby refid="_fit_8hpp_1a4f68d2fe488cf1a3044c1573a16bc394" compoundref="_fit_8hpp" startline="110" endline="129">operator&lt;&lt;</referencedby>
        <referencedby refid="class_peaks_calibrator_1ad020d8c79aa946517f140b3b73a16817" compoundref="_analysed_spectra_8hpp" startline="319" endline="336">PeaksCalibrator::PeaksCalibrator</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1abe17456d5a2ccb50497d776f4f63f98b" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Fit::parameter1</definition>
        <argsstring></argsstring>
        <name>parameter1</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="94" column="10" bodyfile="lib/Classes/Fit.hpp" bodystart="94" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_fit_8hpp" startline="23" endline="52">clear</referencedby>
        <referencedby refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" compoundref="_calibrator_8hpp" startline="722" endline="780">Calibrator::fitCalibration</referencedby>
        <referencedby refid="_fit_8hpp_1a4f68d2fe488cf1a3044c1573a16bc394" compoundref="_fit_8hpp" startline="110" endline="129">operator&lt;&lt;</referencedby>
        <referencedby refid="class_peaks_calibrator_1ad020d8c79aa946517f140b3b73a16817" compoundref="_analysed_spectra_8hpp" startline="319" endline="336">PeaksCalibrator::PeaksCalibrator</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a394d86d19fb25ad5facea296ed71bb1e" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Fit::parameter2</definition>
        <argsstring></argsstring>
        <name>parameter2</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="95" column="10" bodyfile="lib/Classes/Fit.hpp" bodystart="95" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_fit_8hpp" startline="23" endline="52">clear</referencedby>
        <referencedby refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" compoundref="_calibrator_8hpp" startline="722" endline="780">Calibrator::fitCalibration</referencedby>
        <referencedby refid="_fit_8hpp_1a4f68d2fe488cf1a3044c1573a16bc394" compoundref="_fit_8hpp" startline="110" endline="129">operator&lt;&lt;</referencedby>
        <referencedby refid="class_peaks_calibrator_1a6d799246268d62e0e7097594ea82050b" compoundref="_analysed_spectra_8hpp" startline="338" endline="359">PeaksCalibrator::PeaksCalibrator</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a4367b73a3883f085dea1ed2e67a97ac9" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Fit::parameter3</definition>
        <argsstring></argsstring>
        <name>parameter3</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="96" column="10" bodyfile="lib/Classes/Fit.hpp" bodystart="96" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_fit_8hpp" startline="23" endline="52">clear</referencedby>
        <referencedby refid="_fit_8hpp_1a4f68d2fe488cf1a3044c1573a16bc394" compoundref="_fit_8hpp" startline="110" endline="129">operator&lt;&lt;</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a8f443c41d92e502b2fe55453560457e2" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Fit::peaks</definition>
        <argsstring></argsstring>
        <name>peaks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="80" column="15" bodyfile="lib/Classes/Fit.hpp" bodystart="80" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_fit_8hpp" startline="23" endline="52">clear</referencedby>
        <referencedby refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" compoundref="_calibrator_8hpp" startline="722" endline="780">Calibrator::fitCalibration</referencedby>
        <referencedby refid="class_fit_1a9b69dacd5f0264c1760f38d9dd19f5dd" compoundref="_fit_8hpp" startline="15" endline="21">resize</referencedby>
        <referencedby refid="class_fit_1a912700f52a0a3a3c66c90966ed81581b" compoundref="_fit_8hpp" startline="57" endline="57">size</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a522102240db21bfd9dd69f15ea3b3656" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Fit::scalefactor</definition>
        <argsstring></argsstring>
        <name>scalefactor</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="97" column="10" bodyfile="lib/Classes/Fit.hpp" bodystart="97" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_fit_8hpp" startline="23" endline="52">clear</referencedby>
        <referencedby refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" compoundref="_calibrator_8hpp" startline="722" endline="780">Calibrator::fitCalibration</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a32663082748ab547b85b14a6f198f086" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Fit::sigma</definition>
        <argsstring></argsstring>
        <name>sigma</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="84" column="15" bodyfile="lib/Classes/Fit.hpp" bodystart="84" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_fit_8hpp" startline="23" endline="52">clear</referencedby>
        <referencedby refid="class_fit_1a9b69dacd5f0264c1760f38d9dd19f5dd" compoundref="_fit_8hpp" startline="15" endline="21">resize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a5a9406e4e285484650609f696d96ffa2" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Fit::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="86" column="15" bodyfile="lib/Classes/Fit.hpp" bodystart="86" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_fit_8hpp" startline="23" endline="52">clear</referencedby>
        <referencedby refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" compoundref="_calibrator_8hpp" startline="722" endline="780">Calibrator::fitCalibration</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a36eda8829f68c74fdf657a065481a3f8" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Fit::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="87" column="15" bodyfile="lib/Classes/Fit.hpp" bodystart="87" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_fit_8hpp" startline="23" endline="52">clear</referencedby>
        <referencedby refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" compoundref="_calibrator_8hpp" startline="722" endline="780">Calibrator::fitCalibration</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_fit_1af46c866fd64724443acf723c14270584" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Fit::m_enough_counts</definition>
        <argsstring></argsstring>
        <name>m_enough_counts</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="106" column="8" bodyfile="lib/Classes/Fit.hpp" bodystart="106" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_fit_8hpp" startline="23" endline="52">clear</referencedby>
        <referencedby refid="class_fit_1ace2faca83c11b880a44c1e5f7c89ad8e" compoundref="_fit_8hpp" startline="63" endline="63">enough_counts</referencedby>
        <referencedby refid="class_fit_1ad12c75a87a239da0768c9c6b869da431" compoundref="_fit_8hpp" startline="75" endline="75">too_few_counts</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a9d7412f72df96bb282ed09d2657e949a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Fit::m_exist</definition>
        <argsstring></argsstring>
        <name>m_exist</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="105" column="8" bodyfile="lib/Classes/Fit.hpp" bodystart="105" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_fit_8hpp" startline="23" endline="52">clear</referencedby>
        <referencedby refid="class_fit_1acd04ad290cb58f48b9925152587c380e" compoundref="_fit_8hpp" startline="60" endline="60">exists</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1a6d22c746466b2251a9f9d9e1f5f54ba8" prot="private" static="no" mutable="no">
        <type><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref></type>
        <definition>Label Fit::m_label</definition>
        <argsstring></argsstring>
        <name>m_label</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="104" column="9" bodyfile="lib/Classes/Fit.hpp" bodystart="104" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_fit_8hpp" startline="23" endline="52">clear</referencedby>
        <referencedby refid="class_fit_1a65785d0daa5a0aa76f1ca5924c36fa28" compoundref="_fit_8hpp" startline="54" endline="54">label</referencedby>
        <referencedby refid="class_fit_1a5f9e21546ed32f5b53c0692d2c199f1d" compoundref="_fit_8hpp" startline="69" endline="69">setLabel</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_fit_1af724fb046ea4e5c1bf6cdffd5f9cacb5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Fit::m_peaks_found</definition>
        <argsstring></argsstring>
        <name>m_peaks_found</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="107" column="8" bodyfile="lib/Classes/Fit.hpp" bodystart="107" bodyend="-1"/>
        <referencedby refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" compoundref="_fit_8hpp" startline="23" endline="52">clear</referencedby>
        <referencedby refid="class_fit_1a4a492179d25c42f4964e9aa32aebeece" compoundref="_fit_8hpp" startline="66" endline="66">found_peaks</referencedby>
        <referencedby refid="class_fit_1a861a69c651863dcb3b41a788fe73f69d" compoundref="_fit_8hpp" startline="78" endline="78">peaks_found</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_fit_1a8c319eaa8c1924d691ca348e60032392" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Fit::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="23" column="8" bodyfile="lib/Classes/Fit.hpp" bodystart="23" bodyend="52"/>
        <references refid="class_fit_1ac128f10e2e52aa39445e4363168d5f73" compoundref="_fit_8hpp" startline="92">chi2</references>
        <references refid="class_fit_1ac752a6bea753f20d4a8ed0a887447d7c" compoundref="_fit_8hpp" startline="81">cmeasures</references>
        <references refid="class_fit_1afffcdcd0341476a634e763b8bb2158ce" compoundref="_fit_8hpp" startline="88">ex</references>
        <references refid="class_fit_1a6777a3d0b233e491b99c6b22ba1b7290" compoundref="_fit_8hpp" startline="89">ey</references>
        <references refid="class_fit_1a73dca59c79cb77deda29c834c50e00b6" compoundref="_fit_8hpp" startline="91">integral</references>
        <references refid="class_fit_1a8f850d65b0e25b4f54f321308370b938" compoundref="_fit_8hpp" startline="98">keVperADC</references>
        <references refid="class_fit_1af46c866fd64724443acf723c14270584" compoundref="_fit_8hpp" startline="106">m_enough_counts</references>
        <references refid="class_fit_1a9d7412f72df96bb282ed09d2657e949a" compoundref="_fit_8hpp" startline="105">m_exist</references>
        <references refid="class_fit_1a6d22c746466b2251a9f9d9e1f5f54ba8" compoundref="_fit_8hpp" startline="104">m_label</references>
        <references refid="class_fit_1af724fb046ea4e5c1bf6cdffd5f9cacb5" compoundref="_fit_8hpp" startline="107">m_peaks_found</references>
        <references refid="class_fit_1a75cecf55da1498d8bdd870108123245e" compoundref="_fit_8hpp" startline="83">mean</references>
        <references refid="class_fit_1a964131fabef1652357c6f1dd08f9f2de" compoundref="_fit_8hpp" startline="101">name</references>
        <references refid="class_fit_1a09a8cb0e9a300f8aeef67fcd267cb8f2" compoundref="_fit_8hpp" startline="99">order</references>
        <references refid="class_fit_1a6dd1941f173b91a904be34afca6cd5d0" compoundref="_fit_8hpp" startline="93">parameter0</references>
        <references refid="class_fit_1abe17456d5a2ccb50497d776f4f63f98b" compoundref="_fit_8hpp" startline="94">parameter1</references>
        <references refid="class_fit_1a394d86d19fb25ad5facea296ed71bb1e" compoundref="_fit_8hpp" startline="95">parameter2</references>
        <references refid="class_fit_1a4367b73a3883f085dea1ed2e67a97ac9" compoundref="_fit_8hpp" startline="96">parameter3</references>
        <references refid="class_fit_1a8f443c41d92e502b2fe55453560457e2" compoundref="_fit_8hpp" startline="80">peaks</references>
        <references refid="class_fit_1a522102240db21bfd9dd69f15ea3b3656" compoundref="_fit_8hpp" startline="97">scalefactor</references>
        <references refid="class_fit_1a32663082748ab547b85b14a6f198f086" compoundref="_fit_8hpp" startline="84">sigma</references>
        <references refid="class_fit_1a5a9406e4e285484650609f696d96ffa2" compoundref="_fit_8hpp" startline="86">x</references>
        <references refid="class_fit_1a36eda8829f68c74fdf657a065481a3f8" compoundref="_fit_8hpp" startline="87">y</references>
      </memberdef>
      <memberdef kind="function" id="class_fit_1ace2faca83c11b880a44c1e5f7c89ad8e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Fit::enough_counts</definition>
        <argsstring>() const</argsstring>
        <name>enough_counts</name>
        <briefdescription>
<para>Returns true if fit had enough counts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="63" column="8" bodyfile="lib/Classes/Fit.hpp" bodystart="63" bodyend="63"/>
        <references refid="class_fit_1af46c866fd64724443acf723c14270584" compoundref="_fit_8hpp" startline="106">m_enough_counts</references>
      </memberdef>
      <memberdef kind="function" id="class_fit_1acd04ad290cb58f48b9925152587c380e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; Fit::exists</definition>
        <argsstring>() const</argsstring>
        <name>exists</name>
        <briefdescription>
<para>Returns true if fit succeeded. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="60" column="15" bodyfile="lib/Classes/Fit.hpp" bodystart="60" bodyend="60"/>
        <references refid="class_fit_1a9d7412f72df96bb282ed09d2657e949a" compoundref="_fit_8hpp" startline="105">m_exist</references>
        <referencedby refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" compoundref="_calibrator_8hpp" startline="722" endline="780">Calibrator::fitCalibration</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_fit_1aace9236c432ee27bd3c208911b7a396d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool const  &amp;</type>
        <definition>bool const&amp; Fit::exists</definition>
        <argsstring>(bool exist)</argsstring>
        <name>exists</name>
        <param>
          <type>bool</type>
          <declname>exist</declname>
        </param>
        <briefdescription>
<para>Set if the fit succeeded : </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="72" column="15" bodyfile="lib/Classes/Fit.hpp" bodystart="72" bodyend="72"/>
        <references refid="lib_co_8hpp_1a1783566268ead87d4fdd8c61b6af7ede" compoundref="lib_co_8hpp" startline="197" endline="197">bool_cast</references>
        <references refid="class_fit_1a9d7412f72df96bb282ed09d2657e949a" compoundref="_fit_8hpp" startline="105">m_exist</references>
      </memberdef>
      <memberdef kind="function" id="class_fit_1abd77d8fae160b06c58643a7f11e64625" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Fit::Fit</definition>
        <argsstring>()</argsstring>
        <name>Fit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="13" column="3" bodyfile="lib/Classes/Fit.hpp" bodystart="13" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="class_fit_1a4a492179d25c42f4964e9aa32aebeece" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Fit::found_peaks</definition>
        <argsstring>() const</argsstring>
        <name>found_peaks</name>
        <briefdescription>
<para>Returns true if the fit found the peaks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="66" column="8" bodyfile="lib/Classes/Fit.hpp" bodystart="66" bodyend="66"/>
        <references refid="class_fit_1af724fb046ea4e5c1bf6cdffd5f9cacb5" compoundref="_fit_8hpp" startline="107">m_peaks_found</references>
      </memberdef>
      <memberdef kind="function" id="class_fit_1a65785d0daa5a0aa76f1ca5924c36fa28" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; Fit::label</definition>
        <argsstring>() const</argsstring>
        <name>label</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="54" column="15" bodyfile="lib/Classes/Fit.hpp" bodystart="54" bodyend="54"/>
        <references refid="class_fit_1a6d22c746466b2251a9f9d9e1f5f54ba8" compoundref="_fit_8hpp" startline="104">m_label</references>
        <referencedby refid="_fit_8hpp_1a4f68d2fe488cf1a3044c1573a16bc394" compoundref="_fit_8hpp" startline="110" endline="129">operator&lt;&lt;</referencedby>
        <referencedby refid="class_fit_1a5f9e21546ed32f5b53c0692d2c199f1d" compoundref="_fit_8hpp" startline="69" endline="69">setLabel</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_fit_1a861a69c651863dcb3b41a788fe73f69d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Fit::peaks_found</definition>
        <argsstring>(bool found)</argsstring>
        <name>peaks_found</name>
        <param>
          <type>bool</type>
          <declname>found</declname>
        </param>
        <briefdescription>
<para>Set if there was not enough counts : </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="78" column="8" bodyfile="lib/Classes/Fit.hpp" bodystart="78" bodyend="78"/>
        <references refid="lib_co_8hpp_1a1783566268ead87d4fdd8c61b6af7ede" compoundref="lib_co_8hpp" startline="197" endline="197">bool_cast</references>
        <references refid="string__functions_8hpp_1a87d8e2cb69021ab11e443cb140349eb6" compoundref="string__functions_8hpp" startline="137" endline="140">found</references>
        <references refid="class_fit_1af724fb046ea4e5c1bf6cdffd5f9cacb5" compoundref="_fit_8hpp" startline="107">m_peaks_found</references>
      </memberdef>
      <memberdef kind="function" id="class_fit_1a9b69dacd5f0264c1760f38d9dd19f5dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Fit::resize</definition>
        <argsstring>(int size)</argsstring>
        <name>resize</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="15" column="8" bodyfile="lib/Classes/Fit.hpp" bodystart="15" bodyend="21"/>
        <references refid="class_fit_1ac752a6bea753f20d4a8ed0a887447d7c" compoundref="_fit_8hpp" startline="81">cmeasures</references>
        <references refid="class_fit_1a75cecf55da1498d8bdd870108123245e" compoundref="_fit_8hpp" startline="83">mean</references>
        <references refid="class_fit_1a8f443c41d92e502b2fe55453560457e2" compoundref="_fit_8hpp" startline="80">peaks</references>
        <references refid="class_fit_1a32663082748ab547b85b14a6f198f086" compoundref="_fit_8hpp" startline="84">sigma</references>
        <references refid="class_fit_1a912700f52a0a3a3c66c90966ed81581b" compoundref="_fit_8hpp" startline="57" endline="57">size</references>
      </memberdef>
      <memberdef kind="function" id="class_fit_1a5f9e21546ed32f5b53c0692d2c199f1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Fit::setLabel</definition>
        <argsstring>(Label const &amp;label)</argsstring>
        <name>setLabel</name>
        <param>
          <type><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref> const &amp;</type>
          <declname>label</declname>
        </param>
        <briefdescription>
<para>Set the label. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="69" column="8" bodyfile="lib/Classes/Fit.hpp" bodystart="69" bodyend="69"/>
        <references refid="class_fit_1a65785d0daa5a0aa76f1ca5924c36fa28" compoundref="_fit_8hpp" startline="54" endline="54">label</references>
        <references refid="class_fit_1a6d22c746466b2251a9f9d9e1f5f54ba8" compoundref="_fit_8hpp" startline="104">m_label</references>
      </memberdef>
      <memberdef kind="function" id="class_fit_1a912700f52a0a3a3c66c90966ed81581b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Fit::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>Returns the number of peaks used for calibration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="57" column="8" bodyfile="lib/Classes/Fit.hpp" bodystart="57" bodyend="57"/>
        <references refid="class_fit_1a8f443c41d92e502b2fe55453560457e2" compoundref="_fit_8hpp" startline="80">peaks</references>
        <referencedby refid="class_fit_1a9b69dacd5f0264c1760f38d9dd19f5dd" compoundref="_fit_8hpp" startline="15" endline="21">resize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_fit_1ad12c75a87a239da0768c9c6b869da431" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Fit::too_few_counts</definition>
        <argsstring>(bool few_counts)</argsstring>
        <name>too_few_counts</name>
        <param>
          <type>bool</type>
          <declname>few_counts</declname>
        </param>
        <briefdescription>
<para>Set if there was not enough counts : </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Fit.hpp" line="75" column="8" bodyfile="lib/Classes/Fit.hpp" bodystart="75" bodyend="75"/>
        <references refid="lib_co_8hpp_1a1783566268ead87d4fdd8c61b6af7ede" compoundref="lib_co_8hpp" startline="197" endline="197">bool_cast</references>
        <references refid="class_fit_1af46c866fd64724443acf723c14270584" compoundref="_fit_8hpp" startline="106">m_enough_counts</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Allows one to manipulate the results of peak fitting. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="lib/Classes/Fit.hpp" line="10" column="1" bodyfile="lib/Classes/Fit.hpp" bodystart="11" bodyend="108"/>
    <listofallmembers>
      <member refid="class_fit_1ac128f10e2e52aa39445e4363168d5f73" prot="public" virt="non-virtual"><scope>Fit</scope><name>chi2</name></member>
      <member refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" prot="public" virt="non-virtual"><scope>Fit</scope><name>clear</name></member>
      <member refid="class_fit_1ac752a6bea753f20d4a8ed0a887447d7c" prot="public" virt="non-virtual"><scope>Fit</scope><name>cmeasures</name></member>
      <member refid="class_fit_1ace2faca83c11b880a44c1e5f7c89ad8e" prot="public" virt="non-virtual"><scope>Fit</scope><name>enough_counts</name></member>
      <member refid="class_fit_1afffcdcd0341476a634e763b8bb2158ce" prot="public" virt="non-virtual"><scope>Fit</scope><name>ex</name></member>
      <member refid="class_fit_1acd04ad290cb58f48b9925152587c380e" prot="public" virt="non-virtual"><scope>Fit</scope><name>exists</name></member>
      <member refid="class_fit_1aace9236c432ee27bd3c208911b7a396d" prot="public" virt="non-virtual"><scope>Fit</scope><name>exists</name></member>
      <member refid="class_fit_1a6777a3d0b233e491b99c6b22ba1b7290" prot="public" virt="non-virtual"><scope>Fit</scope><name>ey</name></member>
      <member refid="class_fit_1abd77d8fae160b06c58643a7f11e64625" prot="public" virt="non-virtual"><scope>Fit</scope><name>Fit</name></member>
      <member refid="class_fit_1a4a492179d25c42f4964e9aa32aebeece" prot="public" virt="non-virtual"><scope>Fit</scope><name>found_peaks</name></member>
      <member refid="class_fit_1a73dca59c79cb77deda29c834c50e00b6" prot="public" virt="non-virtual"><scope>Fit</scope><name>integral</name></member>
      <member refid="class_fit_1a8f850d65b0e25b4f54f321308370b938" prot="public" virt="non-virtual"><scope>Fit</scope><name>keVperADC</name></member>
      <member refid="class_fit_1a65785d0daa5a0aa76f1ca5924c36fa28" prot="public" virt="non-virtual"><scope>Fit</scope><name>label</name></member>
      <member refid="class_fit_1af46c866fd64724443acf723c14270584" prot="private" virt="non-virtual"><scope>Fit</scope><name>m_enough_counts</name></member>
      <member refid="class_fit_1a9d7412f72df96bb282ed09d2657e949a" prot="private" virt="non-virtual"><scope>Fit</scope><name>m_exist</name></member>
      <member refid="class_fit_1a6d22c746466b2251a9f9d9e1f5f54ba8" prot="private" virt="non-virtual"><scope>Fit</scope><name>m_label</name></member>
      <member refid="class_fit_1af724fb046ea4e5c1bf6cdffd5f9cacb5" prot="private" virt="non-virtual"><scope>Fit</scope><name>m_peaks_found</name></member>
      <member refid="class_fit_1a75cecf55da1498d8bdd870108123245e" prot="public" virt="non-virtual"><scope>Fit</scope><name>mean</name></member>
      <member refid="class_fit_1a964131fabef1652357c6f1dd08f9f2de" prot="public" virt="non-virtual"><scope>Fit</scope><name>name</name></member>
      <member refid="class_fit_1a09a8cb0e9a300f8aeef67fcd267cb8f2" prot="public" virt="non-virtual"><scope>Fit</scope><name>order</name></member>
      <member refid="class_fit_1a6dd1941f173b91a904be34afca6cd5d0" prot="public" virt="non-virtual"><scope>Fit</scope><name>parameter0</name></member>
      <member refid="class_fit_1abe17456d5a2ccb50497d776f4f63f98b" prot="public" virt="non-virtual"><scope>Fit</scope><name>parameter1</name></member>
      <member refid="class_fit_1a394d86d19fb25ad5facea296ed71bb1e" prot="public" virt="non-virtual"><scope>Fit</scope><name>parameter2</name></member>
      <member refid="class_fit_1a4367b73a3883f085dea1ed2e67a97ac9" prot="public" virt="non-virtual"><scope>Fit</scope><name>parameter3</name></member>
      <member refid="class_fit_1a8f443c41d92e502b2fe55453560457e2" prot="public" virt="non-virtual"><scope>Fit</scope><name>peaks</name></member>
      <member refid="class_fit_1a861a69c651863dcb3b41a788fe73f69d" prot="public" virt="non-virtual"><scope>Fit</scope><name>peaks_found</name></member>
      <member refid="class_fit_1a9b69dacd5f0264c1760f38d9dd19f5dd" prot="public" virt="non-virtual"><scope>Fit</scope><name>resize</name></member>
      <member refid="class_fit_1a522102240db21bfd9dd69f15ea3b3656" prot="public" virt="non-virtual"><scope>Fit</scope><name>scalefactor</name></member>
      <member refid="class_fit_1a5f9e21546ed32f5b53c0692d2c199f1d" prot="public" virt="non-virtual"><scope>Fit</scope><name>setLabel</name></member>
      <member refid="class_fit_1a32663082748ab547b85b14a6f198f086" prot="public" virt="non-virtual"><scope>Fit</scope><name>sigma</name></member>
      <member refid="class_fit_1a912700f52a0a3a3c66c90966ed81581b" prot="public" virt="non-virtual"><scope>Fit</scope><name>size</name></member>
      <member refid="class_fit_1ad12c75a87a239da0768c9c6b869da431" prot="public" virt="non-virtual"><scope>Fit</scope><name>too_few_counts</name></member>
      <member refid="class_fit_1a5a9406e4e285484650609f696d96ffa2" prot="public" virt="non-virtual"><scope>Fit</scope><name>x</name></member>
      <member refid="class_fit_1a36eda8829f68c74fdf657a065481a3f8" prot="public" virt="non-virtual"><scope>Fit</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
