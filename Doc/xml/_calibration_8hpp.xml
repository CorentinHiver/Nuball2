<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_calibration_8hpp" kind="file" language="C++">
    <compoundname>Calibration.hpp</compoundname>
    <includes refid="lib_co_8hpp" local="yes">../libCo.hpp</includes>
    <includes refid="_hit_8hpp" local="yes">../Classes/Hit.hpp</includes>
    <includes refid="_detectors_8hpp" local="yes">../Classes/Detectors.hpp</includes>
    <includes refid="_event_8hpp" local="yes">../Classes/Event.hpp</includes>
    <includes refid="_files_manager_8hpp" local="yes">../Classes/FilesManager.hpp</includes>
    <includes refid="_m_t_faster_reader_8hpp" local="yes">../MTObjects/MTFasterReader.hpp</includes>
    <includes refid="_m_t_root_reader_8hpp" local="yes">../MTObjects/MTRootReader.hpp</includes>
    <includes refid="_m_t_t_hist_8hpp" local="yes">../MTObjects/MTTHist.hpp</includes>
    <includedby refid="_clover_spectra_8hpp" local="yes">lib/Modules/CloverSpectra.hpp</includedby>
    <includedby refid="_faster2_histo_8hpp" local="yes">lib/Modules/Faster2Histo.hpp</includedby>
    <includedby refid="_faster2_root_8hpp" local="yes">lib/Modules/Faster2Root.hpp</includedby>
    <includedby refid="_run_matrixator_8hpp" local="yes">lib/Modules/RunMatrixator.hpp</includedby>
    <incdepgraph>
      <node id="27">
        <label>glob.h</label>
      </node>
      <node id="53">
        <label>TH1S.h</label>
      </node>
      <node id="10">
        <label>iomanip</label>
      </node>
      <node id="9">
        <label>functional</label>
      </node>
      <node id="16">
        <label>queue</label>
      </node>
      <node id="32">
        <label>random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>TTreeIndex.h</label>
      </node>
      <node id="39">
        <label>../libRoot.hpp</label>
        <link refid="lib_root_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>filesystem</label>
      </node>
      <node id="40">
        <label>TAxis.h</label>
      </node>
      <node id="75">
        <label>../MTObjects/MTFasterReader.hpp</label>
        <link refid="_m_t_faster_reader_8hpp"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>stdlib.h</label>
      </node>
      <node id="69">
        <label>TThread.h</label>
      </node>
      <node id="86">
        <label>../Classes/Nuball2Tree.hpp</label>
        <link refid="_nuball2_tree_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>TH1D.h</label>
      </node>
      <node id="65">
        <label>TStopwatch.h</label>
      </node>
      <node id="18">
        <label>stdexcept</label>
      </node>
      <node id="15">
        <label>numeric</label>
      </node>
      <node id="76">
        <label>../Classes/FasterReader.hpp</label>
        <link refid="_faster_reader_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>string</label>
      </node>
      <node id="81">
        <label>fasterac/utils.h</label>
      </node>
      <node id="12">
        <label>map</label>
      </node>
      <node id="88">
        <label>MTCounter.hpp</label>
        <link refid="_m_t_counter_8hpp"/>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>fasterac/adc.h</label>
      </node>
      <node id="38">
        <label>../Classes/Hit.hpp</label>
        <link refid="_hit_8hpp"/>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../libCo.hpp</label>
        <link refid="lib_co_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>fasterac/rf.h</label>
      </node>
      <node id="44">
        <label>TF1.h</label>
      </node>
      <node id="31">
        <label>print.hpp</label>
        <link refid="print_8hpp"/>
      </node>
      <node id="8">
        <label>fstream</label>
      </node>
      <node id="84">
        <label>MTList.hpp</label>
        <link refid="_m_t_list_8hpp"/>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>TError.h</label>
      </node>
      <node id="67">
        <label>TStyle.h</label>
      </node>
      <node id="3">
        <label>any</label>
      </node>
      <node id="87">
        <label>../MTObjects/MTTHist.hpp</label>
        <link refid="_m_t_t_hist_8hpp"/>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>files_functions.hpp</label>
        <link refid="files__functions_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>random</label>
      </node>
      <node id="63">
        <label>TROOT.h</label>
      </node>
      <node id="30">
        <label>string.h</label>
      </node>
      <node id="23">
        <label>typeinfo</label>
      </node>
      <node id="72">
        <label>../Classes/Detectors.hpp</label>
        <link refid="_detectors_8hpp"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>TChain.h</label>
      </node>
      <node id="73">
        <label>../Classes/Event.hpp</label>
        <link refid="_event_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>TSystem.h</label>
      </node>
      <node id="25">
        <label>vector</label>
      </node>
      <node id="20">
        <label>stack</label>
      </node>
      <node id="45">
        <label>TF2.h</label>
      </node>
      <node id="46">
        <label>TFile.h</label>
      </node>
      <node id="41">
        <label>TCanvas.h</label>
      </node>
      <node id="56">
        <label>TH3I.h</label>
      </node>
      <node id="57">
        <label>TKey.h</label>
      </node>
      <node id="36">
        <label>vector_functions.hpp</label>
        <link refid="vector__functions_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>fasterac/qdc.h</label>
      </node>
      <node id="64">
        <label>TSpectrum.h</label>
      </node>
      <node id="4">
        <label>array</label>
      </node>
      <node id="48">
        <label>TFitResult.h</label>
      </node>
      <node id="17">
        <label>sstream</label>
      </node>
      <node id="60">
        <label>TMarker.h</label>
      </node>
      <node id="50">
        <label>TGraphErrors.h</label>
      </node>
      <node id="54">
        <label>TH2.h</label>
      </node>
      <node id="6">
        <label>cstdlib</label>
      </node>
      <node id="51">
        <label>TH1F.h</label>
      </node>
      <node id="58">
        <label>TLeaf.h</label>
      </node>
      <node id="11">
        <label>iostream</label>
      </node>
      <node id="34">
        <label>string_functions.hpp</label>
        <link refid="string__functions_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>unordered_map</label>
      </node>
      <node id="59">
        <label>TLegend.h</label>
      </node>
      <node id="66">
        <label>TString.h</label>
      </node>
      <node id="61">
        <label>TMath.h</label>
      </node>
      <node id="55">
        <label>TH2F.h</label>
      </node>
      <node id="14">
        <label>mutex</label>
      </node>
      <node id="83">
        <label>MTObject.hpp</label>
        <link refid="_m_t_object_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>thread</label>
      </node>
      <node id="62">
        <label>TRandom.h</label>
      </node>
      <node id="70">
        <label>TTree.h</label>
      </node>
      <node id="78">
        <label>fasterac/group.h</label>
      </node>
      <node id="5">
        <label>algorithm</label>
      </node>
      <node id="47">
        <label>TFitResultPtr.h</label>
      </node>
      <node id="82">
        <label>../Classes/Alignator.hpp</label>
        <link refid="_alignator_8hpp"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>stdio.h</label>
      </node>
      <node id="74">
        <label>../Classes/FilesManager.hpp</label>
        <link refid="_files_manager_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cstring</label>
      </node>
      <node id="85">
        <label>../MTObjects/MTRootReader.hpp</label>
        <link refid="_m_t_root_reader_8hpp"/>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>TGraph.h</label>
      </node>
      <node id="13">
        <label>memory</label>
      </node>
      <node id="22">
        <label>typeindex</label>
      </node>
      <node id="1">
        <label>lib/Modules/Calibration.hpp</label>
        <link refid="_calibration_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>lib/Modules/Faster2Histo.hpp</label>
        <link refid="_faster2_histo_8hpp"/>
      </node>
      <node id="2">
        <label>lib/Modules/CloverSpectra.hpp</label>
        <link refid="_clover_spectra_8hpp"/>
      </node>
      <node id="4">
        <label>lib/Modules/Faster2Root.hpp</label>
        <link refid="_faster2_root_8hpp"/>
      </node>
      <node id="5">
        <label>lib/Modules/RunMatrixator.hpp</label>
        <link refid="_run_matrixator_8hpp"/>
      </node>
      <node id="1">
        <label>lib/Modules/Calibration.hpp</label>
        <link refid="_calibration_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_calibration" prot="public">Calibration</innerclass>
    <innerclass refid="class_fit" prot="public">Fit</innerclass>
    <innerclass refid="struct_calibration_1_1histograms" prot="public">Calibration::histograms</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_calibration_8hpp_1a3e47c22fe90cb9e403d05dc134b6a047" prot="public" static="no">
        <type>std::vector&lt; <ref refid="class_fit" kindref="compound">Fit</ref> &gt;</type>
        <definition>using Fits =  std::vector &lt;Fit&gt;</definition>
        <argsstring></argsstring>
        <name>Fits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="144" column="1" bodyfile="lib/Modules/Calibration.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_calibration_8hpp_1a53eebde5a64b66ea934c2c8a5015b9bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isTripleAlpha</definition>
        <argsstring>(std::string const &amp;source_name)</argsstring>
        <name>isTripleAlpha</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>source_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="546" column="6" bodyfile="lib/Modules/Calibration.hpp" bodystart="546" bodyend="550"/>
        <referencedby refid="class_calibration_1ad6db2742477c8ac64787c6fe8a687aff" compoundref="_calibration_8hpp" startline="552" endline="850">Calibration::peakFinder</referencedby>
      </memberdef>
      <memberdef kind="function" id="_calibration_8hpp_1a4f68d2fe488cf1a3044c1573a16bc394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ofstream &amp;</type>
        <definition>std::ofstream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ofstream &amp;fout, Fit const &amp;fit)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ofstream &amp;</type>
          <declname>fout</declname>
        </param>
        <param>
          <type><ref refid="class_fit" kindref="compound">Fit</ref> const &amp;</type>
          <declname>fit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="123" column="1" bodyfile="lib/Modules/Calibration.hpp" bodystart="123" bodyend="142"/>
        <references refid="class_fit_1a4874f1cf7e73d3add3b14956618a52c8" compoundref="_calibration_8hpp" startline="64" endline="64">Fit::label</references>
        <references refid="class_fit_1a6dd1941f173b91a904be34afca6cd5d0" compoundref="_calibration_8hpp" startline="106">Fit::parameter0</references>
        <references refid="class_fit_1abe17456d5a2ccb50497d776f4f63f98b" compoundref="_calibration_8hpp" startline="107">Fit::parameter1</references>
        <references refid="class_fit_1a394d86d19fb25ad5facea296ed71bb1e" compoundref="_calibration_8hpp" startline="108">Fit::parameter2</references>
        <references refid="class_fit_1a4367b73a3883f085dea1ed2e67a97ac9" compoundref="_calibration_8hpp" startline="109">Fit::parameter3</references>
      </memberdef>
      <memberdef kind="function" id="_calibration_8hpp_1abacd32722d973dc5cde6c73482b0e615" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;cout, Calibration const &amp;calib)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>cout</declname>
        </param>
        <param>
          <type><ref refid="class_calibration" kindref="compound">Calibration</ref> const &amp;</type>
          <declname>calib</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibration.hpp" line="1203" column="1" bodyfile="lib/Modules/Calibration.hpp" bodystart="1203" bodyend="1211"/>
        <references refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813">detectors</references>
        <references refid="class_detectors_1a47ae394beae7efa2fb8fa1a3c7f8427d" compoundref="_detectors_8hpp" startline="62" endline="62">Detectors::exists</references>
        <references refid="class_detectors_1a1177661fb15c9825755925faf00c8398" compoundref="_detectors_8hpp" startline="74" endline="74">Detectors::size</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>CALIBRATION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CALIBRATION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../libCo.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Classes/Hit.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Classes/Detectors.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Classes/Event.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Classes/FilesManager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../MTObjects/MTFasterReader.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../MTObjects/MTRootReader.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../MTObjects/MTTHist.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>are<sp/>declared<sp/>at<sp/>the<sp/>end<sp/>:</highlight></codeline>
<codeline lineno="20" refid="class_fit" refkind="compound"><highlight class="comment"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_fit" kindref="compound">Fit</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23" refid="class_fit_1abd77d8fae160b06c58643a7f11e64625" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_fit_1abd77d8fae160b06c58643a7f11e64625" kindref="member">Fit</ref>(){};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_fit_1a9b69dacd5f0264c1760f38d9dd19f5dd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fit_1a9b69dacd5f0264c1760f38d9dd19f5dd" kindref="member">resize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_fit_1a9c248d8b560bede53a0c550418bf2604" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1a8f443c41d92e502b2fe55453560457e2" kindref="member">peaks</ref>.resize(<ref refid="class_fit_1a9c248d8b560bede53a0c550418bf2604" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1ac752a6bea753f20d4a8ed0a887447d7c" kindref="member">cmeasures</ref>.resize(<ref refid="class_fit_1a9c248d8b560bede53a0c550418bf2604" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1a75cecf55da1498d8bdd870108123245e" kindref="member">mean</ref>.resize(<ref refid="class_fit_1a9c248d8b560bede53a0c550418bf2604" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1a32663082748ab547b85b14a6f198f086" kindref="member">sigma</ref>.resize(<ref refid="class_fit_1a9c248d8b560bede53a0c550418bf2604" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fit_1a8c319eaa8c1924d691ca348e60032392" kindref="member">clear</ref>()</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1a8f443c41d92e502b2fe55453560457e2" kindref="member">peaks</ref>.clear();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1ac752a6bea753f20d4a8ed0a887447d7c" kindref="member">cmeasures</ref>.clear();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1a75cecf55da1498d8bdd870108123245e" kindref="member">mean</ref>.clear();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1a32663082748ab547b85b14a6f198f086" kindref="member">sigma</ref>.clear();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1a5a9406e4e285484650609f696d96ffa2" kindref="member">x</ref>.clear()<sp/>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1a36eda8829f68c74fdf657a065481a3f8" kindref="member">y</ref>.clear()<sp/>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1afffcdcd0341476a634e763b8bb2158ce" kindref="member">ex</ref>.clear();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1a6777a3d0b233e491b99c6b22ba1b7290" kindref="member">ey</ref>.clear();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1a73dca59c79cb77deda29c834c50e00b6" kindref="member">integral</ref><sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1ac128f10e2e52aa39445e4363168d5f73" kindref="member">chi2</ref><sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1a6dd1941f173b91a904be34afca6cd5d0" kindref="member">parameter0</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1abe17456d5a2ccb50497d776f4f63f98b" kindref="member">parameter1</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1a394d86d19fb25ad5facea296ed71bb1e" kindref="member">parameter2</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1a4367b73a3883f085dea1ed2e67a97ac9" kindref="member">parameter3</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1a522102240db21bfd9dd69f15ea3b3656" kindref="member">scalefactor</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1a8f850d65b0e25b4f54f321308370b938" kindref="member">keVperADC</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1a09a8cb0e9a300f8aeef67fcd267cb8f2" kindref="member">order</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1a964131fabef1652357c6f1dd08f9f2de" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1a6d22c746466b2251a9f9d9e1f5f54ba8" kindref="member">m_label</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1a9d7412f72df96bb282ed09d2657e949a" kindref="member">m_exist</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1af46c866fd64724443acf723c14270584" kindref="member">m_enough_counts</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit_1af724fb046ea4e5c1bf6cdffd5f9cacb5" kindref="member">m_peaks_found</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="class_fit_1a4874f1cf7e73d3add3b14956618a52c8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_fit_1a4874f1cf7e73d3add3b14956618a52c8" kindref="member">label</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_fit_1a6d22c746466b2251a9f9d9e1f5f54ba8" kindref="member">m_label</ref>;}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="class_fit_1a9c248d8b560bede53a0c550418bf2604" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_fit_1a9c248d8b560bede53a0c550418bf2604" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_fit_1a8f443c41d92e502b2fe55453560457e2" kindref="member">peaks</ref>.size();};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="class_fit_1aa524861d860cc6384c92425166453e93" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_fit_1aa524861d860cc6384c92425166453e93" kindref="member">exists</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_fit_1a9d7412f72df96bb282ed09d2657e949a" kindref="member">m_exist</ref>;}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_fit_1a0c3b74202459b21a89949d1764c821ac" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_fit_1a0c3b74202459b21a89949d1764c821ac" kindref="member">enough_counts</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_fit_1af46c866fd64724443acf723c14270584" kindref="member">m_enough_counts</ref>;}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_fit_1abaca326b14541eeb51a3bcac88c1d40e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_fit_1abaca326b14541eeb51a3bcac88c1d40e" kindref="member">found_peaks</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_fit_1af724fb046ea4e5c1bf6cdffd5f9cacb5" kindref="member">m_peaks_found</ref>;}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="class_fit_1a5f9e21546ed32f5b53c0692d2c199f1d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fit_1a5f9e21546ed32f5b53c0692d2c199f1d" kindref="member">setLabel</ref>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_fit_1a4874f1cf7e73d3add3b14956618a52c8" kindref="member">label</ref>)<sp/>{<ref refid="class_fit_1a6d22c746466b2251a9f9d9e1f5f54ba8" kindref="member">m_label</ref><sp/>=<sp/><ref refid="class_fit_1a4874f1cf7e73d3add3b14956618a52c8" kindref="member">label</ref>;}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="class_fit_1aace9236c432ee27bd3c208911b7a396d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_fit_1aace9236c432ee27bd3c208911b7a396d" kindref="member">exists</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exist)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_fit_1a9d7412f72df96bb282ed09d2657e949a" kindref="member">m_exist</ref><sp/>=<sp/><ref refid="lib_co_8hpp_1a79092fe2f0694bdbb860894b0f983e32" kindref="member">bool_cast</ref>(exist));}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="class_fit_1ad12c75a87a239da0768c9c6b869da431" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_fit_1ad12c75a87a239da0768c9c6b869da431" kindref="member">too_few_counts</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>few_counts)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_fit_1af46c866fd64724443acf723c14270584" kindref="member">m_enough_counts</ref><sp/>=<sp/><ref refid="lib_co_8hpp_1a79092fe2f0694bdbb860894b0f983e32" kindref="member">bool_cast</ref>(!few_counts));}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="class_fit_1a861a69c651863dcb3b41a788fe73f69d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_fit_1a861a69c651863dcb3b41a788fe73f69d" kindref="member">peaks_found</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="string__functions_8hpp_1a03fb03d95885354ac3c329693588097b" kindref="member">found</ref>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_fit_1af724fb046ea4e5c1bf6cdffd5f9cacb5" kindref="member">m_peaks_found</ref><sp/>=<sp/><ref refid="lib_co_8hpp_1a79092fe2f0694bdbb860894b0f983e32" kindref="member">bool_cast</ref>(<ref refid="string__functions_8hpp_1a03fb03d95885354ac3c329693588097b" kindref="member">found</ref>));}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="class_fit_1a8f443c41d92e502b2fe55453560457e2" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="class_fit_1a8f443c41d92e502b2fe55453560457e2" kindref="member">peaks</ref>;</highlight></codeline>
<codeline lineno="93" refid="class_fit_1ac752a6bea753f20d4a8ed0a887447d7c" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="class_fit_1ac752a6bea753f20d4a8ed0a887447d7c" kindref="member">cmeasures</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="class_fit_1a75cecf55da1498d8bdd870108123245e" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="class_fit_1a75cecf55da1498d8bdd870108123245e" kindref="member">mean</ref>;</highlight></codeline>
<codeline lineno="96" refid="class_fit_1a32663082748ab547b85b14a6f198f086" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="class_fit_1a32663082748ab547b85b14a6f198f086" kindref="member">sigma</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_fit_1a5a9406e4e285484650609f696d96ffa2" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="class_fit_1a5a9406e4e285484650609f696d96ffa2" kindref="member">x</ref><sp/>;</highlight></codeline>
<codeline lineno="99" refid="class_fit_1a36eda8829f68c74fdf657a065481a3f8" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="class_fit_1a36eda8829f68c74fdf657a065481a3f8" kindref="member">y</ref><sp/>;</highlight></codeline>
<codeline lineno="100" refid="class_fit_1afffcdcd0341476a634e763b8bb2158ce" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="class_fit_1afffcdcd0341476a634e763b8bb2158ce" kindref="member">ex</ref>;</highlight></codeline>
<codeline lineno="101" refid="class_fit_1a6777a3d0b233e491b99c6b22ba1b7290" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="class_fit_1a6777a3d0b233e491b99c6b22ba1b7290" kindref="member">ey</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="class_fit_1a73dca59c79cb77deda29c834c50e00b6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_fit_1a73dca59c79cb77deda29c834c50e00b6" kindref="member">integral</ref><sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="105" refid="class_fit_1ac128f10e2e52aa39445e4363168d5f73" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_fit_1ac128f10e2e52aa39445e4363168d5f73" kindref="member">chi2</ref><sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="106" refid="class_fit_1a6dd1941f173b91a904be34afca6cd5d0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_fit_1a6dd1941f173b91a904be34afca6cd5d0" kindref="member">parameter0</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="107" refid="class_fit_1abe17456d5a2ccb50497d776f4f63f98b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_fit_1abe17456d5a2ccb50497d776f4f63f98b" kindref="member">parameter1</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="108" refid="class_fit_1a394d86d19fb25ad5facea296ed71bb1e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_fit_1a394d86d19fb25ad5facea296ed71bb1e" kindref="member">parameter2</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="109" refid="class_fit_1a4367b73a3883f085dea1ed2e67a97ac9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_fit_1a4367b73a3883f085dea1ed2e67a97ac9" kindref="member">parameter3</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="110" refid="class_fit_1a522102240db21bfd9dd69f15ea3b3656" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_fit_1a522102240db21bfd9dd69f15ea3b3656" kindref="member">scalefactor</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="111" refid="class_fit_1a8f850d65b0e25b4f54f321308370b938" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_fit_1a8f850d65b0e25b4f54f321308370b938" kindref="member">keVperADC</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="112" refid="class_fit_1a09a8cb0e9a300f8aeef67fcd267cb8f2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21" kindref="member">uchar</ref><sp/><ref refid="class_fit_1a09a8cb0e9a300f8aeef67fcd267cb8f2" kindref="member">order</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="class_fit_1a964131fabef1652357c6f1dd08f9f2de" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_fit_1a964131fabef1652357c6f1dd08f9f2de" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="117" refid="class_fit_1a6d22c746466b2251a9f9d9e1f5f54ba8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/><ref refid="class_fit_1a6d22c746466b2251a9f9d9e1f5f54ba8" kindref="member">m_label</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="118" refid="class_fit_1a9d7412f72df96bb282ed09d2657e949a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_fit_1a9d7412f72df96bb282ed09d2657e949a" kindref="member">m_exist</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119" refid="class_fit_1af46c866fd64724443acf723c14270584" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_fit_1af46c866fd64724443acf723c14270584" kindref="member">m_enough_counts</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120" refid="class_fit_1af724fb046ea4e5c1bf6cdffd5f9cacb5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_fit_1af724fb046ea4e5c1bf6cdffd5f9cacb5" kindref="member">m_peaks_found</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="_calibration_8hpp_1a4f68d2fe488cf1a3044c1573a16bc394" refkind="member"><highlight class="normal">std::ofstream&amp;<sp/><ref refid="_calibration_8hpp_1a4f68d2fe488cf1a3044c1573a16bc394" kindref="member">operator&lt;&lt;</ref>(std::ofstream&amp;<sp/>fout,<sp/><ref refid="class_fit" kindref="compound">Fit</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>fit)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>fout<sp/>&lt;&lt;<sp/>fit.<ref refid="class_fit_1a4874f1cf7e73d3add3b14956618a52c8" kindref="member">label</ref>();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>fout<sp/>&lt;&lt;<sp/>std::setprecision(4);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fit.<ref refid="class_fit_1a6dd1941f173b91a904be34afca6cd5d0" kindref="member">parameter0</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>fout<sp/>&lt;&lt;<sp/>std::setprecision(6);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fit.<ref refid="class_fit_1abe17456d5a2ccb50497d776f4f63f98b" kindref="member">parameter1</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fit.<ref refid="class_fit_1a394d86d19fb25ad5facea296ed71bb1e" kindref="member">parameter2</ref>!=0.0)<sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/>std::setprecision(8);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fit.<ref refid="class_fit_1a394d86d19fb25ad5facea296ed71bb1e" kindref="member">parameter2</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fit.<ref refid="class_fit_1a4367b73a3883f085dea1ed2e67a97ac9" kindref="member">parameter3</ref>!=0.0)<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/>std::setprecision(10);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fit.<ref refid="class_fit_1a4367b73a3883f085dea1ed2e67a97ac9" kindref="member">parameter3</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>fout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fout;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="_calibration_8hpp_1a3e47c22fe90cb9e403d05dc134b6a047" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_calibration_8hpp_1a3e47c22fe90cb9e403d05dc134b6a047" kindref="member">Fits</ref><sp/>=<sp/>std::vector<sp/>&lt;Fit&gt;;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="class_calibration" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_calibration" kindref="compound">Calibration</ref></highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="struct_calibration_1_1histograms" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_calibration_1_1histograms" kindref="compound">histograms</ref></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Raw<sp/>spectra<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="struct_calibration_1_1histograms_1a4665ea6699e47b50df6103317d87d36b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e" kindref="member">Vector_MTTHist&lt;TH1F&gt;</ref><sp/><ref refid="struct_calibration_1_1histograms_1a4665ea6699e47b50df6103317d87d36b" kindref="member">raw_spectra</ref>;</highlight></codeline>
<codeline lineno="158" refid="struct_calibration_1_1histograms_1a7459f2c745533444d1d7958fa192dd56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_t_t_hist" kindref="compound">MTTHist&lt;TH2F&gt;</ref><sp/><ref refid="struct_calibration_1_1histograms_1a7459f2c745533444d1d7958fa192dd56" kindref="member">all_raw_spectra</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calibrated<sp/>spectra<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="struct_calibration_1_1histograms_1a8b5260e1a8f3434d96c5cd83402a48fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e" kindref="member">Vector_MTTHist&lt;TH1F&gt;</ref><sp/><ref refid="struct_calibration_1_1histograms_1a8b5260e1a8f3434d96c5cd83402a48fc" kindref="member">calib_spectra</ref>;</highlight></codeline>
<codeline lineno="162" refid="struct_calibration_1_1histograms_1a4e3132f86e81180b0e35833ed839057d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e" kindref="member">Vector_MTTHist&lt;TH2F&gt;</ref><sp/><ref refid="struct_calibration_1_1histograms_1a4e3132f86e81180b0e35833ed839057d" kindref="member">all_calib</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Other<sp/>spectra<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="struct_calibration_1_1histograms_1a6993a369903dab26282e44875e604d6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>TH1F*&gt;<sp/><ref refid="struct_calibration_1_1histograms_1a6993a369903dab26282e44875e604d6a" kindref="member">spectra</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_calibration_1_1histograms_1a911cfd2064bd94694cd0731aa6afccfa" kindref="member">Initialize</ref>();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_calibration_1_1histograms_1a8cf05daf9b9f1ee4ec9d1763acc2c307" kindref="member">setBins</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>parameters);</highlight></codeline>
<codeline lineno="169" refid="struct_calibration_1_1histograms_1af1e9037776e922dcc96614e080a23ba3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_calibration_1_1histograms_1af1e9037776e922dcc96614e080a23ba3" kindref="member">initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170" refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" refkind="member"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" kindref="member">m_histos</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>~Calibration()<sp/>{for<sp/>(auto<sp/>&amp;<sp/>histo<sp/>:<sp/>m_histos.spectra)<sp/>if<sp/>(histo.second)<sp/>delete<sp/>histo.second;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="class_calibration_1a80f51a5ff7ec0f44d5388c9a61d1f20b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_calibration_1a80f51a5ff7ec0f44d5388c9a61d1f20b" kindref="member">Calibration</ref>()<sp/>{<ref refid="class_calibration_1aea5e9bf6d006f5e26702953552e97dec" kindref="member">m_ok</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="class_calibration_1a8e35cee6894b7e32cb4e6dcbbe26a0c4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_calibration_1a8e35cee6894b7e32cb4e6dcbbe26a0c4" kindref="member">Calibration</ref><sp/>(<ref refid="class_calibration" kindref="compound">Calibration</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>otherCalib)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1aea5e9bf6d006f5e26702953552e97dec" kindref="member">m_ok</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>otherCalib.<ref refid="class_calibration_1aea5e9bf6d006f5e26702953552e97dec" kindref="member">m_ok</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1a2988b922363b5d090771be9961254cbc" kindref="member">m_nb_detectors</ref><sp/><sp/>=<sp/>otherCalib.<ref refid="class_calibration_1a2988b922363b5d090771be9961254cbc" kindref="member">m_nb_detectors</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" kindref="member">m_size</ref><sp/><sp/><sp/><sp/>=<sp/>otherCalib.<ref refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" kindref="member">m_size</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" kindref="member">m_order</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>otherCalib.<ref refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" kindref="member">m_order</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" kindref="member">m_intercept</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>otherCalib.<ref refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" kindref="member">m_intercept</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" kindref="member">m_slope</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>otherCalib.<ref refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" kindref="member">m_slope</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" kindref="member">m_binom</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>otherCalib.<ref refid="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" kindref="member">m_binom</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1a33557fc219e93f9afe9ae38e12e649b7" kindref="member">m_trinom</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>otherCalib.<ref refid="class_calibration_1a33557fc219e93f9afe9ae38e12e649b7" kindref="member">m_trinom</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="class_calibration_1a8dccc9ef965732a47d4d47df551baa39" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_calibration" kindref="compound">Calibration</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_calibration_1a8dccc9ef965732a47d4d47df551baa39" kindref="member">operator=</ref>(<ref refid="class_calibration" kindref="compound">Calibration</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>otherCalib)<sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1aea5e9bf6d006f5e26702953552e97dec" kindref="member">m_ok</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>otherCalib.<ref refid="class_calibration_1aea5e9bf6d006f5e26702953552e97dec" kindref="member">m_ok</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1a2988b922363b5d090771be9961254cbc" kindref="member">m_nb_detectors</ref><sp/><sp/>=<sp/>otherCalib.<ref refid="class_calibration_1a2988b922363b5d090771be9961254cbc" kindref="member">m_nb_detectors</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" kindref="member">m_size</ref><sp/><sp/><sp/><sp/>=<sp/>otherCalib.<ref refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" kindref="member">m_size</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" kindref="member">m_order</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>otherCalib.<ref refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" kindref="member">m_order</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" kindref="member">m_intercept</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>otherCalib.<ref refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" kindref="member">m_intercept</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" kindref="member">m_slope</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>otherCalib.<ref refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" kindref="member">m_slope</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" kindref="member">m_binom</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>otherCalib.<ref refid="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" kindref="member">m_binom</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1a33557fc219e93f9afe9ae38e12e649b7" kindref="member">m_trinom</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>otherCalib.<ref refid="class_calibration_1a33557fc219e93f9afe9ae38e12e649b7" kindref="member">m_trinom</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="class_calibration_1a7f6c78bdfc53cf5adc6ec67c2f182f16" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_calibration_1a7f6c78bdfc53cf5adc6ec67c2f182f16" kindref="member">Calibration</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>calibFileName)<sp/>{<ref refid="class_calibration_1a2d2a0d6276fc2c8a4b60c3801ccc16a9" kindref="member">load</ref>(calibFileName);}</highlight></codeline>
<codeline lineno="205" refid="class_calibration_1a336bd1a54676bff92a192e8df26232ac" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_calibration_1a336bd1a54676bff92a192e8df26232ac" kindref="member">Calibration</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>calibFileName)<sp/>{<ref refid="class_calibration_1a2d2a0d6276fc2c8a4b60c3801ccc16a9" kindref="member">load</ref>(calibFileName);}</highlight></codeline>
<codeline lineno="206" refid="class_calibration_1ab070c5678eee652bbb3186e6cbd37b9e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_calibration" kindref="compound">Calibration</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_calibration_1ab070c5678eee652bbb3186e6cbd37b9e" kindref="member">operator=</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>calibFileName)<sp/>{<ref refid="class_calibration_1a2d2a0d6276fc2c8a4b60c3801ccc16a9" kindref="member">load</ref>(calibFileName);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a2d2a0d6276fc2c8a4b60c3801ccc16a9" kindref="member">load</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>calibFileName);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1aa7e921cbc724d97d1a3ef30a4f988e63" kindref="member">calculate</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>dataDir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_files<sp/>=<sp/>-1,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>source<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;152Eu&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fast&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1aa7e921cbc724d97d1a3ef30a4f988e63" kindref="member">calculate</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>histograms,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>source<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;152Eu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="class_calibration_1a2f91a6803bf8008bd7b748d4a1688338" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a2f91a6803bf8008bd7b748d4a1688338" kindref="member">Initialize</ref>()<sp/>{<ref refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" kindref="member">m_histos</ref>.<ref refid="struct_calibration_1_1histograms_1a911cfd2064bd94694cd0731aa6afccfa" kindref="member">Initialize</ref>();<sp/><ref refid="class_calibration_1ad17169e9dbae0e5ec2e63f60f1eebdf3" kindref="member">m_fits</ref>.resize(1000);}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a6d6d354f65db38acf12addf1efb7c815" kindref="member">loadRootData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>dataDir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_files<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a58f794ed6862bc71c09b440e63ea94f1" kindref="member">loadRootDataThread</ref>(<ref refid="class_calibration" kindref="compound">Calibration</ref><sp/>&amp;<sp/>calib,<sp/><ref refid="class_m_t_vector" kindref="compound">MTList</ref><sp/>&amp;<sp/>list);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1afd14ef8f1b6cee6cf7abc10783ee318e" kindref="member">fillRootDataHisto</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a6514307ca111ecc5d6f02694373dc5ec" kindref="member">loadFasterData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>dataDir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_files<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1ae62aaba8d0f0f77aecf89a5ad1e7605a" kindref="member">fillHisto</ref>(<ref refid="class_hit" kindref="compound">Hit</ref><sp/>&amp;<sp/>hit,<sp/><ref refid="class_faster_reader" kindref="compound">FasterReader</ref><sp/>&amp;<sp/>reader,<sp/><ref refid="class_calibration" kindref="compound">Calibration</ref><sp/>&amp;<sp/>calib);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1ae6bbaf8b283a345c9936a907fcba1849" kindref="member">analyse</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>source<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;152Eu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1ad6db2742477c8ac64787c6fe8a687aff" kindref="member">peakFinder</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1aea14328cc8a0ab1cf559cd07f8c6a065" kindref="member">fitCalibration</ref>(<ref refid="_calibration_8hpp_1a3e47c22fe90cb9e403d05dc134b6a047" kindref="member">Fits</ref><sp/>&amp;<sp/>fits);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a53565d0fe7d92fd6d5d94eee5a97f1b8" kindref="member">writePosPeaks</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outfilename);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a7e89a0c788e7ad97c2a9cea5e02ef3f2" kindref="member">writeData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outfilename);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a062cb134d4b82246ba9c89c567a32963" kindref="member">writeRawRoot</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outfilename);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a344dc3d6feab3580e859cc693c2fdd4a" kindref="member">verify</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outfilename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;verify&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a8ff8375eee244f2b22b86914a1d559bc" kindref="member">writeCalibratedHisto</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outfilename);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="class_calibration_1a1309d57acace816189615a841b38e45e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a1309d57acace816189615a841b38e45e" kindref="member">setSource</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>source)<sp/>{<ref refid="class_calibration_1a9057002e470a0cb2f7b6353ebf8ceb1f" kindref="member">m_source</ref><sp/>=<sp/>source;}</highlight></codeline>
<codeline lineno="235" refid="class_calibration_1ad7edc19a4eb1ea5d4af680152ce14521" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1ad7edc19a4eb1ea5d4af680152ce14521" kindref="member">verbose</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_verbose)<sp/>{<ref refid="class_calibration_1a8e0d431465c589e805f74aacfabeb1d7" kindref="member">m_verbose</ref><sp/>=<sp/>_verbose;}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a7835b1d9192d2c9fa8dcd8efbceb8db3" kindref="member">loadRootHisto</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>histograms);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="class_calibration_1a1732880c01e21df259b4ff45dba24c59" kindref="member">calibrate</ref>(<ref refid="class_hit" kindref="compound">Hit</ref><sp/>&amp;<sp/>hit)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NRJ<sp/>calibrate(ADC<sp/>const<sp/>&amp;<sp/>adc,<sp/>Label<sp/>const<sp/>&amp;<sp/>label)<sp/>const<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref><sp/><ref refid="class_calibration_1a1732880c01e21df259b4ff45dba24c59" kindref="member">calibrate</ref>(<ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nrj,<sp/><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>label)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>ARGS&gt;</highlight></codeline>
<codeline lineno="250" refid="class_calibration_1a7765db4a6f5a278f82d1462bde812c32" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a7765db4a6f5a278f82d1462bde812c32" kindref="member">operator()</ref>(ARGS<sp/>&amp;&amp;...<sp/>args)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a1732880c01e21df259b4ff45dba24c59" kindref="member">calibrate</ref>(std::forward&lt;ARGS&gt;(args)...);}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a5931047806db77858db6886d041db100" kindref="member">calibrateFasterData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>folder,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_files<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1ac7678b0524f8407659a9594b3862e5c3" kindref="member">calibrateRootData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>folder,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_files<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="254" refid="class_calibration_1a0b91d7d6484d4c4b8af93a0709b94291" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_calibration_1a0b91d7d6484d4c4b8af93a0709b94291" kindref="member">calibrate_data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1afa4ecd691e71e5b13504bfe7d71950ac" kindref="member">m_calibrate_data</ref>;}</highlight></codeline>
<codeline lineno="255" refid="class_calibration_1a1fd883ea005baf150b37cdf8ccf68014" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_calibration_1a1fd883ea005baf150b37cdf8ccf68014" kindref="member">calibrate_data</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1afa4ecd691e71e5b13504bfe7d71950ac" kindref="member">m_calibrate_data</ref>;}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a6ad79450d0bb55baa744f6436f84dbbe" kindref="member">writeCalibratedData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outfilename);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="class_calibration_1abbc453abf77e6b7a2a10cebd21021578" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_calibration_1abbc453abf77e6b7a2a10cebd21021578" kindref="member">isFilled</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1aea5e9bf6d006f5e26702953552e97dec" kindref="member">m_ok</ref>;}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1aaba010db225b8b01931d013eefda800b" kindref="member">Print</ref>();</highlight></codeline>
<codeline lineno="261" refid="class_calibration_1acfdcf94af247e6907aa09d086c1e4186" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_calibration_1acfdcf94af247e6907aa09d086c1e4186" kindref="member">file</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1ada2b7de482524ffd3e0a9b6038e3d6de" kindref="member">m_filename</ref>;}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="class_calibration_1a5c7e1af9dbc7e67aee28e8da897fb29e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>bool()<sp/>const<sp/>&amp;<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1aea5e9bf6d006f5e26702953552e97dec" kindref="member">m_ok</ref><sp/>&amp;&amp;<sp/><ref refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" kindref="member">m_size</ref>&gt;0);}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//DEV<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>calibrate_fast(Hit<sp/>&amp;<sp/>hit){}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>calibrate_fast(Label<sp/>label,<sp/>ADC<sp/>energy,<sp/>NRJ<sp/>energy_calibrated){}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a72f3838ece8f07239511fac7c09b1e8c" kindref="member">setCalibrationTables</ref>();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="class_calibration_1ac4b8f57b3d896cda20a6aa3ba04a78e7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_calibration_1ac4b8f57b3d896cda20a6aa3ba04a78e7" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a2988b922363b5d090771be9961254cbc" kindref="member">m_nb_detectors</ref>;}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Accessors<sp/>to<sp/>the<sp/>calibration<sp/>vectors<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="class_calibration_1aa05242b317e800e0c3661e03f219fd19" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;NRJ&gt;<sp/><ref refid="class_calibration_1aa05242b317e800e0c3661e03f219fd19" kindref="member">operator[]</ref>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>label)</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="275"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" kindref="member">m_order</ref>[label])</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0<sp/>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{0};</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1<sp/>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<ref refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" kindref="member">m_intercept</ref>[label],<sp/><ref refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" kindref="member">m_slope</ref>[label]};</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2<sp/>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<ref refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" kindref="member">m_intercept</ref>[label],<sp/><ref refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" kindref="member">m_slope</ref>[label],<sp/><ref refid="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" kindref="member">m_binom</ref>[label]};</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3<sp/>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<ref refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" kindref="member">m_intercept</ref>[label],<sp/><ref refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" kindref="member">m_slope</ref>[label],<sp/><ref refid="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" kindref="member">m_binom</ref>[label],<sp/><ref refid="class_calibration_1a33557fc219e93f9afe9ae38e12e649b7" kindref="member">m_trinom</ref>[label]};</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>default<sp/>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{0};</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="class_calibration_1a24ea2b9275978de50b573394840c1f37" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_calibration_1a24ea2b9275978de50b573394840c1f37" kindref="member">getOrder</ref>()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" kindref="member">m_order</ref><sp/><sp/><sp/><sp/>;}</highlight></codeline>
<codeline lineno="287" refid="class_calibration_1aedbbf3043605ea4bce5044113484b5dd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_calibration_1aedbbf3043605ea4bce5044113484b5dd" kindref="member">getIntercept</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" kindref="member">m_intercept</ref>;}</highlight></codeline>
<codeline lineno="288" refid="class_calibration_1abb43af389c40ed02d3bf982ceeb3a8a1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_calibration_1abb43af389c40ed02d3bf982ceeb3a8a1" kindref="member">getSlope</ref>()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" kindref="member">m_slope</ref><sp/><sp/><sp/><sp/>;}</highlight></codeline>
<codeline lineno="289" refid="class_calibration_1a723ff9aee7af762a1b7302472008f97b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_calibration_1a723ff9aee7af762a1b7302472008f97b" kindref="member">getBinom</ref>()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" kindref="member">m_binom</ref><sp/><sp/><sp/><sp/>;}</highlight></codeline>
<codeline lineno="290" refid="class_calibration_1a5cb5385a26267978aa3b9c2846c76ebd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_calibration_1a5cb5385a26267978aa3b9c2846c76ebd" kindref="member">getTrinom</ref>()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a33557fc219e93f9afe9ae38e12e649b7" kindref="member">m_trinom</ref><sp/><sp/><sp/>;}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="class_calibration_1ac6510b729a9d8f0803760c2939527df5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1ac6510b729a9d8f0803760c2939527df5" kindref="member">treatOnlyParis</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>b<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{<ref refid="class_calibration_1a5198af653597c26d18433c6f28bdc171" kindref="member">m_treatOnlyParis</ref><sp/>=<sp/>b;}</highlight></codeline>
<codeline lineno="293" refid="class_calibration_1ae0589067deaac25425e5db02d8c06551" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1ae0589067deaac25425e5db02d8c06551" kindref="member">treatOnlyGe</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>b<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{<ref refid="class_calibration_1a75bc8afd8de82f44b5e698aab02ebedc" kindref="member">m_treatOnlyGe</ref><sp/>=<sp/>b;}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Private<sp/>methods<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1ab1502564e126e769e782d221d42608c7" kindref="member">set</ref>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/>label,<sp/><ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref><sp/>intercept,<sp/><ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref><sp/>slope,<sp/><ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref><sp/>binom,<sp/><ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref><sp/>trinom);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Attributs<sp/>for<sp/>the<sp/>calculations<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="class_calibration_1a8e0d431465c589e805f74aacfabeb1d7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_calibration_1a8e0d431465c589e805f74aacfabeb1d7" kindref="member">m_verbose</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301" refid="class_calibration_1af45a5eab10d1d3eb0b15a34baf1908c7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_calibration_1af45a5eab10d1d3eb0b15a34baf1908c7" kindref="member">m_residus</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302" refid="class_calibration_1a70510eaabac228f419cf7c253055292d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_calibration_1a70510eaabac228f419cf7c253055292d" kindref="member">m_outRoot_b</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303" refid="class_calibration_1a9057002e470a0cb2f7b6353ebf8ceb1f" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_calibration_1a9057002e470a0cb2f7b6353ebf8ceb1f" kindref="member">m_source</ref><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304" refid="class_calibration_1a29b20b0d12f1b9226e1e8c9355e54e09" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_calibration_1a29b20b0d12f1b9226e1e8c9355e54e09" kindref="member">m_outRoot</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;calibration.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305" refid="class_calibration_1aac1e6d5d59bbe89c95efa142544bf754" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_calibration_1aac1e6d5d59bbe89c95efa142544bf754" kindref="member">m_outCalib</ref><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306" refid="class_calibration_1aeb59e25057913962bc8ee43d9567e024" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_calibration_1aeb59e25057913962bc8ee43d9567e024" kindref="member">m_outDir</ref><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Calibration/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307" refid="class_calibration_1ada2b7de482524ffd3e0a9b6038e3d6de" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_calibration_1ada2b7de482524ffd3e0a9b6038e3d6de" kindref="member">m_filename</ref><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="class_calibration_1a5198af653597c26d18433c6f28bdc171" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a5198af653597c26d18433c6f28bdc171" kindref="member">m_treatOnlyParis</ref>;</highlight></codeline>
<codeline lineno="310" refid="class_calibration_1a75bc8afd8de82f44b5e698aab02ebedc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a75bc8afd8de82f44b5e698aab02ebedc" kindref="member">m_treatOnlyGe</ref>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="class_calibration_1ad17169e9dbae0e5ec2e63f60f1eebdf3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_calibration_8hpp_1a3e47c22fe90cb9e403d05dc134b6a047" kindref="member">Fits</ref><sp/><ref refid="class_calibration_1ad17169e9dbae0e5ec2e63f60f1eebdf3" kindref="member">m_fits</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Attributs<sp/>for<sp/>the<sp/>tables<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="class_calibration_1aea5e9bf6d006f5e26702953552e97dec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1aea5e9bf6d006f5e26702953552e97dec" kindref="member">m_ok</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316" refid="class_calibration_1afa4ecd691e71e5b13504bfe7d71950ac" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1afa4ecd691e71e5b13504bfe7d71950ac" kindref="member">m_calibrate_data</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317" refid="class_calibration_1a2988b922363b5d090771be9961254cbc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/><ref refid="class_calibration_1a2988b922363b5d090771be9961254cbc" kindref="member">m_nb_detectors</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="318" refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/><ref refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" kindref="member">m_size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="319" refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;char&gt;<sp/><ref refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" kindref="member">m_order</ref>;<sp/></highlight><highlight class="comment">//1,<sp/>2<sp/>or<sp/>3<sp/>|<sp/>0<sp/>-&gt;<sp/>no<sp/>calibration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;NRJ&gt;<sp/><ref refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" kindref="member">m_intercept</ref>;</highlight></codeline>
<codeline lineno="321" refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;NRJ&gt;<sp/><ref refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" kindref="member">m_slope</ref>;</highlight></codeline>
<codeline lineno="322" refid="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;NRJ&gt;<sp/><ref refid="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" kindref="member">m_binom</ref>;</highlight></codeline>
<codeline lineno="323" refid="class_calibration_1a33557fc219e93f9afe9ae38e12e649b7" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;NRJ&gt;<sp/><ref refid="class_calibration_1a33557fc219e93f9afe9ae38e12e649b7" kindref="member">m_trinom</ref>;</highlight></codeline>
<codeline lineno="324" refid="class_calibration_1a6872e57ee372f02373cc14bae2254554" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::vector&lt;std::vector&lt;NRJ&gt;&gt;&gt;<sp/><ref refid="class_calibration_1a6872e57ee372f02373cc14bae2254554" kindref="member">calibration_tables</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal">};</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a5198af653597c26d18433c6f28bdc171" kindref="member">Calibration::m_treatOnlyParis</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a75bc8afd8de82f44b5e698aab02ebedc" kindref="member">Calibration::m_treatOnlyGe</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="struct_calibration_1_1histograms_1a911cfd2064bd94694cd0731aa6afccfa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_calibration_1_1histograms_1a911cfd2064bd94694cd0731aa6afccfa" kindref="member">Calibration::histograms::Initialize</ref>()</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_calibration_1_1histograms_1af1e9037776e922dcc96614e080a23ba3" kindref="member">initialized</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>max_label<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a1177661fb15c9825755925faf00c8398" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_label<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>using<sp/>Detector<sp/>class<sp/>in<sp/>Calibration<sp/>module.&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="lib_co_8hpp_1af522b6efd63a7f871a8307755b1297bf" kindref="member">error_message</ref>[</highlight><highlight class="stringliteral">&quot;DEV&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>the<sp/>detectors<sp/>spectra<sp/>in<sp/>one<sp/>plot<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><ref refid="struct_calibration_1_1histograms_1a7459f2c745533444d1d7958fa192dd56" kindref="member">all_raw_spectra</ref>.<ref refid="class_m_t_t_hist_1ab31bc7c988df03ecae485b391850e2c0" kindref="member">reset</ref>(</highlight><highlight class="stringliteral">&quot;All_detectors&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>detectors&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_label,0,max_label,<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1af54374260cdfa1cd60b6364f07f882b4" kindref="member">ADCBin</ref>(</highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">).bins,0,<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1af54374260cdfa1cd60b6364f07f882b4" kindref="member">ADCBin</ref>(</highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">).min);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>the<sp/>calibrated<sp/>detectors<sp/>spectra<sp/>of<sp/>each<sp/>type<sp/>in<sp/>one<sp/>plot<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><ref refid="struct_calibration_1_1histograms_1a4e3132f86e81180b0e35833ed839057d" kindref="member">all_calib</ref>.resize(<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a24d220832c2f0a03a0d886e11f2c284c" kindref="member">nbTypes</ref>());</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>type<sp/>:<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a6c368aa8fe9d985fd742371179718d71" kindref="member">types</ref>())</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nb_detectors<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1ae5e6ff02bf3d79da3f034f7404e0677c" kindref="member">nbOfType</ref>(type);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>binning<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a4cc1eacca959595eb53a16b75f2d65d8" kindref="member">energyBidimBin</ref>(type);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_calibration_1_1histograms_1a4e3132f86e81180b0e35833ed839057d" kindref="member">all_calib</ref>[<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1ab4d5e6cc24173a65a35788ba7c680264" kindref="member">typeIndex</ref>(type)].reset((</highlight><highlight class="stringliteral">&quot;All_&quot;</highlight><highlight class="normal">+type+</highlight><highlight class="stringliteral">&quot;_spectra&quot;</highlight><highlight class="normal">).c_str(),<sp/>(</highlight><highlight class="stringliteral">&quot;All<sp/>&quot;</highlight><highlight class="normal">+type+</highlight><highlight class="stringliteral">&quot;<sp/>spectra&quot;</highlight><highlight class="normal">).c_str(),<sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_detectors,0,nb_detectors,<sp/>binning.bins,binning.min,binning.max);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>the<sp/>raw<sp/>and/or<sp/>calibrated<sp/>spectra<sp/>in<sp/>a<sp/>separate<sp/>spectra<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><ref refid="struct_calibration_1_1histograms_1a8b5260e1a8f3434d96c5cd83402a48fc" kindref="member">calib_spectra</ref>.resize(max_label);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><ref refid="struct_calibration_1_1histograms_1a4665ea6699e47b50df6103317d87d36b" kindref="member">raw_spectra</ref>.resize(max_label);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>type<sp/>:<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a6c368aa8fe9d985fd742371179718d71" kindref="member">types</ref>())</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal"><sp/>||<sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;RF&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index&lt;<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1ae5e6ff02bf3d79da3f034f7404e0677c" kindref="member">nbOfType</ref>(type);<sp/>index++)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1afd00ee8a76386f7356a12858b1dd7c6b" kindref="member">name</ref>(type,<sp/>index);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>label<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>(type,<sp/>index);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>bin_raw<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1af54374260cdfa1cd60b6364f07f882b4" kindref="member">ADCBin</ref>(type);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>bin_calib<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1aaadeec0d94fd7daea1b8e4c9d861fbde" kindref="member">energyBin</ref>(type);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_calibration_1_1histograms_1a4665ea6699e47b50df6103317d87d36b" kindref="member">raw_spectra</ref>[label].reset((name+</highlight><highlight class="stringliteral">&quot;_raw&quot;</highlight><highlight class="normal">).c_str(),<sp/>(name+</highlight><highlight class="stringliteral">&quot;<sp/>raw<sp/>spectra&quot;</highlight><highlight class="normal">).c_str(),<sp/>bin_raw.bins,<sp/>bin_raw.min,<sp/>bin_raw.max);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_calibration_1_1histograms_1a8b5260e1a8f3434d96c5cd83402a48fc" kindref="member">calib_spectra</ref>[label].reset((name+</highlight><highlight class="stringliteral">&quot;_calib&quot;</highlight><highlight class="normal">).c_str(),<sp/>(name+</highlight><highlight class="stringliteral">&quot;<sp/>calibrated<sp/>spectra&quot;</highlight><highlight class="normal">).c_str(),<sp/>bin_calib.bins,<sp/>bin_calib.min,<sp/>bin_calib.max);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><ref refid="struct_calibration_1_1histograms_1af1e9037776e922dcc96614e080a23ba3" kindref="member">initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="struct_calibration_1_1histograms_1a8cf05daf9b9f1ee4ec9d1763acc2c307" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_calibration_1_1histograms_1a8cf05daf9b9f1ee4ec9d1763acc2c307" kindref="member">Calibration::histograms::setBins</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>parameters)</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>std::istringstream<sp/>param(parameters);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>ADCbins<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1aba567529b262d88913de6ccb05a71a99" kindref="member">getADCBin</ref>();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>Energybins<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1ae1ead00f89e7fcb96cefa082f9b4e290" kindref="member">getEnergyBin</ref>();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::string<sp/>line;<sp/>std::getline(param,line);)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istringstream<sp/>is(line);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>type;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>which_histo;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>is&gt;&gt;type;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">)<sp/>{<ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(type+</highlight><highlight class="stringliteral">&quot;type<sp/>is<sp/>not<sp/>recognized<sp/>for<sp/>binning<sp/>in<sp/>Calibration&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>is<sp/>&gt;&gt;<sp/>which_histo;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(which_histo<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;raw&quot;</highlight><highlight class="normal"><sp/><sp/>)<sp/>is<sp/>&gt;&gt;<sp/>ADCbins[type].bins<sp/>&gt;&gt;<sp/>ADCbins[type].min<sp/>&gt;&gt;<sp/>ADCbins[type].max;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(which_histo<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;calib&quot;</highlight><highlight class="normal">)<sp/>is<sp/>&gt;&gt;<sp/>Energybins[type].bins<sp/>&gt;&gt;<sp/>Energybins[type].min<sp/>&gt;&gt;<sp/>Energybins[type].max;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(which_histo+</highlight><highlight class="stringliteral">&quot;<sp/>histo<sp/>of<sp/>Calibration<sp/>module<sp/>not<sp/>recognized<sp/>&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="class_calibration_1aa7e921cbc724d97d1a3ef30a4f988e63" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1aa7e921cbc724d97d1a3ef30a4f988e63" kindref="member">Calibration::calculate</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>dataDir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_files,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>source,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>type)</highlight></codeline>
<codeline lineno="394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Calculating<sp/>calibrations<sp/>from<sp/>raw<sp/>data<sp/>in&quot;</highlight><highlight class="normal">,<sp/>dataDir);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;fast&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibration_1a6514307ca111ecc5d6f02694373dc5ec" kindref="member">loadFasterData</ref>(dataDir,<sp/>nb_files);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;root&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibration_1a6d6d354f65db38acf12addf1efb7c815" kindref="member">loadRootData</ref>(dataDir,<sp/>nb_files);<sp/></highlight><highlight class="comment">//<sp/>UNTESTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(type,<sp/></highlight><highlight class="stringliteral">&quot;unkown<sp/>data<sp/>format&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibration_1ae6bbaf8b283a345c9936a907fcba1849" kindref="member">analyse</ref>(source);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibration_1a7e89a0c788e7ad97c2a9cea5e02ef3f2" kindref="member">writeData</ref>(source+</highlight><highlight class="stringliteral">&quot;.calib&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibration_1a062cb134d4b82246ba9c89c567a32963" kindref="member">writeRawRoot</ref>(source+</highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TBD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="class_calibration_1a178a349d575d8f0e8b090f828def78b6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1aa7e921cbc724d97d1a3ef30a4f988e63" kindref="member">Calibration::calculate</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="struct_calibration_1_1histograms" kindref="compound">histograms</ref>,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>source)</highlight></codeline>
<codeline lineno="410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Calculating<sp/>calibrations<sp/>from<sp/>histogram<sp/>data<sp/>in&quot;</highlight><highlight class="normal">,<sp/><ref refid="struct_calibration_1_1histograms" kindref="compound">histograms</ref>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibration_1a2f91a6803bf8008bd7b748d4a1688338" kindref="member">Initialize</ref>();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>-&gt;<sp/>loadRootHisto(file);<sp/>TBD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibration_1ae6bbaf8b283a345c9936a907fcba1849" kindref="member">analyse</ref>(source);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibration_1a7e89a0c788e7ad97c2a9cea5e02ef3f2" kindref="member">writeData</ref>(source+</highlight><highlight class="stringliteral">&quot;.calib&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibration_1a062cb134d4b82246ba9c89c567a32963" kindref="member">writeRawRoot</ref>(source+</highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="class_calibration_1a7835b1d9192d2c9fa8dcd8efbceb8db3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a7835b1d9192d2c9fa8dcd8efbceb8db3" kindref="member">Calibration::loadRootHisto</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="struct_calibration_1_1histograms" kindref="compound">histograms</ref>)</highlight></codeline>
<codeline lineno="420"><highlight class="normal">{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><ref refid="lib_root_8hpp_1a3b73f11bc69f125e12c1d48c9ed79a6e" kindref="member">unique_TFile</ref><sp/><ref refid="class_calibration_1acfdcf94af247e6907aa09d086c1e4186" kindref="member">file</ref>(TFile::Open(<ref refid="struct_calibration_1_1histograms" kindref="compound">histograms</ref>.c_str()));</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_calibration_1acfdcf94af247e6907aa09d086c1e4186" kindref="member">file</ref>.get()-&gt;IsOpen())<sp/><ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>open&quot;</highlight><highlight class="normal">+<ref refid="struct_calibration_1_1histograms" kindref="compound">histograms</ref>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>TIter<sp/>nextKey(<ref refid="class_calibration_1acfdcf94af247e6907aa09d086c1e4186" kindref="member">file</ref>-&gt;GetListOfKeys());</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>TKey*<sp/>key<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((key<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">TKey*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(nextKey())))<sp/></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>TObject*<sp/>obj<sp/>=<sp/>key-&gt;ReadObj();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj-&gt;IsA()-&gt;InheritsFrom(TH1::Class()))<sp/></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj-&gt;IsA()-&gt;InheritsFrom(TH1F::Class()))<sp/></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hist<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">TH1F*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(obj);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>hist<sp/>-&gt;<sp/>GetName();</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_name<sp/>:<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_name!=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>name.find(_name)<sp/>!=<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>label<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a538487678aa928ab2956e6fb40c90472" kindref="member">getLabel</ref>(_name);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name.find(</highlight><highlight class="stringliteral">&quot;_raw&quot;</highlight><highlight class="normal">))<sp/><ref refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" kindref="member">m_histos</ref>.<ref refid="struct_calibration_1_1histograms_1a4665ea6699e47b50df6103317d87d36b" kindref="member">raw_spectra</ref>[label]<sp/>=<sp/>hist;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name.find(</highlight><highlight class="stringliteral">&quot;_calib&quot;</highlight><highlight class="normal">))<sp/><ref refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" kindref="member">m_histos</ref>.<ref refid="struct_calibration_1_1histograms_1a8b5260e1a8f3434d96c5cd83402a48fc" kindref="member">calib_spectra</ref>[label]<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">TH1F*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(hist-&gt;Clone(_name.c_str()));</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" kindref="member">m_histos</ref>.<ref refid="struct_calibration_1_1histograms_1a6993a369903dab26282e44875e604d6a" kindref="member">spectra</ref>[label]<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">TH1F*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(hist-&gt;Clone(_name.c_str()));</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" kindref="member">m_histos</ref>.<ref refid="struct_calibration_1_1histograms_1a4665ea6699e47b50df6103317d87d36b" kindref="member">raw_spectra</ref>[label].Print();</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="class_calibration_1a6514307ca111ecc5d6f02694373dc5ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a6514307ca111ecc5d6f02694373dc5ec" kindref="member">Calibration::loadFasterData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>dataDir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_files)</highlight></codeline>
<codeline lineno="455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Loading<sp/>the<sp/>data<sp/>from&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_path" kindref="compound">Path</ref>(dataDir).folder());</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibration_1a2f91a6803bf8008bd7b748d4a1688338" kindref="member">Initialize</ref>();</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_faster_reader" kindref="compound">MTFasterReader</ref><sp/>*mt_reader<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_m_t_faster_reader" kindref="compound">MTFasterReader</ref>();</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>mt_reader-&gt;<ref refid="class_m_t_faster_reader_1a58a2fe8f9f9ba39808d43f36f45c8288" kindref="member">addFolder</ref>(dataDir,<sp/>nb_files);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>mt_reader-&gt;<ref refid="class_m_t_faster_reader_1ae316d31ebcb18ae8689522509d1ba513" kindref="member">readRaw</ref>(<ref refid="class_calibration_1ae62aaba8d0f0f77aecf89a5ad1e7605a" kindref="member">fillHisto</ref>,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mt_reader;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Data<sp/>loaded&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="class_calibration_1a6d6d354f65db38acf12addf1efb7c815" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a6d6d354f65db38acf12addf1efb7c815" kindref="member">Calibration::loadRootData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>dataDir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_files)</highlight></codeline>
<codeline lineno="466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Loading<sp/>the<sp/>data<sp/>from&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_path" kindref="compound">Path</ref>(dataDir).folder());</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibration_1a2f91a6803bf8008bd7b748d4a1688338" kindref="member">Initialize</ref>();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><ref refid="class_files_manager" kindref="compound">FilesManager</ref><sp/>files;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>files.<ref refid="class_files_manager_1a6d05662378bde592075237b9fa0a5168" kindref="member">addFolder</ref>(dataDir,<sp/>nb_files);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_vector" kindref="compound">MTList</ref><sp/>list(files.<ref refid="class_files_manager_1a2b619786ba65a7ac1e701fc61e2409ae" kindref="member">getListFiles</ref>());</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_object_1a35c02650eb403bd54e867f93bb26fc47" kindref="member">MTObject::parallelise_function</ref>(<ref refid="class_calibration_1a58f794ed6862bc71c09b440e63ea94f1" kindref="member">loadRootDataThread</ref>,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>list);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Data<sp/>loaded&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="class_calibration_1a58f794ed6862bc71c09b440e63ea94f1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a58f794ed6862bc71c09b440e63ea94f1" kindref="member">Calibration::loadRootDataThread</ref>(<ref refid="class_calibration" kindref="compound">Calibration</ref><sp/>&amp;<sp/>calib,<sp/><ref refid="class_m_t_vector" kindref="compound">MTList</ref><sp/>&amp;<sp/>list)</highlight></codeline>
<codeline lineno="477"><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>std::string<sp/>filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(list.<ref refid="class_m_t_vector_1a824a9ff009dde921eec4759c69f74ca7" kindref="member">getNext</ref>(filename))</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>calib.<ref refid="class_calibration_1afd14ef8f1b6cee6cf7abc10783ee318e" kindref="member">fillRootDataHisto</ref>(filename);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485" refid="class_calibration_1afd14ef8f1b6cee6cf7abc10783ee318e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1afd14ef8f1b6cee6cf7abc10783ee318e" kindref="member">Calibration::fillRootDataHisto</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename)</highlight></codeline>
<codeline lineno="486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><ref refid="lib_root_8hpp_1a3b73f11bc69f125e12c1d48c9ed79a6e" kindref="member">unique_TFile</ref><sp/><ref refid="class_calibration_1acfdcf94af247e6907aa09d086c1e4186" kindref="member">file</ref>(TFile::Open(filename.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;READ&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;TTree&gt;<sp/>tree<sp/>(<ref refid="class_calibration_1acfdcf94af247e6907aa09d086c1e4186" kindref="member">file</ref>-&gt;Get&lt;TTree&gt;(</highlight><highlight class="stringliteral">&quot;Nuball2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tree.get())<sp/>{<ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;NO<sp/>Nuball2<sp/>found<sp/>in&quot;</highlight><highlight class="normal">,<sp/>filename);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><ref refid="class_event" kindref="compound">Event</ref><sp/>event;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.<ref refid="class_event_1a243e29bac8d969902d32a4d444fc5174" kindref="member">reading</ref>(tree.get(),<sp/></highlight><highlight class="stringliteral">&quot;leq&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Reading&quot;</highlight><highlight class="normal">,<sp/>filename);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_hits<sp/>=<sp/>tree-&gt;GetEntries();</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1afa4ecd691e71e5b13504bfe7d71950ac" kindref="member">m_calibrate_data</ref>)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>evt<sp/>=<sp/>0;<sp/>evt&lt;nb_hits;<sp/>evt++)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>tree-&gt;GetEntry(evt);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hit<sp/>=<sp/>0;<sp/>hit&lt;</highlight><highlight class="keyword">event</highlight><highlight class="normal">.mult;<sp/>hit++)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>label<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.labels[hit];</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_detectors_8hpp_1a82c5910e3b4f178c276c8b888c5ac162" kindref="member">isParis</ref>[label]<sp/>&amp;&amp;<sp/>event.<ref refid="class_event_1a7bc76ee166649431e9010875202ca6c1" kindref="member">qdc2s</ref>[hit]!=0)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>ratio<sp/>=<sp/>(</highlight><highlight class="keyword">event</highlight><highlight class="normal">.qdc2s[hit]-</highlight><highlight class="keyword">event</highlight><highlight class="normal">.adcs[hit])/event.<ref refid="class_event_1a7bc76ee166649431e9010875202ca6c1" kindref="member">qdc2s</ref>[hit];</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(ratio&lt;-0.1<sp/>||<sp/>ratio&gt;0.2)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>nrjcal<sp/>=<sp/><ref refid="class_calibration_1a1732880c01e21df259b4ff45dba24c59" kindref="member">calibrate</ref>(event.<ref refid="class_event_1a3e0953c870297eee51ce555908923bb3" kindref="member">adcs</ref>[hit],<sp/>label);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" kindref="member">m_histos</ref>.<ref refid="struct_calibration_1_1histograms_1a8b5260e1a8f3434d96c5cd83402a48fc" kindref="member">calib_spectra</ref>[label].Fill(nrjcal);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" kindref="member">m_histos</ref>.<ref refid="struct_calibration_1_1histograms_1a4e3132f86e81180b0e35833ed839057d" kindref="member">all_calib</ref>[<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1ab4d5e6cc24173a65a35788ba7c680264" kindref="member">typeIndex</ref>(label)].Fill(<ref refid="_detectors_8hpp_1adc256156b68f8dd6b9f2c2da57808bd3" kindref="member">compressedLabel</ref>[label],<sp/>nrjcal);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>evt<sp/>=<sp/>0;<sp/>evt&lt;nb_hits;<sp/>evt++)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>tree-&gt;GetEntry(evt);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hit<sp/>=<sp/>0;<sp/>hit&lt;</highlight><highlight class="keyword">event</highlight><highlight class="normal">.mult;<sp/>hit++)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>label<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.labels[hit];</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" kindref="member">m_histos</ref>.<ref refid="struct_calibration_1_1histograms_1a4665ea6699e47b50df6103317d87d36b" kindref="member">raw_spectra</ref>[label].Fill(event.<ref refid="class_event_1a3e0953c870297eee51ce555908923bb3" kindref="member">adcs</ref>[hit]);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527" refid="class_calibration_1ae62aaba8d0f0f77aecf89a5ad1e7605a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1ae62aaba8d0f0f77aecf89a5ad1e7605a" kindref="member">Calibration::fillHisto</ref>(<ref refid="class_hit" kindref="compound">Hit</ref><sp/>&amp;<sp/>hit,<sp/><ref refid="class_faster_reader" kindref="compound">FasterReader</ref><sp/>&amp;<sp/>reader,<sp/><ref refid="class_calibration" kindref="compound">Calibration</ref><sp/>&amp;<sp/>calib)</highlight></codeline>
<codeline lineno="528"><highlight class="normal">{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(calib.<ref refid="class_calibration_1a0b91d7d6484d4c4b8af93a0709b94291" kindref="member">calibrate_data</ref>())<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(reader.<ref refid="class_faster_reader_1a2d05907241b80ed637b2ae5a01503756" kindref="member">Read</ref>())<sp/></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>type<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref>(hit.<ref refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" kindref="member">label</ref>);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal"><sp/>||<sp/>type<sp/>==<sp/><sp/></highlight><highlight class="stringliteral">&quot;RF&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(calib.<ref refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" kindref="member">m_order</ref>[hit.<ref refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" kindref="member">label</ref>]&lt;1)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nrj_cal<sp/>=<sp/>calib.<ref refid="class_calibration_1a1732880c01e21df259b4ff45dba24c59" kindref="member">calibrate</ref>(hit.<ref refid="class_hit_1a3d999e7bbbb470d1d3aa55ee772a98d6" kindref="member">adc</ref>,<sp/>hit.<ref refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" kindref="member">label</ref>);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>calib.<ref refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" kindref="member">m_histos</ref>.<ref refid="struct_calibration_1_1histograms_1a8b5260e1a8f3434d96c5cd83402a48fc" kindref="member">calib_spectra</ref>[hit.<ref refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" kindref="member">label</ref>].Fill(nrj_cal);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>calib.<ref refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" kindref="member">m_histos</ref>.<ref refid="struct_calibration_1_1histograms_1a4e3132f86e81180b0e35833ed839057d" kindref="member">all_calib</ref>[<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1ab4d5e6cc24173a65a35788ba7c680264" kindref="member">typeIndex</ref>(hit.<ref refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" kindref="member">label</ref>)].Fill(<ref refid="_detectors_8hpp_1adc256156b68f8dd6b9f2c2da57808bd3" kindref="member">compressedLabel</ref>[hit.<ref refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" kindref="member">label</ref>],<sp/>nrj_cal);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(reader.<ref refid="class_faster_reader_1a2d05907241b80ed637b2ae5a01503756" kindref="member">Read</ref>())</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>type<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref>(hit.<ref refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" kindref="member">label</ref>);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal"><sp/>||<sp/>type<sp/>==<sp/><sp/></highlight><highlight class="stringliteral">&quot;RF&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>calib.<ref refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" kindref="member">m_histos</ref>.<ref refid="struct_calibration_1_1histograms_1a4665ea6699e47b50df6103317d87d36b" kindref="member">raw_spectra</ref>[hit.<ref refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" kindref="member">label</ref>].Fill(hit.<ref refid="class_hit_1a3d999e7bbbb470d1d3aa55ee772a98d6" kindref="member">adc</ref>);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546" refid="_calibration_8hpp_1a53eebde5a64b66ea934c2c8a5015b9bb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_calibration_8hpp_1a53eebde5a64b66ea934c2c8a5015b9bb" kindref="member">isTripleAlpha</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>source_name)</highlight></codeline>
<codeline lineno="547"><highlight class="normal">{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(source_name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;3-alpha&quot;</highlight><highlight class="normal"><sp/>||<sp/>source_name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;3alpha&quot;</highlight><highlight class="normal"><sp/><sp/>||</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source_name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;triple-alpha&quot;</highlight><highlight class="normal"><sp/>||<sp/>source_name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;triplealpha&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552" refid="class_calibration_1ad6db2742477c8ac64787c6fe8a687aff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1ad6db2742477c8ac64787c6fe8a687aff" kindref="member">Calibration::peakFinder</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>source)</highlight></codeline>
<codeline lineno="553"><highlight class="normal">{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_pics<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E_right_pic<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/>label<sp/>=<sp/>0;<sp/>label&lt;<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a1177661fb15c9825755925faf00c8398" kindref="member">size</ref>();<sp/>label++)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a47ae394beae7efa2fb8fa1a3c7f8427d" kindref="member">exists</ref>(label))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>histo<sp/>=<sp/><ref refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" kindref="member">m_histos</ref>.<ref refid="struct_calibration_1_1histograms_1a4665ea6699e47b50df6103317d87d36b" kindref="member">raw_spectra</ref>[label];</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>[label];</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>type<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref>(label);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(histo.Integral()==0)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1a8e0d431465c589e805f74aacfabeb1d7" kindref="member">m_verbose</ref>)<sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(name,<sp/></highlight><highlight class="stringliteral">&quot;has<sp/>no<sp/>data<sp/>in<sp/>this<sp/>run&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>histo.Merge();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>fit<sp/>=<sp/><ref refid="class_calibration_1ad17169e9dbae0e5ec2e63f60f1eebdf3" kindref="member">m_fits</ref>[label];</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>fit.setLabel(label);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>fit.name<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1a8e0d431465c589e805f74aacfabeb1d7" kindref="member">m_verbose</ref>)<sp/>{<ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>();<sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(name);}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>algorithm<sp/>parameters<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integral_ratio_threshold<sp/>=<sp/>0.f;<sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>threshold<sp/>used<sp/>to<sp/>tag<sp/>the<sp/>peak.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ADC_threshold<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>A<sp/>threshold<sp/>used<sp/>in<sp/>order<sp/>to<sp/>reject<sp/>any<sp/>potential<sp/>electrical<sp/>noise<sp/>below<sp/>like<sp/>500<sp/>ADC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>window_1<sp/>=<sp/>0,<sp/>window_2<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>The<sp/>three<sp/>windows<sp/>width<sp/>(in<sp/>keV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>peaks<sp/>=<sp/>fit.peaks;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minHitsToCalibrate<sp/>=<sp/>50000;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handles<sp/>the<sp/>triple<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_calibration_8hpp_1a53eebde5a64b66ea934c2c8a5015b9bb" kindref="member">isTripleAlpha</ref>(source)<sp/>&amp;&amp;<sp/>type!=</highlight><highlight class="stringliteral">&quot;dssd&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_calibration_8hpp_1a53eebde5a64b66ea934c2c8a5015b9bb" kindref="member">isTripleAlpha</ref>(source)<sp/>&amp;&amp;<sp/>type==</highlight><highlight class="stringliteral">&quot;dssd&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1a5198af653597c26d18433c6f28bdc171" kindref="member">m_treatOnlyParis</ref><sp/>&amp;&amp;<sp/>type!=</highlight><highlight class="stringliteral">&quot;paris&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1a75bc8afd8de82f44b5e698aab02ebedc" kindref="member">m_treatOnlyGe</ref><sp/>&amp;&amp;<sp/>type!=</highlight><highlight class="stringliteral">&quot;ge&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ge&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>For<sp/>Clovers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>window_1<sp/>=<sp/>10,<sp/>window_2<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;152Eu&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_pics<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks.resize(nb_pics);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks<sp/>=<sp/>{121.7830,<sp/>344.2760,<sp/>778.9030,<sp/>964.1310,<sp/>1408.0110};</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_right_pic<sp/>=<sp/>peaks.back();</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integral_ratio_threshold<sp/>=<sp/>0.011f;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADC_threshold<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;232Th&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_pics<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks.resize(nb_pics);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks<sp/>=<sp/>{238,<sp/>583,<sp/>910,<sp/>2614};</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_right_pic<sp/>=<sp/>peaks.back();</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integral_ratio_threshold<sp/>=<sp/>0.0049f;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADC_threshold<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;60Co&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>NOT<sp/>FUNCTIONNAL<sp/>YET<sp/>!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_pics<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks.resize(nb_pics);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks<sp/>=<sp/>{1172,<sp/>1333};</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_right_pic<sp/>=<sp/>peaks.back();</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integral_ratio_threshold<sp/>=<sp/>0.06f;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADC_threshold<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;labr&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>For<sp/>labr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>window_1<sp/>=<sp/>70,<sp/>window_2<sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;152Eu&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_pics<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks.resize(nb_pics);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks<sp/>=<sp/>{121.7830,<sp/>344.2760,<sp/>778.9030,<sp/>964.1310,<sp/>1408.0110};</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_right_pic<sp/>=<sp/>peaks.back();</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integral_ratio_threshold<sp/>=<sp/>0.012f;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADC_threshold<sp/>=<sp/>500;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;232Th&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_pics<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks.resize(nb_pics);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks<sp/>=<sp/>{238,<sp/>583,<sp/>911,<sp/>2614};</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_right_pic<sp/>=<sp/>peaks.back();</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integral_ratio_threshold<sp/>=<sp/>0.0025f;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADC_threshold<sp/>=<sp/>500;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;60Co&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>NOT<sp/>FUNCTIONNAL<sp/>YET<sp/>!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_pics<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks.resize(nb_pics);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks<sp/>=<sp/>{1172,<sp/>1333};</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_right_pic<sp/>=<sp/>peaks.back();</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integral_ratio_threshold<sp/>=<sp/>0.1f;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADC_threshold<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;paris&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>For<sp/>paris</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>window_1<sp/>=<sp/>80,<sp/>window_2<sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;152Eu&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(name.find(&quot;FR1&quot;))<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>nb_pics<sp/>=<sp/>4;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>peaks.resize(nb_pics);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>peaks<sp/>=<sp/>{344.2760,<sp/>778.9030,<sp/>964.1310,<sp/>1408.0110};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>E_right_pic<sp/>=<sp/>peaks.back();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>integral_ratio_threshold<sp/>=<sp/>0.030f;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_pics<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks.resize(nb_pics);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks<sp/>=<sp/>{121.7830,<sp/>344.2760,<sp/>778.9030,<sp/>964.1310,<sp/>1408.0110};</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_right_pic<sp/>=<sp/>peaks.back();</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integral_ratio_threshold<sp/>=<sp/>0.011f;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADC_threshold<sp/>=<sp/>500;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;232Th&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//never<sp/>tested<sp/>yet<sp/>-<sp/>but<sp/>should<sp/>be<sp/>similar<sp/>to<sp/>fatima</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_pics<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks.resize(nb_pics);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks<sp/>=<sp/>{238,<sp/>583,<sp/>911,<sp/>2614};</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_right_pic<sp/>=<sp/>peaks.back();</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integral_ratio_threshold<sp/>=<sp/>0.0023f;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADC_threshold<sp/>=<sp/>500;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;dssd&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_calibration_8hpp_1a53eebde5a64b66ea934c2c8a5015b9bb" kindref="member">isTripleAlpha</ref>(source))</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window_1<sp/>=<sp/>100,<sp/>window_2<sp/>=<sp/>80;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_pics<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks.resize(nb_pics);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks<sp/>=<sp/>{5150,<sp/>5480,<sp/>5800};</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_right_pic<sp/>=<sp/>peaks.back();</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integral_ratio_threshold<sp/>=<sp/>0.05f;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADC_threshold<sp/>=<sp/>500;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minHitsToCalibrate<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1a8e0d431465c589e805f74aacfabeb1d7" kindref="member">m_verbose</ref>)<sp/>{<ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;DSSD<sp/>not<sp/>to<sp/>be<sp/>taken<sp/>in<sp/>this<sp/>calibration<sp/>file&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;bgo&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;152Eu&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_pics<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_right_pic<sp/>=<sp/>1408.0110;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integral_ratio_threshold<sp/>=<sp/>0.027f;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADC_threshold<sp/>=<sp/>500;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;232Th&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//never<sp/>tested<sp/>yet<sp/>-<sp/>but<sp/>should<sp/>be<sp/>similar<sp/>to<sp/>fatima</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_pics<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_right_pic<sp/>=<sp/>2614;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integral_ratio_threshold<sp/>=<sp/>0.02f;</highlight><highlight class="comment">//<sp/>TBD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADC_threshold<sp/>=<sp/>500;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1a8e0d431465c589e805f74aacfabeb1d7" kindref="member">m_verbose</ref>)<sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Detector&quot;</highlight><highlight class="normal">,<sp/>name,<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>handled<sp/>!&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>fit.resize(nb_pics);</highlight><highlight class="comment">//<sp/>Resize<sp/>the<sp/>intern<sp/>vectors<sp/>of<sp/>the<sp/>detector&apos;s<sp/>Fit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vmaxchan<sp/>=<sp/>0;</highlight><highlight class="comment">//<sp/>Position<sp/>of<sp/>the<sp/>right<sp/>pic<sp/>in<sp/>bins<sp/>(e.g.<sp/>the<sp/>1408<sp/>keV<sp/>in<sp/>Eu)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>scalefactor<sp/>=<sp/>fit.scalefactor;<sp/></highlight><highlight class="comment">//<sp/>To<sp/>adapt<sp/>to<sp/>the<sp/>binnin<sp/>of<sp/>the<sp/>histogram<sp/>(ADC/bin)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>kpc<sp/>=<sp/>fit.keVperADC;<sp/></highlight><highlight class="comment">//<sp/>keV<sp/>per<sp/>bin<sp/>(=channel)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-----------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OPERATE<sp/>ON<sp/>THE<sp/>SPECTRUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-----------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nbins<sp/>=<sp/>histo-&gt;GetXaxis()-&gt;GetNbins();</highlight><highlight class="comment">//<sp/>The<sp/>number<sp/>of<sp/>bins<sp/>in<sp/>the<sp/>spectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NB:<sp/>It<sp/>supposes<sp/>that<sp/>the<sp/>spectra<sp/>starts<sp/>at<sp/>0<sp/>!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>scalefactor<sp/>=<sp/>histo-&gt;GetXaxis()-&gt;GetXmax()/nbins;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ADC_threshold_scaled<sp/>=<sp/><ref refid="_hit_8hpp_1a42de29176eeb225c09486aa0dcac5362" kindref="member">ADC_cast</ref>(ADC_threshold/scalefactor);<sp/></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sum=histo-&gt;Integral(ADC_threshold_scaled,<sp/>nbins-1);<sp/></highlight><highlight class="comment">//<sp/>The<sp/>total<sp/>integral<sp/>of<sp/>the<sp/>spectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>fit.integral<sp/>=<sp/>sum;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sum<sp/>&lt;<sp/>minHitsToCalibrate)</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>No<sp/>calibration<sp/>if<sp/>not<sp/>enough<sp/>counts<sp/>in<sp/>the<sp/>spectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1a8e0d431465c589e805f74aacfabeb1d7" kindref="member">m_verbose</ref>)</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fit.too_few_counts(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fit.exists(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Too<sp/>few<sp/>counts<sp/>to<sp/>calibrate<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sum<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1a8e0d431465c589e805f74aacfabeb1d7" kindref="member">m_verbose</ref>)</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Integral<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sum<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>counts;<sp/>Number<sp/>of<sp/>bins<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>nbins<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;scale<sp/>factor<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scalefactor<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_root_8hpp_1a6f95a95b189be45d91548ce3bfb70a55" kindref="member">AddTH1</ref>(<ref refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" kindref="member">m_histos</ref>.<ref refid="struct_calibration_1_1histograms_1a7459f2c745533444d1d7958fa192dd56" kindref="member">all_raw_spectra</ref>.<ref refid="class_m_t_t_hist_1a9c2f7d05c9f8506382211635b35bd97b" kindref="member">get</ref>(),<sp/>histo.get(),<sp/>label);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialises<sp/>vmaxchan<sp/>at<sp/>the<sp/>last<sp/>bin<sp/>(right<sp/>of<sp/>the<sp/>spectra)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>vmaxchan=nbins;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integral=0;<sp/></highlight><highlight class="comment">//<sp/>Holds<sp/>the<sp/>surface<sp/>below<sp/>the<sp/>spectra<sp/>from<sp/>the<sp/>highest<sp/>bin<sp/>to<sp/>the<sp/>current<sp/>bin<sp/>in<sp/>the<sp/>following<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>start<sp/>at<sp/>nbins-2<sp/>because<sp/>the<sp/>nbin&apos;th<sp/>bin<sp/>is<sp/>the<sp/>overflow,<sp/>so<sp/>to<sp/>be<sp/>secure<sp/>we<sp/>start<sp/>at<sp/>nbin-2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=nbins-2;<sp/>j<sp/>&gt;<sp/>ADC_threshold_scaled;<sp/>j--)</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>integral+=histo-&gt;GetBinContent(j);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((integral/sum)<sp/>&gt;<sp/>integral_ratio_threshold)<sp/>{vmaxchan=j;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vmaxchan==ADC_threshold_scaled)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1a8e0d431465c589e805f74aacfabeb1d7" kindref="member">m_verbose</ref>)<sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>fit<sp/>this<sp/>spectrum<sp/>&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1a8e0d431465c589e805f74aacfabeb1d7" kindref="member">m_verbose</ref>)<sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;right<sp/>pic<sp/>found<sp/>at<sp/>channel<sp/>&quot;</highlight><highlight class="normal">,<sp/>vmaxchan*scalefactor,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ADC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>kpc=E_right_pic/vmaxchan;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1a8e0d431465c589e805f74aacfabeb1d7" kindref="member">m_verbose</ref>)<sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;kev<sp/>per<sp/>channel<sp/>=<sp/>&quot;</highlight><highlight class="normal">,<sp/>kpc);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;bgo&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>BGOs,<sp/>already<sp/>&quot;gain<sp/>matched&quot;,<sp/>a<sp/>simple<sp/>affine<sp/>relation<sp/>roughly<sp/>calibrates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.exists(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.order<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.parameter0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.parameter1<sp/>=<sp/>kpc/scalefactor;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(int<sp/>j=0;<sp/>j&lt;nb_pics;<sp/>j++)<sp/>//Starting<sp/>with<sp/>the<sp/>lower<sp/>energy<sp/>pic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xaxis<sp/>=<sp/>histo-&gt;GetXaxis();</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=nb_pics-1;<sp/>j&gt;-1;<sp/>j--)<sp/></highlight><highlight class="comment">//Starting<sp/>with<sp/>the<sp/>higher<sp/>energy<sp/>pic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1a8e0d431465c589e805f74aacfabeb1d7" kindref="member">m_verbose</ref>)<sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Pic<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>,<sp/>peaks[j]);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1st<sp/>window<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p=peaks[j];<sp/></highlight><highlight class="comment">//<sp/>Energy<sp/>of<sp/>the<sp/>peak<sp/>(in<sp/>keV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cguess_low<sp/><sp/>=<sp/><ref refid="lib_co_8hpp_1a48e80fbfd11f9fb219b92ba1c29c1b2a" kindref="member">int_cast</ref>((p-window_1)/kpc);<sp/></highlight><highlight class="comment">//<sp/>Low<sp/><sp/>edge<sp/>of<sp/>the<sp/>window<sp/>(in<sp/>bins)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cguess_high<sp/>=<sp/><ref refid="lib_co_8hpp_1a48e80fbfd11f9fb219b92ba1c29c1b2a" kindref="member">int_cast</ref>((p+window_1)/kpc);<sp/></highlight><highlight class="comment">//<sp/>High<sp/>edge<sp/>of<sp/>the<sp/>window<sp/>(in<sp/>bins)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cguess_low&lt;ADC_threshold_scaled)<sp/>cguess_low<sp/>=<sp/>ADC_threshold_scaled;<sp/></highlight><highlight class="comment">//cannot<sp/>read<sp/>the<sp/>spectra<sp/>below<sp/>the<sp/>ADC<sp/>threshold<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xaxis-&gt;SetRange(cguess_low,<sp/>cguess_high);<sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>the<sp/>window<sp/>to<sp/>the<sp/>spectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cmc<sp/>=<sp/>0.5<sp/>+<sp/>histo-&gt;GetMaximumBin();</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1a8e0d431465c589e805f74aacfabeb1d7" kindref="member">m_verbose</ref>)<sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">,<sp/>cguess_low*scalefactor<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>,<sp/>&quot;</highlight><highlight class="normal"><sp/>,<sp/>cguess_high*scalefactor<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>First<sp/>mean<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>,<sp/>cmc*scalefactor);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2nd<sp/>window<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cguess_high<sp/>=<sp/><ref refid="lib_co_8hpp_1a48e80fbfd11f9fb219b92ba1c29c1b2a" kindref="member">int_cast</ref>(0.5<sp/>+<sp/>cmc<sp/>+<sp/>window_2/kpc);</highlight><highlight class="comment">//<sp/>+0.5<sp/>in<sp/>order<sp/>to<sp/>take<sp/>the<sp/>centre<sp/>of<sp/>the<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cguess_low<sp/><sp/>=<sp/><ref refid="lib_co_8hpp_1a48e80fbfd11f9fb219b92ba1c29c1b2a" kindref="member">int_cast</ref>(0.5<sp/>+<sp/>cmc<sp/>-<sp/>window_2/kpc);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xaxis-&gt;SetRange(cguess_low,<sp/>cguess_high);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cm<sp/><sp/>=<sp/>histo-&gt;GetMean();<sp/></highlight><highlight class="comment">//in<sp/>ADC<sp/>(scalefactor*bins)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmc<sp/>=<sp/>cm/scalefactor;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1a8e0d431465c589e805f74aacfabeb1d7" kindref="member">m_verbose</ref>)<sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">,<sp/>cguess_low*scalefactor<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>,<sp/>&quot;</highlight><highlight class="normal"><sp/>,<sp/>cguess_high*scalefactor<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>First<sp/>mean<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>,<sp/>cm);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>3rd<sp/>window<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cguess_high<sp/>=<sp/>int_cast(cmc<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cguess_low<sp/><sp/>=<sp/>int_cast(cmc<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xaxis-&gt;SetRange(cguess_low,<sp/>cguess_high);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cm<sp/><sp/>=<sp/>histo-&gt;GetMean();<sp/>//in<sp/>ADC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cmc<sp/>=<sp/>cm/scalefactor;<sp/>//in<sp/>bins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(m_verbose)<sp/>print(&quot;[&quot;,<sp/>cguess_low*scalefactor<sp/>,<sp/>&quot;<sp/>,<sp/>&quot;<sp/>,<sp/>cguess_high*scalefactor<sp/>,<sp/>&quot;]<sp/>First<sp/>mean<sp/>=<sp/>&quot;<sp/>,<sp/>cm);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.cmeasures[j]=cmc;<sp/></highlight><highlight class="comment">//The<sp/>measured<sp/>channel<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fit<sp/>of<sp/>the<sp/>peak<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>!!!<sp/>ATTENTION<sp/>:<sp/>THE<sp/>FIT<sp/>IS<sp/>TO<sp/>BE<sp/>IMPROVED<sp/><sp/>!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>constante<sp/>=<sp/>histo<sp/>-&gt;<sp/>GetMaximum();</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mean<sp/>=<sp/>cmc;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma<sp/>=<sp/>(histo<sp/>-&gt;<sp/>FindLastBinAbove(constante/2)<sp/>-<sp/>histo<sp/>-&gt;<sp/>FindFirstBinAbove(constante/2))/2.35;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TF1*<sp/><sp/>gaus(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TF1(</highlight><highlight class="stringliteral">&quot;gaus&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;gaus&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gaus<sp/>-&gt;<sp/>SetRange(cguess_low*scalefactor,<sp/>cguess_high*scalefactor);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gaus<sp/>-&gt;<sp/>SetParameter(0,<sp/>constante);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gaus<sp/>-&gt;<sp/>SetParameter(1,<sp/>mean);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gaus<sp/>-&gt;<sp/>SetParameter(2,<sp/>sigma);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>histo<sp/>-&gt;<sp/><ref refid="class_fit" kindref="compound">Fit</ref>(gaus,</highlight><highlight class="stringliteral">&quot;RQN+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.mean<sp/>[j]<sp/>=<sp/>gaus<sp/>-&gt;<sp/>GetParameter(1);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.sigma[j]<sp/>=<sp/>gaus<sp/>-&gt;<sp/>GetParameter(2);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TF1*<sp/>gaus_pol0(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TF1(</highlight><highlight class="stringliteral">&quot;gaus(0)+pol1(3)&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;gaus(0)+pol1(3)&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gaus_pol0<sp/>-&gt;<sp/>SetRange(cguess_low*scalefactor,<sp/>cguess_high*scalefactor);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gaus_pol0<sp/>-&gt;<sp/>SetParameter(0,<sp/>gaus<sp/>-&gt;<sp/>GetParameter(0));</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gaus_pol0<sp/>-&gt;<sp/>SetParameter(1,<sp/>gaus<sp/>-&gt;<sp/>GetParameter(1));</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gaus_pol0<sp/>-&gt;<sp/>SetParameter(2,<sp/>gaus<sp/>-&gt;<sp/>GetParameter(2));</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gaus_pol0<sp/>-&gt;<sp/>SetParameter(3,<sp/>histo<sp/>-&gt;<sp/>GetBinContent(0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>histo<sp/>-&gt;<sp/><ref refid="class_fit" kindref="compound">Fit</ref>(gaus_pol0,</highlight><highlight class="stringliteral">&quot;RQ+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label<sp/>==<sp/>25)<sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(kpc,<sp/>gaus_pol0<sp/>-&gt;<sp/>GetParameter(1),<sp/>gaus_pol0<sp/>-&gt;<sp/>GetParameter(2)/gaus_pol0<sp/>-&gt;<sp/>GetParameter(1));</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>histo<sp/>-&gt;<sp/>Fit(gaus_pol0,&quot;RIQE&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fit.mean<sp/>[j]<sp/>=<sp/>gaus_pol0<sp/>-&gt;<sp/>GetParameter(1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fit.sigma[j]<sp/>=<sp/>gaus_pol0<sp/>-&gt;<sp/>GetParameter(2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print(label,<sp/>&quot;kpc<sp/>:<sp/>&quot;,<sp/>kpc,<sp/>&quot;<sp/>scale<sp/>:<sp/>&quot;,<sp/>scalefactor,<sp/>&quot;<sp/>pic<sp/>:<sp/>&quot;,<sp/>p,<sp/>&quot;<sp/>-&gt;<sp/>&quot;,<sp/>cguess_low*kpc,<sp/>&quot;<sp/>:<sp/>&quot;,<sp/>cguess_high*kpc);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print(label,<sp/>&quot;<sp/>pic<sp/>:<sp/>&quot;,<sp/>p,<sp/>&quot;<sp/>-&gt;<sp/>&quot;,<sp/>cm,<sp/>&quot;<sp/>&quot;,<sp/>histo<sp/>-&gt;<sp/>GetBinContent(0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>peak<sp/>is<sp/>the<sp/>higher<sp/>in<sp/>energy,<sp/>then<sp/>use<sp/>it<sp/>as<sp/>a<sp/>little<sp/>bit<sp/>more<sp/>precise<sp/>rough<sp/>linear<sp/>calibration<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>nb_pics)<sp/>kpc<sp/>=<sp/>cmc;<sp/></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>xaxis<sp/>-&gt;<sp/>UnZoom();</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852" refid="class_calibration_1aea14328cc8a0ab1cf559cd07f8c6a065" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1aea14328cc8a0ab1cf559cd07f8c6a065" kindref="member">Calibration::fitCalibration</ref>(<ref refid="_calibration_8hpp_1a3e47c22fe90cb9e403d05dc134b6a047" kindref="member">Fits</ref><sp/>&amp;<sp/>fits)</highlight></codeline>
<codeline lineno="853"><highlight class="normal">{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/>label<sp/>=<sp/>0;<sp/>label&lt;<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a1177661fb15c9825755925faf00c8398" kindref="member">size</ref>();<sp/>label++)</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit" kindref="compound">Fit</ref><sp/>&amp;<sp/>fit<sp/>=<sp/>fits[label];</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_pics<sp/>=<sp/>fit.<ref refid="class_fit_1a8f443c41d92e502b2fe55453560457e2" kindref="member">peaks</ref>.size();</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>x<sp/><sp/>=<sp/>fit.<ref refid="class_fit_1a5a9406e4e285484650609f696d96ffa2" kindref="member">x</ref><sp/>;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>y<sp/><sp/>=<sp/>fit.<ref refid="class_fit_1a36eda8829f68c74fdf657a065481a3f8" kindref="member">y</ref><sp/>;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>ex<sp/>=<sp/>fit.<ref refid="class_fit_1afffcdcd0341476a634e763b8bb2158ce" kindref="member">ex</ref>;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>ey<sp/>=<sp/>fit.<ref refid="class_fit_1a6777a3d0b233e491b99c6b22ba1b7290" kindref="member">ey</ref>;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>.resize(nb_pics);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>.resize(nb_pics);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>ex.resize(nb_pics);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>ey.resize(nb_pics);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j=0;<sp/>j<sp/>&lt;<sp/>nb_pics;<sp/>j++)</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1a8e0d431465c589e805f74aacfabeb1d7" kindref="member">m_verbose</ref>)<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Energy<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fit.<ref refid="class_fit_1a8f443c41d92e502b2fe55453560457e2" kindref="member">peaks</ref>[j]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Channel<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fit.<ref refid="class_fit_1ac752a6bea753f20d4a8ed0a887447d7c" kindref="member">cmeasures</ref>[j]*fit.<ref refid="class_fit_1a522102240db21bfd9dd69f15ea3b3656" kindref="member">scalefactor</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>[j]=fit.<ref refid="class_fit_1ac752a6bea753f20d4a8ed0a887447d7c" kindref="member">cmeasures</ref>[j]*fit.<ref refid="class_fit_1a522102240db21bfd9dd69f15ea3b3656" kindref="member">scalefactor</ref>;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>[j]=fit.<ref refid="class_fit_1a8f443c41d92e502b2fe55453560457e2" kindref="member">peaks</ref>[j];</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ex[j]=0;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ey[j]=0;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>faudrait<sp/>aussi<sp/>revoir<sp/>ce<sp/>fit<sp/>ici<sp/>!<sp/>Et<sp/>éventuellement<sp/>les<sp/>erreurs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCanvas((</highlight><highlight class="stringliteral">&quot;c_&quot;</highlight><highlight class="normal">+fit.<ref refid="class_fit_1a964131fabef1652357c6f1dd08f9f2de" kindref="member">name</ref>).c_str());</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>c1-&gt;cd(1);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>TGraphErrors*<sp/>gr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TGraphErrors(nb_pics,x.data(),y.data(),ex.data(),ey.data());</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>gr<sp/>-&gt;<sp/>SetName((fit.<ref refid="class_fit_1a964131fabef1652357c6f1dd08f9f2de" kindref="member">name</ref>+</highlight><highlight class="stringliteral">&quot;_gr&quot;</highlight><highlight class="normal">).c_str());</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>TF1*<sp/>linear(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TF1(</highlight><highlight class="stringliteral">&quot;lin&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;pol1&quot;</highlight><highlight class="normal">));<sp/></highlight><highlight class="comment">//Range<sp/>and<sp/>number<sp/>of<sp/>fit<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>gr-&gt;Fit(linear,</highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>TF1*<sp/>binom<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TF1(</highlight><highlight class="stringliteral">&quot;pol&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pol2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_detectors_8hpp_1a5da74af4e038f2a435565e2e93a6831e" kindref="member">isGe</ref>[label]<sp/>||<sp/><ref refid="_detectors_8hpp_1a3148345147f51e96aaa73e5d9f8e9d93" kindref="member">isDSSD</ref>[label]<sp/>||<sp/><ref refid="_detectors_8hpp_1a82c5910e3b4f178c276c8b888c5ac162" kindref="member">isParis</ref>[label])</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//First<sp/>order<sp/>fit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.<ref refid="class_fit_1a09a8cb0e9a300f8aeef67fcd267cb8f2" kindref="member">order</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.<ref refid="class_fit_1a6dd1941f173b91a904be34afca6cd5d0" kindref="member">parameter0</ref><sp/>=<sp/>linear<sp/>-&gt;<sp/>GetParameter(0);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.<ref refid="class_fit_1abe17456d5a2ccb50497d776f4f63f98b" kindref="member">parameter1</ref><sp/>=<sp/>linear<sp/>-&gt;<sp/>GetParameter(1);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.<ref refid="class_fit_1ac128f10e2e52aa39445e4363168d5f73" kindref="member">chi2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>linear<sp/>-&gt;<sp/>GetChisquare(<sp/>);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.<ref refid="class_fit_1aa524861d860cc6384c92425166453e93" kindref="member">exists</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_detectors_8hpp_1ac1f4e8d98df1dbbcb0c6ccf4a7b9a538" kindref="member">isLaBr3</ref>[label]<sp/>||<sp/><ref refid="_detectors_8hpp_1a82c5910e3b4f178c276c8b888c5ac162" kindref="member">isParis</ref>[label])</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>Second<sp/>order<sp/>fit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.<ref refid="class_fit_1a09a8cb0e9a300f8aeef67fcd267cb8f2" kindref="member">order</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>binom<sp/>-&gt;<sp/>SetParameters(0,<sp/>linear<sp/>-&gt;<sp/>GetParameter(0));</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>binom<sp/>-&gt;<sp/>SetParameters(1,<sp/>linear<sp/>-&gt;<sp/>GetParameter(1));</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gr<sp/>-&gt;<sp/><ref refid="class_fit" kindref="compound">Fit</ref>(binom,</highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.<ref refid="class_fit_1a6dd1941f173b91a904be34afca6cd5d0" kindref="member">parameter0</ref><sp/>=<sp/>binom<sp/>-&gt;<sp/>GetParameter(0);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.<ref refid="class_fit_1abe17456d5a2ccb50497d776f4f63f98b" kindref="member">parameter1</ref><sp/>=<sp/>binom<sp/>-&gt;<sp/>GetParameter(1);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.<ref refid="class_fit_1a394d86d19fb25ad5facea296ed71bb1e" kindref="member">parameter2</ref><sp/>=<sp/>binom<sp/>-&gt;<sp/>GetParameter(2);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.<ref refid="class_fit_1ac128f10e2e52aa39445e4363168d5f73" kindref="member">chi2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>binom<sp/>-&gt;<sp/>GetChisquare(<sp/>);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.<ref refid="class_fit_1aa524861d860cc6384c92425166453e93" kindref="member">exists</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.<ref refid="class_fit_1aa524861d860cc6384c92425166453e93" kindref="member">exists</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal">}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="944" refid="class_calibration_1ae6bbaf8b283a345c9936a907fcba1849" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1ae6bbaf8b283a345c9936a907fcba1849" kindref="member">Calibration::analyse</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>source)</highlight></codeline>
<codeline lineno="945"><highlight class="normal">{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Exctracting<sp/>calibration<sp/>parameters<sp/>from<sp/>spectra&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-----------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameterize<sp/>the<sp/>pics<sp/>to<sp/>fit<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-----------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><ref refid="class_calibration_1ad6db2742477c8ac64787c6fe8a687aff" kindref="member">peakFinder</ref>(source);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><ref refid="class_calibration_1aea14328cc8a0ab1cf559cd07f8c6a065" kindref="member">fitCalibration</ref>(<ref refid="class_calibration_1ad17169e9dbae0e5ec2e63f60f1eebdf3" kindref="member">m_fits</ref>);</highlight></codeline>
<codeline lineno="952"><highlight class="normal">}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="comment">//DEV<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955" refid="class_calibration_1a72f3838ece8f07239511fac7c09b1e8c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a72f3838ece8f07239511fac7c09b1e8c" kindref="member">Calibration::setCalibrationTables</ref>()</highlight></codeline>
<codeline lineno="956"><highlight class="normal">{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;creating<sp/>calibration<sp/>tables&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><ref refid="class_calibration_1a6872e57ee372f02373cc14bae2254554" kindref="member">calibration_tables</ref>.resize(<ref refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" kindref="member">m_size</ref>);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/>std::vector&lt;std::vector&lt;NRJ&gt;&gt;<sp/>*calib_vec;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/>i<sp/>=<sp/>0;<sp/>i&lt;<ref refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" kindref="member">m_size</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>calib_vec<sp/>=<sp/>&amp;<ref refid="class_calibration_1a6872e57ee372f02373cc14bae2254554" kindref="member">calibration_tables</ref>[i];</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>calib_vec-&gt;resize(200000);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Done<sp/>!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="967"><highlight class="normal">}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969" refid="class_calibration_1aa09b700f10eaaa69a97a0cc6da973a06" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref><sp/><ref refid="class_calibration_1a1732880c01e21df259b4ff45dba24c59" kindref="member">Calibration::calibrate</ref>(<ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nrj,<sp/><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>label)</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="970"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nrj_r<sp/>=<sp/>nrj+<ref refid="random_8hpp_1a61ebdcf7bf06323f12806134068541a7" kindref="member">random_uniform</ref>();</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" kindref="member">m_order</ref>[label])</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrj_r;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" kindref="member">m_intercept</ref>[label]<sp/>+<sp/><ref refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" kindref="member">m_slope</ref>[label]*nrj_r;<sp/></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" kindref="member">m_intercept</ref>[label]<sp/>+<sp/><ref refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" kindref="member">m_slope</ref>[label]*nrj_r<sp/>+<sp/><ref refid="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" kindref="member">m_binom</ref>[label]*nrj_r*nrj_r;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" kindref="member">m_intercept</ref>[label]<sp/>+<sp/><ref refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" kindref="member">m_slope</ref>[label]*nrj_r<sp/>+<sp/><ref refid="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" kindref="member">m_binom</ref>[label]*nrj_r*nrj_r<sp/>+<sp/><ref refid="class_calibration_1a33557fc219e93f9afe9ae38e12e649b7" kindref="member">m_trinom</ref>[label]*nrj_r*nrj_r*nrj_r;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrj_r;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="980"><highlight class="normal">}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982" refid="class_calibration_1a1732880c01e21df259b4ff45dba24c59" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a1732880c01e21df259b4ff45dba24c59" kindref="member">Calibration::calibrate</ref>(<ref refid="class_hit" kindref="compound">Hit</ref><sp/>&amp;<sp/>hit)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="983"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>label<sp/>=<sp/>hit.<ref refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" kindref="member">label</ref>;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label<sp/>&gt;<sp/><ref refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" kindref="member">m_size</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hit.<ref refid="class_hit_1a07541ef2177c95ba3de7df1fed1c986f" kindref="member">qdc2</ref>!=0.0)<sp/>hit.<ref refid="class_hit_1ab4b93fbbb58d5bf2fd3480238d93065a" kindref="member">nrj2</ref><sp/>=<sp/><ref refid="class_calibration_1a1732880c01e21df259b4ff45dba24c59" kindref="member">calibrate</ref>(hit.<ref refid="class_hit_1a07541ef2177c95ba3de7df1fed1c986f" kindref="member">qdc2</ref>,<sp/>label);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>hit.<ref refid="class_hit_1abda4857e925c3a6315a6fb41fad59189" kindref="member">nrj</ref><sp/>=<sp/><ref refid="class_calibration_1a1732880c01e21df259b4ff45dba24c59" kindref="member">calibrate</ref>(hit.<ref refid="class_hit_1a3d999e7bbbb470d1d3aa55ee772a98d6" kindref="member">adc</ref>,<sp/>label);</highlight></codeline>
<codeline lineno="988"><highlight class="normal">}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990" refid="class_calibration_1ab1502564e126e769e782d221d42608c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1ab1502564e126e769e782d221d42608c7" kindref="member">Calibration::set</ref>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/>_label,<sp/><ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref><sp/>_intercept<sp/>=<sp/>0.f,<sp/><ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref><sp/>_slope<sp/>=<sp/>1.f,<sp/><ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref><sp/>_binom<sp/>=<sp/>0.f,<sp/><ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref><sp/>_trinom<sp/>=<sp/>0.f)</highlight></codeline>
<codeline lineno="991"><highlight class="normal">{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_slope<sp/>==<sp/>1.f<sp/>&amp;&amp;<sp/>_intercept<sp/>==<sp/>0.f)<sp/>{<ref refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" kindref="member">m_order</ref>[_label]<sp/>=<sp/>0;}</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_binom<sp/>==<sp/>0.f)</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" kindref="member">m_order</ref><sp/><sp/><sp/><sp/><sp/>[_label]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" kindref="member">m_intercept</ref><sp/>[_label]<sp/>=<sp/>_intercept;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" kindref="member">m_slope</ref><sp/><sp/><sp/><sp/><sp/>[_label]<sp/>=<sp/>_slope;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_trinom<sp/>==<sp/>0.f)</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" kindref="member">m_order</ref><sp/><sp/><sp/><sp/><sp/>[_label]<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" kindref="member">m_intercept</ref><sp/>[_label]<sp/>=<sp/>_intercept;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" kindref="member">m_slope</ref><sp/><sp/><sp/><sp/><sp/>[_label]<sp/>=<sp/>_slope;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" kindref="member">m_binom</ref><sp/><sp/><sp/><sp/><sp/>[_label]<sp/>=<sp/>_binom;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" kindref="member">m_order</ref><sp/><sp/><sp/><sp/><sp/>[_label]<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" kindref="member">m_intercept</ref><sp/>[_label]<sp/>=<sp/>_intercept;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" kindref="member">m_slope</ref><sp/><sp/><sp/><sp/><sp/>[_label]<sp/>=<sp/>_slope;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" kindref="member">m_binom</ref><sp/><sp/><sp/><sp/><sp/>[_label]<sp/>=<sp/>_binom;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1a33557fc219e93f9afe9ae38e12e649b7" kindref="member">m_trinom</ref><sp/><sp/><sp/><sp/>[_label]<sp/>=<sp/>_trinom;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016" refid="class_calibration_1a2d2a0d6276fc2c8a4b60c3801ccc16a9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a2d2a0d6276fc2c8a4b60c3801ccc16a9" kindref="member">Calibration::load</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>calibFileName)</highlight></codeline>
<codeline lineno="1017"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><ref refid="class_calibration_1ada2b7de482524ffd3e0a9b6038e3d6de" kindref="member">m_filename</ref><sp/>=<sp/>calibFileName;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/>std::ifstream<sp/>inputfile(calibFileName,<sp/>std::ifstream::in);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inputfile.good())<sp/>{<ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;CAN&apos;T<sp/>OPEN<sp/>THE<sp/>CALIBRATION<sp/>FILE<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>calibFileName);<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;CALIBRATION&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="files__functions_8hpp_1afd584978228fac5fae283c12837378dd" kindref="member">file_is_empty</ref>(inputfile))<sp/>{<ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;CALIBRATION<sp/>FILE&quot;</highlight><highlight class="normal">,<sp/>calibFileName,<sp/></highlight><highlight class="stringliteral">&quot;EMPTY<sp/>!&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;CALIBRATION&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/>std::string<sp/>line<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/><ref refid="class_calibration_1ac4b8f57b3d896cda20a6aa3ba04a78e7" kindref="member">size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/>label<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-----------------------------------------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>extract<sp/>the<sp/>maximum<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Infer<sp/>the<sp/>number<sp/>of<sp/>detectors<sp/>from<sp/>the<sp/>higher<sp/>label<sp/>in<sp/>calibration<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(getline(inputfile,<sp/>line))</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istringstream<sp/>iss<sp/>(line);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>iss<sp/>&gt;&gt;<sp/>label;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label&gt;<ref refid="class_calibration_1ac4b8f57b3d896cda20a6aa3ba04a78e7" kindref="member">size</ref>)<sp/><ref refid="class_calibration_1ac4b8f57b3d896cda20a6aa3ba04a78e7" kindref="member">size</ref><sp/>=<sp/>label;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><ref refid="class_calibration_1ac4b8f57b3d896cda20a6aa3ba04a78e7" kindref="member">size</ref>++;<sp/></highlight><highlight class="comment">//<sp/>The<sp/>size<sp/>of<sp/>the<sp/>vector<sp/>must<sp/>be<sp/>label_max+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>there<sp/>is<sp/>no<sp/>mismatch<sp/>with<sp/>the<sp/>detectors<sp/>module<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>)</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1ac4b8f57b3d896cda20a6aa3ba04a78e7" kindref="member">size</ref>&lt;<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a1177661fb15c9825755925faf00c8398" kindref="member">size</ref>())<sp/><ref refid="class_calibration_1ac4b8f57b3d896cda20a6aa3ba04a78e7" kindref="member">size</ref><sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a1177661fb15c9825755925faf00c8398" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1af2bb20ee60f504df326b87e9ebbaef30" kindref="member">resize</ref>(<ref refid="class_calibration_1ac4b8f57b3d896cda20a6aa3ba04a78e7" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/>inputfile.clear();</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/>inputfile.seekg(0,<sp/>std::ios::beg);<sp/></highlight><highlight class="comment">//<sp/>back<sp/>to<sp/>the<sp/>start<sp/>of<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><ref refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" kindref="member">m_size</ref><sp/>=<sp/><ref refid="class_calibration_1ac4b8f57b3d896cda20a6aa3ba04a78e7" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-----------------------------------------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>fill<sp/>the<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><ref refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" kindref="member">m_order</ref><sp/><sp/><sp/><sp/>.resize(<ref refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" kindref="member">m_size</ref>,-1);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><ref refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" kindref="member">m_intercept</ref>.resize(<ref refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" kindref="member">m_size</ref>,<sp/>0.f);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><ref refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" kindref="member">m_slope</ref><sp/><sp/><sp/><sp/>.resize(<ref refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" kindref="member">m_size</ref>,<sp/>1.f);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><ref refid="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" kindref="member">m_binom</ref><sp/><sp/><sp/><sp/>.resize(<ref refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" kindref="member">m_size</ref>,<sp/>0.f);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><ref refid="class_calibration_1a33557fc219e93f9afe9ae38e12e649b7" kindref="member">m_trinom</ref><sp/><sp/><sp/>.resize(<ref refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" kindref="member">m_size</ref>,<sp/>0.f);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><ref refid="_hit_8hpp_1aad3a9d2c404fb4cd7f73b16966ae2877" kindref="member">NRJ</ref><sp/>slope<sp/>=<sp/>1.f,<sp/>binom<sp/>=<sp/>0.f,<sp/>trinom<sp/>=<sp/>0.f,<sp/>intercept<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(getline(inputfile,<sp/>line))</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibration_1a2988b922363b5d090771be9961254cbc" kindref="member">m_nb_detectors</ref>++;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istringstream<sp/>iss<sp/>(line);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>iss<sp/>&gt;&gt;<sp/>label<sp/>&gt;&gt;<sp/>intercept<sp/>&gt;&gt;<sp/>slope<sp/>&gt;&gt;<sp/>binom<sp/>&gt;&gt;<sp/>trinom;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibration_1ab1502564e126e769e782d221d42608c7" kindref="member">set</ref>(label,<sp/>intercept,<sp/>slope,<sp/>binom,<sp/>trinom);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>intercept<sp/>=<sp/>0.f;<sp/>slope<sp/>=<sp/>1.f;<sp/>binom<sp/>=<sp/>0.f;<sp/>trinom<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Calibration<sp/>extracted<sp/>from&quot;</highlight><highlight class="normal">,<sp/>calibFileName);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1aea5e9bf6d006f5e26702953552e97dec" kindref="member">m_ok</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065" refid="class_calibration_1aaba010db225b8b01931d013eefda800b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1aaba010db225b8b01931d013eefda800b" kindref="member">Calibration::Print</ref>()</highlight></codeline>
<codeline lineno="1066"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/>label<sp/>=<sp/>0;<sp/>label&lt;<ref refid="class_calibration_1a8b66733b050e8743b1887fbed7284269" kindref="member">m_size</ref>;<sp/>label++)</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" kindref="member">m_order</ref>[label]<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>label<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="class_calibration_1a49f4d0c50b9f7d705fe9b0ddd787722f" kindref="member">m_intercept</ref>[label];</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" kindref="member">m_order</ref>[label]<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_calibration_1a0a42451d9596c8378387169d08c6000b" kindref="member">m_slope</ref>[label];</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" kindref="member">m_order</ref>[label]<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_calibration_1a1095b50522f8d002fc52e0c048c65bc6" kindref="member">m_binom</ref>[label];</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1aebce8e9b03e8a2c8b51c0204e81bcd76" kindref="member">m_order</ref>[label]<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_calibration_1a33557fc219e93f9afe9ae38e12e649b7" kindref="member">m_trinom</ref>[label];</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090" refid="class_calibration_1a53565d0fe7d92fd6d5d94eee5a97f1b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a53565d0fe7d92fd6d5d94eee5a97f1b8" kindref="member">Calibration::writePosPeaks</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outfilename)</highlight></codeline>
<codeline lineno="1091"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><ref refid="class_file" kindref="compound">File</ref><sp/>outFile(outfilename);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/>outFile.<ref refid="class_file_1af4dee1c79bf496d505633211177c6ce3" kindref="member">setExtension</ref>(</highlight><highlight class="stringliteral">&quot;peaks&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/>outFile.<ref refid="class_file_1aec78af028103207cb2ce88c0120dd4f6" kindref="member">makePath</ref>();<sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>path<sp/>if<sp/>it<sp/>doesn&apos;t<sp/>already<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/>std::ofstream<sp/>fout(outFile);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>fit<sp/>:<sp/><ref refid="class_calibration_1ad17169e9dbae0e5ec2e63f60f1eebdf3" kindref="member">m_fits</ref>)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fit.found_peaks())<sp/></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/>fit.label()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i&lt;fit.x.size();<sp/>i++)<sp/></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/>fit.x[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fit.y[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fit.ex[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fit.ey[i]<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Peaks<sp/>position<sp/>written<sp/>to&quot;</highlight><highlight class="normal">,<sp/>outfilename);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108" refid="class_calibration_1a7e89a0c788e7ad97c2a9cea5e02ef3f2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a7e89a0c788e7ad97c2a9cea5e02ef3f2" kindref="member">Calibration::writeData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outfilename)</highlight></codeline>
<codeline lineno="1109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><ref refid="class_file" kindref="compound">File</ref><sp/>outFile(outfilename);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/>outFile.<ref refid="class_file_1af4dee1c79bf496d505633211177c6ce3" kindref="member">setExtension</ref>(</highlight><highlight class="stringliteral">&quot;calib&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/>outFile.<ref refid="class_file_1aec78af028103207cb2ce88c0120dd4f6" kindref="member">makePath</ref>();<sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>path<sp/>if<sp/>it<sp/>doesn&apos;t<sp/>already<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/>std::ofstream<sp/>outfile(outFile);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>fit<sp/>:<sp/><ref refid="class_calibration_1ad17169e9dbae0e5ec2e63f60f1eebdf3" kindref="member">m_fits</ref>)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a47ae394beae7efa2fb8fa1a3c7f8427d" kindref="member">exists</ref>(fit.label()))<sp/>outfile<sp/>&lt;&lt;<sp/>fit;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Data<sp/>written<sp/>to&quot;</highlight><highlight class="normal">,<sp/>outfilename);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119" refid="class_calibration_1a062cb134d4b82246ba9c89c567a32963" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a062cb134d4b82246ba9c89c567a32963" kindref="member">Calibration::writeRawRoot</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outfilename)</highlight></codeline>
<codeline lineno="1120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><ref refid="lib_root_8hpp_1a3b73f11bc69f125e12c1d48c9ed79a6e" kindref="member">unique_TFile</ref><sp/>outFile(TFile::Open(outfilename.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;RECREATE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/>outFile-&gt;cd();</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><ref refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" kindref="member">m_histos</ref>.<ref refid="struct_calibration_1_1histograms_1a7459f2c745533444d1d7958fa192dd56" kindref="member">all_raw_spectra</ref>.<ref refid="class_m_t_t_hist_1ae9163b5b4afca69cfdebdf2cf60064cd" kindref="member">Write</ref>();</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>histo<sp/>:<sp/><ref refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" kindref="member">m_histos</ref>.<ref refid="struct_calibration_1_1histograms_1a4665ea6699e47b50df6103317d87d36b" kindref="member">raw_spectra</ref>)<sp/>{histo.Write();}</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Raw<sp/>root<sp/>spectra<sp/>written<sp/>to&quot;</highlight><highlight class="normal">,<sp/>outfilename);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128" refid="class_calibration_1a344dc3d6feab3580e859cc693c2fdd4a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a344dc3d6feab3580e859cc693c2fdd4a" kindref="member">Calibration::verify</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outfilename)</highlight></codeline>
<codeline lineno="1129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/>std::vector&lt;size_t&gt;<sp/>nb_det_filled(<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a24d220832c2f0a03a0d886e11f2c284c" kindref="member">nbTypes</ref>(),<sp/>0);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Verification<sp/>of<sp/>the<sp/>calibration&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/>label<sp/>=<sp/>0;<sp/>label&lt;<ref refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" kindref="member">m_histos</ref>.<ref refid="struct_calibration_1_1histograms_1a4665ea6699e47b50df6103317d87d36b" kindref="member">raw_spectra</ref>.size();<sp/>label++)<sp/></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a47ae394beae7efa2fb8fa1a3c7f8427d" kindref="member">exists</ref>(label))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>[label];</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>raw_histo<sp/>=<sp/><ref refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" kindref="member">m_histos</ref>.<ref refid="struct_calibration_1_1histograms_1a4665ea6699e47b50df6103317d87d36b" kindref="member">raw_spectra</ref>[label];</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(raw_histo.Integral()&lt;1)<sp/>{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1a8e0d431465c589e805f74aacfabeb1d7" kindref="member">m_verbose</ref>)<sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(name,<sp/></highlight><highlight class="stringliteral">&quot;has<sp/>no<sp/>hit&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>raw_histo.Merge();</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>calib_histo<sp/>=<sp/><ref refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" kindref="member">m_histos</ref>.<ref refid="struct_calibration_1_1histograms_1a8b5260e1a8f3434d96c5cd83402a48fc" kindref="member">calib_spectra</ref>[label];</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>calib_histo.Merge();</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>fit<sp/>=<sp/><ref refid="class_calibration_1ad17169e9dbae0e5ec2e63f60f1eebdf3" kindref="member">m_fits</ref>[label];</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>useful<sp/>information<sp/>:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>type<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref>(label);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>type_index<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1ab4d5e6cc24173a65a35788ba7c680264" kindref="member">typeIndex</ref>(type);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fit.exists())<sp/>{nb_det_filled[type_index]++;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibration_1a8e0d431465c589e805f74aacfabeb1d7" kindref="member">m_verbose</ref>)<sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(name,<sp/></highlight><highlight class="stringliteral">&quot;has<sp/>no<sp/>fit&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>xaxis_raw<sp/>=<sp/>raw_histo<sp/>-&gt;<sp/>GetXaxis();</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_bins<sp/>=<sp/>xaxis_raw<sp/>-&gt;<sp/>GetNbins();</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bin_width<sp/>=<sp/>xaxis_raw<sp/>-&gt;<sp/>GetXmax()<sp/>/<sp/>nb_bins;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>0;<sp/>bin&lt;nb_bins;<sp/>bin++)</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>counts_in_bin<sp/>=<sp/>raw_histo<sp/>-&gt;<sp/>GetBinContent(bin);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_hit_8hpp_1a04b75a9e083a1c44419fdb7c3f87c361" kindref="member">ADC</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>raw_ADC<sp/>=<sp/>xaxis_raw<sp/>-&gt;<sp/>GetBinCenter(bin);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hit<sp/>=<sp/>0;<sp/>hit&lt;counts_in_bin;<sp/>hit++)</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>auto<sp/>const<sp/>nrj<sp/>=<sp/>calibrate(raw_ADC,<sp/>label);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nrj<sp/>=<sp/><ref refid="_hit_8hpp_1a394977782e3af344e009b96c7d5bec92" kindref="member">NRJ_cast</ref>(raw_ADC<sp/>+<sp/>bin_width*<ref refid="lib_root_8hpp_1ae1911f5a7f54d08592ee0879f4d848f3" kindref="member">gRandom</ref>-&gt;Uniform(0,1));</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(fit.order)</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1<sp/>:<sp/>nrj<sp/>=<sp/>fit.parameter0<sp/>+<sp/>nrj*fit.parameter1;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2<sp/>:<sp/>nrj<sp/>=<sp/>fit.parameter0<sp/>+<sp/>nrj*fit.parameter1<sp/>+<sp/>nrj*nrj*fit.parameter2;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calib_histo<sp/>-&gt;<sp/>Fill(nrj);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" kindref="member">m_histos</ref>.<ref refid="struct_calibration_1_1histograms_1a4e3132f86e81180b0e35833ed839057d" kindref="member">all_calib</ref>[type_index]-&gt;Fill(<ref refid="lib_co_8hpp_1a2052317e56aa118e7ffcdb2e398f551c" kindref="member">double_cast</ref>(nb_det_filled[type_index]),<sp/>nrj);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_det_filled[type_index]++;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><ref refid="class_calibration_1a8ff8375eee244f2b22b86914a1d559bc" kindref="member">writeCalibratedHisto</ref>(outfilename+</highlight><highlight class="stringliteral">&quot;_calib.root&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173" refid="class_calibration_1a8ff8375eee244f2b22b86914a1d559bc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a8ff8375eee244f2b22b86914a1d559bc" kindref="member">Calibration::writeCalibratedHisto</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outfilename)</highlight></codeline>
<codeline lineno="1174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><ref refid="lib_root_8hpp_1a3b73f11bc69f125e12c1d48c9ed79a6e" kindref="member">unique_TFile</ref><sp/>outFile(TFile::Open(outfilename.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;RECREATE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/>outFile-&gt;cd();</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>histo<sp/>:<sp/><ref refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" kindref="member">m_histos</ref>.<ref refid="struct_calibration_1_1histograms_1a4e3132f86e81180b0e35833ed839057d" kindref="member">all_calib</ref>)<sp/>histo.Write();</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>histo<sp/>:<sp/><ref refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" kindref="member">m_histos</ref>.<ref refid="struct_calibration_1_1histograms_1a8b5260e1a8f3434d96c5cd83402a48fc" kindref="member">calib_spectra</ref>)<sp/><sp/>histo.Write();</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Calibrated<sp/>root<sp/>spectra<sp/>written<sp/>to&quot;</highlight><highlight class="normal">,<sp/>outfilename);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182" refid="class_calibration_1a5931047806db77858db6886d041db100" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a5931047806db77858db6886d041db100" kindref="member">Calibration::calibrateFasterData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>folder,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_files<sp/>)</highlight></codeline>
<codeline lineno="1183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><ref refid="class_calibration_1afa4ecd691e71e5b13504bfe7d71950ac" kindref="member">m_calibrate_data</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibration_1a6514307ca111ecc5d6f02694373dc5ec" kindref="member">loadFasterData</ref>(folder,<sp/>nb_files);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188" refid="class_calibration_1ac7678b0524f8407659a9594b3862e5c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1ac7678b0524f8407659a9594b3862e5c3" kindref="member">Calibration::calibrateRootData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>folder,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_files)</highlight></codeline>
<codeline lineno="1189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><ref refid="class_calibration_1afa4ecd691e71e5b13504bfe7d71950ac" kindref="member">m_calibrate_data</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibration_1a6d6d354f65db38acf12addf1efb7c815" kindref="member">loadRootData</ref>(folder,<sp/>nb_files);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194" refid="class_calibration_1a6ad79450d0bb55baa744f6436f84dbbe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibration_1a6ad79450d0bb55baa744f6436f84dbbe" kindref="member">Calibration::writeCalibratedData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outfilename)</highlight></codeline>
<codeline lineno="1195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><ref refid="lib_root_8hpp_1a3b73f11bc69f125e12c1d48c9ed79a6e" kindref="member">unique_TFile</ref><sp/>outFile(TFile::Open(outfilename.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;RECREATE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/>outFile-&gt;cd();</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>histo<sp/>:<sp/><ref refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" kindref="member">m_histos</ref>.<ref refid="struct_calibration_1_1histograms_1a4e3132f86e81180b0e35833ed839057d" kindref="member">all_calib</ref>)<sp/>histo.Write();</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>histo<sp/>:<sp/><ref refid="class_calibration_1ac431b30e91e0ccab87e5488af8fcce2a" kindref="member">m_histos</ref>.<ref refid="struct_calibration_1_1histograms_1a8b5260e1a8f3434d96c5cd83402a48fc" kindref="member">calib_spectra</ref>)<sp/><sp/>histo.Write();</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Calibrated<sp/>root<sp/>spectra<sp/>written<sp/>to&quot;</highlight><highlight class="normal">,<sp/>outfilename);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203" refid="_calibration_8hpp_1abacd32722d973dc5cde6c73482b0e615" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="_calibration_8hpp_1a4f68d2fe488cf1a3044c1573a16bc394" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>cout,<sp/><ref refid="class_calibration" kindref="compound">Calibration</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>calib)</highlight></codeline>
<codeline lineno="1204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/>label<sp/>=<sp/>0;<sp/>label&lt;<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a1177661fb15c9825755925faf00c8398" kindref="member">size</ref>();<sp/>label++)<sp/></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref><sp/>&amp;&amp;<sp/>!<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a47ae394beae7efa2fb8fa1a3c7f8427d" kindref="member">exists</ref>(label))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>label<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>calib[label]<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cout;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//CALIBRATION_HPP</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="lib/Modules/Calibration.hpp"/>
  </compounddef>
</doxygen>
