<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_data_file" kind="class" language="C++" prot="public">
    <compoundname>DataFile</compoundname>
    <includes refid="_data_file_8hpp" local="no">DataFile.hpp</includes>
    <templateparamlist>
      <param>
        <type>class Index</type>
      </param>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_data_file_1a2484810cfdfddf382f6e7cc539fa26ee" prot="private" static="no">
        <type>std::vector&lt; T &gt;</type>
        <definition>using DataFile&lt; Index, T &gt;::DataPoints =  std::vector&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>DataPoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="41" column="3" bodyfile="lib/Classes/DataFile.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_data_file_1a0d84d9e8ed9d0da9118ece6250e80ec1" prot="private" static="no">
        <type>std::vector&lt; Index &gt;</type>
        <definition>using DataFile&lt; Index, T &gt;::Indexes =  std::vector&lt;Index&gt;</definition>
        <argsstring></argsstring>
        <name>Indexes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="40" column="3" bodyfile="lib/Classes/DataFile.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_data_file_1a4d414d0f4fc92becb2f475a80e56a57f" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool DataFile&lt; Index, T &gt;::m_all_column_name_casted</definition>
        <argsstring></argsstring>
        <name>m_all_column_name_casted</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="161" column="8" bodyfile="lib/Classes/DataFile.hpp" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_data_file_1a595bdc44926515b9f30bd332222e6eeb" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int DataFile&lt; Index, T &gt;::m_chosen_column</definition>
        <argsstring></argsstring>
        <name>m_chosen_column</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="183" column="7" bodyfile="lib/Classes/DataFile.hpp" bodystart="183" bodyend="-1"/>
        <referencedby refid="class_data_file_1ab5c38f4fcd6ec5a6e1eb2d1949d3ba9e" compoundref="_data_file_8hpp" startline="66" endline="66">DataFile&lt; Index, T &gt;::operator[]</referencedby>
        <referencedby refid="class_data_file_1a384d0b3098646b77e219189fc8dccd00" compoundref="_data_file_8hpp" startline="84" endline="88">DataFile&lt; Index, T &gt;::readColumn</referencedby>
        <referencedby refid="class_data_file_1aa8591eee73f290dcb9cda4ddf90812bc" compoundref="_data_file_8hpp" startline="73" endline="73">DataFile&lt; Index, T &gt;::setColumn</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_data_file_1a70de36522aa7d2b770f08e01463d0a9f" prot="protected" static="no" mutable="no">
        <type><ref refid="class_bools" kindref="compound">Bools</ref></type>
        <definition>Bools DataFile&lt; Index, T &gt;::m_column_name_casted</definition>
        <argsstring></argsstring>
        <name>m_column_name_casted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="160" column="9" bodyfile="lib/Classes/DataFile.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_data_file_1aa5fa5d835eef5c509713f74b564cc552" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; DataFile&lt; Index, T &gt;::m_columns_to_read</definition>
        <argsstring></argsstring>
        <name>m_columns_to_read</name>
        <initializer>= {1}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="148" column="15" bodyfile="lib/Classes/DataFile.hpp" bodystart="148" bodyend="-1"/>
        <referencedby refid="class_data_file_1a3acd72939856b7bad0829293ffaf157f" compoundref="_data_file_8hpp" startline="47" endline="47">DataFile&lt; Index, T &gt;::setColumns</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_data_file_1a2611c3a759ee2902c8d05b1b166012d4" prot="protected" static="no" mutable="no">
        <type>std::map&lt; Index, <ref refid="class_data_file_1a2484810cfdfddf382f6e7cc539fa26ee" kindref="member">DataPoints</ref> &gt;</type>
        <definition>std::map&lt;Index, DataPoints&gt; DataFile&lt; Index, T &gt;::m_data</definition>
        <argsstring></argsstring>
        <name>m_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="173" column="12" bodyfile="lib/Classes/DataFile.hpp" bodystart="173" bodyend="-1"/>
        <referencedby refid="class_data_file_1ae7b9f0825c34316b883837d063c0de09" compoundref="_data_file_8hpp" startline="63" endline="63">DataFile&lt; Index, T &gt;::data</referencedby>
        <referencedby refid="class_data_file_1a2f42ba45453da1c72b8c60d1add57c1a" compoundref="_data_file_8hpp" startline="137" endline="137">DataFile&lt; Index, T &gt;::operator bool</referencedby>
        <referencedby refid="class_data_file_1ab5c38f4fcd6ec5a6e1eb2d1949d3ba9e" compoundref="_data_file_8hpp" startline="66" endline="66">DataFile&lt; Index, T &gt;::operator[]</referencedby>
        <referencedby refid="class_data_file_1a384d0b3098646b77e219189fc8dccd00" compoundref="_data_file_8hpp" startline="84" endline="88">DataFile&lt; Index, T &gt;::readColumn</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_data_file_1a676faa65afd02b104f3eb0a3d2e653f2" prot="protected" static="no" mutable="no">
        <type><ref refid="class_data_file_1a2484810cfdfddf382f6e7cc539fa26ee" kindref="member">DataPoints</ref></type>
        <definition>DataPoints DataFile&lt; Index, T &gt;::m_data_points</definition>
        <argsstring></argsstring>
        <name>m_data_points</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="159" column="14" bodyfile="lib/Classes/DataFile.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_data_file_1ac07aa5725aefa63f837e4a7f7005f623" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_data_file_1a2484810cfdfddf382f6e7cc539fa26ee" kindref="member">DataPoints</ref> &gt;</type>
        <definition>std::vector&lt;DataPoints&gt; DataFile&lt; Index, T &gt;::m_data_vector</definition>
        <argsstring></argsstring>
        <name>m_data_vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="177" column="15" bodyfile="lib/Classes/DataFile.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_data_file_1a1984aaa46019a7aeeaf07f61da0cf130" prot="protected" static="no" mutable="no">
        <type>char</type>
        <definition>char DataFile&lt; Index, T &gt;::m_delim</definition>
        <argsstring></argsstring>
        <name>m_delim</name>
        <initializer>= &apos; &apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="152" column="8" bodyfile="lib/Classes/DataFile.hpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_data_file_1ae6e9b136e3c6dc436b012fed6961e103" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool DataFile&lt; Index, T &gt;::m_has_header</definition>
        <argsstring></argsstring>
        <name>m_has_header</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="153" column="8" bodyfile="lib/Classes/DataFile.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_data_file_1a0c032bb1b236276d4bfc5c4d3e74ca0d" prot="protected" static="no" mutable="no">
        <type><ref refid="_data_file_8hpp_1a5bbd0ff6e41ea521288f926113db6f48" kindref="member">DataLine</ref></type>
        <definition>DataLine DataFile&lt; Index, T &gt;::m_header</definition>
        <argsstring></argsstring>
        <name>m_header</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="155" column="12" bodyfile="lib/Classes/DataFile.hpp" bodystart="155" bodyend="-1"/>
        <referencedby refid="class_data_file_1afac349d6db7005f3ca36802b0d4fbd96" compoundref="_data_file_8hpp" startline="60" endline="60">DataFile&lt; Index, T &gt;::setHeader</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_data_file_1ab339991e70846dfd4bf65be2534e45c1" prot="protected" static="no" mutable="no">
        <type><ref refid="class_data_file_1a0d84d9e8ed9d0da9118ece6250e80ec1" kindref="member">Indexes</ref></type>
        <definition>Indexes DataFile&lt; Index, T &gt;::m_indexes</definition>
        <argsstring></argsstring>
        <name>m_indexes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="165" column="11" bodyfile="lib/Classes/DataFile.hpp" bodystart="165" bodyend="-1"/>
        <referencedby refid="class_data_file_1affed9dbc6759035d5e3b087b466b3413" compoundref="_data_file_8hpp" startline="61" endline="61">DataFile&lt; Index, T &gt;::indexes</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_data_file_1a5bac1ee6087bcd1c427a41ae149c10f3" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string DataFile&lt; Index, T &gt;::m_input_filename</definition>
        <argsstring></argsstring>
        <name>m_input_filename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="145" column="15" bodyfile="lib/Classes/DataFile.hpp" bodystart="145" bodyend="-1"/>
        <referencedby refid="class_data_file_1a20ccbf2ff940a527452b137a07ff1010" compoundref="_data_file_8hpp" startline="76" endline="81">DataFile&lt; Index, T &gt;::setColumn</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_data_file_1af3c9d0a54a0f9e7efd9fe94ce945007c" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int DataFile&lt; Index, T &gt;::m_label_index</definition>
        <argsstring></argsstring>
        <name>m_label_index</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="151" column="7" bodyfile="lib/Classes/DataFile.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_data_file_1ac4ca4c0767acf308e2b06ab89b340c5c" prot="protected" static="no" mutable="no">
        <type><ref refid="lib_co_8hpp_1a632090884b4aa0585e747446a2683963" kindref="member">Strings</ref></type>
        <definition>Strings DataFile&lt; Index, T &gt;::m_labels_column</definition>
        <argsstring></argsstring>
        <name>m_labels_column</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="158" column="11" bodyfile="lib/Classes/DataFile.hpp" bodystart="158" bodyend="-1"/>
        <referencedby refid="class_data_file_1a20ccbf2ff940a527452b137a07ff1010" compoundref="_data_file_8hpp" startline="76" endline="81">DataFile&lt; Index, T &gt;::setColumn</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_data_file_1a7234085692baf3c4c33cced506b77d9e" prot="protected" static="no" mutable="no">
        <type><ref refid="_data_file_8hpp_1a5bbd0ff6e41ea521288f926113db6f48" kindref="member">DataLine</ref></type>
        <definition>DataLine DataFile&lt; Index, T &gt;::m_labels_rows</definition>
        <argsstring></argsstring>
        <name>m_labels_rows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="164" column="12" bodyfile="lib/Classes/DataFile.hpp" bodystart="164" bodyend="-1"/>
        <referencedby refid="class_data_file_1a384d0b3098646b77e219189fc8dccd00" compoundref="_data_file_8hpp" startline="84" endline="88">DataFile&lt; Index, T &gt;::readColumn</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_data_file_1ad499801b7733c896c4ed3212ece9f48b" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int DataFile&lt; Index, T &gt;::m_nb_columns</definition>
        <argsstring></argsstring>
        <name>m_nb_columns</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="149" column="7" bodyfile="lib/Classes/DataFile.hpp" bodystart="149" bodyend="-1"/>
        <referencedby refid="class_data_file_1a3acd72939856b7bad0829293ffaf157f" compoundref="_data_file_8hpp" startline="47" endline="47">DataFile&lt; Index, T &gt;::setColumns</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_data_file_1a9d671120b9a31228a3eb4ef318c3de47" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool DataFile&lt; Index, T &gt;::m_ok</definition>
        <argsstring></argsstring>
        <name>m_ok</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="167" column="8" bodyfile="lib/Classes/DataFile.hpp" bodystart="167" bodyend="-1"/>
        <referencedby refid="class_data_file_1a2f42ba45453da1c72b8c60d1add57c1a" compoundref="_data_file_8hpp" startline="137" endline="137">DataFile&lt; Index, T &gt;::operator bool</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_data_file_1a49e86af7ac13c5325a0ace3c0a4fd6cf" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string DataFile&lt; Index, T &gt;::m_output_filename</definition>
        <argsstring></argsstring>
        <name>m_output_filename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="146" column="15" bodyfile="lib/Classes/DataFile.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_data_file_1a489605b761bf235b58c58aabf6ac3e2b" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string DataFile&lt; Index, T &gt;::m_reader</definition>
        <argsstring></argsstring>
        <name>m_reader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="180" column="15" bodyfile="lib/Classes/DataFile.hpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_data_file_1a3bda8df19c2825e6066f643a4cea25c2" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int DataFile&lt; Index, T &gt;::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="150" column="7" bodyfile="lib/Classes/DataFile.hpp" bodystart="150" bodyend="-1"/>
        <referencedby refid="class_data_file_1a3ab1b817133b14eb348319d7959d360d" compoundref="_data_file_8hpp" startline="69" endline="69">DataFile&lt; Index, T &gt;::size</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_data_file_1a013613e672fc52c80b933ef0635c83e6" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool DataFile&lt; Index, T &gt;::m_warning_is_error</definition>
        <argsstring></argsstring>
        <name>m_warning_is_error</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="168" column="8" bodyfile="lib/Classes/DataFile.hpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_data_file_1aaffaf1e2df21446c06f7647c925822be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DataFile&lt; Index, T &gt;::checkOutputfile</definition>
        <argsstring>(std::ofstream &amp;outputfile)</argsstring>
        <name>checkOutputfile</name>
        <param>
          <type>std::ofstream &amp;</type>
          <declname>outputfile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="53" column="8" bodyfile="lib/Classes/DataFile.hpp" bodystart="304" bodyend="307"/>
        <references refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" compoundref="print_8hpp" startline="44" endline="44">print</references>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1aa7924fc31df5257c572a05d5a5d6a795" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_data_file_1a2484810cfdfddf382f6e7cc539fa26ee" kindref="member">DataPoints</ref></type>
        <definition>DataPoints DataFile&lt; Index, T &gt;::column</definition>
        <argsstring>()</argsstring>
        <name>column</name>
        <briefdescription>
<para>Returns the given column. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>This involves a copy of the data !! </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="115" column="14" bodyfile="lib/Classes/DataFile.hpp" bodystart="115" bodyend="120"/>
        <references refid="class_data_file_1a384d0b3098646b77e219189fc8dccd00" compoundref="_data_file_8hpp" startline="84" endline="88">DataFile&lt; Index, T &gt;::readColumn</references>
        <referencedby refid="class_data_file_1a3fa00fffe402fcc0f77407338fdfa9f8" compoundref="_data_file_8hpp" startline="129" endline="135">DataFile&lt; Index, T &gt;::column</referencedby>
        <referencedby refid="class_data_file_1acff7815d10848fb38ab6eecc86270ddb" compoundref="_data_file_8hpp" startline="92" endline="97">DataFile&lt; Index, T &gt;::readColumn</referencedby>
        <referencedby refid="class_data_file_1a20ccbf2ff940a527452b137a07ff1010" compoundref="_data_file_8hpp" startline="76" endline="81">DataFile&lt; Index, T &gt;::setColumn</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1a3fa00fffe402fcc0f77407338fdfa9f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class COL</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_data_file_1a2484810cfdfddf382f6e7cc539fa26ee" kindref="member">DataPoints</ref></type>
        <definition>DataPoints DataFile&lt; Index, T &gt;::column</definition>
        <argsstring>(COL &amp;&amp;columns)</argsstring>
        <name>column</name>
        <param>
          <type>COL &amp;&amp;</type>
          <declname>columns</declname>
        </param>
        <briefdescription>
<para>Returns the given column. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>COL</parametername>
</parameternamelist>
<parameterdescription>
<para>Either std::string (name of the column), or int (the column index) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="attention"><para>This involves a copy of the data !! </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="129" column="14" bodyfile="lib/Classes/DataFile.hpp" bodystart="129" bodyend="135"/>
        <references refid="class_data_file_1aa7924fc31df5257c572a05d5a5d6a795" compoundref="_data_file_8hpp" startline="115" endline="120">DataFile&lt; Index, T &gt;::column</references>
        <references refid="class_data_file_1a384d0b3098646b77e219189fc8dccd00" compoundref="_data_file_8hpp" startline="84" endline="88">DataFile&lt; Index, T &gt;::readColumn</references>
        <references refid="class_data_file_1aa8591eee73f290dcb9cda4ddf90812bc" compoundref="_data_file_8hpp" startline="73" endline="73">DataFile&lt; Index, T &gt;::setColumn</references>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1a3ad42806aff244755a2ad7ca1fe50a37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; DataFile&lt; Index, T &gt;::data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="64" column="9" bodyfile="lib/Classes/DataFile.hpp" bodystart="64" bodyend="64"/>
        <references refid="class_data_file_1a2611c3a759ee2902c8d05b1b166012d4" compoundref="_data_file_8hpp" startline="173">DataFile&lt; Index, T &gt;::m_data</references>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1ae7b9f0825c34316b883837d063c0de09" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; DataFile&lt; Index, T &gt;::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="63" column="15" bodyfile="lib/Classes/DataFile.hpp" bodystart="63" bodyend="63"/>
        <references refid="class_data_file_1a2611c3a759ee2902c8d05b1b166012d4" compoundref="_data_file_8hpp" startline="173">DataFile&lt; Index, T &gt;::m_data</references>
        <referencedby refid="_data_file_8hpp_1aa6b40ad210eb193216cf8f5f0061fbaa" compoundref="_data_file_8hpp" startline="341" endline="348">operator&lt;&lt;</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1afb388fd7a0b151fa6e8edb8a2c35ca53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DataFile&lt; Index, T &gt;::DataFile</definition>
        <argsstring>()=default</argsstring>
        <name>DataFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="43" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1a1a6fb21dceaa1670086d62be142a45b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DataFile&lt; Index, T &gt;::DataFile</definition>
        <argsstring>(std::string const &amp;filename, bool const &amp;has_header=true)</argsstring>
        <name>DataFile</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>has_header</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="44" column="3" bodyfile="lib/Classes/DataFile.hpp" bodystart="44" bodyend="44"/>
        <references refid="class_data_file_1ae9748d2772e7a11da4b9f81da89d70b3" compoundref="_data_file_8hpp" startline="276" endline="291">DataFile&lt; Index, T &gt;::load</references>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1affed9dbc6759035d5e3b087b466b3413" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; DataFile&lt; Index, T &gt;::indexes</definition>
        <argsstring>() const</argsstring>
        <name>indexes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="61" column="15" bodyfile="lib/Classes/DataFile.hpp" bodystart="61" bodyend="61"/>
        <references refid="class_data_file_1ab339991e70846dfd4bf65be2534e45c1" compoundref="_data_file_8hpp" startline="165">DataFile&lt; Index, T &gt;::m_indexes</references>
        <referencedby refid="class_evolution_peaks_1a5645dd6726d0af38e8a4d849da6a8d18" compoundref="_evolution_peaks_8hpp" startline="102" endline="345">EvolutionPeaks::run</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1ae9748d2772e7a11da4b9f81da89d70b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataFile&lt; Index, T &gt;::load</definition>
        <argsstring>(std::string const &amp;filename, bool const &amp;has_header=true)</argsstring>
        <name>load</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>has_header</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="49" column="8" bodyfile="lib/Classes/DataFile.hpp" bodystart="276" bodyend="291"/>
        <referencedby refid="class_data_file_1a1a6fb21dceaa1670086d62be142a45b0" compoundref="_data_file_8hpp" startline="44" endline="44">DataFile&lt; Index, T &gt;::DataFile</referencedby>
        <referencedby refid="class_evolution_peaks_1a10bf1158a6a89129b9c2e61ff4ca27ee" compoundref="_evolution_peaks_8hpp" startline="43" endline="43">EvolutionPeaks::loadRebin</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1a2f42ba45453da1c72b8c60d1add57c1a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DataFile&lt; Index, T &gt;::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="137" column="3" bodyfile="lib/Classes/DataFile.hpp" bodystart="137" bodyend="137"/>
        <references refid="class_data_file_1a2611c3a759ee2902c8d05b1b166012d4" compoundref="_data_file_8hpp" startline="173">DataFile&lt; Index, T &gt;::m_data</references>
        <references refid="class_data_file_1a9d671120b9a31228a3eb4ef318c3de47" compoundref="_data_file_8hpp" startline="167">DataFile&lt; Index, T &gt;::m_ok</references>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1a1fb2113e19a01c149f40c3304c676225" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; DataFile&lt; Index, T &gt;::operator[]</definition>
        <argsstring>(T t)</argsstring>
        <name>operator[]</name>
        <param>
          <type>T</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="67" column="6" bodyfile="lib/Classes/DataFile.hpp" bodystart="67" bodyend="67"/>
        <references refid="class_data_file_1a595bdc44926515b9f30bd332222e6eeb" compoundref="_data_file_8hpp" startline="183">DataFile&lt; Index, T &gt;::m_chosen_column</references>
        <references refid="class_data_file_1a2611c3a759ee2902c8d05b1b166012d4" compoundref="_data_file_8hpp" startline="173">DataFile&lt; Index, T &gt;::m_data</references>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1ab5c38f4fcd6ec5a6e1eb2d1949d3ba9e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T const  &amp;</type>
        <definition>T const&amp; DataFile&lt; Index, T &gt;::operator[]</definition>
        <argsstring>(T t) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>T</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="66" column="12" bodyfile="lib/Classes/DataFile.hpp" bodystart="66" bodyend="66"/>
        <references refid="class_data_file_1a595bdc44926515b9f30bd332222e6eeb" compoundref="_data_file_8hpp" startline="183">DataFile&lt; Index, T &gt;::m_chosen_column</references>
        <references refid="class_data_file_1a2611c3a759ee2902c8d05b1b166012d4" compoundref="_data_file_8hpp" startline="173">DataFile&lt; Index, T &gt;::m_data</references>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1aa8ea777558f19e09c911f9f387d08201" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DataFile&lt; Index, T &gt;::readColumn</definition>
        <argsstring>(std::map&lt; Index, T2 &gt; &amp;map)</argsstring>
        <name>readColumn</name>
        <param>
          <type>std::map&lt; Index, T2 &gt; &amp;</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="100" column="8" bodyfile="lib/Classes/DataFile.hpp" bodystart="100" bodyend="103"/>
        <references refid="class_data_file_1a595bdc44926515b9f30bd332222e6eeb" compoundref="_data_file_8hpp" startline="183">DataFile&lt; Index, T &gt;::m_chosen_column</references>
        <references refid="class_data_file_1a2611c3a759ee2902c8d05b1b166012d4" compoundref="_data_file_8hpp" startline="173">DataFile&lt; Index, T &gt;::m_data</references>
        <references refid="class_data_file_1a7234085692baf3c4c33cced506b77d9e" compoundref="_data_file_8hpp" startline="164">DataFile&lt; Index, T &gt;::m_labels_rows</references>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1a5693057972b3ec730173b1d200d5d8b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T2</type>
          </param>
          <param>
            <type>class COL</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DataFile&lt; Index, T &gt;::readColumn</definition>
        <argsstring>(std::map&lt; Index, T2 &gt; &amp;map, COL &amp;&amp;column)</argsstring>
        <name>readColumn</name>
        <param>
          <type>std::map&lt; Index, T2 &gt; &amp;</type>
          <declname>map</declname>
        </param>
        <param>
          <type>COL &amp;&amp;</type>
          <declname>column</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>COL</parametername>
</parameternamelist>
<parameterdescription>
<para>Either std::string (name of the column), or int (the column index) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="107" column="8" bodyfile="lib/Classes/DataFile.hpp" bodystart="107" bodyend="111"/>
        <references refid="class_data_file_1aa7924fc31df5257c572a05d5a5d6a795" compoundref="_data_file_8hpp" startline="115" endline="120">DataFile&lt; Index, T &gt;::column</references>
        <references refid="class_data_file_1a595bdc44926515b9f30bd332222e6eeb" compoundref="_data_file_8hpp" startline="183">DataFile&lt; Index, T &gt;::m_chosen_column</references>
        <references refid="class_data_file_1a2611c3a759ee2902c8d05b1b166012d4" compoundref="_data_file_8hpp" startline="173">DataFile&lt; Index, T &gt;::m_data</references>
        <references refid="class_data_file_1a7234085692baf3c4c33cced506b77d9e" compoundref="_data_file_8hpp" startline="164">DataFile&lt; Index, T &gt;::m_labels_rows</references>
        <references refid="class_data_file_1aa8591eee73f290dcb9cda4ddf90812bc" compoundref="_data_file_8hpp" startline="73" endline="73">DataFile&lt; Index, T &gt;::setColumn</references>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1a384d0b3098646b77e219189fc8dccd00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DataFile&lt; Index, T &gt;::readColumn</definition>
        <argsstring>(std::vector&lt; T2 &gt; &amp;vector)</argsstring>
        <name>readColumn</name>
        <param>
          <type>std::vector&lt; T2 &gt; &amp;</type>
          <declname>vector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="84" column="8" bodyfile="lib/Classes/DataFile.hpp" bodystart="84" bodyend="88"/>
        <references refid="class_data_file_1a595bdc44926515b9f30bd332222e6eeb" compoundref="_data_file_8hpp" startline="183">DataFile&lt; Index, T &gt;::m_chosen_column</references>
        <references refid="class_data_file_1a2611c3a759ee2902c8d05b1b166012d4" compoundref="_data_file_8hpp" startline="173">DataFile&lt; Index, T &gt;::m_data</references>
        <references refid="class_data_file_1a7234085692baf3c4c33cced506b77d9e" compoundref="_data_file_8hpp" startline="164">DataFile&lt; Index, T &gt;::m_labels_rows</references>
        <referencedby refid="class_data_file_1aa7924fc31df5257c572a05d5a5d6a795" compoundref="_data_file_8hpp" startline="115" endline="120">DataFile&lt; Index, T &gt;::column</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1acff7815d10848fb38ab6eecc86270ddb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T2</type>
          </param>
          <param>
            <type>class COL</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DataFile&lt; Index, T &gt;::readColumn</definition>
        <argsstring>(std::vector&lt; T2 &gt; &amp;vector, COL &amp;&amp;column)</argsstring>
        <name>readColumn</name>
        <param>
          <type>std::vector&lt; T2 &gt; &amp;</type>
          <declname>vector</declname>
        </param>
        <param>
          <type>COL &amp;&amp;</type>
          <declname>column</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>COL</parametername>
</parameternamelist>
<parameterdescription>
<para>Either std::string (name of the column), or int (the column index) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="92" column="8" bodyfile="lib/Classes/DataFile.hpp" bodystart="92" bodyend="97"/>
        <references refid="class_data_file_1aa7924fc31df5257c572a05d5a5d6a795" compoundref="_data_file_8hpp" startline="115" endline="120">DataFile&lt; Index, T &gt;::column</references>
        <references refid="class_data_file_1a595bdc44926515b9f30bd332222e6eeb" compoundref="_data_file_8hpp" startline="183">DataFile&lt; Index, T &gt;::m_chosen_column</references>
        <references refid="class_data_file_1a2611c3a759ee2902c8d05b1b166012d4" compoundref="_data_file_8hpp" startline="173">DataFile&lt; Index, T &gt;::m_data</references>
        <references refid="class_data_file_1a7234085692baf3c4c33cced506b77d9e" compoundref="_data_file_8hpp" startline="164">DataFile&lt; Index, T &gt;::m_labels_rows</references>
        <references refid="class_data_file_1aa8591eee73f290dcb9cda4ddf90812bc" compoundref="_data_file_8hpp" startline="73" endline="73">DataFile&lt; Index, T &gt;::setColumn</references>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1aa8591eee73f290dcb9cda4ddf90812bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DataFile&lt; Index, T &gt;::setColumn</definition>
        <argsstring>(int const &amp;choice)</argsstring>
        <name>setColumn</name>
        <param>
          <type>int const &amp;</type>
          <declname>choice</declname>
        </param>
        <briefdescription>
<para>Setup the reading to the wanted column. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="73" column="8" bodyfile="lib/Classes/DataFile.hpp" bodystart="73" bodyend="73"/>
        <references refid="class_data_file_1a595bdc44926515b9f30bd332222e6eeb" compoundref="_data_file_8hpp" startline="183">DataFile&lt; Index, T &gt;::m_chosen_column</references>
        <referencedby refid="class_data_file_1a3fa00fffe402fcc0f77407338fdfa9f8" compoundref="_data_file_8hpp" startline="129" endline="135">DataFile&lt; Index, T &gt;::column</referencedby>
        <referencedby refid="class_data_file_1acff7815d10848fb38ab6eecc86270ddb" compoundref="_data_file_8hpp" startline="92" endline="97">DataFile&lt; Index, T &gt;::readColumn</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1a20ccbf2ff940a527452b137a07ff1010" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DataFile&lt; Index, T &gt;::setColumn</definition>
        <argsstring>(std::string const &amp;column)</argsstring>
        <name>setColumn</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Setup the reading to the wanted column. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="76" column="8" bodyfile="lib/Classes/DataFile.hpp" bodystart="76" bodyend="81"/>
        <references refid="class_data_file_1aa7924fc31df5257c572a05d5a5d6a795" compoundref="_data_file_8hpp" startline="115" endline="120">DataFile&lt; Index, T &gt;::column</references>
        <references refid="string__functions_8hpp_1ae058d07fbc702d0b0f79e3650e7804a2" compoundref="string__functions_8hpp" startline="240" endline="245">concatenate</references>
        <references refid="vector__functions_8hpp_1ad399307162129e2996e7bf6e172d97c9" compoundref="vector__functions_8hpp" startline="102" endline="105">first_index_in</references>
        <references refid="class_data_file_1a595bdc44926515b9f30bd332222e6eeb" compoundref="_data_file_8hpp" startline="183">DataFile&lt; Index, T &gt;::m_chosen_column</references>
        <references refid="class_data_file_1a5bac1ee6087bcd1c427a41ae149c10f3" compoundref="_data_file_8hpp" startline="145">DataFile&lt; Index, T &gt;::m_input_filename</references>
        <references refid="class_data_file_1ac4ca4c0767acf308e2b06ab89b340c5c" compoundref="_data_file_8hpp" startline="158">DataFile&lt; Index, T &gt;::m_labels_column</references>
        <references refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" compoundref="lib_co_8hpp" startline="156" endline="156">throw_error</references>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1a3acd72939856b7bad0829293ffaf157f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DataFile&lt; Index, T &gt;::setColumns</definition>
        <argsstring>(std::vector&lt; int &gt; columns)</argsstring>
        <name>setColumns</name>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <declname>columns</declname>
        </param>
        <briefdescription>
<para>A vector containing the list of the column index to read. By default, reads only the first lines. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="47" column="8" bodyfile="lib/Classes/DataFile.hpp" bodystart="47" bodyend="47"/>
        <references refid="lib_co_8hpp_1a48e80fbfd11f9fb219b92ba1c29c1b2a" compoundref="lib_co_8hpp" startline="209" endline="209">int_cast</references>
        <references refid="class_data_file_1aa5fa5d835eef5c509713f74b564cc552" compoundref="_data_file_8hpp" startline="148">DataFile&lt; Index, T &gt;::m_columns_to_read</references>
        <references refid="class_data_file_1ad499801b7733c896c4ed3212ece9f48b" compoundref="_data_file_8hpp" startline="149">DataFile&lt; Index, T &gt;::m_nb_columns</references>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1afac349d6db7005f3ca36802b0d4fbd96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DataFile&lt; Index, T &gt;::setHeader</definition>
        <argsstring>(DataLine const &amp;header)</argsstring>
        <name>setHeader</name>
        <param>
          <type><ref refid="_data_file_8hpp_1a5bbd0ff6e41ea521288f926113db6f48" kindref="member">DataLine</ref> const &amp;</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="60" column="8" bodyfile="lib/Classes/DataFile.hpp" bodystart="60" bodyend="60"/>
        <references refid="class_data_file_1a0c032bb1b236276d4bfc5c4d3e74ca0d" compoundref="_data_file_8hpp" startline="155">DataFile&lt; Index, T &gt;::m_header</references>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1aaffaf487bee97fdccc84054f226a94c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; DataFile&lt; Index, T &gt;::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="70" column="9" bodyfile="lib/Classes/DataFile.hpp" bodystart="70" bodyend="70"/>
        <references refid="class_data_file_1a3bda8df19c2825e6066f643a4cea25c2" compoundref="_data_file_8hpp" startline="150">DataFile&lt; Index, T &gt;::m_size</references>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1a3ab1b817133b14eb348319d7959d360d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; DataFile&lt; Index, T &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="69" column="15" bodyfile="lib/Classes/DataFile.hpp" bodystart="69" bodyend="69"/>
        <references refid="class_data_file_1a3bda8df19c2825e6066f643a4cea25c2" compoundref="_data_file_8hpp" startline="150">DataFile&lt; Index, T &gt;::m_size</references>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1a943ee036c1dc8d2a2a98a9bc5953d303" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool DataFile&lt; Index, T &gt;::vectorize</definition>
        <argsstring>()</argsstring>
        <name>vectorize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000008"><xreftitle>Todo</xreftitle><xrefdescription><para>if needed </para>
</xrefdescription></xrefsect><simplesect kind="return"><para>true if the vectorisation is successfull </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="59" column="8" bodyfile="lib/Classes/DataFile.hpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1a9375b98cbf03fcc253e35da2b57cbd5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataFile&lt; Index, T &gt;::write</definition>
        <argsstring>(std::string const &amp;filename)</argsstring>
        <name>write</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="51" column="8" bodyfile="lib/Classes/DataFile.hpp" bodystart="327" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1ad345f346a5757caa2eeb40e14af39460" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataFile&lt; Index, T &gt;::writeData</definition>
        <argsstring>(std::ofstream &amp;outputfile)</argsstring>
        <name>writeData</name>
        <param>
          <type>std::ofstream &amp;</type>
          <declname>outputfile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="55" column="8" bodyfile="lib/Classes/DataFile.hpp" bodystart="316" bodyend="324"/>
        <references refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" compoundref="print_8hpp" startline="44" endline="44">print</references>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1a33d335be9b04c7014555993718c5fda3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataFile&lt; Index, T &gt;::writeHeader</definition>
        <argsstring>(std::ofstream &amp;outputfile)</argsstring>
        <name>writeHeader</name>
        <param>
          <type>std::ofstream &amp;</type>
          <declname>outputfile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="54" column="8" bodyfile="lib/Classes/DataFile.hpp" bodystart="310" bodyend="313"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_data_file_1a8acfde896e9216daa785bc16752ef73e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataFile&lt; Index, T &gt;::checkInputfile</definition>
        <argsstring>(std::ifstream &amp;inputfile)</argsstring>
        <name>checkInputfile</name>
        <param>
          <type>std::ifstream &amp;</type>
          <declname>inputfile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="140" column="8" bodyfile="lib/Classes/DataFile.hpp" bodystart="298" bodyend="301"/>
        <references refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" compoundref="print_8hpp" startline="44" endline="44">print</references>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1a6bfb54890d3d1e60dd5104496b00eecf" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataFile&lt; Index, T &gt;::loadData</definition>
        <argsstring>(std::ifstream &amp;inputfile)</argsstring>
        <name>loadData</name>
        <param>
          <type>std::ifstream &amp;</type>
          <declname>inputfile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="143" column="8" bodyfile="lib/Classes/DataFile.hpp" bodystart="224" bodyend="273"/>
        <references refid="string__functions_8hpp_1a1f4138b473c708db6b901f81bba9f5f6" compoundref="string__functions_8hpp" startline="35" endline="59">fillList</references>
        <references refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" compoundref="print_8hpp" startline="44" endline="44">print</references>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1a10063674628cade1720c93ee93faca31" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DataFile&lt; Index, T &gt;::loadHeader</definition>
        <argsstring>(std::ifstream &amp;inputfile)</argsstring>
        <name>loadHeader</name>
        <param>
          <type>std::ifstream &amp;</type>
          <declname>inputfile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="141" column="8" bodyfile="lib/Classes/DataFile.hpp" bodystart="191" bodyend="197"/>
        <references refid="string__functions_8hpp_1a1f4138b473c708db6b901f81bba9f5f6" compoundref="string__functions_8hpp" startline="35" endline="59">fillList</references>
        <references refid="files__functions_8hpp_1a2f9387aa10988ebce3a1bd6e860497a2" compoundref="files__functions_8hpp" startline="33" endline="33">go_to_beginning</references>
      </memberdef>
      <memberdef kind="function" id="class_data_file_1a56b3abb736d7dc38f9d21e1d66e0e678" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DataFile&lt; Index, T &gt;::setupContainers</definition>
        <argsstring>()</argsstring>
        <name>setupContainers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/DataFile.hpp" line="142" column="8" bodyfile="lib/Classes/DataFile.hpp" bodystart="200" bodyend="221"/>
        <references refid="class_cast_impossible_1a1a1947bbb68b6388cfb03e91b9ccb5b0" compoundref="lib_co_8hpp" startline="279" endline="279">CastImpossible::what</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>NOT FUNCTIONNAL !!! This is a homemade .data reader. </para>
    </briefdescription>
    <detaileddescription>
<para>This is a quite strict format :</para>
<para>index value1 value2 value3 // The header is one line only, holding the name of each column 10001 235321 2365 235321 // Each column is separated by the same separator ... end</para>
<para>Let&apos;s look at an example first :</para>
<para>Imagine we want to store the temperature in two different rooms. The index line will hold the time. The first column holds the values of the first room and same for the second column. Here is how it would look like :</para>
<para>minutes room1 room2 0 22.5 21.5 1 22.3 21.3 2 22.4 21.4 3 22.2 21.2 4 22.3 21.3 5 22.4 21.4</para>
<para>Possible optimisation :</para>
<para>You can #define UnorderedDataFile to have an unordered_map holding the data </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>Bools</label>
        <link refid="class_bools"/>
      </node>
      <node id="1">
        <label>DataFile&lt; Index, T &gt;</label>
        <link refid="class_data_file"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_column_name_casted</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="lib/Classes/DataFile.hpp" line="38" column="1" bodyfile="lib/Classes/DataFile.hpp" bodystart="39" bodyend="184"/>
    <listofallmembers>
      <member refid="class_data_file_1a8acfde896e9216daa785bc16752ef73e" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>checkInputfile</name></member>
      <member refid="class_data_file_1aaffaf1e2df21446c06f7647c925822be" prot="public" virt="non-virtual"><scope>DataFile</scope><name>checkOutputfile</name></member>
      <member refid="class_data_file_1aa7924fc31df5257c572a05d5a5d6a795" prot="public" virt="non-virtual"><scope>DataFile</scope><name>column</name></member>
      <member refid="class_data_file_1a3fa00fffe402fcc0f77407338fdfa9f8" prot="public" virt="non-virtual"><scope>DataFile</scope><name>column</name></member>
      <member refid="class_data_file_1ae7b9f0825c34316b883837d063c0de09" prot="public" virt="non-virtual"><scope>DataFile</scope><name>data</name></member>
      <member refid="class_data_file_1a3ad42806aff244755a2ad7ca1fe50a37" prot="public" virt="non-virtual"><scope>DataFile</scope><name>data</name></member>
      <member refid="class_data_file_1afb388fd7a0b151fa6e8edb8a2c35ca53" prot="public" virt="non-virtual"><scope>DataFile</scope><name>DataFile</name></member>
      <member refid="class_data_file_1a1a6fb21dceaa1670086d62be142a45b0" prot="public" virt="non-virtual"><scope>DataFile</scope><name>DataFile</name></member>
      <member refid="class_data_file_1a2484810cfdfddf382f6e7cc539fa26ee" prot="private" virt="non-virtual"><scope>DataFile</scope><name>DataPoints</name></member>
      <member refid="class_data_file_1a0d84d9e8ed9d0da9118ece6250e80ec1" prot="private" virt="non-virtual"><scope>DataFile</scope><name>Indexes</name></member>
      <member refid="class_data_file_1affed9dbc6759035d5e3b087b466b3413" prot="public" virt="non-virtual"><scope>DataFile</scope><name>indexes</name></member>
      <member refid="class_data_file_1ae9748d2772e7a11da4b9f81da89d70b3" prot="public" virt="non-virtual"><scope>DataFile</scope><name>load</name></member>
      <member refid="class_data_file_1a6bfb54890d3d1e60dd5104496b00eecf" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>loadData</name></member>
      <member refid="class_data_file_1a10063674628cade1720c93ee93faca31" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>loadHeader</name></member>
      <member refid="class_data_file_1a4d414d0f4fc92becb2f475a80e56a57f" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>m_all_column_name_casted</name></member>
      <member refid="class_data_file_1a595bdc44926515b9f30bd332222e6eeb" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>m_chosen_column</name></member>
      <member refid="class_data_file_1a70de36522aa7d2b770f08e01463d0a9f" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>m_column_name_casted</name></member>
      <member refid="class_data_file_1aa5fa5d835eef5c509713f74b564cc552" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>m_columns_to_read</name></member>
      <member refid="class_data_file_1a2611c3a759ee2902c8d05b1b166012d4" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>m_data</name></member>
      <member refid="class_data_file_1a676faa65afd02b104f3eb0a3d2e653f2" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>m_data_points</name></member>
      <member refid="class_data_file_1ac07aa5725aefa63f837e4a7f7005f623" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>m_data_vector</name></member>
      <member refid="class_data_file_1a1984aaa46019a7aeeaf07f61da0cf130" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>m_delim</name></member>
      <member refid="class_data_file_1ae6e9b136e3c6dc436b012fed6961e103" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>m_has_header</name></member>
      <member refid="class_data_file_1a0c032bb1b236276d4bfc5c4d3e74ca0d" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>m_header</name></member>
      <member refid="class_data_file_1ab339991e70846dfd4bf65be2534e45c1" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>m_indexes</name></member>
      <member refid="class_data_file_1a5bac1ee6087bcd1c427a41ae149c10f3" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>m_input_filename</name></member>
      <member refid="class_data_file_1af3c9d0a54a0f9e7efd9fe94ce945007c" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>m_label_index</name></member>
      <member refid="class_data_file_1ac4ca4c0767acf308e2b06ab89b340c5c" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>m_labels_column</name></member>
      <member refid="class_data_file_1a7234085692baf3c4c33cced506b77d9e" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>m_labels_rows</name></member>
      <member refid="class_data_file_1ad499801b7733c896c4ed3212ece9f48b" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>m_nb_columns</name></member>
      <member refid="class_data_file_1a9d671120b9a31228a3eb4ef318c3de47" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>m_ok</name></member>
      <member refid="class_data_file_1a49e86af7ac13c5325a0ace3c0a4fd6cf" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>m_output_filename</name></member>
      <member refid="class_data_file_1a489605b761bf235b58c58aabf6ac3e2b" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>m_reader</name></member>
      <member refid="class_data_file_1a3bda8df19c2825e6066f643a4cea25c2" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>m_size</name></member>
      <member refid="class_data_file_1a013613e672fc52c80b933ef0635c83e6" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>m_warning_is_error</name></member>
      <member refid="class_data_file_1a2f42ba45453da1c72b8c60d1add57c1a" prot="public" virt="non-virtual"><scope>DataFile</scope><name>operator bool</name></member>
      <member refid="class_data_file_1ab5c38f4fcd6ec5a6e1eb2d1949d3ba9e" prot="public" virt="non-virtual"><scope>DataFile</scope><name>operator[]</name></member>
      <member refid="class_data_file_1a1fb2113e19a01c149f40c3304c676225" prot="public" virt="non-virtual"><scope>DataFile</scope><name>operator[]</name></member>
      <member refid="class_data_file_1a384d0b3098646b77e219189fc8dccd00" prot="public" virt="non-virtual"><scope>DataFile</scope><name>readColumn</name></member>
      <member refid="class_data_file_1acff7815d10848fb38ab6eecc86270ddb" prot="public" virt="non-virtual"><scope>DataFile</scope><name>readColumn</name></member>
      <member refid="class_data_file_1aa8ea777558f19e09c911f9f387d08201" prot="public" virt="non-virtual"><scope>DataFile</scope><name>readColumn</name></member>
      <member refid="class_data_file_1a5693057972b3ec730173b1d200d5d8b2" prot="public" virt="non-virtual"><scope>DataFile</scope><name>readColumn</name></member>
      <member refid="class_data_file_1aa8591eee73f290dcb9cda4ddf90812bc" prot="public" virt="non-virtual"><scope>DataFile</scope><name>setColumn</name></member>
      <member refid="class_data_file_1a20ccbf2ff940a527452b137a07ff1010" prot="public" virt="non-virtual"><scope>DataFile</scope><name>setColumn</name></member>
      <member refid="class_data_file_1a3acd72939856b7bad0829293ffaf157f" prot="public" virt="non-virtual"><scope>DataFile</scope><name>setColumns</name></member>
      <member refid="class_data_file_1afac349d6db7005f3ca36802b0d4fbd96" prot="public" virt="non-virtual"><scope>DataFile</scope><name>setHeader</name></member>
      <member refid="class_data_file_1a56b3abb736d7dc38f9d21e1d66e0e678" prot="protected" virt="non-virtual"><scope>DataFile</scope><name>setupContainers</name></member>
      <member refid="class_data_file_1a3ab1b817133b14eb348319d7959d360d" prot="public" virt="non-virtual"><scope>DataFile</scope><name>size</name></member>
      <member refid="class_data_file_1aaffaf487bee97fdccc84054f226a94c3" prot="public" virt="non-virtual"><scope>DataFile</scope><name>size</name></member>
      <member refid="class_data_file_1a943ee036c1dc8d2a2a98a9bc5953d303" prot="public" virt="non-virtual"><scope>DataFile</scope><name>vectorize</name></member>
      <member refid="class_data_file_1a9375b98cbf03fcc253e35da2b57cbd5d" prot="public" virt="non-virtual"><scope>DataFile</scope><name>write</name></member>
      <member refid="class_data_file_1ad345f346a5757caa2eeb40e14af39460" prot="public" virt="non-virtual"><scope>DataFile</scope><name>writeData</name></member>
      <member refid="class_data_file_1a33d335be9b04c7014555993718c5fda3" prot="public" virt="non-virtual"><scope>DataFile</scope><name>writeHeader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
