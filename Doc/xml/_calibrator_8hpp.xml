<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_calibrator_8hpp" kind="file" language="C++">
    <compoundname>Calibrator.hpp</compoundname>
    <includes refid="lib_root_8hpp" local="yes">../libRoot.hpp</includes>
    <includes refid="_spectra_co_8hpp" local="yes">../Analyse/SpectraCo.hpp</includes>
    <includes refid="_hit_8hpp" local="yes">../Classes/Hit.hpp</includes>
    <includes refid="_fit_8hpp" local="yes">../Classes/Fit.hpp</includes>
    <includes refid="_calibration_8hpp" local="yes">../Classes/Calibration.hpp</includes>
    <includes refid="_detectors_8hpp" local="yes">../Classes/Detectors.hpp</includes>
    <includes refid="_event_8hpp" local="yes">../Classes/Event.hpp</includes>
    <includes refid="_files_manager_8hpp" local="yes">../Classes/FilesManager.hpp</includes>
    <includes refid="_m_t_faster_reader_8hpp" local="yes">../MTObjects/MTFasterReader.hpp</includes>
    <includes refid="_m_t_root_reader_8hpp" local="yes">../MTObjects/MTRootReader.hpp</includes>
    <includes refid="_m_t_t_hist_8hpp" local="yes">../MTObjects/MTTHist.hpp</includes>
    <includedby refid="_evolution_peaks_8hpp" local="yes">lib/Modules/EvolutionPeaks.hpp</includedby>
    <incdepgraph>
      <node id="20">
        <label>glob.h</label>
      </node>
      <node id="52">
        <label>TH1S.h</label>
      </node>
      <node id="25">
        <label>functional</label>
      </node>
      <node id="6">
        <label>iomanip</label>
      </node>
      <node id="29">
        <label>queue</label>
      </node>
      <node id="70">
        <label>TTreeIndex.h</label>
      </node>
      <node id="2">
        <label>../libRoot.hpp</label>
        <link refid="lib_root_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>filesystem</label>
      </node>
      <node id="39">
        <label>TAxis.h</label>
      </node>
      <node id="79">
        <label>../MTObjects/MTFasterReader.hpp</label>
        <link refid="_m_t_faster_reader_8hpp"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>TThread.h</label>
      </node>
      <node id="94">
        <label>../Classes/Nuball2Tree.hpp</label>
        <link refid="_nuball2_tree_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>Recalibration.hpp</label>
        <link refid="_recalibration_8hpp"/>
      </node>
      <node id="22">
        <label>errors.hpp</label>
        <link refid="errors_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>TH1D.h</label>
      </node>
      <node id="64">
        <label>TStopwatch.h</label>
      </node>
      <node id="30">
        <label>stdexcept</label>
      </node>
      <node id="28">
        <label>numeric</label>
      </node>
      <node id="83">
        <label>../Classes/FasterReader.hpp</label>
        <link refid="_faster_reader_8hpp"/>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>string</label>
      </node>
      <node id="88">
        <label>fasterac/utils.h</label>
      </node>
      <node id="8">
        <label>map</label>
      </node>
      <node id="96">
        <label>MTCounter.hpp</label>
        <link refid="_m_t_counter_8hpp"/>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>fasterac/adc.h</label>
      </node>
      <node id="74">
        <label>../Classes/Hit.hpp</label>
        <link refid="_hit_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>libCo.hpp</label>
        <link refid="lib_co_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>fasterac/rf.h</label>
      </node>
      <node id="43">
        <label>TF1.h</label>
      </node>
      <node id="4">
        <label>print.hpp</label>
        <link refid="print_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>fstream</label>
      </node>
      <node id="82">
        <label>MTList.hpp</label>
        <link refid="_m_t_list_8hpp"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>TError.h</label>
      </node>
      <node id="66">
        <label>TStyle.h</label>
      </node>
      <node id="76">
        <label>../Classes/Fit.hpp</label>
        <link refid="_fit_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>any</label>
      </node>
      <node id="95">
        <label>../MTObjects/MTTHist.hpp</label>
        <link refid="_m_t_t_hist_8hpp"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>files_functions.hpp</label>
        <link refid="files__functions_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>random</label>
      </node>
      <node id="73">
        <label>../Classes/Calibration.hpp</label>
        <link refid="_calibration_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>TROOT.h</label>
      </node>
      <node id="34">
        <label>typeinfo</label>
      </node>
      <node id="71">
        <label>../Analyse/SpectraCo.hpp</label>
        <link refid="_spectra_co_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>../Classes/Detectors.hpp</label>
        <link refid="_detectors_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>future</label>
      </node>
      <node id="38">
        <label>ctime</label>
      </node>
      <node id="41">
        <label>TChain.h</label>
      </node>
      <node id="77">
        <label>../Classes/Event.hpp</label>
        <link refid="_event_8hpp"/>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>TSystem.h</label>
      </node>
      <node id="31">
        <label>stack</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
      <node id="44">
        <label>TF2.h</label>
      </node>
      <node id="45">
        <label>TFile.h</label>
      </node>
      <node id="40">
        <label>TCanvas.h</label>
      </node>
      <node id="55">
        <label>TH3I.h</label>
      </node>
      <node id="56">
        <label>TKey.h</label>
      </node>
      <node id="9">
        <label>vector_functions.hpp</label>
        <link refid="vector__functions_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>fasterac/qdc.h</label>
      </node>
      <node id="63">
        <label>TSpectrum.h</label>
      </node>
      <node id="24">
        <label>array</label>
      </node>
      <node id="47">
        <label>TFitResult.h</label>
      </node>
      <node id="16">
        <label>sstream</label>
      </node>
      <node id="11">
        <label>randomCo.hpp</label>
        <link refid="random_co_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>TMarker.h</label>
      </node>
      <node id="49">
        <label>TGraphErrors.h</label>
      </node>
      <node id="53">
        <label>TH2.h</label>
      </node>
      <node id="37">
        <label>cstdlib</label>
      </node>
      <node id="50">
        <label>TH1F.h</label>
      </node>
      <node id="57">
        <label>TLeaf.h</label>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="13">
        <label>string_functions.hpp</label>
        <link refid="string__functions_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>Timer.hpp</label>
        <link refid="_timer_8hpp"/>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>unordered_map</label>
      </node>
      <node id="58">
        <label>TLegend.h</label>
      </node>
      <node id="65">
        <label>TString.h</label>
      </node>
      <node id="60">
        <label>TMath.h</label>
      </node>
      <node id="54">
        <label>TH2F.h</label>
      </node>
      <node id="90">
        <label>../Classes/CoProgressBar.hpp</label>
        <link refid="_co_progress_bar_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>mutex</label>
      </node>
      <node id="92">
        <label>chrono</label>
      </node>
      <node id="36">
        <label>csignal</label>
      </node>
      <node id="80">
        <label>MTObject.hpp</label>
        <link refid="_m_t_object_8hpp"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>thread</label>
      </node>
      <node id="61">
        <label>TRandom.h</label>
      </node>
      <node id="69">
        <label>TTree.h</label>
      </node>
      <node id="85">
        <label>fasterac/group.h</label>
      </node>
      <node id="10">
        <label>algorithm</label>
      </node>
      <node id="46">
        <label>TFitResultPtr.h</label>
      </node>
      <node id="89">
        <label>../Classes/Alignator.hpp</label>
        <link refid="_alignator_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>../Classes/FilesManager.hpp</label>
        <link refid="_files_manager_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>cstring</label>
      </node>
      <node id="1">
        <label>lib/Modules/Calibrator.hpp</label>
        <link refid="_calibrator_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>../MTObjects/MTRootReader.hpp</label>
        <link refid="_m_t_root_reader_8hpp"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>TGraph.h</label>
      </node>
      <node id="26">
        <label>memory</label>
      </node>
      <node id="33">
        <label>typeindex</label>
      </node>
      <node id="18">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>lib/Modules/EvolutionPeaks.hpp</label>
        <link refid="_evolution_peaks_8hpp"/>
      </node>
      <node id="1">
        <label>lib/Modules/Calibrator.hpp</label>
        <link refid="_calibrator_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_calibrator" prot="public">Calibrator</innerclass>
    <innerclass refid="struct_calibrator_1_1histograms" prot="public">Calibrator::histograms</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_calibrator_8hpp_1a53eebde5a64b66ea934c2c8a5015b9bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isTripleAlpha</definition>
        <argsstring>(std::string const &amp;source_name)</argsstring>
        <name>isTripleAlpha</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>source_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="415" column="6" bodyfile="lib/Modules/Calibrator.hpp" bodystart="415" bodyend="419"/>
        <referencedby refid="class_calibrator_1aa0fff626078ec3cd2e453c5cf6681462" compoundref="_calibrator_8hpp" startline="421" endline="720">Calibrator::peakFinder</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>CALIBRATOR_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CALIBRATOR_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../libRoot.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Analyse/SpectraCo.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Classes/Hit.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Classes/Fit.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Classes/Calibration.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Classes/Detectors.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Classes/Event.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Classes/FilesManager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../MTObjects/MTFasterReader.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../MTObjects/MTRootReader.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../MTObjects/MTTHist.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="class_calibrator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_calibrator" kindref="compound">Calibrator</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_calibrator_1ae55ce16f9f65ced4b0c74efaaf92ac42" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_calibrator_1ae55ce16f9f65ced4b0c74efaaf92ac42" kindref="member">Calibrator</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28" refid="class_calibrator_1a42f20b668e32d1b43b2de39cb477e04f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_calibrator_1a42f20b668e32d1b43b2de39cb477e04f" kindref="member">~Calibrator</ref>()<sp/>{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibrator_1a39c8a92b79d32122442419c7c2785dbf" kindref="member">readFile</ref>)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a39c8a92b79d32122442419c7c2785dbf" kindref="member">readFile</ref>;}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_calibrator_1a293b803d661723f873d34c5e0ccef310" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a293b803d661723f873d34c5e0ccef310" kindref="member">loadCalibration</ref>(<ref refid="class_calibration" kindref="compound">Calibration</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_calibrator_1adab079fd4083424545ee758000887e87" kindref="member">calib</ref>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" kindref="member">m_calib</ref><sp/>=<sp/><ref refid="class_calibrator_1adab079fd4083424545ee758000887e87" kindref="member">calib</ref>);}</highlight></codeline>
<codeline lineno="32" refid="class_calibrator_1a6f6b1a44ab84227e16be740e39449f08" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a6f6b1a44ab84227e16be740e39449f08" kindref="member">loadCalibration</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>calib_file)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" kindref="member">m_calib</ref><sp/>=<sp/>calib_file);}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1af5fcdabfdef0a399a9e3a3992b3029fb" kindref="member">calculate</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>dataDir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_files<sp/>=<sp/>-1,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>source<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;152Eu&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fast&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1af5fcdabfdef0a399a9e3a3992b3029fb" kindref="member">calculate</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>histograms,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>source<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;152Eu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1af12375fcb4e97a40d98fb2549565f2f2" kindref="member">calculate2</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>histogramsFilename,<sp/>std::vector&lt;double&gt;<sp/>peaks,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>fit_info_file<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fit_info.data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>calculateInteractive(std::string<sp/>const<sp/>&amp;<sp/>histogramsFilename,<sp/>std::string<sp/>const<sp/>&amp;<sp/>fit_info_file<sp/>=<sp/>&quot;fit_info.data&quot;,<sp/>std::vector&lt;double&gt;<sp/>peaks);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_calibrator_1ae81772276c36ab528b8147fa583356fd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1ae81772276c36ab528b8147fa583356fd" kindref="member">Initialise</ref>()<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibrator_1a149bd96011065f976236c0bfd58085e8" kindref="member">m_Initialised</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibrator_1adc2d012caeb55220308005a02190dd21" kindref="member">m_histos</ref>.<ref refid="struct_calibrator_1_1histograms_1a4ec16b7a4a18e1f8988684e837bd4d4e" kindref="member">Initialise</ref>();<sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibrator_1af9f21ae4029930b0581d194f7f5007be" kindref="member">m_fits</ref>.<ref refid="class_fits_1a2aa7593ccf9c3638a5a675b62b8863da" kindref="member">resize</ref>(1000);<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1_1_error" kindref="compound">Detectors::Error</ref>();<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibrator_1a149bd96011065f976236c0bfd58085e8" kindref="member">m_Initialised</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1af067fee0c3a37336851ea63f2561b59f" kindref="member">loadRootData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>dataDir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_files<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a08032bf64f38605b8b6daa4a839fe443" kindref="member">loadRootDataThread</ref>(<ref refid="class_calibrator" kindref="compound">Calibrator</ref><sp/>&amp;<sp/><ref refid="class_calibrator_1adab079fd4083424545ee758000887e87" kindref="member">calib</ref>,<sp/><ref refid="class_m_t_vector" kindref="compound">MTList</ref><sp/>&amp;<sp/>list);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a01917c2d097c62f2c6dc3a608d4e3ab4" kindref="member">fillRootDataHisto</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a00297f1bb253279bfa8bdce83fb81951" kindref="member">loadFasterData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>dataDir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_files<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a87ba405f3d9af67c43789893fc5ff534" kindref="member">fillHisto</ref>(<ref refid="class_hit" kindref="compound">Hit</ref><sp/>&amp;<sp/>hit,<sp/><ref refid="class_faster_reader" kindref="compound">FasterReader</ref><sp/>&amp;<sp/>reader,<sp/><ref refid="class_calibrator" kindref="compound">Calibrator</ref><sp/>&amp;<sp/><ref refid="class_calibrator_1adab079fd4083424545ee758000887e87" kindref="member">calib</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a14ec7e7a2a8f36d31e474de1a67df7ec" kindref="member">loadFitInfo</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>fit_info_file);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1aa15e2c6afb9da71595926a10d89f0761" kindref="member">analyse</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>source<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;152Eu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a00806ef12bceedaa6c16dad9b653f27f" kindref="member">analyse2</ref>(std::vector&lt;double&gt;<sp/>peaks);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1aa0fff626078ec3cd2e453c5cf6681462" kindref="member">peakFinder</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" kindref="member">fitCalibration</ref>(<ref refid="class_fits" kindref="compound">Fits</ref><sp/>&amp;<sp/>fits);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1ace95da8167dc1202e913a75c553313b3" kindref="member">writePosPeaks</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outfilename);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a5168dd14ccf0ad9629fa56185986d218" kindref="member">writeData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outfilename);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a78414158b6fec48d58182e62c9478126" kindref="member">writeRawRoot</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outfilename);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1aad90b0e3951d4caffe11e319c7108a51" kindref="member">verify</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outfilename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;verify&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a04a1a6e9e32b48699affcd9adfffa2f0" kindref="member">writeCalibratedHisto</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outfilename);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="class_calibrator_1ae47ff4fb802736a0880679f284aaef81" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1ae47ff4fb802736a0880679f284aaef81" kindref="member">setSource</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>source)<sp/>{<ref refid="class_calibrator_1afa56c62f28c894f5374073cba7bd284a" kindref="member">m_source</ref><sp/>=<sp/>source;}</highlight></codeline>
<codeline lineno="72" refid="class_calibrator_1a4efc8ed8fb70b22bb1e78e27e325359a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a4efc8ed8fb70b22bb1e78e27e325359a" kindref="member">verbose</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_verbose)<sp/>{<ref refid="class_calibrator_1ad7076abb546a7ef91b4c5df50b3dfffa" kindref="member">m_verbose</ref><sp/>=<sp/>_verbose;}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a0d2a41f02b2c16409b58ce3ee4183792" kindref="member">loadRootHisto</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>histograms);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_calibrator_1ae54039d407ea1fe9a91876892317f6e7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_calibration" kindref="compound">Calibration</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_calibrator_1ae54039d407ea1fe9a91876892317f6e7" kindref="member">calibration</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" kindref="member">m_calib</ref>;}</highlight></codeline>
<codeline lineno="77" refid="class_calibrator_1a03b4f69e1b937a479812fb60ea6f90a1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_calibration" kindref="compound">Calibration</ref><sp/>&amp;<sp/><ref refid="class_calibrator_1a03b4f69e1b937a479812fb60ea6f90a1" kindref="member">calibration</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" kindref="member">m_calib</ref>;}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1ac16a84c9c3244443c44a7c5de11ceb5f" kindref="member">calibrateFasterData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>folder,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_files<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1aa45584fd0c25478ec98232ac18af3082" kindref="member">calibrateRootData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>folder,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_files<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="81" refid="class_calibrator_1ad08f57f450b311f7f213b47388236362" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_calibrator_1ad08f57f450b311f7f213b47388236362" kindref="member">calibrate_data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a001ccdbc50c865246f88a77085680e7d" kindref="member">m_calibrate_data</ref>;}</highlight></codeline>
<codeline lineno="82" refid="class_calibrator_1a69cb999f260dfa070073a22709aac586" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_calibrator_1a69cb999f260dfa070073a22709aac586" kindref="member">calibrate_data</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a001ccdbc50c865246f88a77085680e7d" kindref="member">m_calibrate_data</ref>;}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="class_calibrator_1a6f433f9ca2ce1406d8ca5d55fdccb696" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>bool()<sp/>const<sp/>&amp;<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="class_calibrator_1adab079fd4083424545ee758000887e87" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_calibrator_1adab079fd4083424545ee758000887e87" kindref="member">calib</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" kindref="member">m_calib</ref>;}</highlight></codeline>
<codeline lineno="89" refid="class_calibrator_1a2873b525b0a387de8c9f06e665d8e7ed" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_calibrator_1a2873b525b0a387de8c9f06e665d8e7ed" kindref="member">calib</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" kindref="member">m_calib</ref>;}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="class_calibrator_1adba52414b26cd454f2095236c344e4f8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1adba52414b26cd454f2095236c344e4f8" kindref="member">treatOnlyParis</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>b<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{<ref refid="class_calibrator_1a10d7597c3ff68484c243328415305e7c" kindref="member">m_treatOnlyParis</ref><sp/>=<sp/>b;}</highlight></codeline>
<codeline lineno="92" refid="class_calibrator_1aab113de3373ab0677455bcd465ab5306" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1aab113de3373ab0677455bcd465ab5306" kindref="member">treatOnlyGe</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>b<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{<ref refid="class_calibrator_1a6d0b8ee9047fa180aa56f157e9f991c4" kindref="member">m_treatOnlyGe</ref><sp/>=<sp/>b;}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Private<sp/>methods<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="class_calibrator_1a4c41a4cdb731bfa201e03e8d19628d59" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a4c41a4cdb731bfa201e03e8d19628d59" kindref="member">printParameters</ref>();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calibration<sp/>data<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_calibration" kindref="compound">Calibration</ref><sp/><ref refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" kindref="member">m_calib</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Attributs<sp/>for<sp/>the<sp/>calculations<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="class_calibrator_1ad7076abb546a7ef91b4c5df50b3dfffa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_calibrator_1ad7076abb546a7ef91b4c5df50b3dfffa" kindref="member">m_verbose</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103" refid="class_calibrator_1a149bd96011065f976236c0bfd58085e8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_calibrator_1a149bd96011065f976236c0bfd58085e8" kindref="member">m_Initialised</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104" refid="class_calibrator_1a6a8832e379513d4c6b9aeaeebf06dc28" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_calibrator_1a6a8832e379513d4c6b9aeaeebf06dc28" kindref="member">m_residus</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105" refid="class_calibrator_1aeeea0d6b5093606e9af2cb5565dc771d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_calibrator_1aeeea0d6b5093606e9af2cb5565dc771d" kindref="member">m_outRoot_b</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106" refid="class_calibrator_1afa56c62f28c894f5374073cba7bd284a" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_calibrator_1afa56c62f28c894f5374073cba7bd284a" kindref="member">m_source</ref><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107" refid="class_calibrator_1a58fa98239eecf663449388fd3128184e" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_calibrator_1a58fa98239eecf663449388fd3128184e" kindref="member">m_outRoot</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;calibration.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108" refid="class_calibrator_1ad001f1fd1adca313356b4b070e4b647c" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_calibrator_1ad001f1fd1adca313356b4b070e4b647c" kindref="member">m_outCalib</ref><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109" refid="class_calibrator_1a75a33409cf6ac4509ccbd219ac39a353" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_calibrator_1a75a33409cf6ac4509ccbd219ac39a353" kindref="member">m_outDir</ref><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Calibrator/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="class_calibrator_1a10d7597c3ff68484c243328415305e7c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a10d7597c3ff68484c243328415305e7c" kindref="member">m_treatOnlyParis</ref>;</highlight></codeline>
<codeline lineno="112" refid="class_calibrator_1a6d0b8ee9047fa180aa56f157e9f991c4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a6d0b8ee9047fa180aa56f157e9f991c4" kindref="member">m_treatOnlyGe</ref>;</highlight></codeline>
<codeline lineno="113" refid="class_calibrator_1a001ccdbc50c865246f88a77085680e7d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a001ccdbc50c865246f88a77085680e7d" kindref="member">m_calibrate_data</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="class_calibrator_1af9f21ae4029930b0581d194f7f5007be" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_fits" kindref="compound">Fits</ref><sp/><ref refid="class_calibrator_1af9f21ae4029930b0581d194f7f5007be" kindref="member">m_fits</ref><sp/>=<sp/><ref refid="class_fits" kindref="compound">Fits</ref>(100);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="class_calibrator_1aa98a40455fa921b68858b94f6821426b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_path" kindref="compound">Path</ref><sp/><ref refid="class_calibrator_1aa98a40455fa921b68858b94f6821426b" kindref="member">dataPath</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="class_calibrator_1a39c8a92b79d32122442419c7c2785dbf" refkind="member"><highlight class="normal"><sp/><sp/>TFile*<sp/><ref refid="class_calibrator_1a39c8a92b79d32122442419c7c2785dbf" kindref="member">readFile</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FOR<sp/>ANALYSE2<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::map&lt;Label,<sp/>int&gt;<sp/>m_rebin;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="class_calibrator_1ac1218b83e5524b8817762bbc9ccbc32d" refkind="member"><highlight class="normal"><sp/><sp/>std::map&lt;int,<sp/>int&gt;<sp/><ref refid="class_calibrator_1ac1218b83e5524b8817762bbc9ccbc32d" kindref="member">m_rebin</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::map&lt;Label,<sp/>double&gt;<sp/>m_threshold;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="class_calibrator_1afe2a295e4ebc9322bfd540085e531549" refkind="member"><highlight class="normal"><sp/><sp/>std::map&lt;int,<sp/>double&gt;<sp/><ref refid="class_calibrator_1afe2a295e4ebc9322bfd540085e531549" kindref="member">m_threshold</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::map&lt;Label,<sp/>int&gt;<sp/>m_nb_bins_below;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="class_calibrator_1abb7cc034b66c4d986d28e3d1e3901b2c" refkind="member"><highlight class="normal"><sp/><sp/>std::map&lt;int,<sp/>int&gt;<sp/><ref refid="class_calibrator_1abb7cc034b66c4d986d28e3d1e3901b2c" kindref="member">m_nb_bins_below</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="class_calibrator_1a23efbbb0b3b113e8620e1f173a1ef795" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a23efbbb0b3b113e8620e1f173a1ef795" kindref="member">m_histo_loaded</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="134" refid="struct_calibrator_1_1histograms" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_calibrator_1_1histograms" kindref="compound">histograms</ref></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Raw<sp/>spectra<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="struct_calibrator_1_1histograms_1adb60dbf765f5c82fb247c2aae1ec4d6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e" kindref="member">Vector_MTTHist&lt;TH1F&gt;</ref><sp/><ref refid="struct_calibrator_1_1histograms_1adb60dbf765f5c82fb247c2aae1ec4d6d" kindref="member">raw_spectra</ref>;</highlight></codeline>
<codeline lineno="138" refid="struct_calibrator_1_1histograms_1a8a6b7533a4ea0c474c8896120e1589f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_t_t_hist" kindref="compound">MTTHist&lt;TH2F&gt;</ref><sp/><ref refid="struct_calibrator_1_1histograms_1a8a6b7533a4ea0c474c8896120e1589f8" kindref="member">all_raw_spectra</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calibrated<sp/>spectra<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="struct_calibrator_1_1histograms_1ae518a10be1cffd8c718e7d6e0bc0c987" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e" kindref="member">Vector_MTTHist&lt;TH1F&gt;</ref><sp/><ref refid="struct_calibrator_1_1histograms_1ae518a10be1cffd8c718e7d6e0bc0c987" kindref="member">calib_spectra</ref>;</highlight></codeline>
<codeline lineno="142" refid="struct_calibrator_1_1histograms_1ac32701da9acbca65baf18250a10b9b37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_m_t_t_hist_8hpp_1ab7cfdf0e608b8024114dc2729684173e" kindref="member">Vector_MTTHist&lt;TH2F&gt;</ref><sp/><ref refid="struct_calibrator_1_1histograms_1ac32701da9acbca65baf18250a10b9b37" kindref="member">all_calib</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Other<sp/>spectra<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="struct_calibrator_1_1histograms_1ae885f7bdabe2e31b12ea5573ee46317e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;Label,<sp/>SpectraCo&gt;<sp/><ref refid="struct_calibrator_1_1histograms_1ae885f7bdabe2e31b12ea5573ee46317e" kindref="member">spectra</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_calibrator_1_1histograms_1a4ec16b7a4a18e1f8988684e837bd4d4e" kindref="member">Initialise</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_calibrator_1_1histograms_1a5c30eec7418701ef02ce4faf97fef690" kindref="member">setTypeBins</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>parameters);</highlight></codeline>
<codeline lineno="149" refid="struct_calibrator_1_1histograms_1a4c55b360c72c92c930b04427d309811f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_calibrator_1_1histograms_1a4c55b360c72c92c930b04427d309811f" kindref="member">Initialised</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150" refid="class_calibrator_1adc2d012caeb55220308005a02190dd21" refkind="member"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="class_calibrator_1adc2d012caeb55220308005a02190dd21" kindref="member">m_histos</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a10d7597c3ff68484c243328415305e7c" kindref="member">Calibrator::m_treatOnlyParis</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a6d0b8ee9047fa180aa56f157e9f991c4" kindref="member">Calibrator::m_treatOnlyGe</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="struct_calibrator_1_1histograms_1a4ec16b7a4a18e1f8988684e837bd4d4e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_calibrator_1_1histograms_1a4ec16b7a4a18e1f8988684e837bd4d4e" kindref="member">Calibrator::histograms::Initialise</ref>()</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_calibrator_1_1histograms_1a4c55b360c72c92c930b04427d309811f" kindref="member">Initialised</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>max_label<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a8780c1daca5724bb16ba07824f3c3665" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_label<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>using<sp/>Detector<sp/>class<sp/>in<sp/>Calibrator<sp/>module.&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="lib_co_8hpp_1af522b6efd63a7f871a8307755b1297bf" kindref="member">error_message</ref>[</highlight><highlight class="stringliteral">&quot;DEV&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>the<sp/>detectors<sp/>spectra<sp/>in<sp/>one<sp/>plot<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_calibrator_1_1histograms_1a8a6b7533a4ea0c474c8896120e1589f8" kindref="member">all_raw_spectra</ref>.<ref refid="class_m_t_t_hist_1aa10c349eccd83edd9e5204e014b706c8" kindref="member">reset</ref>(</highlight><highlight class="stringliteral">&quot;All_detectors&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>detectors&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_label,0,max_label,<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1af54374260cdfa1cd60b6364f07f882b4" kindref="member">ADCBin</ref>(</highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">).bins,0,<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1af54374260cdfa1cd60b6364f07f882b4" kindref="member">ADCBin</ref>(</highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">).min);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>the<sp/>calibrated<sp/>detectors<sp/>spectra<sp/>of<sp/>each<sp/>type<sp/>in<sp/>one<sp/>plot<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_calibrator_1_1histograms_1ac32701da9acbca65baf18250a10b9b37" kindref="member">all_calib</ref>.resize(<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1adc3246e1180dfd8b2fb52bf0924aa7ef" kindref="member">nbTypes</ref>());</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>type<sp/>:<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a6c368aa8fe9d985fd742371179718d71" kindref="member">types</ref>())</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nb_detectors<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1ae5e6ff02bf3d79da3f034f7404e0677c" kindref="member">nbOfType</ref>(type);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>binning<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a4cc1eacca959595eb53a16b75f2d65d8" kindref="member">energyBidimBin</ref>(type);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_calibrator_1_1histograms_1ac32701da9acbca65baf18250a10b9b37" kindref="member">all_calib</ref>[<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1ab4d5e6cc24173a65a35788ba7c680264" kindref="member">typeIndex</ref>(type)].reset((</highlight><highlight class="stringliteral">&quot;All_&quot;</highlight><highlight class="normal">+type+</highlight><highlight class="stringliteral">&quot;_spectra&quot;</highlight><highlight class="normal">).c_str(),<sp/>(</highlight><highlight class="stringliteral">&quot;All<sp/>&quot;</highlight><highlight class="normal">+type+</highlight><highlight class="stringliteral">&quot;<sp/>spectra&quot;</highlight><highlight class="normal">).c_str(),<sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_detectors,0,nb_detectors,<sp/>binning.bins,binning.min,binning.max);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>the<sp/>raw<sp/>and/or<sp/>calibrated<sp/>spectra<sp/>in<sp/>a<sp/>separate<sp/>spectra<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_calibrator_1_1histograms_1ae518a10be1cffd8c718e7d6e0bc0c987" kindref="member">calib_spectra</ref>.resize(max_label);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_calibrator_1_1histograms_1adb60dbf765f5c82fb247c2aae1ec4d6d" kindref="member">raw_spectra</ref>.resize(max_label);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>type<sp/>:<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a6c368aa8fe9d985fd742371179718d71" kindref="member">types</ref>())</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal"><sp/>||<sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;RF&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;<sp/>index&lt;<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1ae5e6ff02bf3d79da3f034f7404e0677c" kindref="member">nbOfType</ref>(type);<sp/>index++)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1afd00ee8a76386f7356a12858b1dd7c6b" kindref="member">name</ref>(type,<sp/>index);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>label<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>(type,<sp/>index);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>bin_raw<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1af54374260cdfa1cd60b6364f07f882b4" kindref="member">ADCBin</ref>(type);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>bin_calib<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1aaadeec0d94fd7daea1b8e4c9d861fbde" kindref="member">energyBin</ref>(type);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_calibrator_1_1histograms_1adb60dbf765f5c82fb247c2aae1ec4d6d" kindref="member">raw_spectra</ref>[label].reset((name+</highlight><highlight class="stringliteral">&quot;_raw&quot;</highlight><highlight class="normal">).c_str(),<sp/>(name+</highlight><highlight class="stringliteral">&quot;<sp/>raw<sp/>spectra&quot;</highlight><highlight class="normal">).c_str(),<sp/>bin_raw.bins,<sp/>bin_raw.min,<sp/>bin_raw.max);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_calibrator_1_1histograms_1ae518a10be1cffd8c718e7d6e0bc0c987" kindref="member">calib_spectra</ref>[label].reset((name+</highlight><highlight class="stringliteral">&quot;_calib&quot;</highlight><highlight class="normal">).c_str(),<sp/>(name+</highlight><highlight class="stringliteral">&quot;<sp/>calibrated<sp/>spectra&quot;</highlight><highlight class="normal">).c_str(),<sp/>bin_calib.bins,<sp/>bin_calib.min,<sp/>bin_calib.max);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_calibrator_1_1histograms_1a4c55b360c72c92c930b04427d309811f" kindref="member">Initialised</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="struct_calibrator_1_1histograms_1a5c30eec7418701ef02ce4faf97fef690" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_calibrator_1_1histograms_1a5c30eec7418701ef02ce4faf97fef690" kindref="member">Calibrator::histograms::setTypeBins</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>parameters)</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>std::istringstream<sp/>param(parameters);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>ADCbins<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1aba567529b262d88913de6ccb05a71a99" kindref="member">getADCBin</ref>();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>Energybins<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1ae1ead00f89e7fcb96cefa082f9b4e290" kindref="member">getEnergyBin</ref>();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::string<sp/>line;<sp/>std::getline(param,line);)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istringstream<sp/>is(line);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>type;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>which_histo;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>is&gt;&gt;type;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">)<sp/>{<ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(type+</highlight><highlight class="stringliteral">&quot;type<sp/>is<sp/>not<sp/>recognized<sp/>for<sp/>binning<sp/>in<sp/>Calibrator&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>is<sp/>&gt;&gt;<sp/>which_histo;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(which_histo<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;raw&quot;</highlight><highlight class="normal"><sp/><sp/>)<sp/>is<sp/>&gt;&gt;<sp/>ADCbins[type].bins<sp/>&gt;&gt;<sp/>ADCbins[type].min<sp/>&gt;&gt;<sp/>ADCbins[type].max;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(which_histo<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;calib&quot;</highlight><highlight class="normal">)<sp/>is<sp/>&gt;&gt;<sp/>Energybins[type].bins<sp/>&gt;&gt;<sp/>Energybins[type].min<sp/>&gt;&gt;<sp/>Energybins[type].max;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(which_histo+</highlight><highlight class="stringliteral">&quot;<sp/>histo<sp/>of<sp/>Calibrator<sp/>module<sp/>not<sp/>recognized<sp/>&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="class_calibrator_1af5fcdabfdef0a399a9e3a3992b3029fb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1af5fcdabfdef0a399a9e3a3992b3029fb" kindref="member">Calibrator::calculate</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>dataDir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_files,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>source,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>type)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Calculating<sp/>calibrations<sp/>from<sp/>raw<sp/>data<sp/>in&quot;</highlight><highlight class="normal">,<sp/>dataDir);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;fast&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibrator_1a00297f1bb253279bfa8bdce83fb81951" kindref="member">loadFasterData</ref>(dataDir,<sp/>nb_files);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;root&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibrator_1af067fee0c3a37336851ea63f2561b59f" kindref="member">loadRootData</ref>(dataDir,<sp/>nb_files);<sp/></highlight><highlight class="comment">//<sp/>UNTESTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(type,<sp/></highlight><highlight class="stringliteral">&quot;unkown<sp/>data<sp/>format&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibrator_1aa15e2c6afb9da71595926a10d89f0761" kindref="member">analyse</ref>(source);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibrator_1a5168dd14ccf0ad9629fa56185986d218" kindref="member">writeData</ref>(source+</highlight><highlight class="stringliteral">&quot;.calib&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibrator_1a78414158b6fec48d58182e62c9478126" kindref="member">writeRawRoot</ref>(source+</highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="class_calibrator_1a547f6f7bb37caef0b1a2e574422fb85f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1af5fcdabfdef0a399a9e3a3992b3029fb" kindref="member">Calibrator::calculate</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="struct_calibrator_1_1histograms" kindref="compound">histograms</ref>,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>source)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Calculating<sp/>calibration<sp/>coefficients<sp/>from<sp/>histogram<sp/>data<sp/>in&quot;</highlight><highlight class="normal">,<sp/><ref refid="struct_calibrator_1_1histograms" kindref="compound">histograms</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibrator_1ae81772276c36ab528b8147fa583356fd" kindref="member">Initialise</ref>();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibrator_1a0d2a41f02b2c16409b58ce3ee4183792" kindref="member">loadRootHisto</ref>(<ref refid="struct_calibrator_1_1histograms" kindref="compound">histograms</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibrator_1aa15e2c6afb9da71595926a10d89f0761" kindref="member">analyse</ref>(source);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibrator_1a5168dd14ccf0ad9629fa56185986d218" kindref="member">writeData</ref>(source+</highlight><highlight class="stringliteral">&quot;.calib&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibrator_1a78414158b6fec48d58182e62c9478126" kindref="member">writeRawRoot</ref>(source+</highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="class_calibrator_1a14ec7e7a2a8f36d31e474de1a67df7ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a14ec7e7a2a8f36d31e474de1a67df7ec" kindref="member">Calibrator::loadFitInfo</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>fit_info_file)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>std::ifstream<sp/>file(fit_info_file,<sp/>std::ios::in);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file.good())<sp/><ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(<ref refid="string__functions_8hpp_1ae058d07fbc702d0b0f79e3650e7804a2" kindref="member">concatenate</ref>(</highlight><highlight class="stringliteral">&quot;CANT<sp/>OPEN<sp/>&quot;</highlight><highlight class="normal">,<sp/>fit_info_file));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>std::string<sp/>line;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>getline(file,<sp/>line);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>m_header<sp/>=<sp/><ref refid="string__functions_8hpp_1a44ad60b408ba7b75bdf7ae75f8d2532f" kindref="member">getList</ref>(line,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rebin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_bins_below<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(getline(file,<sp/>line))</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istringstream<sp/>iss(line);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>iss<sp/>&gt;&gt;<sp/>name;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>label<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>[name];</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>iss<sp/>&gt;&gt;<sp/>rebin<sp/>&gt;&gt;<sp/>threshold<sp/>&gt;&gt;<sp/>nb_bins_below;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibrator_1ac1218b83e5524b8817762bbc9ccbc32d" kindref="member">m_rebin</ref>[label]<sp/>=<sp/>rebin;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibrator_1afe2a295e4ebc9322bfd540085e531549" kindref="member">m_threshold</ref>[label]<sp/>=<sp/>threshold;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibrator_1abb7cc034b66c4d986d28e3d1e3901b2c" kindref="member">m_nb_bins_below</ref>[label]<sp/>=<sp/>nb_bins_below;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="class_calibrator_1af12375fcb4e97a40d98fb2549565f2f2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1af12375fcb4e97a40d98fb2549565f2f2" kindref="member">Calibrator::calculate2</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>histogramsFilename,<sp/>std::vector&lt;double&gt;<sp/>peaks,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>fit_info_file)</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Calculating<sp/>calibration<sp/>coefficients<sp/>from<sp/>histogram<sp/>data<sp/>in&quot;</highlight><highlight class="normal">,<sp/>histogramsFilename,<sp/></highlight><highlight class="stringliteral">&quot;version<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibrator_1ae81772276c36ab528b8147fa583356fd" kindref="member">Initialise</ref>();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibrator_1a14ec7e7a2a8f36d31e474de1a67df7ec" kindref="member">loadFitInfo</ref>(fit_info_file);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibrator_1a0d2a41f02b2c16409b58ce3ee4183792" kindref="member">loadRootHisto</ref>(histogramsFilename);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibrator_1a00806ef12bceedaa6c16dad9b653f27f" kindref="member">analyse2</ref>(peaks);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibrator_1a5168dd14ccf0ad9629fa56185986d218" kindref="member">writeData</ref>(</highlight><highlight class="stringliteral">&quot;calibration.calib&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibrator_1a78414158b6fec48d58182e62c9478126" kindref="member">writeRawRoot</ref>(</highlight><highlight class="stringliteral">&quot;histograms.root&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="class_calibrator_1a0d2a41f02b2c16409b58ce3ee4183792" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a0d2a41f02b2c16409b58ce3ee4183792" kindref="member">Calibrator::loadRootHisto</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="struct_calibrator_1_1histograms" kindref="compound">histograms</ref>)</highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibrator_1ae81772276c36ab528b8147fa583356fd" kindref="member">Initialise</ref>();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><ref refid="class_calibrator_1a23efbbb0b3b113e8620e1f173a1ef795" kindref="member">m_histo_loaded</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Loading<sp/>histograms<sp/>...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><ref refid="class_calibrator_1a39c8a92b79d32122442419c7c2785dbf" kindref="member">readFile</ref><sp/>=<sp/>TFile::Open(<ref refid="struct_calibrator_1_1histograms" kindref="compound">histograms</ref>.c_str());</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><ref refid="class_calibrator_1a39c8a92b79d32122442419c7c2785dbf" kindref="member">readFile</ref>-&gt;cd();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_calibrator_1a39c8a92b79d32122442419c7c2785dbf" kindref="member">readFile</ref><sp/>||<sp/>!<ref refid="class_calibrator_1a39c8a92b79d32122442419c7c2785dbf" kindref="member">readFile</ref>-&gt;IsOpen())<sp/><ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>open&quot;</highlight><highlight class="normal">+<ref refid="struct_calibrator_1_1histograms" kindref="compound">histograms</ref>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>histos<sp/>(<ref refid="_detectors_8hpp_1ae343a2d2d22d862f6ac7ae10ba1b3d41" kindref="member">loadFormattedTH1F</ref>(<ref refid="class_calibrator_1a39c8a92b79d32122442419c7c2785dbf" kindref="member">readFile</ref>));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>it<sp/>:<sp/>histos)<sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>label<sp/>=<sp/>it.first;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>histo<sp/>=<sp/>it.second;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>m_histos.raw_spectra[label]<sp/>=<sp/>histo;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibrator_1adc2d012caeb55220308005a02190dd21" kindref="member">m_histos</ref>.<ref refid="struct_calibrator_1_1histograms_1ae885f7bdabe2e31b12ea5573ee46317e" kindref="member">spectra</ref>[label].load(histo);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(auto<sp/>const<sp/>&amp;<sp/>spectra<sp/>:<sp/>m_histos.spectra)<sp/>print(spectra);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="class_calibrator_1a00297f1bb253279bfa8bdce83fb81951" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a00297f1bb253279bfa8bdce83fb81951" kindref="member">Calibrator::loadFasterData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>dataDir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_files)</highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Loading<sp/>the<sp/>data<sp/>from&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_path" kindref="compound">Path</ref>(dataDir).folder());</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>initialises<sp/>the<sp/>histograms<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibrator_1ae81772276c36ab528b8147fa583356fd" kindref="member">Initialise</ref>();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>create<sp/>the<sp/>data<sp/>reader<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_faster_reader" kindref="compound">MTFasterReader</ref><sp/>*mt_reader<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_m_t_faster_reader" kindref="compound">MTFasterReader</ref>();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Setup<sp/>the<sp/>files<sp/>to<sp/>read<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>mt_reader-&gt;<ref refid="class_m_t_faster_reader_1a58a2fe8f9f9ba39808d43f36f45c8288" kindref="member">addFolder</ref>(dataDir,<sp/>nb_files);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gives<sp/>the<sp/>reader<sp/>the<sp/>function<sp/>to<sp/>use<sp/>on<sp/>each<sp/>hit<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>mt_reader-&gt;<ref refid="class_m_t_faster_reader_1ae316d31ebcb18ae8689522509d1ba513" kindref="member">readRaw</ref>(<ref refid="class_calibrator_1a87ba405f3d9af67c43789893fc5ff534" kindref="member">fillHisto</ref>,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mt_reader;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Data<sp/>loaded&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="class_calibrator_1af067fee0c3a37336851ea63f2561b59f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1af067fee0c3a37336851ea63f2561b59f" kindref="member">Calibrator::loadRootData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>dataDir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_files)</highlight></codeline>
<codeline lineno="329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Loading<sp/>the<sp/>data<sp/>from&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_path" kindref="compound">Path</ref>(dataDir).folder());</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibrator_1ae81772276c36ab528b8147fa583356fd" kindref="member">Initialise</ref>();</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><ref refid="class_files_manager" kindref="compound">FilesManager</ref><sp/>files;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>files.<ref refid="class_files_manager_1a6d05662378bde592075237b9fa0a5168" kindref="member">addFolder</ref>(dataDir,<sp/>nb_files);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_vector" kindref="compound">MTList</ref><sp/>list(files.<ref refid="class_files_manager_1a2b619786ba65a7ac1e701fc61e2409ae" kindref="member">getListFiles</ref>());</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_object_1a35c02650eb403bd54e867f93bb26fc47" kindref="member">MTObject::parallelise_function</ref>(<ref refid="class_calibrator_1a08032bf64f38605b8b6daa4a839fe443" kindref="member">loadRootDataThread</ref>,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>list);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Data<sp/>loaded&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="class_calibrator_1a08032bf64f38605b8b6daa4a839fe443" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a08032bf64f38605b8b6daa4a839fe443" kindref="member">Calibrator::loadRootDataThread</ref>(<ref refid="class_calibrator" kindref="compound">Calibrator</ref><sp/>&amp;<sp/><ref refid="class_calibrator_1adab079fd4083424545ee758000887e87" kindref="member">calib</ref>,<sp/><ref refid="class_m_t_vector" kindref="compound">MTList</ref><sp/>&amp;<sp/>list)</highlight></codeline>
<codeline lineno="340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>std::string<sp/>filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(list.<ref refid="class_m_t_vector_1a824a9ff009dde921eec4759c69f74ca7" kindref="member">getNext</ref>(filename))</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibrator_1adab079fd4083424545ee758000887e87" kindref="member">calib</ref>.fillRootDataHisto(filename);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="class_calibrator_1a01917c2d097c62f2c6dc3a608d4e3ab4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a01917c2d097c62f2c6dc3a608d4e3ab4" kindref="member">Calibrator::fillRootDataHisto</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename)</highlight></codeline>
<codeline lineno="349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><ref refid="lib_root_8hpp_1a3b73f11bc69f125e12c1d48c9ed79a6e" kindref="member">unique_TFile</ref><sp/>file(TFile::Open(filename.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;READ&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;TTree&gt;<sp/>tree<sp/>(file-&gt;Get&lt;TTree&gt;(</highlight><highlight class="stringliteral">&quot;Nuball2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tree.get())<sp/>{<ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;NO<sp/>Nuball2<sp/>found<sp/>in&quot;</highlight><highlight class="normal">,<sp/>filename);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><ref refid="class_event" kindref="compound">Event</ref><sp/>event;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.<ref refid="class_event_1a243e29bac8d969902d32a4d444fc5174" kindref="member">reading</ref>(tree.get(),<sp/></highlight><highlight class="stringliteral">&quot;leq&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Reading&quot;</highlight><highlight class="normal">,<sp/>filename);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_hits<sp/>=<sp/>tree-&gt;GetEntries();</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibrator_1a001ccdbc50c865246f88a77085680e7d" kindref="member">m_calibrate_data</ref>)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>evt<sp/>=<sp/>0;<sp/>evt&lt;nb_hits;<sp/>evt++)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>tree-&gt;GetEntry(evt);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hit<sp/>=<sp/>0;<sp/>hit&lt;</highlight><highlight class="keyword">event</highlight><highlight class="normal">.mult;<sp/>hit++)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>label<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.labels[hit];</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_detectors_8hpp_1a82c5910e3b4f178c276c8b888c5ac162" kindref="member">isParis</ref>[label]<sp/>&amp;&amp;<sp/>event.<ref refid="class_event_1a7bc76ee166649431e9010875202ca6c1" kindref="member">qdc2s</ref>[hit]!=0)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>ratio<sp/>=<sp/>(</highlight><highlight class="keyword">event</highlight><highlight class="normal">.qdc2s[hit]-</highlight><highlight class="keyword">event</highlight><highlight class="normal">.adcs[hit])/event.<ref refid="class_event_1a7bc76ee166649431e9010875202ca6c1" kindref="member">qdc2s</ref>[hit];</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(ratio&lt;-0.1<sp/>||<sp/>ratio&gt;0.2)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>nrjcal<sp/>=<sp/><ref refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" kindref="member">m_calib</ref>(event.<ref refid="class_event_1a3e0953c870297eee51ce555908923bb3" kindref="member">adcs</ref>[hit],<sp/>label);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_calibrator_1adc2d012caeb55220308005a02190dd21" kindref="member">m_histos</ref>.<ref refid="struct_calibrator_1_1histograms_1ae518a10be1cffd8c718e7d6e0bc0c987" kindref="member">calib_spectra</ref>[label].Fill(nrjcal);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_calibrator_1adc2d012caeb55220308005a02190dd21" kindref="member">m_histos</ref>.<ref refid="struct_calibrator_1_1histograms_1ac32701da9acbca65baf18250a10b9b37" kindref="member">all_calib</ref>[<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1ab4d5e6cc24173a65a35788ba7c680264" kindref="member">typeIndex</ref>(label)].Fill(<ref refid="_detectors_8hpp_1adc256156b68f8dd6b9f2c2da57808bd3" kindref="member">compressedLabel</ref>[label],<sp/>nrjcal);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>evt<sp/>=<sp/>0;<sp/>evt&lt;nb_hits;<sp/>evt++)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>tree-&gt;GetEntry(evt);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hit<sp/>=<sp/>0;<sp/>hit&lt;</highlight><highlight class="keyword">event</highlight><highlight class="normal">.mult;<sp/>hit++)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>label<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.labels[hit];</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_calibrator_1adc2d012caeb55220308005a02190dd21" kindref="member">m_histos</ref>.<ref refid="struct_calibrator_1_1histograms_1adb60dbf765f5c82fb247c2aae1ec4d6d" kindref="member">raw_spectra</ref>[label].Fill(event.<ref refid="class_event_1a3e0953c870297eee51ce555908923bb3" kindref="member">adcs</ref>[hit]);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="class_calibrator_1a87ba405f3d9af67c43789893fc5ff534" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a87ba405f3d9af67c43789893fc5ff534" kindref="member">Calibrator::fillHisto</ref>(<ref refid="class_hit" kindref="compound">Hit</ref><sp/>&amp;<sp/>hit,<sp/><ref refid="class_faster_reader" kindref="compound">FasterReader</ref><sp/>&amp;<sp/>reader,<sp/><ref refid="class_calibrator" kindref="compound">Calibrator</ref><sp/>&amp;<sp/><ref refid="class_calibrator_1adab079fd4083424545ee758000887e87" kindref="member">calib</ref>)</highlight></codeline>
<codeline lineno="402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>option<sp/>to<sp/>calibrate<sp/>histograms<sp/>is<sp/>on<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibrator_1adab079fd4083424545ee758000887e87" kindref="member">calib</ref>.calibrate_data())<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(reader.<ref refid="class_faster_reader_1a2d05907241b80ed637b2ae5a01503756" kindref="member">Read</ref>())<sp/></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibrator_1adab079fd4083424545ee758000887e87" kindref="member">calib</ref>.calibration().getOrder()[hit.<ref refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" kindref="member">label</ref>]&lt;1)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nrj_cal<sp/>=<sp/><ref refid="class_calibrator_1adab079fd4083424545ee758000887e87" kindref="member">calib</ref>.calibration()(hit.<ref refid="class_hit_1a3d999e7bbbb470d1d3aa55ee772a98d6" kindref="member">adc</ref>,<sp/>hit.<ref refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" kindref="member">label</ref>);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibrator_1adab079fd4083424545ee758000887e87" kindref="member">calib</ref>.m_histos.calib_spectra[hit.<ref refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" kindref="member">label</ref>].Fill(nrj_cal);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_calibrator_1adab079fd4083424545ee758000887e87" kindref="member">calib</ref>.m_histos.all_calib[<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1ab4d5e6cc24173a65a35788ba7c680264" kindref="member">typeIndex</ref>(hit.<ref refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" kindref="member">label</ref>)].Fill(<ref refid="_detectors_8hpp_1adc256156b68f8dd6b9f2c2da57808bd3" kindref="member">compressedLabel</ref>[hit.<ref refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" kindref="member">label</ref>],<sp/>nrj_cal);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fills<sp/>raw<sp/>values<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(reader.<ref refid="class_faster_reader_1a2d05907241b80ed637b2ae5a01503756" kindref="member">Read</ref>())<sp/>{<ref refid="class_calibrator_1adab079fd4083424545ee758000887e87" kindref="member">calib</ref>.m_histos.raw_spectra[hit.<ref refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" kindref="member">label</ref>].Fill(hit.<ref refid="class_hit_1a3d999e7bbbb470d1d3aa55ee772a98d6" kindref="member">adc</ref>);}</highlight></codeline>
<codeline lineno="413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="_calibrator_8hpp_1a53eebde5a64b66ea934c2c8a5015b9bb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_calibrator_8hpp_1a53eebde5a64b66ea934c2c8a5015b9bb" kindref="member">isTripleAlpha</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>source_name)</highlight></codeline>
<codeline lineno="416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(source_name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;3-alpha&quot;</highlight><highlight class="normal"><sp/>||<sp/>source_name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;3alpha&quot;</highlight><highlight class="normal"><sp/><sp/>||</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source_name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;triple-alpha&quot;</highlight><highlight class="normal"><sp/>||<sp/>source_name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;triplealpha&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="class_calibrator_1aa0fff626078ec3cd2e453c5cf6681462" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1aa0fff626078ec3cd2e453c5cf6681462" kindref="member">Calibrator::peakFinder</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>source)</highlight></codeline>
<codeline lineno="422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_pics<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E_right_pic<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/>label<sp/>=<sp/>0;<sp/>label&lt;<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a8780c1daca5724bb16ba07824f3c3665" kindref="member">size</ref>();<sp/>label++)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a47ae394beae7efa2fb8fa1a3c7f8427d" kindref="member">exists</ref>(label))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>histo<sp/>=<sp/><ref refid="class_calibrator_1adc2d012caeb55220308005a02190dd21" kindref="member">m_histos</ref>.<ref refid="struct_calibrator_1_1histograms_1adb60dbf765f5c82fb247c2aae1ec4d6d" kindref="member">raw_spectra</ref>[label];</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>[label];</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>type<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref>(label);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(histo.Integral()==0)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print_8hpp_1a141d6b4b0d8c1824f6ed472b5226eab4" kindref="member">information</ref>(name,<sp/></highlight><highlight class="stringliteral">&quot;has<sp/>no<sp/>data<sp/>in<sp/>this<sp/>run&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>histo.Merge();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>fit<sp/>=<sp/><ref refid="class_calibrator_1af9f21ae4029930b0581d194f7f5007be" kindref="member">m_fits</ref>[label];</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>fit.setLabel(label);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(name);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibrator_1ad7076abb546a7ef91b4c5df50b3dfffa" kindref="member">m_verbose</ref>)<sp/>{<ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>();<sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(name);}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>algorithm<sp/>parameters<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integral_ratio_threshold<sp/>=<sp/>0.f;<sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>threshold<sp/>used<sp/>to<sp/>tag<sp/>the<sp/>peak.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ADC_threshold<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>A<sp/>threshold<sp/>used<sp/>in<sp/>order<sp/>to<sp/>reject<sp/>any<sp/>potential<sp/>electrical<sp/>noise<sp/>below<sp/>like<sp/>500<sp/>ADC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>window_1<sp/>=<sp/>0,<sp/>window_2<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>The<sp/>three<sp/>windows<sp/>width<sp/>(in<sp/>keV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>peaks<sp/>=<sp/>fit.peaks;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minHitsToCalibrate<sp/>=<sp/>50000;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handles<sp/>the<sp/>triple<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_calibrator_8hpp_1a53eebde5a64b66ea934c2c8a5015b9bb" kindref="member">isTripleAlpha</ref>(source)<sp/>&amp;&amp;<sp/>type!=</highlight><highlight class="stringliteral">&quot;dssd&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_calibrator_8hpp_1a53eebde5a64b66ea934c2c8a5015b9bb" kindref="member">isTripleAlpha</ref>(source)<sp/>&amp;&amp;<sp/>type==</highlight><highlight class="stringliteral">&quot;dssd&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibrator_1a10d7597c3ff68484c243328415305e7c" kindref="member">m_treatOnlyParis</ref><sp/>&amp;&amp;<sp/>type!=</highlight><highlight class="stringliteral">&quot;paris&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibrator_1a6d0b8ee9047fa180aa56f157e9f991c4" kindref="member">m_treatOnlyGe</ref><sp/>&amp;&amp;<sp/>type!=</highlight><highlight class="stringliteral">&quot;ge&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ge&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>For<sp/>Clovers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>window_1<sp/>=<sp/>10,<sp/>window_2<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;152Eu&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_pics<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks.resize(nb_pics);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks<sp/>=<sp/>{121.7830,<sp/>344.2760,<sp/>778.9030,<sp/>964.1310,<sp/>1408.0110};</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_right_pic<sp/>=<sp/>peaks.back();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integral_ratio_threshold<sp/>=<sp/>0.011f;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label<sp/>==<sp/>69<sp/>||<sp/>label<sp/>==<sp/>70)<sp/>integral_ratio_threshold<sp/>=<sp/>0.009f;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADC_threshold<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;232Th&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_pics<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks.resize(nb_pics);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks<sp/>=<sp/>{238,<sp/>583,<sp/>910,<sp/>2614};</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_right_pic<sp/>=<sp/>peaks.back();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integral_ratio_threshold<sp/>=<sp/>0.0049f;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADC_threshold<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;60Co&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>NOT<sp/>FUNCTIONNAL<sp/>YET<sp/>!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_pics<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks.resize(nb_pics);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks<sp/>=<sp/>{1172,<sp/>1333};</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_right_pic<sp/>=<sp/>peaks.back();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integral_ratio_threshold<sp/>=<sp/>0.06f;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADC_threshold<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;labr&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>For<sp/>labr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>window_1<sp/>=<sp/>70,<sp/>window_2<sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;152Eu&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_pics<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks.resize(nb_pics);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks<sp/>=<sp/>{121.7830,<sp/>344.2760,<sp/>778.9030,<sp/>964.1310,<sp/>1408.0110};</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_right_pic<sp/>=<sp/>peaks.back();</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integral_ratio_threshold<sp/>=<sp/>0.012f;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADC_threshold<sp/>=<sp/>500;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;232Th&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_pics<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks.resize(nb_pics);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks<sp/>=<sp/>{238,<sp/>583,<sp/>911,<sp/>2614};</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_right_pic<sp/>=<sp/>peaks.back();</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integral_ratio_threshold<sp/>=<sp/>0.0025f;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADC_threshold<sp/>=<sp/>500;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;60Co&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>NOT<sp/>FUNCTIONNAL<sp/>YET<sp/>!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_pics<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks.resize(nb_pics);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks<sp/>=<sp/>{1172,<sp/>1333};</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_right_pic<sp/>=<sp/>peaks.back();</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integral_ratio_threshold<sp/>=<sp/>0.1f;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADC_threshold<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;paris&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>For<sp/>paris</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>window_1<sp/>=<sp/>80,<sp/>window_2<sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;152Eu&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(name.find(&quot;FR1&quot;))<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>nb_pics<sp/>=<sp/>4;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>peaks.resize(nb_pics);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>peaks<sp/>=<sp/>{344.2760,<sp/>778.9030,<sp/>964.1310,<sp/>1408.0110};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>E_right_pic<sp/>=<sp/>peaks.back();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>integral_ratio_threshold<sp/>=<sp/>0.030f;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_pics<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks.resize(nb_pics);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks<sp/>=<sp/>{121.7830,<sp/>344.2760,<sp/>778.9030,<sp/>964.1310,<sp/>1408.0110};</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_right_pic<sp/>=<sp/>peaks.back();</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integral_ratio_threshold<sp/>=<sp/>0.011f;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADC_threshold<sp/>=<sp/>500;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;232Th&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//never<sp/>tested<sp/>yet<sp/>-<sp/>but<sp/>should<sp/>be<sp/>similar<sp/>to<sp/>fatima</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_pics<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks.resize(nb_pics);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks<sp/>=<sp/>{238,<sp/>583,<sp/>911,<sp/>2614};</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_right_pic<sp/>=<sp/>peaks.back();</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integral_ratio_threshold<sp/>=<sp/>0.0023f;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADC_threshold<sp/>=<sp/>500;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;dssd&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_calibrator_8hpp_1a53eebde5a64b66ea934c2c8a5015b9bb" kindref="member">isTripleAlpha</ref>(source))</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window_1<sp/>=<sp/>100,<sp/>window_2<sp/>=<sp/>80;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_pics<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks.resize(nb_pics);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peaks<sp/>=<sp/>{5150,<sp/>5480,<sp/>5800};</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_right_pic<sp/>=<sp/>peaks.back();</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integral_ratio_threshold<sp/>=<sp/>0.05f;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADC_threshold<sp/>=<sp/>500;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minHitsToCalibrate<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibrator_1ad7076abb546a7ef91b4c5df50b3dfffa" kindref="member">m_verbose</ref>)<sp/>{<ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;DSSD<sp/>not<sp/>to<sp/>be<sp/>taken<sp/>in<sp/>this<sp/>calibration<sp/>file&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;bgo&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;152Eu&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_pics<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_right_pic<sp/>=<sp/>1408.0110;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integral_ratio_threshold<sp/>=<sp/>0.027f;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADC_threshold<sp/>=<sp/>500;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;232Th&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//never<sp/>tested<sp/>yet<sp/>-<sp/>but<sp/>should<sp/>be<sp/>similar<sp/>to<sp/>fatima</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_pics<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E_right_pic<sp/>=<sp/>2614;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integral_ratio_threshold<sp/>=<sp/>0.02f;</highlight><highlight class="comment">//<sp/>TBD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ADC_threshold<sp/>=<sp/>500;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibrator_1ad7076abb546a7ef91b4c5df50b3dfffa" kindref="member">m_verbose</ref>)<sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Detector&quot;</highlight><highlight class="normal">,<sp/>name,<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>handled<sp/>!&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>fit.resize(nb_pics);</highlight><highlight class="comment">//<sp/>Resize<sp/>the<sp/>intern<sp/>vectors<sp/>of<sp/>the<sp/>detector&apos;s<sp/>Fit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vmaxchan<sp/>=<sp/>0;</highlight><highlight class="comment">//<sp/>Position<sp/>of<sp/>the<sp/>right<sp/>pic<sp/>in<sp/>bins<sp/>(e.g.<sp/>the<sp/>1408<sp/>keV<sp/>in<sp/>Eu)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>scalefactor<sp/>=<sp/>fit.scalefactor;<sp/></highlight><highlight class="comment">//<sp/>To<sp/>adapt<sp/>to<sp/>the<sp/>binnin<sp/>of<sp/>the<sp/>histogram<sp/>(ADC/bin)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>kpc<sp/>=<sp/>fit.keVperADC;<sp/></highlight><highlight class="comment">//<sp/>keV<sp/>per<sp/>bin<sp/>(=channel)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-----------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OPERATE<sp/>ON<sp/>THE<sp/>SPECTRUM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-----------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nbins<sp/>=<sp/>histo-&gt;GetXaxis()-&gt;GetNbins();</highlight><highlight class="comment">//<sp/>The<sp/>number<sp/>of<sp/>bins<sp/>in<sp/>the<sp/>spectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NB:<sp/>It<sp/>supposes<sp/>that<sp/>the<sp/>spectra<sp/>starts<sp/>at<sp/>0<sp/>!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>scalefactor<sp/>=<sp/>histo-&gt;GetXaxis()-&gt;GetXmax()/nbins;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ADC_threshold_scaled<sp/>=<sp/><ref refid="_hit_8hpp_1a42de29176eeb225c09486aa0dcac5362" kindref="member">ADC_cast</ref>(ADC_threshold/scalefactor);<sp/></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="vector__functions_8hpp_1a2b29a4762dbbff2cabcb7e8a62cb0d39" kindref="member">sum</ref>=histo-&gt;Integral(ADC_threshold_scaled,<sp/>nbins-1);<sp/></highlight><highlight class="comment">//<sp/>The<sp/>total<sp/>integral<sp/>of<sp/>the<sp/>spectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>fit.integral<sp/>=<sp/><ref refid="vector__functions_8hpp_1a2b29a4762dbbff2cabcb7e8a62cb0d39" kindref="member">sum</ref>;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="vector__functions_8hpp_1a2b29a4762dbbff2cabcb7e8a62cb0d39" kindref="member">sum</ref><sp/>&lt;<sp/>minHitsToCalibrate)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>No<sp/>calibration<sp/>if<sp/>not<sp/>enough<sp/>counts<sp/>in<sp/>the<sp/>spectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibrator_1ad7076abb546a7ef91b4c5df50b3dfffa" kindref="member">m_verbose</ref>)</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fit.too_few_counts(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fit.exists(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Too<sp/>few<sp/>counts<sp/>to<sp/>calibrate<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="vector__functions_8hpp_1a2b29a4762dbbff2cabcb7e8a62cb0d39" kindref="member">sum</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibrator_1ad7076abb546a7ef91b4c5df50b3dfffa" kindref="member">m_verbose</ref>)</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Integral<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="vector__functions_8hpp_1a2b29a4762dbbff2cabcb7e8a62cb0d39" kindref="member">sum</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>counts;<sp/>Number<sp/>of<sp/>bins<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>nbins<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;scale<sp/>factor<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>scalefactor<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_root_8hpp_1ae587b174d8d4d5b8e62f01491140e111" kindref="member">AddTH1</ref>(<ref refid="class_calibrator_1adc2d012caeb55220308005a02190dd21" kindref="member">m_histos</ref>.<ref refid="struct_calibrator_1_1histograms_1a8a6b7533a4ea0c474c8896120e1589f8" kindref="member">all_raw_spectra</ref>.<ref refid="class_m_t_t_hist_1a9c2f7d05c9f8506382211635b35bd97b" kindref="member">get</ref>(),<sp/>histo.get(),<sp/>label);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialises<sp/>vmaxchan<sp/>at<sp/>the<sp/>last<sp/>bin<sp/>(right<sp/>of<sp/>the<sp/>spectra)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>vmaxchan=nbins;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>integral=0;<sp/></highlight><highlight class="comment">//<sp/>Holds<sp/>the<sp/>surface<sp/>below<sp/>the<sp/>spectra<sp/>from<sp/>the<sp/>highest<sp/>bin<sp/>to<sp/>the<sp/>current<sp/>bin<sp/>in<sp/>the<sp/>following<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>start<sp/>at<sp/>nbins-2<sp/>because<sp/>the<sp/>nbin&apos;th<sp/>bin<sp/>is<sp/>the<sp/>overflow,<sp/>so<sp/>to<sp/>be<sp/>secure<sp/>we<sp/>start<sp/>at<sp/>nbin-2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=nbins-2;<sp/>j<sp/>&gt;<sp/>ADC_threshold_scaled;<sp/>j--)</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>integral+=histo-&gt;GetBinContent(j);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((integral/<ref refid="vector__functions_8hpp_1a2b29a4762dbbff2cabcb7e8a62cb0d39" kindref="member">sum</ref>)<sp/>&gt;<sp/>integral_ratio_threshold)<sp/>{vmaxchan=j;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vmaxchan==ADC_threshold_scaled)<sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibrator_1ad7076abb546a7ef91b4c5df50b3dfffa" kindref="member">m_verbose</ref>)<sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>fit<sp/>this<sp/>spectrum<sp/>&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibrator_1ad7076abb546a7ef91b4c5df50b3dfffa" kindref="member">m_verbose</ref>)<sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;right<sp/>pic<sp/>found<sp/>at<sp/>channel<sp/>&quot;</highlight><highlight class="normal">,<sp/>vmaxchan*scalefactor,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ADC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>kpc=E_right_pic/vmaxchan;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibrator_1ad7076abb546a7ef91b4c5df50b3dfffa" kindref="member">m_verbose</ref>)<sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;kev<sp/>per<sp/>channel<sp/>=<sp/>&quot;</highlight><highlight class="normal">,<sp/>kpc);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;bgo&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>BGOs,<sp/>already<sp/>&quot;gain<sp/>matched&quot;,<sp/>a<sp/>simple<sp/>affine<sp/>relation<sp/>roughly<sp/>calibrates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.exists(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.order<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.parameter0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.parameter1<sp/>=<sp/>kpc/scalefactor;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(int<sp/>j=0;<sp/>j&lt;nb_pics;<sp/>j++)<sp/>//Starting<sp/>with<sp/>the<sp/>lower<sp/>energy<sp/>pic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xaxis<sp/>=<sp/>histo-&gt;GetXaxis();</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=nb_pics-1;<sp/>j&gt;-1;<sp/>j--)<sp/></highlight><highlight class="comment">//Starting<sp/>with<sp/>the<sp/>higher<sp/>energy<sp/>pic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibrator_1ad7076abb546a7ef91b4c5df50b3dfffa" kindref="member">m_verbose</ref>)<sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Pic<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>,<sp/>peaks[j]);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1st<sp/>window<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p=peaks[j];<sp/></highlight><highlight class="comment">//<sp/>Energy<sp/>of<sp/>the<sp/>peak<sp/>(in<sp/>keV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cguess_low<sp/><sp/>=<sp/><ref refid="lib_co_8hpp_1a48e80fbfd11f9fb219b92ba1c29c1b2a" kindref="member">int_cast</ref>((p-window_1)/kpc);<sp/></highlight><highlight class="comment">//<sp/>Low<sp/><sp/>edge<sp/>of<sp/>the<sp/>window<sp/>(in<sp/>bins)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cguess_high<sp/>=<sp/><ref refid="lib_co_8hpp_1a48e80fbfd11f9fb219b92ba1c29c1b2a" kindref="member">int_cast</ref>((p+window_1)/kpc);<sp/></highlight><highlight class="comment">//<sp/>High<sp/>edge<sp/>of<sp/>the<sp/>window<sp/>(in<sp/>bins)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cguess_low&lt;ADC_threshold_scaled)<sp/>cguess_low<sp/>=<sp/>ADC_threshold_scaled;<sp/></highlight><highlight class="comment">//cannot<sp/>read<sp/>the<sp/>spectra<sp/>below<sp/>the<sp/>ADC<sp/>threshold<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xaxis-&gt;SetRange(cguess_low,<sp/>cguess_high);<sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>the<sp/>window<sp/>to<sp/>the<sp/>spectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cmc<sp/>=<sp/>0.5<sp/>+<sp/>histo-&gt;GetMaximumBin();</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibrator_1ad7076abb546a7ef91b4c5df50b3dfffa" kindref="member">m_verbose</ref>)<sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">,<sp/>cguess_low*scalefactor<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>,<sp/>&quot;</highlight><highlight class="normal"><sp/>,<sp/>cguess_high*scalefactor<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>First<sp/>mean<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>,<sp/>cmc*scalefactor);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2nd<sp/>window<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cguess_high<sp/>=<sp/><ref refid="lib_co_8hpp_1a48e80fbfd11f9fb219b92ba1c29c1b2a" kindref="member">int_cast</ref>(0.5<sp/>+<sp/>cmc<sp/>+<sp/>window_2/kpc);</highlight><highlight class="comment">//<sp/>+0.5<sp/>in<sp/>order<sp/>to<sp/>take<sp/>the<sp/>centre<sp/>of<sp/>the<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cguess_low<sp/><sp/>=<sp/><ref refid="lib_co_8hpp_1a48e80fbfd11f9fb219b92ba1c29c1b2a" kindref="member">int_cast</ref>(0.5<sp/>+<sp/>cmc<sp/>-<sp/>window_2/kpc);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xaxis-&gt;SetRange(cguess_low,<sp/>cguess_high);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cm<sp/><sp/>=<sp/>histo-&gt;GetMean();<sp/></highlight><highlight class="comment">//in<sp/>ADC<sp/>(scalefactor*bins)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmc<sp/>=<sp/>cm/scalefactor;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibrator_1ad7076abb546a7ef91b4c5df50b3dfffa" kindref="member">m_verbose</ref>)<sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">,<sp/>cguess_low*scalefactor<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>,<sp/>&quot;</highlight><highlight class="normal"><sp/>,<sp/>cguess_high*scalefactor<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>First<sp/>mean<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>,<sp/>cm);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>3rd<sp/>window<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cguess_high<sp/>=<sp/>int_cast(cmc<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cguess_low<sp/><sp/>=<sp/>int_cast(cmc<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xaxis-&gt;SetRange(cguess_low,<sp/>cguess_high);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cm<sp/><sp/>=<sp/>histo-&gt;GetMean();<sp/>//in<sp/>ADC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cmc<sp/>=<sp/>cm/scalefactor;<sp/>//in<sp/>bins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(m_verbose)<sp/>print(&quot;[&quot;,<sp/>cguess_low*scalefactor<sp/>,<sp/>&quot;<sp/>,<sp/>&quot;<sp/>,<sp/>cguess_high*scalefactor<sp/>,<sp/>&quot;]<sp/>First<sp/>mean<sp/>=<sp/>&quot;<sp/>,<sp/>cm);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.cmeasures[j]=cmc;<sp/></highlight><highlight class="comment">//The<sp/>measured<sp/>channel<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fit<sp/>of<sp/>the<sp/>peak<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>!!!<sp/>ATTENTION<sp/>:<sp/>THE<sp/>FIT<sp/>IS<sp/>TO<sp/>BE<sp/>IMPROVED<sp/><sp/>!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>constante<sp/>=<sp/>histo<sp/>-&gt;<sp/>GetMaximum();</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespace_co_bazar_1a030309d1b093093b5fd48a5f7734018e" kindref="member">mean</ref><sp/>=<sp/>cmc;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma<sp/>=<sp/>(histo<sp/>-&gt;<sp/>FindLastBinAbove(constante/2)<sp/>-<sp/>histo<sp/>-&gt;<sp/>FindFirstBinAbove(constante/2))/2.35;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TF1*<sp/><sp/>gaus(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TF1(</highlight><highlight class="stringliteral">&quot;gaus&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;gaus&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gaus<sp/>-&gt;<sp/>SetRange(cguess_low*scalefactor,<sp/>cguess_high*scalefactor);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gaus<sp/>-&gt;<sp/>SetParameter(0,<sp/>constante);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gaus<sp/>-&gt;<sp/>SetParameter(1,<sp/><ref refid="namespace_co_bazar_1a030309d1b093093b5fd48a5f7734018e" kindref="member">mean</ref>);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gaus<sp/>-&gt;<sp/>SetParameter(2,<sp/>sigma);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>histo<sp/>-&gt;<sp/><ref refid="class_fit" kindref="compound">Fit</ref>(gaus,</highlight><highlight class="stringliteral">&quot;RQN+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.mean<sp/>[j]<sp/>=<sp/>gaus<sp/>-&gt;<sp/>GetParameter(1);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.sigma[j]<sp/>=<sp/>gaus<sp/>-&gt;<sp/>GetParameter(2);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TF1*<sp/>gaus_pol0(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TF1(</highlight><highlight class="stringliteral">&quot;gaus(0)+pol1(3)&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;gaus(0)+pol1(3)&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gaus_pol0<sp/>-&gt;<sp/>SetRange(cguess_low*scalefactor,<sp/>cguess_high*scalefactor);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gaus_pol0<sp/>-&gt;<sp/>SetParameter(0,<sp/>gaus<sp/>-&gt;<sp/>GetParameter(0));</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gaus_pol0<sp/>-&gt;<sp/>SetParameter(1,<sp/>gaus<sp/>-&gt;<sp/>GetParameter(1));</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gaus_pol0<sp/>-&gt;<sp/>SetParameter(2,<sp/>gaus<sp/>-&gt;<sp/>GetParameter(2));</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gaus_pol0<sp/>-&gt;<sp/>SetParameter(3,<sp/>histo<sp/>-&gt;<sp/>GetBinContent(0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>histo<sp/>-&gt;<sp/><ref refid="class_fit" kindref="compound">Fit</ref>(gaus_pol0,</highlight><highlight class="stringliteral">&quot;RQ+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label<sp/>==<sp/>25)<sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(kpc,<sp/>gaus_pol0<sp/>-&gt;<sp/>GetParameter(1),<sp/>gaus_pol0<sp/>-&gt;<sp/>GetParameter(2)/gaus_pol0<sp/>-&gt;<sp/>GetParameter(1));</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>histo<sp/>-&gt;<sp/>Fit(gaus_pol0,&quot;RIQE&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fit.mean<sp/>[j]<sp/>=<sp/>gaus_pol0<sp/>-&gt;<sp/>GetParameter(1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fit.sigma[j]<sp/>=<sp/>gaus_pol0<sp/>-&gt;<sp/>GetParameter(2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print(label,<sp/>&quot;kpc<sp/>:<sp/>&quot;,<sp/>kpc,<sp/>&quot;<sp/>scale<sp/>:<sp/>&quot;,<sp/>scalefactor,<sp/>&quot;<sp/>pic<sp/>:<sp/>&quot;,<sp/>p,<sp/>&quot;<sp/>-&gt;<sp/>&quot;,<sp/>cguess_low*kpc,<sp/>&quot;<sp/>:<sp/>&quot;,<sp/>cguess_high*kpc);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print(label,<sp/>&quot;<sp/>pic<sp/>:<sp/>&quot;,<sp/>p,<sp/>&quot;<sp/>-&gt;<sp/>&quot;,<sp/>cm,<sp/>&quot;<sp/>&quot;,<sp/>histo<sp/>-&gt;<sp/>GetBinContent(0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>peak<sp/>is<sp/>the<sp/>higher<sp/>in<sp/>energy,<sp/>then<sp/>use<sp/>it<sp/>as<sp/>a<sp/>little<sp/>bit<sp/>more<sp/>precise<sp/>rough<sp/>linear<sp/>calibration<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>nb_pics)<sp/>kpc<sp/>=<sp/>cmc;<sp/></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>xaxis<sp/>-&gt;<sp/>UnZoom();</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722" refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" kindref="member">Calibrator::fitCalibration</ref>(<ref refid="class_fits" kindref="compound">Fits</ref><sp/>&amp;<sp/>fits)</highlight></codeline>
<codeline lineno="723"><highlight class="normal">{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/>label<sp/>=<sp/>0;<sp/>label&lt;<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a8780c1daca5724bb16ba07824f3c3665" kindref="member">size</ref>();<sp/>label++)</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fit" kindref="compound">Fit</ref><sp/>&amp;<sp/>fit<sp/>=<sp/>fits[label];</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_pics<sp/>=<sp/>fit.<ref refid="class_fit_1a8f443c41d92e502b2fe55453560457e2" kindref="member">peaks</ref>.size();</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>x<sp/><sp/>=<sp/>fit.<ref refid="class_fit_1a5a9406e4e285484650609f696d96ffa2" kindref="member">x</ref><sp/>;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>y<sp/><sp/>=<sp/>fit.<ref refid="class_fit_1a36eda8829f68c74fdf657a065481a3f8" kindref="member">y</ref><sp/>;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>ex<sp/>=<sp/>fit.<ref refid="class_fit_1afffcdcd0341476a634e763b8bb2158ce" kindref="member">ex</ref>;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>ey<sp/>=<sp/>fit.<ref refid="class_fit_1a6777a3d0b233e491b99c6b22ba1b7290" kindref="member">ey</ref>;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>.resize(nb_pics);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>.resize(nb_pics);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>ex.resize(nb_pics);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>ey.resize(nb_pics);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j=0;<sp/>j<sp/>&lt;<sp/>nb_pics;<sp/>j++)</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibrator_1ad7076abb546a7ef91b4c5df50b3dfffa" kindref="member">m_verbose</ref>)<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Energy<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fit.<ref refid="class_fit_1a8f443c41d92e502b2fe55453560457e2" kindref="member">peaks</ref>[j]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Channel<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fit.<ref refid="class_fit_1ac752a6bea753f20d4a8ed0a887447d7c" kindref="member">cmeasures</ref>[j]*fit.<ref refid="class_fit_1a522102240db21bfd9dd69f15ea3b3656" kindref="member">scalefactor</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>[j]=fit.<ref refid="class_fit_1ac752a6bea753f20d4a8ed0a887447d7c" kindref="member">cmeasures</ref>[j]*fit.<ref refid="class_fit_1a522102240db21bfd9dd69f15ea3b3656" kindref="member">scalefactor</ref>;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>[j]=fit.<ref refid="class_fit_1a8f443c41d92e502b2fe55453560457e2" kindref="member">peaks</ref>[j];</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ex[j]=0;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ey[j]=0;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>faudrait<sp/>aussi<sp/>revoir<sp/>ce<sp/>fit<sp/>ici<sp/>!<sp/>Et<sp/>éventuellement<sp/>les<sp/>erreurs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCanvas((</highlight><highlight class="stringliteral">&quot;c_&quot;</highlight><highlight class="normal">+fit.<ref refid="class_fit_1a964131fabef1652357c6f1dd08f9f2de" kindref="member">name</ref>).c_str());</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>c1-&gt;cd(1);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>TGraphErrors*<sp/>gr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TGraphErrors(nb_pics,x.data(),y.data(),ex.data(),ey.data());</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>gr<sp/>-&gt;<sp/>SetName((fit.<ref refid="class_fit_1a964131fabef1652357c6f1dd08f9f2de" kindref="member">name</ref>+</highlight><highlight class="stringliteral">&quot;_gr&quot;</highlight><highlight class="normal">).c_str());</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>TF1*<sp/>linear(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TF1(</highlight><highlight class="stringliteral">&quot;lin&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;pol1&quot;</highlight><highlight class="normal">));<sp/></highlight><highlight class="comment">//Range<sp/>and<sp/>number<sp/>of<sp/>fit<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>gr-&gt;Fit(linear,</highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>TF1*<sp/>binom<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TF1(</highlight><highlight class="stringliteral">&quot;pol&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pol2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_detectors_8hpp_1a5da74af4e038f2a435565e2e93a6831e" kindref="member">isGe</ref>[label]<sp/>||<sp/><ref refid="_detectors_8hpp_1a3148345147f51e96aaa73e5d9f8e9d93" kindref="member">isDSSD</ref>[label]<sp/>||<sp/><ref refid="_detectors_8hpp_1a82c5910e3b4f178c276c8b888c5ac162" kindref="member">isParis</ref>[label])</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//First<sp/>order<sp/>fit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.<ref refid="class_fit_1a09a8cb0e9a300f8aeef67fcd267cb8f2" kindref="member">order</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.<ref refid="class_fit_1a6dd1941f173b91a904be34afca6cd5d0" kindref="member">parameter0</ref><sp/>=<sp/>linear<sp/>-&gt;<sp/>GetParameter(0);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.<ref refid="class_fit_1abe17456d5a2ccb50497d776f4f63f98b" kindref="member">parameter1</ref><sp/>=<sp/>linear<sp/>-&gt;<sp/>GetParameter(1);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.<ref refid="class_fit_1ac128f10e2e52aa39445e4363168d5f73" kindref="member">chi2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>linear<sp/>-&gt;<sp/>GetChisquare(<sp/>);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.<ref refid="class_fit_1acd04ad290cb58f48b9925152587c380e" kindref="member">exists</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_detectors_8hpp_1ac1f4e8d98df1dbbcb0c6ccf4a7b9a538" kindref="member">isLaBr3</ref>[label]<sp/>||<sp/><ref refid="_detectors_8hpp_1a82c5910e3b4f178c276c8b888c5ac162" kindref="member">isParis</ref>[label])</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>Second<sp/>order<sp/>fit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.<ref refid="class_fit_1a09a8cb0e9a300f8aeef67fcd267cb8f2" kindref="member">order</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>binom<sp/>-&gt;<sp/>SetParameters(0,<sp/>linear<sp/>-&gt;<sp/>GetParameter(0));</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>binom<sp/>-&gt;<sp/>SetParameters(1,<sp/>linear<sp/>-&gt;<sp/>GetParameter(1));</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gr<sp/>-&gt;<sp/><ref refid="class_fit" kindref="compound">Fit</ref>(binom,</highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.<ref refid="class_fit_1a6dd1941f173b91a904be34afca6cd5d0" kindref="member">parameter0</ref><sp/>=<sp/>binom<sp/>-&gt;<sp/>GetParameter(0);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.<ref refid="class_fit_1abe17456d5a2ccb50497d776f4f63f98b" kindref="member">parameter1</ref><sp/>=<sp/>binom<sp/>-&gt;<sp/>GetParameter(1);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.<ref refid="class_fit_1a394d86d19fb25ad5facea296ed71bb1e" kindref="member">parameter2</ref><sp/>=<sp/>binom<sp/>-&gt;<sp/>GetParameter(2);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.<ref refid="class_fit_1ac128f10e2e52aa39445e4363168d5f73" kindref="member">chi2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>binom<sp/>-&gt;<sp/>GetChisquare(<sp/>);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.<ref refid="class_fit_1acd04ad290cb58f48b9925152587c380e" kindref="member">exists</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fit.<ref refid="class_fit_1acd04ad290cb58f48b9925152587c380e" kindref="member">exists</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="796" refid="class_calibrator_1a00806ef12bceedaa6c16dad9b653f27f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a00806ef12bceedaa6c16dad9b653f27f" kindref="member">Calibrator::analyse2</ref>(std::vector&lt;double&gt;<sp/>peaks)</highlight></codeline>
<codeline lineno="797"><highlight class="normal">{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>it<sp/>:<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1abdba5d8991ded8844de7900d8e64d788" kindref="member">labels</ref>())</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name<sp/>=<sp/>it.first;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>label<sp/>=<sp/>it.second;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print_8hpp_1a7c50c0690489629965f74c4921570ce5" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;coucou1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="lib_co_8hpp_1a3b8ddb099e22657a31515fbcd8d1bf67" kindref="member">find_key</ref>(<ref refid="class_calibrator_1adc2d012caeb55220308005a02190dd21" kindref="member">m_histos</ref>.<ref refid="struct_calibrator_1_1histograms_1ae885f7bdabe2e31b12ea5573ee46317e" kindref="member">spectra</ref>,<sp/>label))<sp/>{<ref refid="print_8hpp_1afded2b178f1cba7246c86beaab6d4e6c" kindref="member">printC</ref>(<ref refid="print_8hpp_1adce122f566c88a1eceeb79a635afa964" kindref="member">GREY</ref>,<sp/>name,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>spectra<sp/>not<sp/>found<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="print_8hpp_1ab702106cf3b3e96750b6845ded4e0299" kindref="member">RESET</ref>);<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print_8hpp_1a7c50c0690489629965f74c4921570ce5" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;coucou2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rebin<sp/>=<sp/><ref refid="class_calibrator_1ac1218b83e5524b8817762bbc9ccbc32d" kindref="member">m_rebin</ref>[label];</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>threshold<sp/>=<sp/><ref refid="class_calibrator_1afe2a295e4ebc9322bfd540085e531549" kindref="member">m_threshold</ref>[label];</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_bins_below<sp/>=<sp/><ref refid="class_calibrator_1abb7cc034b66c4d986d28e3d1e3901b2c" kindref="member">m_nb_bins_below</ref>[label];</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Treating&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>spectraCo<sp/>=<sp/><ref refid="class_calibrator_1adc2d012caeb55220308005a02190dd21" kindref="member">m_histos</ref>.<ref refid="struct_calibrator_1_1histograms_1ae885f7bdabe2e31b12ea5573ee46317e" kindref="member">spectra</ref>[label];</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>spectraCo.removeBackground(rebin);<sp/></highlight><highlight class="comment">//<sp/>Allows<sp/>for<sp/>a<sp/>cleaner<sp/>peak<sp/>finding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>spectraCo.derivate2(rebin);<sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>second<sp/>derivative<sp/>spectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print_8hpp_1a7c50c0690489629965f74c4921570ce5" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;coucou3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finds<sp/>the<sp/>peaks<sp/>and<sp/>store<sp/>them<sp/>in<sp/>points<sp/>(vector<sp/>of<sp/>pair&lt;int,<sp/>double&gt;)<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>points<sp/>=<sp/>spectraCo.findPeaks(threshold,<sp/>nb_bins_below);<sp/></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(points.size()&lt;1)<sp/>{<ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;NO<sp/>PEAK<sp/>FOR&quot;</highlight><highlight class="normal">,<sp/>name);<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>points<sp/>have<sp/>been<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>point<sp/>contains<sp/>the<sp/>bin<sp/>number<sp/>of<sp/>the<sp/>peak<sp/>and<sp/>the<sp/>height<sp/>of<sp/>the<sp/>peak<sp/>(value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>peaks_bins;<sp/>std::vector&lt;double&gt;<sp/>peaks_value;<sp/></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vector__functions_8hpp_1a87f9787c265733ed96cea09867b8558a" kindref="member">unpack</ref>(points,<sp/>peaks_bins,<sp/>peaks_value);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Order<sp/>the<sp/>peaks<sp/>from<sp/>highest<sp/>to<sp/>smallest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>m_ordered_indexes;<sp/></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vector__functions_8hpp_1a516812808c1a19cf37a17258f1789ab8" kindref="member">bubble_sort</ref>(peaks_value,<sp/>m_ordered_indexes);<sp/></highlight><highlight class="comment">//<sp/>Ordered<sp/>from<sp/>lower<sp/>to<sp/>higher<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vector__functions_8hpp_1ae440336f79b368a77ed28266f6f8ab6e" kindref="member">invert</ref>(m_ordered_indexes);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print_8hpp_1a7c50c0690489629965f74c4921570ce5" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;coucou5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extracts<sp/>the<sp/>five<sp/>highest<sp/>peaks<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>five_max_peaks;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index_i<sp/>=<sp/>0;<sp/>(index_i&lt;peaks.size()<sp/>&amp;&amp;<sp/>index_i&lt;peaks_bins.size());<sp/>index_i++)</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>peak_i<sp/>=<sp/>m_ordered_indexes[index_i];</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>bin<sp/>=<sp/>peaks_bins[peak_i];</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spectraCo.getX(bin),</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spectraCo[bin]</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>five_max_peaks.push_back(bin);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print_8hpp_1a7c50c0690489629965f74c4921570ce5" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;coucou6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finds<sp/>the<sp/>higher<sp/>energy<sp/>peak<sp/>(hep)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>hep_bin<sp/>=<sp/><ref refid="vector__functions_8hpp_1a4baf3e978c4b72d0b3c52b064fa3c03e" kindref="member">maximum</ref>(five_max_peaks);<sp/></highlight><highlight class="comment">//<sp/>highest<sp/>energy<sp/>peak<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>hep_ADC<sp/>=<sp/>spectraCo.getX(hep_bin);<sp/></highlight><highlight class="comment">//<sp/>highest<sp/>energy<sp/>peak<sp/>ADC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>hep_keV<sp/>=<sp/><ref refid="vector__functions_8hpp_1a4baf3e978c4b72d0b3c52b064fa3c03e" kindref="member">maximum</ref>(peaks);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>highest<sp/>energy<sp/>peak<sp/>energy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>rough<sp/>linear<sp/>calibration<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>ADC_to_keV<sp/>=<sp/>hep_ADC/hep_keV;<sp/></highlight><highlight class="comment">//<sp/>Rough<sp/>conversion<sp/>from<sp/>ADC<sp/>to<sp/>energy<sp/>in<sp/>keV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>keV_to_ADC<sp/>=<sp/>1/ADC_to_keV;<sp/></highlight><highlight class="comment">//<sp/>Rough<sp/>conversion<sp/>from<sp/>energy<sp/>in<sp/>keV<sp/>to<sp/>ADC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>helpers<sp/>:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_peaks<sp/>=<sp/>peaks.size();</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="_hit_8hpp_1a04b75a9e083a1c44419fdb7c3f87c361" kindref="member">ADC</ref>;<sp/><ref refid="_hit_8hpp_1a04b75a9e083a1c44419fdb7c3f87c361" kindref="member">ADC</ref>.reserve(nb_peaks);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print_8hpp_1a7c50c0690489629965f74c4921570ce5" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;coucou7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print(five_max_peaks);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(auto<sp/>const<sp/>&amp;<sp/>peak<sp/>:<sp/>peaks)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>auto<sp/>const<sp/>&amp;<sp/>dumb_adc<sp/>=<sp/>peak/ADC_to_keV;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>print(five_max_peaks);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="904" refid="class_calibrator_1aa15e2c6afb9da71595926a10d89f0761" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1aa15e2c6afb9da71595926a10d89f0761" kindref="member">Calibrator::analyse</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>source)</highlight></codeline>
<codeline lineno="905"><highlight class="normal">{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Exctracting<sp/>calibration<sp/>parameters<sp/>from<sp/>spectra&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-----------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameterize<sp/>the<sp/>pics<sp/>to<sp/>fit<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-----------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><ref refid="class_calibrator_1aa0fff626078ec3cd2e453c5cf6681462" kindref="member">peakFinder</ref>(source);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><ref refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" kindref="member">fitCalibration</ref>(<ref refid="class_calibrator_1af9f21ae4029930b0581d194f7f5007be" kindref="member">m_fits</ref>);</highlight></codeline>
<codeline lineno="912"><highlight class="normal">}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915" refid="class_calibrator_1ace95da8167dc1202e913a75c553313b3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1ace95da8167dc1202e913a75c553313b3" kindref="member">Calibrator::writePosPeaks</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outfilename)</highlight></codeline>
<codeline lineno="916"><highlight class="normal">{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><ref refid="class_file" kindref="compound">File</ref><sp/>outFile(outfilename);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/>outFile.<ref refid="class_file_1af4dee1c79bf496d505633211177c6ce3" kindref="member">setExtension</ref>(</highlight><highlight class="stringliteral">&quot;peaks&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/>outFile.<ref refid="class_file_1aec78af028103207cb2ce88c0120dd4f6" kindref="member">makePath</ref>();<sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>path<sp/>if<sp/>it<sp/>doesn&apos;t<sp/>already<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/>std::ofstream<sp/>fout(outFile);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>fit<sp/>:<sp/><ref refid="class_calibrator_1af9f21ae4029930b0581d194f7f5007be" kindref="member">m_fits</ref>)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fit.found_peaks())<sp/></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/>fit.label()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i&lt;fit.x.size();<sp/>i++)<sp/></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fout<sp/>&lt;&lt;<sp/>fit.x[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fit.y[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fit.ex[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fit.ey[i]<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Peaks<sp/>position<sp/>written<sp/>to&quot;</highlight><highlight class="normal">,<sp/>outfilename);</highlight></codeline>
<codeline lineno="931"><highlight class="normal">}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933" refid="class_calibrator_1a5168dd14ccf0ad9629fa56185986d218" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a5168dd14ccf0ad9629fa56185986d218" kindref="member">Calibrator::writeData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outfilename)</highlight></codeline>
<codeline lineno="934"><highlight class="normal">{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><ref refid="class_file" kindref="compound">File</ref><sp/>outFile(outfilename);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>outFile.<ref refid="class_file_1af4dee1c79bf496d505633211177c6ce3" kindref="member">setExtension</ref>(</highlight><highlight class="stringliteral">&quot;calib&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>outFile.<ref refid="class_file_1aec78af028103207cb2ce88c0120dd4f6" kindref="member">makePath</ref>();<sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>path<sp/>if<sp/>it<sp/>doesn&apos;t<sp/>already<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/>std::ofstream<sp/>outfile(outFile);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>fit<sp/>:<sp/><ref refid="class_calibrator_1af9f21ae4029930b0581d194f7f5007be" kindref="member">m_fits</ref>)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a47ae394beae7efa2fb8fa1a3c7f8427d" kindref="member">exists</ref>(fit.label()))<sp/>outfile<sp/>&lt;&lt;<sp/>fit;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Data<sp/>written<sp/>to&quot;</highlight><highlight class="normal">,<sp/>outfilename);</highlight></codeline>
<codeline lineno="942"><highlight class="normal">}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944" refid="class_calibrator_1a78414158b6fec48d58182e62c9478126" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a78414158b6fec48d58182e62c9478126" kindref="member">Calibrator::writeRawRoot</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outfilename)</highlight></codeline>
<codeline lineno="945"><highlight class="normal">{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><ref refid="lib_root_8hpp_1a3b73f11bc69f125e12c1d48c9ed79a6e" kindref="member">unique_TFile</ref><sp/>outFile(TFile::Open(outfilename.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;RECREATE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/>outFile-&gt;cd();</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><ref refid="class_calibrator_1adc2d012caeb55220308005a02190dd21" kindref="member">m_histos</ref>.<ref refid="struct_calibrator_1_1histograms_1a8a6b7533a4ea0c474c8896120e1589f8" kindref="member">all_raw_spectra</ref>.<ref refid="class_m_t_t_hist_1a84c745f09bbccc075589f8531c4454e3" kindref="member">Write</ref>();</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>histo<sp/>:<sp/><ref refid="class_calibrator_1adc2d012caeb55220308005a02190dd21" kindref="member">m_histos</ref>.<ref refid="struct_calibrator_1_1histograms_1adb60dbf765f5c82fb247c2aae1ec4d6d" kindref="member">raw_spectra</ref>)<sp/>{histo.Write();}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Raw<sp/>root<sp/>spectra<sp/>written<sp/>to&quot;</highlight><highlight class="normal">,<sp/>outfilename);</highlight></codeline>
<codeline lineno="951"><highlight class="normal">}</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="960" refid="class_calibrator_1aad90b0e3951d4caffe11e319c7108a51" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1aad90b0e3951d4caffe11e319c7108a51" kindref="member">Calibrator::verify</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outfilename)</highlight></codeline>
<codeline lineno="961"><highlight class="normal">{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1_1_error" kindref="compound">Detectors::Error</ref>();</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/>std::vector&lt;size_t&gt;<sp/>nb_det_filled(<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1adc3246e1180dfd8b2fb52bf0924aa7ef" kindref="member">nbTypes</ref>(),<sp/>0);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Verification<sp/>of<sp/>the<sp/>calibration&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>it<sp/>:<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1abdba5d8991ded8844de7900d8e64d788" kindref="member">labels</ref>())<sp/></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name<sp/>=<sp/>it.first;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>label<sp/>=<sp/>it.second;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_calibrator_1a23efbbb0b3b113e8620e1f173a1ef795" kindref="member">m_histo_loaded</ref>)</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>raw<sp/>spectra<sp/>come<sp/>from<sp/>the<sp/>calibration<sp/>calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>raw_histo<sp/>=<sp/><ref refid="class_calibrator_1adc2d012caeb55220308005a02190dd21" kindref="member">m_histos</ref>.<ref refid="struct_calibrator_1_1histograms_1adb60dbf765f5c82fb247c2aae1ec4d6d" kindref="member">raw_spectra</ref>[label];</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>raw_histo.Merge();</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_calibrator_1adc2d012caeb55220308005a02190dd21" kindref="member">m_histos</ref>.<ref refid="struct_calibrator_1_1histograms_1ae885f7bdabe2e31b12ea5573ee46317e" kindref="member">spectra</ref>[label].load(raw_histo.get());</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>spectrum<sp/>=<sp/><ref refid="class_calibrator_1adc2d012caeb55220308005a02190dd21" kindref="member">m_histos</ref>.<ref refid="struct_calibrator_1_1histograms_1ae885f7bdabe2e31b12ea5573ee46317e" kindref="member">spectra</ref>[label];</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(spectrum);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spectrum.integral()&lt;1)<sp/>{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibrator_1ad7076abb546a7ef91b4c5df50b3dfffa" kindref="member">m_verbose</ref>)<sp/><ref refid="print_8hpp_1a141d6b4b0d8c1824f6ed472b5226eab4" kindref="member">information</ref>(name,<sp/></highlight><highlight class="stringliteral">&quot;has<sp/>no<sp/>hit&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>fit<sp/>=<sp/><ref refid="class_calibrator_1af9f21ae4029930b0581d194f7f5007be" kindref="member">m_fits</ref>[label];</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>useful<sp/>information<sp/>:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>type<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref>(label);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>type_index<sp/>=<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1ab4d5e6cc24173a65a35788ba7c680264" kindref="member">typeIndex</ref>(type);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fit.exists())<sp/></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibrator_1ad7076abb546a7ef91b4c5df50b3dfffa" kindref="member">m_verbose</ref>)<sp/><ref refid="print_8hpp_1a141d6b4b0d8c1824f6ed472b5226eab4" kindref="member">information</ref>(name,<sp/></highlight><highlight class="stringliteral">&quot;has<sp/>no<sp/>fit&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" kindref="member">m_calib</ref><sp/>&amp;&amp;<sp/><ref refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" kindref="member">m_calib</ref>.<ref refid="class_calibration_1a5070b5faea97d16c53b084a1b82161f0" kindref="member">size</ref>()&gt;=label)<sp/></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print_8hpp_1a141d6b4b0d8c1824f6ed472b5226eab4" kindref="member">information</ref>(</highlight><highlight class="stringliteral">&quot;reading<sp/>Calibration<sp/>module&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print_8hpp_1a141d6b4b0d8c1824f6ed472b5226eab4" kindref="member">information</ref>(label,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" kindref="member">m_calib</ref>.<ref refid="class_calibration_1a91d512d3bcbc3a3439a7902326965b48" kindref="member">order</ref>(label),<sp/><ref refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" kindref="member">m_calib</ref>.<ref refid="class_calibration_1a60c13a56e81bd8fb738c00a9b70e56b4" kindref="member">intercept</ref>(label),<sp/><ref refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" kindref="member">m_calib</ref>.<ref refid="class_calibration_1a38f8b48818a42d56682b9267847d2995" kindref="member">slope</ref>(label));</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fit.order&lt;0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fit.order<sp/>=<sp/><ref refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" kindref="member">m_calib</ref>.<ref refid="class_calibration_1a91d512d3bcbc3a3439a7902326965b48" kindref="member">order</ref>(label);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fit.parameter0<sp/>=<sp/><ref refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" kindref="member">m_calib</ref>.<ref refid="class_calibration_1a60c13a56e81bd8fb738c00a9b70e56b4" kindref="member">intercept</ref>(label);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fit.parameter1<sp/>=<sp/><ref refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" kindref="member">m_calib</ref>.<ref refid="class_calibration_1a38f8b48818a42d56682b9267847d2995" kindref="member">slope</ref>(label);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fit.parameter2<sp/>=<sp/><ref refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" kindref="member">m_calib</ref>.<ref refid="class_calibration_1aa3ab2d95f8d0799c7910bc6163f0c2ad" kindref="member">binom</ref>(label);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>spectrum.name()<sp/>=<sp/>spectrum.name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_calib&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>spectrum.calibrate(<ref refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" kindref="member">m_calib</ref>,<sp/>label);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>type_id<sp/>=<sp/><ref refid="lib_co_8hpp_1a2052317e56aa118e7ffcdb2e398f551c" kindref="member">double_cast</ref>(<ref refid="_detectors_8hpp_1adc256156b68f8dd6b9f2c2da57808bd3" kindref="member">compressedLabel</ref>[label]);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>sum_histo<sp/>=<sp/><sp/><ref refid="class_calibrator_1adc2d012caeb55220308005a02190dd21" kindref="member">m_histos</ref>.<ref refid="struct_calibrator_1_1histograms_1ac32701da9acbca65baf18250a10b9b37" kindref="member">all_calib</ref>[type_index];</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>0;<sp/>bin&lt;sum_histo-&gt;GetNbinsY();<sp/>bin++)</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Target<sp/>is<sp/>sum_histo,<sp/>source<sp/>is<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>target_X_value<sp/>=<sp/>sum_histo-&gt;GetYaxis()-&gt;GetBinCenter(bin);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>source_bin<sp/>=<sp/>spectrum.getBin(target_X_value);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sum_histo-&gt;SetBinContent(type_id,<sp/>bin,<sp/>spectrum.interpolate(source_bin));</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/>nb_det_filled[type_index]++;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>file<sp/>=<sp/>TFile::Open((outfilename+</highlight><highlight class="stringliteral">&quot;_calib.root&quot;</highlight><highlight class="normal">).c_str(),<sp/></highlight><highlight class="stringliteral">&quot;recreate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/>file-&gt;cd();</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>histo<sp/>:<sp/><ref refid="class_calibrator_1adc2d012caeb55220308005a02190dd21" kindref="member">m_histos</ref>.<ref refid="struct_calibrator_1_1histograms_1ac32701da9acbca65baf18250a10b9b37" kindref="member">all_calib</ref>)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(histo<sp/>&amp;&amp;<sp/>!histo-&gt;IsZombie()<sp/>&amp;&amp;<sp/>histo-&gt;Integral()<sp/>&gt;<sp/>0)<sp/>histo-&gt;Write();</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>it<sp/>:<sp/><ref refid="class_calibrator_1adc2d012caeb55220308005a02190dd21" kindref="member">m_histos</ref>.<ref refid="struct_calibrator_1_1histograms_1ae885f7bdabe2e31b12ea5573ee46317e" kindref="member">spectra</ref>)<sp/></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>it.second.setActualRange();</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>it.second.write(file);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/>file-&gt;Write();</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/>file-&gt;Close();</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(outfilename+</highlight><highlight class="stringliteral">&quot;_calib.root&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;written&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027" refid="class_calibrator_1a04a1a6e9e32b48699affcd9adfffa2f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1a04a1a6e9e32b48699affcd9adfffa2f0" kindref="member">Calibrator::writeCalibratedHisto</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outfilename)</highlight></codeline>
<codeline lineno="1028"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>outFile(TFile::Open(outfilename.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;RECREATE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/>outFile-&gt;cd();</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>histo<sp/>:<sp/><ref refid="class_calibrator_1adc2d012caeb55220308005a02190dd21" kindref="member">m_histos</ref>.<ref refid="struct_calibrator_1_1histograms_1ac32701da9acbca65baf18250a10b9b37" kindref="member">all_calib</ref>)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(histo.get())<sp/>{histo-&gt;Write();}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>histo<sp/>:<sp/><ref refid="class_calibrator_1adc2d012caeb55220308005a02190dd21" kindref="member">m_histos</ref>.<ref refid="struct_calibrator_1_1histograms_1ae518a10be1cffd8c718e7d6e0bc0c987" kindref="member">calib_spectra</ref>)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(histo.get())<sp/>{<ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;writting&quot;</highlight><highlight class="normal">,<sp/>histo.name());<sp/>histo-&gt;Write();}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/>outFile-&gt;Write();</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/>outFile-&gt;Close();</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Calibrated<sp/>root<sp/>spectra<sp/>written<sp/>to&quot;</highlight><highlight class="normal">,<sp/>outfilename);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038" refid="class_calibrator_1ac16a84c9c3244443c44a7c5de11ceb5f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1ac16a84c9c3244443c44a7c5de11ceb5f" kindref="member">Calibrator::calibrateFasterData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>folder,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_files<sp/>)</highlight></codeline>
<codeline lineno="1039"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><ref refid="class_calibrator_1a001ccdbc50c865246f88a77085680e7d" kindref="member">m_calibrate_data</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibrator_1a00297f1bb253279bfa8bdce83fb81951" kindref="member">loadFasterData</ref>(folder,<sp/>nb_files);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044" refid="class_calibrator_1aa45584fd0c25478ec98232ac18af3082" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_calibrator_1aa45584fd0c25478ec98232ac18af3082" kindref="member">Calibrator::calibrateRootData</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>folder,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_files)</highlight></codeline>
<codeline lineno="1045"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><ref refid="class_calibrator_1a001ccdbc50c865246f88a77085680e7d" kindref="member">m_calibrate_data</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_calibrator_1af067fee0c3a37336851ea63f2561b59f" kindref="member">loadRootData</ref>(folder,<sp/>nb_files);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//CALIBRATOR_HPP</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="lib/Modules/Calibrator.hpp"/>
  </compounddef>
</doxygen>
