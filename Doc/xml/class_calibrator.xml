<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_calibrator" kind="class" language="C++" prot="public">
    <compoundname>Calibrator</compoundname>
    <includes refid="_calibrator_8hpp" local="no">Calibrator.hpp</includes>
    <innerclass refid="struct_calibrator_1_1histograms" prot="public">Calibrator::histograms</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_calibrator_1aa98a40455fa921b68858b94f6821426b" prot="private" static="no" mutable="no">
        <type><ref refid="class_path" kindref="compound">Path</ref></type>
        <definition>Path Calibrator::dataPath</definition>
        <argsstring></argsstring>
        <name>dataPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="117" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" prot="private" static="no" mutable="no">
        <type><ref refid="class_calibration" kindref="compound">Calibration</ref></type>
        <definition>Calibration Calibrator::m_calib</definition>
        <argsstring></argsstring>
        <name>m_calib</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="99" column="15" bodyfile="lib/Modules/Calibrator.hpp" bodystart="99" bodyend="-1"/>
        <referencedby refid="class_calibrator_1adab079fd4083424545ee758000887e87" compoundref="_calibrator_8hpp" startline="88" endline="88">calib</referencedby>
        <referencedby refid="class_calibrator_1ae54039d407ea1fe9a91876892317f6e7" compoundref="_calibrator_8hpp" startline="76" endline="76">calibration</referencedby>
        <referencedby refid="class_calibrator_1a01917c2d097c62f2c6dc3a608d4e3ab4" compoundref="_calibrator_8hpp" startline="348" endline="388">fillRootDataHisto</referencedby>
        <referencedby refid="class_calibrator_1a293b803d661723f873d34c5e0ccef310" compoundref="_calibrator_8hpp" startline="31" endline="31">loadCalibration</referencedby>
        <referencedby refid="class_calibrator_1aad90b0e3951d4caffe11e319c7108a51" compoundref="_calibrator_8hpp" startline="960" endline="1025">verify</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibrator_1a001ccdbc50c865246f88a77085680e7d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Calibrator::m_calibrate_data</definition>
        <argsstring></argsstring>
        <name>m_calibrate_data</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="113" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="113" bodyend="-1"/>
        <referencedby refid="class_calibrator_1ad08f57f450b311f7f213b47388236362" compoundref="_calibrator_8hpp" startline="81" endline="81">calibrate_data</referencedby>
        <referencedby refid="class_calibrator_1ac16a84c9c3244443c44a7c5de11ceb5f" compoundref="_calibrator_8hpp" startline="1038" endline="1042">calibrateFasterData</referencedby>
        <referencedby refid="class_calibrator_1aa45584fd0c25478ec98232ac18af3082" compoundref="_calibrator_8hpp" startline="1044" endline="1048">calibrateRootData</referencedby>
        <referencedby refid="class_calibrator_1a01917c2d097c62f2c6dc3a608d4e3ab4" compoundref="_calibrator_8hpp" startline="348" endline="388">fillRootDataHisto</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibrator_1af9f21ae4029930b0581d194f7f5007be" prot="private" static="no" mutable="no">
        <type><ref refid="class_fits" kindref="compound">Fits</ref></type>
        <definition>Fits Calibrator::m_fits</definition>
        <argsstring></argsstring>
        <name>m_fits</name>
        <initializer>= <ref refid="class_fits" kindref="compound">Fits</ref>(100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="115" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="115" bodyend="-1"/>
        <referencedby refid="class_calibrator_1aa15e2c6afb9da71595926a10d89f0761" compoundref="_calibrator_8hpp" startline="904" endline="912">analyse</referencedby>
        <referencedby refid="class_calibrator_1ae81772276c36ab528b8147fa583356fd" compoundref="_calibrator_8hpp" startline="44" endline="51">Initialise</referencedby>
        <referencedby refid="class_calibrator_1aa0fff626078ec3cd2e453c5cf6681462" compoundref="_calibrator_8hpp" startline="421" endline="720">peakFinder</referencedby>
        <referencedby refid="class_calibrator_1aad90b0e3951d4caffe11e319c7108a51" compoundref="_calibrator_8hpp" startline="960" endline="1025">verify</referencedby>
        <referencedby refid="class_calibrator_1a5168dd14ccf0ad9629fa56185986d218" compoundref="_calibrator_8hpp" startline="933" endline="942">writeData</referencedby>
        <referencedby refid="class_calibrator_1ace95da8167dc1202e913a75c553313b3" compoundref="_calibrator_8hpp" startline="915" endline="931">writePosPeaks</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibrator_1a23efbbb0b3b113e8620e1f173a1ef795" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Calibrator::m_histo_loaded</definition>
        <argsstring></argsstring>
        <name>m_histo_loaded</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="130" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="130" bodyend="-1"/>
        <referencedby refid="class_calibrator_1a0d2a41f02b2c16409b58ce3ee4183792" compoundref="_calibrator_8hpp" startline="290" endline="309">loadRootHisto</referencedby>
        <referencedby refid="class_calibrator_1aad90b0e3951d4caffe11e319c7108a51" compoundref="_calibrator_8hpp" startline="960" endline="1025">verify</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibrator_1a149bd96011065f976236c0bfd58085e8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Calibrator::m_Initialised</definition>
        <argsstring></argsstring>
        <name>m_Initialised</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="103" column="13" bodyfile="lib/Modules/Calibrator.hpp" bodystart="103" bodyend="-1"/>
        <referencedby refid="class_calibrator_1ae81772276c36ab528b8147fa583356fd" compoundref="_calibrator_8hpp" startline="44" endline="51">Initialise</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibrator_1abb7cc034b66c4d986d28e3d1e3901b2c" prot="private" static="no" mutable="no">
        <type>std::map&lt; int, int &gt;</type>
        <definition>std::map&lt;int, int&gt; Calibrator::m_nb_bins_below</definition>
        <argsstring></argsstring>
        <name>m_nb_bins_below</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="128" column="12" bodyfile="lib/Modules/Calibrator.hpp" bodystart="128" bodyend="-1"/>
        <referencedby refid="class_calibrator_1a00806ef12bceedaa6c16dad9b653f27f" compoundref="_calibrator_8hpp" startline="796" endline="870">analyse2</referencedby>
        <referencedby refid="class_calibrator_1a14ec7e7a2a8f36d31e474de1a67df7ec" compoundref="_calibrator_8hpp" startline="249" endline="272">loadFitInfo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibrator_1ad001f1fd1adca313356b4b070e4b647c" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Calibrator::m_outCalib</definition>
        <argsstring></argsstring>
        <name>m_outCalib</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="108" column="15" bodyfile="lib/Modules/Calibrator.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_calibrator_1a75a33409cf6ac4509ccbd219ac39a353" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Calibrator::m_outDir</definition>
        <argsstring></argsstring>
        <name>m_outDir</name>
        <initializer>= &quot;Calibrator/&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="109" column="15" bodyfile="lib/Modules/Calibrator.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_calibrator_1a58fa98239eecf663449388fd3128184e" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Calibrator::m_outRoot</definition>
        <argsstring></argsstring>
        <name>m_outRoot</name>
        <initializer>= &quot;calibration.root&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="107" column="15" bodyfile="lib/Modules/Calibrator.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_calibrator_1aeeea0d6b5093606e9af2cb5565dc771d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Calibrator::m_outRoot_b</definition>
        <argsstring></argsstring>
        <name>m_outRoot_b</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="105" column="13" bodyfile="lib/Modules/Calibrator.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_calibrator_1ac1218b83e5524b8817762bbc9ccbc32d" prot="private" static="no" mutable="no">
        <type>std::map&lt; int, int &gt;</type>
        <definition>std::map&lt;int, int&gt; Calibrator::m_rebin</definition>
        <argsstring></argsstring>
        <name>m_rebin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="124" column="12" bodyfile="lib/Modules/Calibrator.hpp" bodystart="124" bodyend="-1"/>
        <referencedby refid="class_calibrator_1a00806ef12bceedaa6c16dad9b653f27f" compoundref="_calibrator_8hpp" startline="796" endline="870">analyse2</referencedby>
        <referencedby refid="class_calibrator_1a14ec7e7a2a8f36d31e474de1a67df7ec" compoundref="_calibrator_8hpp" startline="249" endline="272">loadFitInfo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibrator_1a6a8832e379513d4c6b9aeaeebf06dc28" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Calibrator::m_residus</definition>
        <argsstring></argsstring>
        <name>m_residus</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="104" column="13" bodyfile="lib/Modules/Calibrator.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_calibrator_1afa56c62f28c894f5374073cba7bd284a" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Calibrator::m_source</definition>
        <argsstring></argsstring>
        <name>m_source</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="106" column="15" bodyfile="lib/Modules/Calibrator.hpp" bodystart="106" bodyend="-1"/>
        <referencedby refid="class_calibrator_1ae47ff4fb802736a0880679f284aaef81" compoundref="_calibrator_8hpp" startline="71" endline="71">setSource</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibrator_1afe2a295e4ebc9322bfd540085e531549" prot="private" static="no" mutable="no">
        <type>std::map&lt; int, double &gt;</type>
        <definition>std::map&lt;int, double&gt; Calibrator::m_threshold</definition>
        <argsstring></argsstring>
        <name>m_threshold</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="126" column="12" bodyfile="lib/Modules/Calibrator.hpp" bodystart="126" bodyend="-1"/>
        <referencedby refid="class_calibrator_1a00806ef12bceedaa6c16dad9b653f27f" compoundref="_calibrator_8hpp" startline="796" endline="870">analyse2</referencedby>
        <referencedby refid="class_calibrator_1a14ec7e7a2a8f36d31e474de1a67df7ec" compoundref="_calibrator_8hpp" startline="249" endline="272">loadFitInfo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibrator_1ad7076abb546a7ef91b4c5df50b3dfffa" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Calibrator::m_verbose</definition>
        <argsstring></argsstring>
        <name>m_verbose</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="102" column="13" bodyfile="lib/Modules/Calibrator.hpp" bodystart="102" bodyend="-1"/>
        <referencedby refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" compoundref="_calibrator_8hpp" startline="722" endline="780">fitCalibration</referencedby>
        <referencedby refid="class_calibrator_1aa0fff626078ec3cd2e453c5cf6681462" compoundref="_calibrator_8hpp" startline="421" endline="720">peakFinder</referencedby>
        <referencedby refid="class_calibrator_1a4efc8ed8fb70b22bb1e78e27e325359a" compoundref="_calibrator_8hpp" startline="72" endline="72">verbose</referencedby>
        <referencedby refid="class_calibrator_1aad90b0e3951d4caffe11e319c7108a51" compoundref="_calibrator_8hpp" startline="960" endline="1025">verify</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibrator_1a39c8a92b79d32122442419c7c2785dbf" prot="private" static="no" mutable="no">
        <type>TFile *</type>
        <definition>TFile* Calibrator::readFile</definition>
        <argsstring></argsstring>
        <name>readFile</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="119" column="9" bodyfile="lib/Modules/Calibrator.hpp" bodystart="119" bodyend="-1"/>
        <referencedby refid="class_calibrator_1a0d2a41f02b2c16409b58ce3ee4183792" compoundref="_calibrator_8hpp" startline="290" endline="309">loadRootHisto</referencedby>
        <referencedby refid="class_calibrator_1a42f20b668e32d1b43b2de39cb477e04f" compoundref="_calibrator_8hpp" startline="28" endline="28">~Calibrator</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_calibrator_1a6d0b8ee9047fa180aa56f157e9f991c4" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool Calibrator::m_treatOnlyGe</definition>
        <argsstring></argsstring>
        <name>m_treatOnlyGe</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="112" column="15" bodyfile="lib/Modules/Calibrator.hpp" bodystart="112" bodyend="-1"/>
        <referencedby refid="class_calibrator_1aa0fff626078ec3cd2e453c5cf6681462" compoundref="_calibrator_8hpp" startline="421" endline="720">peakFinder</referencedby>
        <referencedby refid="class_calibrator_1aab113de3373ab0677455bcd465ab5306" compoundref="_calibrator_8hpp" startline="92" endline="92">treatOnlyGe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_calibrator_1a10d7597c3ff68484c243328415305e7c" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool Calibrator::m_treatOnlyParis</definition>
        <argsstring></argsstring>
        <name>m_treatOnlyParis</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="111" column="15" bodyfile="lib/Modules/Calibrator.hpp" bodystart="111" bodyend="-1"/>
        <referencedby refid="class_calibrator_1aa0fff626078ec3cd2e453c5cf6681462" compoundref="_calibrator_8hpp" startline="421" endline="720">peakFinder</referencedby>
        <referencedby refid="class_calibrator_1adba52414b26cd454f2095236c344e4f8" compoundref="_calibrator_8hpp" startline="91" endline="91">treatOnlyParis</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_calibrator_1adc2d012caeb55220308005a02190dd21" prot="public" static="no" mutable="no">
        <type>struct <ref refid="struct_calibrator_1_1histograms" kindref="compound">Calibrator::histograms</ref></type>
        <definition>struct Calibrator::histograms Calibrator::m_histos</definition>
        <argsstring></argsstring>
        <name>m_histos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="150" column="12"/>
        <referencedby refid="class_calibrator_1a00806ef12bceedaa6c16dad9b653f27f" compoundref="_calibrator_8hpp" startline="796" endline="870">analyse2</referencedby>
        <referencedby refid="class_calibrator_1a01917c2d097c62f2c6dc3a608d4e3ab4" compoundref="_calibrator_8hpp" startline="348" endline="388">fillRootDataHisto</referencedby>
        <referencedby refid="class_calibrator_1ae81772276c36ab528b8147fa583356fd" compoundref="_calibrator_8hpp" startline="44" endline="51">Initialise</referencedby>
        <referencedby refid="class_calibrator_1a0d2a41f02b2c16409b58ce3ee4183792" compoundref="_calibrator_8hpp" startline="290" endline="309">loadRootHisto</referencedby>
        <referencedby refid="class_calibrator_1aa0fff626078ec3cd2e453c5cf6681462" compoundref="_calibrator_8hpp" startline="421" endline="720">peakFinder</referencedby>
        <referencedby refid="class_calibrator_1aad90b0e3951d4caffe11e319c7108a51" compoundref="_calibrator_8hpp" startline="960" endline="1025">verify</referencedby>
        <referencedby refid="class_calibrator_1a04a1a6e9e32b48699affcd9adfffa2f0" compoundref="_calibrator_8hpp" startline="1027" endline="1036">writeCalibratedHisto</referencedby>
        <referencedby refid="class_calibrator_1a78414158b6fec48d58182e62c9478126" compoundref="_calibrator_8hpp" startline="944" endline="951">writeRawRoot</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_calibrator_1aa15e2c6afb9da71595926a10d89f0761" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::analyse</definition>
        <argsstring>(std::string const &amp;source=&quot;152Eu&quot;)</argsstring>
        <name>analyse</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>source</declname>
          <defval>&quot;152Eu&quot;</defval>
        </param>
        <briefdescription>
<para>Analyse the spectra to extract calibration coefficients. </para>
        </briefdescription>
        <detaileddescription>
<para>The peak finding follows the following principle : We start from the bin at the very right side of the spectra. Then we add the value of the bin to the integral counter. Then we add the value of the next bin on the left, then the next, etc.. That is, we integrate the spectra from right to left The moment the first peak is found, the higher energy one, the integral will suddenly increase Then we have to determine a threshold above which we say &quot;we have found the first peak&quot; From this we determine a really rough first linear calibration. This allows us to find, for each other peak, an energy windows in which it should be. Once this window established, we find its centroid. Then we create a smaller window and find again the centroid. A third window (which may not me important ?) event narrower is set around the peak. Then the peak is fitted and the mean value of the gaussian fit added to the calibration curve. Finally, the fit of the calibration curve gives the calibration coefficients.</para>
<para>The threshold is taken as the ratio between the integral and the total integral of the spectra, so that the process do not depend neither on different counting rates nor on different calibration duration. Only issue : it depends on the kind of detector and to some extend to the geometry. That is, this calibration is not well suited for paris detectors... Also, if a peak is absent due to for instance high energy threshold of the detector (typically 121keV of 152Eu is absent in some noisy channels) then the calibration will fail</para>
<para><simplesect kind="attention"><para>The most difficult part is to find the value of the threshold, wich must be different for each kind of detector. If it is different for differents detectors of the same type (e.g. paris) then the calibration requires additionnal work.</para>
</simplesect>
<simplesect kind="attention"><para>Take care of the binning of the spectra. If there is too much or not enough bins then the peak fitting will fail, if the maximum ADC value is lower than the higher energy peak then the peak findind will fail. Also, everything supposes the minimum bin corresponds to 0, otherwise it might fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="60" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="904" bodyend="912"/>
        <references refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" compoundref="_calibrator_8hpp" startline="722" endline="780">fitCalibration</references>
        <references refid="class_calibrator_1af9f21ae4029930b0581d194f7f5007be" compoundref="_calibrator_8hpp" startline="115">m_fits</references>
        <references refid="class_calibrator_1aa0fff626078ec3cd2e453c5cf6681462" compoundref="_calibrator_8hpp" startline="421" endline="720">peakFinder</references>
        <references refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" compoundref="print_8hpp" startline="44" endline="44">print</references>
        <referencedby refid="class_calibrator_1af5fcdabfdef0a399a9e3a3992b3029fb" compoundref="_calibrator_8hpp" startline="221" endline="232">calculate</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1a00806ef12bceedaa6c16dad9b653f27f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::analyse2</definition>
        <argsstring>(std::vector&lt; double &gt; peaks)</argsstring>
        <name>analyse2</name>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>peaks</declname>
        </param>
        <briefdescription>
<para>Uses the second version of the peak finder to extract calibration coefficients. </para>
        </briefdescription>
        <detaileddescription>
<para>Uses the second derivative spectra in order to find the peaks. To do so, uses an input file to set the three main parameter for each detector : The number of bins to use The threshold for peak detection The number of bins below threshold (by default 2)</para>
<para>The spectra&apos;s name must be the detector&apos;s name (ex R3A1_red)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="61" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="796" bodyend="870"/>
        <references refid="vector__functions_8hpp_1a516812808c1a19cf37a17258f1789ab8" compoundref="vector__functions_8hpp" startline="172" endline="214">bubble_sort</references>
        <references refid="print_8hpp_1a7c50c0690489629965f74c4921570ce5" compoundref="print_8hpp" startline="82" endline="87">debug</references>
        <references refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813">detectors</references>
        <references refid="lib_co_8hpp_1a3b8ddb099e22657a31515fbcd8d1bf67" compoundref="lib_co_8hpp" startline="479" endline="483">find_key</references>
        <references refid="print_8hpp_1adce122f566c88a1eceeb79a635afa964" compoundref="print_8hpp" startline="39">GREY</references>
        <references refid="vector__functions_8hpp_1ae440336f79b368a77ed28266f6f8ab6e" compoundref="vector__functions_8hpp" startline="226" endline="229">invert</references>
        <references refid="class_detectors_1abdba5d8991ded8844de7900d8e64d788" compoundref="_detectors_8hpp" startline="93" endline="93">Detectors::labels</references>
        <references refid="class_calibrator_1adc2d012caeb55220308005a02190dd21">m_histos</references>
        <references refid="class_calibrator_1abb7cc034b66c4d986d28e3d1e3901b2c" compoundref="_calibrator_8hpp" startline="128">m_nb_bins_below</references>
        <references refid="class_calibrator_1ac1218b83e5524b8817762bbc9ccbc32d" compoundref="_calibrator_8hpp" startline="124">m_rebin</references>
        <references refid="class_calibrator_1afe2a295e4ebc9322bfd540085e531549" compoundref="_calibrator_8hpp" startline="126">m_threshold</references>
        <references refid="vector__functions_8hpp_1a4baf3e978c4b72d0b3c52b064fa3c03e" compoundref="vector__functions_8hpp" startline="128" endline="134">maximum</references>
        <references refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" compoundref="print_8hpp" startline="44" endline="44">print</references>
        <references refid="print_8hpp_1afded2b178f1cba7246c86beaab6d4e6c" compoundref="print_8hpp" startline="60" endline="60">printC</references>
        <references refid="print_8hpp_1ab702106cf3b3e96750b6845ded4e0299" compoundref="print_8hpp" startline="19">RESET</references>
        <references refid="struct_calibrator_1_1histograms_1ae885f7bdabe2e31b12ea5573ee46317e" compoundref="_calibrator_8hpp" startline="145">Calibrator::histograms::spectra</references>
        <references refid="vector__functions_8hpp_1a87f9787c265733ed96cea09867b8558a" compoundref="vector__functions_8hpp" startline="232" endline="241">unpack</references>
        <referencedby refid="class_calibrator_1af12375fcb4e97a40d98fb2549565f2f2" compoundref="_calibrator_8hpp" startline="274" endline="283">calculate2</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1af5fcdabfdef0a399a9e3a3992b3029fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::calculate</definition>
        <argsstring>(std::string const &amp;dataDir, int nb_files=-1, std::string const &amp;source=&quot;152Eu&quot;, std::string const &amp;type=&quot;fast&quot;)</argsstring>
        <name>calculate</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>dataDir</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nb_files</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>source</declname>
          <defval>&quot;152Eu&quot;</defval>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>type</declname>
          <defval>&quot;fast&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="34" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="221" bodyend="232"/>
        <references refid="class_calibrator_1aa15e2c6afb9da71595926a10d89f0761" compoundref="_calibrator_8hpp" startline="904" endline="912">analyse</references>
        <references refid="class_calibrator_1a00297f1bb253279bfa8bdce83fb81951" compoundref="_calibrator_8hpp" startline="311" endline="326">loadFasterData</references>
        <references refid="class_calibrator_1af067fee0c3a37336851ea63f2561b59f" compoundref="_calibrator_8hpp" startline="328" endline="337">loadRootData</references>
        <references refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" compoundref="print_8hpp" startline="44" endline="44">print</references>
        <references refid="class_calibrator_1a5168dd14ccf0ad9629fa56185986d218" compoundref="_calibrator_8hpp" startline="933" endline="942">writeData</references>
        <references refid="class_calibrator_1a78414158b6fec48d58182e62c9478126" compoundref="_calibrator_8hpp" startline="944" endline="951">writeRawRoot</references>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1a547f6f7bb37caef0b1a2e574422fb85f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::calculate</definition>
        <argsstring>(std::string const &amp;histograms, std::string const &amp;source=&quot;152Eu&quot;)</argsstring>
        <name>calculate</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>histograms</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>source</declname>
          <defval>&quot;152Eu&quot;</defval>
        </param>
        <briefdescription>
<para>Calculate calibration from .root histograms. </para>
        </briefdescription>
        <detaileddescription>
<para>Calculate the calibration coefficients from already calculated histograms.</para>
<para><simplesect kind="attention"><para>TODO</para>
</simplesect>
<simplesect kind="attention"><para>The name of the histograms must correspond either to the name of the detector or the label declared in the ID file </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="38" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="239" bodyend="247"/>
        <references refid="class_calibrator_1aa15e2c6afb9da71595926a10d89f0761" compoundref="_calibrator_8hpp" startline="904" endline="912">analyse</references>
        <references refid="class_calibrator_1ae81772276c36ab528b8147fa583356fd" compoundref="_calibrator_8hpp" startline="44" endline="51">Initialise</references>
        <references refid="class_calibrator_1a0d2a41f02b2c16409b58ce3ee4183792" compoundref="_calibrator_8hpp" startline="290" endline="309">loadRootHisto</references>
        <references refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" compoundref="print_8hpp" startline="44" endline="44">print</references>
        <references refid="class_calibrator_1a5168dd14ccf0ad9629fa56185986d218" compoundref="_calibrator_8hpp" startline="933" endline="942">writeData</references>
        <references refid="class_calibrator_1a78414158b6fec48d58182e62c9478126" compoundref="_calibrator_8hpp" startline="944" endline="951">writeRawRoot</references>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1af12375fcb4e97a40d98fb2549565f2f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::calculate2</definition>
        <argsstring>(std::string const &amp;histogramsFilename, std::vector&lt; double &gt; peaks, std::string const &amp;fit_info_file=&quot;fit_info.data&quot;)</argsstring>
        <name>calculate2</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>histogramsFilename</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>peaks</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>fit_info_file</declname>
          <defval>&quot;fit_info.data&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="40" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="274" bodyend="283"/>
        <references refid="class_calibrator_1a00806ef12bceedaa6c16dad9b653f27f" compoundref="_calibrator_8hpp" startline="796" endline="870">analyse2</references>
        <references refid="class_calibrator_1ae81772276c36ab528b8147fa583356fd" compoundref="_calibrator_8hpp" startline="44" endline="51">Initialise</references>
        <references refid="class_calibrator_1a14ec7e7a2a8f36d31e474de1a67df7ec" compoundref="_calibrator_8hpp" startline="249" endline="272">loadFitInfo</references>
        <references refid="class_calibrator_1a0d2a41f02b2c16409b58ce3ee4183792" compoundref="_calibrator_8hpp" startline="290" endline="309">loadRootHisto</references>
        <references refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" compoundref="print_8hpp" startline="44" endline="44">print</references>
        <references refid="class_calibrator_1a5168dd14ccf0ad9629fa56185986d218" compoundref="_calibrator_8hpp" startline="933" endline="942">writeData</references>
        <references refid="class_calibrator_1a78414158b6fec48d58182e62c9478126" compoundref="_calibrator_8hpp" startline="944" endline="951">writeRawRoot</references>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1a2873b525b0a387de8c9f06e665d8e7ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; Calibrator::calib</definition>
        <argsstring>()</argsstring>
        <name>calib</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="89" column="9" bodyfile="lib/Modules/Calibrator.hpp" bodystart="89" bodyend="89"/>
        <references refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" compoundref="_calibrator_8hpp" startline="99">m_calib</references>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1adab079fd4083424545ee758000887e87" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; Calibrator::calib</definition>
        <argsstring>() const</argsstring>
        <name>calib</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="88" column="15" bodyfile="lib/Modules/Calibrator.hpp" bodystart="88" bodyend="88"/>
        <references refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" compoundref="_calibrator_8hpp" startline="99">m_calib</references>
        <referencedby refid="class_calibrator_1a87ba405f3d9af67c43789893fc5ff534" compoundref="_calibrator_8hpp" startline="401" endline="413">fillHisto</referencedby>
        <referencedby refid="class_calibrator_1a293b803d661723f873d34c5e0ccef310" compoundref="_calibrator_8hpp" startline="31" endline="31">loadCalibration</referencedby>
        <referencedby refid="class_calibrator_1a08032bf64f38605b8b6daa4a839fe443" compoundref="_calibrator_8hpp" startline="339" endline="346">loadRootDataThread</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1a69cb999f260dfa070073a22709aac586" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool const  &amp;</type>
        <definition>bool const&amp; Calibrator::calibrate_data</definition>
        <argsstring>()</argsstring>
        <name>calibrate_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="82" column="15" bodyfile="lib/Modules/Calibrator.hpp" bodystart="82" bodyend="82"/>
        <references refid="class_calibrator_1a001ccdbc50c865246f88a77085680e7d" compoundref="_calibrator_8hpp" startline="113">m_calibrate_data</references>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1ad08f57f450b311f7f213b47388236362" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool const  &amp;</type>
        <definition>bool const&amp; Calibrator::calibrate_data</definition>
        <argsstring>() const</argsstring>
        <name>calibrate_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="81" column="15" bodyfile="lib/Modules/Calibrator.hpp" bodystart="81" bodyend="81"/>
        <references refid="class_calibrator_1a001ccdbc50c865246f88a77085680e7d" compoundref="_calibrator_8hpp" startline="113">m_calibrate_data</references>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1ac16a84c9c3244443c44a7c5de11ceb5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::calibrateFasterData</definition>
        <argsstring>(std::string const &amp;folder, int const &amp;nb_files=-1)</argsstring>
        <name>calibrateFasterData</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>folder</declname>
        </param>
        <param>
          <type>int const &amp;</type>
          <declname>nb_files</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="79" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="1038" bodyend="1042"/>
        <references refid="class_calibrator_1a00297f1bb253279bfa8bdce83fb81951" compoundref="_calibrator_8hpp" startline="311" endline="326">loadFasterData</references>
        <references refid="class_calibrator_1a001ccdbc50c865246f88a77085680e7d" compoundref="_calibrator_8hpp" startline="113">m_calibrate_data</references>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1aa45584fd0c25478ec98232ac18af3082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::calibrateRootData</definition>
        <argsstring>(std::string const &amp;folder, int const &amp;nb_files=-1)</argsstring>
        <name>calibrateRootData</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>folder</declname>
        </param>
        <param>
          <type>int const &amp;</type>
          <declname>nb_files</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="80" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="1044" bodyend="1048"/>
        <references refid="class_calibrator_1af067fee0c3a37336851ea63f2561b59f" compoundref="_calibrator_8hpp" startline="328" endline="337">loadRootData</references>
        <references refid="class_calibrator_1a001ccdbc50c865246f88a77085680e7d" compoundref="_calibrator_8hpp" startline="113">m_calibrate_data</references>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1a03b4f69e1b937a479812fb60ea6f90a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_calibration" kindref="compound">Calibration</ref> &amp;</type>
        <definition>Calibration&amp; Calibrator::calibration</definition>
        <argsstring>()</argsstring>
        <name>calibration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="77" column="16" bodyfile="lib/Modules/Calibrator.hpp" bodystart="77" bodyend="77"/>
        <references refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" compoundref="_calibrator_8hpp" startline="99">m_calib</references>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1ae54039d407ea1fe9a91876892317f6e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_calibration" kindref="compound">Calibration</ref> const  &amp;</type>
        <definition>Calibration const&amp; Calibrator::calibration</definition>
        <argsstring>() const</argsstring>
        <name>calibration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="76" column="22" bodyfile="lib/Modules/Calibrator.hpp" bodystart="76" bodyend="76"/>
        <references refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" compoundref="_calibrator_8hpp" startline="99">m_calib</references>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1ae55ce16f9f65ced4b0c74efaaf92ac42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Calibrator::Calibrator</definition>
        <argsstring>()=default</argsstring>
        <name>Calibrator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="27" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1a01917c2d097c62f2c6dc3a608d4e3ab4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::fillRootDataHisto</definition>
        <argsstring>(std::string const &amp;filename)</argsstring>
        <name>fillRootDataHisto</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="55" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="348" bodyend="388"/>
        <references refid="class_event_1a3e0953c870297eee51ce555908923bb3" compoundref="_event_8hpp" startline="185">Event::adcs</references>
        <references refid="struct_calibrator_1_1histograms_1ac32701da9acbca65baf18250a10b9b37" compoundref="_calibrator_8hpp" startline="142">Calibrator::histograms::all_calib</references>
        <references refid="struct_calibrator_1_1histograms_1ae518a10be1cffd8c718e7d6e0bc0c987" compoundref="_calibrator_8hpp" startline="141">Calibrator::histograms::calib_spectra</references>
        <references refid="_detectors_8hpp_1adc256156b68f8dd6b9f2c2da57808bd3">compressedLabel</references>
        <references refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813">detectors</references>
        <references refid="_detectors_8hpp_1a82c5910e3b4f178c276c8b888c5ac162">isParis</references>
        <references refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" compoundref="_calibrator_8hpp" startline="99">m_calib</references>
        <references refid="class_calibrator_1a001ccdbc50c865246f88a77085680e7d" compoundref="_calibrator_8hpp" startline="113">m_calibrate_data</references>
        <references refid="class_calibrator_1adc2d012caeb55220308005a02190dd21">m_histos</references>
        <references refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" compoundref="print_8hpp" startline="44" endline="44">print</references>
        <references refid="class_event_1a7bc76ee166649431e9010875202ca6c1" compoundref="_event_8hpp" startline="187">Event::qdc2s</references>
        <references refid="struct_calibrator_1_1histograms_1adb60dbf765f5c82fb247c2aae1ec4d6d" compoundref="_calibrator_8hpp" startline="137">Calibrator::histograms::raw_spectra</references>
        <references refid="class_event_1a243e29bac8d969902d32a4d444fc5174" compoundref="_event_8hpp" startline="270" endline="303">Event::reading</references>
        <references refid="class_detectors_1ab4d5e6cc24173a65a35788ba7c680264" compoundref="_detectors_8hpp" startline="97" endline="97">Detectors::typeIndex</references>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::fitCalibration</definition>
        <argsstring>(Fits &amp;fits)</argsstring>
        <name>fitCalibration</name>
        <param>
          <type><ref refid="class_fits" kindref="compound">Fits</ref> &amp;</type>
          <declname>fits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="63" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="722" bodyend="780"/>
        <references refid="class_fit_1ac128f10e2e52aa39445e4363168d5f73" compoundref="_fit_8hpp" startline="92">Fit::chi2</references>
        <references refid="class_fit_1ac752a6bea753f20d4a8ed0a887447d7c" compoundref="_fit_8hpp" startline="81">Fit::cmeasures</references>
        <references refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813">detectors</references>
        <references refid="class_fit_1afffcdcd0341476a634e763b8bb2158ce" compoundref="_fit_8hpp" startline="88">Fit::ex</references>
        <references refid="class_fit_1acd04ad290cb58f48b9925152587c380e" compoundref="_fit_8hpp" startline="60" endline="60">Fit::exists</references>
        <references refid="class_fit_1a6777a3d0b233e491b99c6b22ba1b7290" compoundref="_fit_8hpp" startline="89">Fit::ey</references>
        <references refid="_detectors_8hpp_1a3148345147f51e96aaa73e5d9f8e9d93">isDSSD</references>
        <references refid="_detectors_8hpp_1a5da74af4e038f2a435565e2e93a6831e">isGe</references>
        <references refid="_detectors_8hpp_1ac1f4e8d98df1dbbcb0c6ccf4a7b9a538">isLaBr3</references>
        <references refid="_detectors_8hpp_1a82c5910e3b4f178c276c8b888c5ac162">isParis</references>
        <references refid="class_calibrator_1ad7076abb546a7ef91b4c5df50b3dfffa" compoundref="_calibrator_8hpp" startline="102">m_verbose</references>
        <references refid="class_fit_1a964131fabef1652357c6f1dd08f9f2de" compoundref="_fit_8hpp" startline="101">Fit::name</references>
        <references refid="class_fit_1a09a8cb0e9a300f8aeef67fcd267cb8f2" compoundref="_fit_8hpp" startline="99">Fit::order</references>
        <references refid="class_fit_1a6dd1941f173b91a904be34afca6cd5d0" compoundref="_fit_8hpp" startline="93">Fit::parameter0</references>
        <references refid="class_fit_1abe17456d5a2ccb50497d776f4f63f98b" compoundref="_fit_8hpp" startline="94">Fit::parameter1</references>
        <references refid="class_fit_1a394d86d19fb25ad5facea296ed71bb1e" compoundref="_fit_8hpp" startline="95">Fit::parameter2</references>
        <references refid="class_fit_1a8f443c41d92e502b2fe55453560457e2" compoundref="_fit_8hpp" startline="80">Fit::peaks</references>
        <references refid="class_fit_1a522102240db21bfd9dd69f15ea3b3656" compoundref="_fit_8hpp" startline="97">Fit::scalefactor</references>
        <references refid="class_detectors_1a8780c1daca5724bb16ba07824f3c3665" compoundref="_detectors_8hpp" startline="76" endline="76">Detectors::size</references>
        <references refid="class_fit_1a5a9406e4e285484650609f696d96ffa2" compoundref="_fit_8hpp" startline="86">Fit::x</references>
        <references refid="class_fit_1a36eda8829f68c74fdf657a065481a3f8" compoundref="_fit_8hpp" startline="87">Fit::y</references>
        <referencedby refid="class_calibrator_1aa15e2c6afb9da71595926a10d89f0761" compoundref="_calibrator_8hpp" startline="904" endline="912">analyse</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1ae81772276c36ab528b8147fa583356fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::Initialise</definition>
        <argsstring>()</argsstring>
        <name>Initialise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="44" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="44" bodyend="51"/>
        <references refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813">detectors</references>
        <references refid="struct_calibrator_1_1histograms_1a4ec16b7a4a18e1f8988684e837bd4d4e" compoundref="_calibrator_8hpp" startline="156" endline="200">Calibrator::histograms::Initialise</references>
        <references refid="class_calibrator_1af9f21ae4029930b0581d194f7f5007be" compoundref="_calibrator_8hpp" startline="115">m_fits</references>
        <references refid="class_calibrator_1adc2d012caeb55220308005a02190dd21">m_histos</references>
        <references refid="class_calibrator_1a149bd96011065f976236c0bfd58085e8" compoundref="_calibrator_8hpp" startline="103">m_Initialised</references>
        <references refid="class_fits_1a2aa7593ccf9c3638a5a675b62b8863da" compoundref="_fit_8hpp" startline="137" endline="137">Fits::resize</references>
        <referencedby refid="class_calibrator_1a547f6f7bb37caef0b1a2e574422fb85f" compoundref="_calibrator_8hpp" startline="239" endline="247">calculate</referencedby>
        <referencedby refid="class_calibrator_1af12375fcb4e97a40d98fb2549565f2f2" compoundref="_calibrator_8hpp" startline="274" endline="283">calculate2</referencedby>
        <referencedby refid="class_calibrator_1a00297f1bb253279bfa8bdce83fb81951" compoundref="_calibrator_8hpp" startline="311" endline="326">loadFasterData</referencedby>
        <referencedby refid="class_calibrator_1af067fee0c3a37336851ea63f2561b59f" compoundref="_calibrator_8hpp" startline="328" endline="337">loadRootData</referencedby>
        <referencedby refid="class_calibrator_1a0d2a41f02b2c16409b58ce3ee4183792" compoundref="_calibrator_8hpp" startline="290" endline="309">loadRootHisto</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1a293b803d661723f873d34c5e0ccef310" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Calibrator::loadCalibration</definition>
        <argsstring>(Calibration const &amp;calib)</argsstring>
        <name>loadCalibration</name>
        <param>
          <type><ref refid="class_calibration" kindref="compound">Calibration</ref> const &amp;</type>
          <declname>calib</declname>
        </param>
        <briefdescription>
<para>Loading calibration from file name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="31" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="31" bodyend="31"/>
        <references refid="class_calibrator_1adab079fd4083424545ee758000887e87" compoundref="_calibrator_8hpp" startline="88" endline="88">calib</references>
        <references refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" compoundref="_calibrator_8hpp" startline="99">m_calib</references>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1a6f6b1a44ab84227e16be740e39449f08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Calibrator::loadCalibration</definition>
        <argsstring>(std::string const &amp;calib_file)</argsstring>
        <name>loadCalibration</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>calib_file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="32" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="32" bodyend="32"/>
        <references refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" compoundref="_calibrator_8hpp" startline="99">m_calib</references>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1a00297f1bb253279bfa8bdce83fb81951" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::loadFasterData</definition>
        <argsstring>(std::string const &amp;dataDir, int const &amp;nb_files=-1)</argsstring>
        <name>loadFasterData</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>dataDir</declname>
        </param>
        <param>
          <type>int const &amp;</type>
          <declname>nb_files</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="57" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="311" bodyend="326"/>
        <references refid="class_m_t_faster_reader_1a58a2fe8f9f9ba39808d43f36f45c8288" compoundref="_m_t_faster_reader_8hpp" startline="126" endline="129">MTFasterReader::addFolder</references>
        <references refid="class_calibrator_1a87ba405f3d9af67c43789893fc5ff534" compoundref="_calibrator_8hpp" startline="401" endline="413">fillHisto</references>
        <references refid="class_calibrator_1ae81772276c36ab528b8147fa583356fd" compoundref="_calibrator_8hpp" startline="44" endline="51">Initialise</references>
        <references refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" compoundref="print_8hpp" startline="44" endline="44">print</references>
        <references refid="class_m_t_faster_reader_1ae316d31ebcb18ae8689522509d1ba513" compoundref="_m_t_faster_reader_8hpp" startline="186" endline="191">MTFasterReader::readRaw</references>
        <referencedby refid="class_calibrator_1af5fcdabfdef0a399a9e3a3992b3029fb" compoundref="_calibrator_8hpp" startline="221" endline="232">calculate</referencedby>
        <referencedby refid="class_calibrator_1ac16a84c9c3244443c44a7c5de11ceb5f" compoundref="_calibrator_8hpp" startline="1038" endline="1042">calibrateFasterData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1a14ec7e7a2a8f36d31e474de1a67df7ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::loadFitInfo</definition>
        <argsstring>(std::string const &amp;fit_info_file)</argsstring>
        <name>loadFitInfo</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>fit_info_file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="59" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="249" bodyend="272"/>
        <references refid="string__functions_8hpp_1ae058d07fbc702d0b0f79e3650e7804a2" compoundref="string__functions_8hpp" startline="240" endline="245">concatenate</references>
        <references refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813">detectors</references>
        <references refid="string__functions_8hpp_1a44ad60b408ba7b75bdf7ae75f8d2532f" compoundref="string__functions_8hpp" startline="61" endline="66">getList</references>
        <references refid="class_calibrator_1abb7cc034b66c4d986d28e3d1e3901b2c" compoundref="_calibrator_8hpp" startline="128">m_nb_bins_below</references>
        <references refid="class_calibrator_1ac1218b83e5524b8817762bbc9ccbc32d" compoundref="_calibrator_8hpp" startline="124">m_rebin</references>
        <references refid="class_calibrator_1afe2a295e4ebc9322bfd540085e531549" compoundref="_calibrator_8hpp" startline="126">m_threshold</references>
        <references refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" compoundref="lib_co_8hpp" startline="156" endline="156">throw_error</references>
        <referencedby refid="class_calibrator_1af12375fcb4e97a40d98fb2549565f2f2" compoundref="_calibrator_8hpp" startline="274" endline="283">calculate2</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1af067fee0c3a37336851ea63f2561b59f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::loadRootData</definition>
        <argsstring>(std::string const &amp;dataDir, int const &amp;nb_files=-1)</argsstring>
        <name>loadRootData</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>dataDir</declname>
        </param>
        <param>
          <type>int const &amp;</type>
          <declname>nb_files</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="53" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="328" bodyend="337"/>
        <references refid="class_files_manager_1a6d05662378bde592075237b9fa0a5168" compoundref="_files_manager_8hpp" startline="143" endline="163">FilesManager::addFolder</references>
        <references refid="class_files_manager_1a2b619786ba65a7ac1e701fc61e2409ae" compoundref="_files_manager_8hpp" startline="37" endline="37">FilesManager::getListFiles</references>
        <references refid="class_calibrator_1ae81772276c36ab528b8147fa583356fd" compoundref="_calibrator_8hpp" startline="44" endline="51">Initialise</references>
        <references refid="class_calibrator_1a08032bf64f38605b8b6daa4a839fe443" compoundref="_calibrator_8hpp" startline="339" endline="346">loadRootDataThread</references>
        <references refid="class_m_t_object_1a35c02650eb403bd54e867f93bb26fc47" compoundref="_m_t_object_8hpp" startline="214" endline="238">MTObject::parallelise_function</references>
        <references refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" compoundref="print_8hpp" startline="44" endline="44">print</references>
        <referencedby refid="class_calibrator_1af5fcdabfdef0a399a9e3a3992b3029fb" compoundref="_calibrator_8hpp" startline="221" endline="232">calculate</referencedby>
        <referencedby refid="class_calibrator_1aa45584fd0c25478ec98232ac18af3082" compoundref="_calibrator_8hpp" startline="1044" endline="1048">calibrateRootData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1a0d2a41f02b2c16409b58ce3ee4183792" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::loadRootHisto</definition>
        <argsstring>(std::string const &amp;histograms)</argsstring>
        <name>loadRootHisto</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>histograms</declname>
        </param>
        <briefdescription>
<para>Loads non-calibrated spectra. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>histograms</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="74" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="290" bodyend="309"/>
        <references refid="class_calibrator_1ae81772276c36ab528b8147fa583356fd" compoundref="_calibrator_8hpp" startline="44" endline="51">Initialise</references>
        <references refid="_detectors_8hpp_1ae343a2d2d22d862f6ac7ae10ba1b3d41" compoundref="_detectors_8hpp" startline="431" endline="453">loadFormattedTH1F</references>
        <references refid="class_calibrator_1a23efbbb0b3b113e8620e1f173a1ef795" compoundref="_calibrator_8hpp" startline="130">m_histo_loaded</references>
        <references refid="class_calibrator_1adc2d012caeb55220308005a02190dd21">m_histos</references>
        <references refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" compoundref="print_8hpp" startline="44" endline="44">print</references>
        <references refid="class_calibrator_1a39c8a92b79d32122442419c7c2785dbf" compoundref="_calibrator_8hpp" startline="119">readFile</references>
        <references refid="struct_calibrator_1_1histograms_1ae885f7bdabe2e31b12ea5573ee46317e" compoundref="_calibrator_8hpp" startline="145">Calibrator::histograms::spectra</references>
        <references refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" compoundref="lib_co_8hpp" startline="156" endline="156">throw_error</references>
        <referencedby refid="class_calibrator_1a547f6f7bb37caef0b1a2e574422fb85f" compoundref="_calibrator_8hpp" startline="239" endline="247">calculate</referencedby>
        <referencedby refid="class_calibrator_1af12375fcb4e97a40d98fb2549565f2f2" compoundref="_calibrator_8hpp" startline="274" endline="283">calculate2</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1a6f433f9ca2ce1406d8ca5d55fdccb696" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>Calibrator::operator bool</definition>
        <argsstring>() const &amp;</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000015"><xreftitle>Todo</xreftitle><xrefdescription></xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="86" column="3" bodyfile="lib/Modules/Calibrator.hpp" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1aa0fff626078ec3cd2e453c5cf6681462" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::peakFinder</definition>
        <argsstring>(std::string const &amp;source)</argsstring>
        <name>peakFinder</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="62" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="421" bodyend="720"/>
        <references refid="_hit_8hpp_1a42de29176eeb225c09486aa0dcac5362" compoundref="_hit_8hpp" startline="45" endline="45">ADC_cast</references>
        <references refid="lib_root_8hpp_1ae587b174d8d4d5b8e62f01491140e111" compoundref="lib_root_8hpp" startline="101" endline="109">AddTH1</references>
        <references refid="struct_calibrator_1_1histograms_1a8a6b7533a4ea0c474c8896120e1589f8" compoundref="_calibrator_8hpp" startline="138">Calibrator::histograms::all_raw_spectra</references>
        <references refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813">detectors</references>
        <references refid="class_detectors_1a47ae394beae7efa2fb8fa1a3c7f8427d" compoundref="_detectors_8hpp" startline="64" endline="64">Detectors::exists</references>
        <references refid="class_m_t_t_hist_1a9c2f7d05c9f8506382211635b35bd97b" compoundref="_m_t_t_hist_8hpp" startline="294" endline="294">MTTHist&lt; THist &gt;::get</references>
        <references refid="print_8hpp_1a141d6b4b0d8c1824f6ed472b5226eab4" compoundref="print_8hpp" startline="185" endline="190">information</references>
        <references refid="lib_co_8hpp_1a48e80fbfd11f9fb219b92ba1c29c1b2a" compoundref="lib_co_8hpp" startline="209" endline="209">int_cast</references>
        <references refid="_calibrator_8hpp_1a53eebde5a64b66ea934c2c8a5015b9bb" compoundref="_calibrator_8hpp" startline="415" endline="419">isTripleAlpha</references>
        <references refid="class_calibrator_1af9f21ae4029930b0581d194f7f5007be" compoundref="_calibrator_8hpp" startline="115">m_fits</references>
        <references refid="class_calibrator_1adc2d012caeb55220308005a02190dd21">m_histos</references>
        <references refid="class_calibrator_1a6d0b8ee9047fa180aa56f157e9f991c4" compoundref="_calibrator_8hpp" startline="112">m_treatOnlyGe</references>
        <references refid="class_calibrator_1a10d7597c3ff68484c243328415305e7c" compoundref="_calibrator_8hpp" startline="111">m_treatOnlyParis</references>
        <references refid="class_calibrator_1ad7076abb546a7ef91b4c5df50b3dfffa" compoundref="_calibrator_8hpp" startline="102">m_verbose</references>
        <references refid="namespace_co_bazar_1a030309d1b093093b5fd48a5f7734018e" compoundref="lib_co_8hpp" startline="470" endline="470">CoBazar::mean</references>
        <references refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" compoundref="print_8hpp" startline="44" endline="44">print</references>
        <references refid="struct_calibrator_1_1histograms_1adb60dbf765f5c82fb247c2aae1ec4d6d" compoundref="_calibrator_8hpp" startline="137">Calibrator::histograms::raw_spectra</references>
        <references refid="class_detectors_1a8780c1daca5724bb16ba07824f3c3665" compoundref="_detectors_8hpp" startline="76" endline="76">Detectors::size</references>
        <references refid="vector__functions_8hpp_1a2b29a4762dbbff2cabcb7e8a62cb0d39" compoundref="vector__functions_8hpp" startline="14" endline="19">sum</references>
        <references refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" compoundref="_detectors_8hpp" startline="96" endline="96">Detectors::type</references>
        <referencedby refid="class_calibrator_1aa15e2c6afb9da71595926a10d89f0761" compoundref="_calibrator_8hpp" startline="904" endline="912">analyse</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1ae47ff4fb802736a0880679f284aaef81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::setSource</definition>
        <argsstring>(std::string const &amp;source)</argsstring>
        <name>setSource</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="71" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="71" bodyend="71"/>
        <references refid="class_calibrator_1afa56c62f28c894f5374073cba7bd284a" compoundref="_calibrator_8hpp" startline="106">m_source</references>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1a4efc8ed8fb70b22bb1e78e27e325359a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::verbose</definition>
        <argsstring>(bool const &amp;_verbose)</argsstring>
        <name>verbose</name>
        <param>
          <type>bool const &amp;</type>
          <declname>_verbose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="72" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="72" bodyend="72"/>
        <references refid="class_calibrator_1ad7076abb546a7ef91b4c5df50b3dfffa" compoundref="_calibrator_8hpp" startline="102">m_verbose</references>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1aad90b0e3951d4caffe11e319c7108a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::verify</definition>
        <argsstring>(std::string const &amp;outfilename=&quot;verify&quot;)</argsstring>
        <name>verify</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>outfilename</declname>
          <defval>&quot;verify&quot;</defval>
        </param>
        <briefdescription>
<para>if some spectra and calibration coefficients have been loaded, or after the calibration coefficients have been calculated, this allows one to check the calibration </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outfilename</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="68" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="960" bodyend="1025"/>
        <references refid="struct_calibrator_1_1histograms_1ac32701da9acbca65baf18250a10b9b37" compoundref="_calibrator_8hpp" startline="142">Calibrator::histograms::all_calib</references>
        <references refid="class_calibration_1aa3ab2d95f8d0799c7910bc6163f0c2ad" compoundref="_calibration_8hpp" startline="152" endline="152">Calibration::binom</references>
        <references refid="_detectors_8hpp_1adc256156b68f8dd6b9f2c2da57808bd3">compressedLabel</references>
        <references refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813">detectors</references>
        <references refid="lib_co_8hpp_1a2052317e56aa118e7ffcdb2e398f551c" compoundref="lib_co_8hpp" startline="221" endline="221">double_cast</references>
        <references refid="print_8hpp_1a141d6b4b0d8c1824f6ed472b5226eab4" compoundref="print_8hpp" startline="185" endline="190">information</references>
        <references refid="class_calibration_1a60c13a56e81bd8fb738c00a9b70e56b4" compoundref="_calibration_8hpp" startline="144" endline="144">Calibration::intercept</references>
        <references refid="class_detectors_1abdba5d8991ded8844de7900d8e64d788" compoundref="_detectors_8hpp" startline="93" endline="93">Detectors::labels</references>
        <references refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" compoundref="_calibrator_8hpp" startline="99">m_calib</references>
        <references refid="class_calibrator_1af9f21ae4029930b0581d194f7f5007be" compoundref="_calibrator_8hpp" startline="115">m_fits</references>
        <references refid="class_calibrator_1a23efbbb0b3b113e8620e1f173a1ef795" compoundref="_calibrator_8hpp" startline="130">m_histo_loaded</references>
        <references refid="class_calibrator_1adc2d012caeb55220308005a02190dd21">m_histos</references>
        <references refid="class_calibrator_1ad7076abb546a7ef91b4c5df50b3dfffa" compoundref="_calibrator_8hpp" startline="102">m_verbose</references>
        <references refid="class_detectors_1adc3246e1180dfd8b2fb52bf0924aa7ef" compoundref="_detectors_8hpp" startline="117" endline="117">Detectors::nbTypes</references>
        <references refid="class_calibration_1a91d512d3bcbc3a3439a7902326965b48" compoundref="_calibration_8hpp" startline="140" endline="140">Calibration::order</references>
        <references refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" compoundref="print_8hpp" startline="44" endline="44">print</references>
        <references refid="struct_calibrator_1_1histograms_1adb60dbf765f5c82fb247c2aae1ec4d6d" compoundref="_calibrator_8hpp" startline="137">Calibrator::histograms::raw_spectra</references>
        <references refid="class_calibration_1a5070b5faea97d16c53b084a1b82161f0" compoundref="_calibration_8hpp" startline="102" endline="102">Calibration::size</references>
        <references refid="class_calibration_1a38f8b48818a42d56682b9267847d2995" compoundref="_calibration_8hpp" startline="148" endline="148">Calibration::slope</references>
        <references refid="struct_calibrator_1_1histograms_1ae885f7bdabe2e31b12ea5573ee46317e" compoundref="_calibrator_8hpp" startline="145">Calibrator::histograms::spectra</references>
        <references refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" compoundref="_detectors_8hpp" startline="96" endline="96">Detectors::type</references>
        <references refid="class_detectors_1ab4d5e6cc24173a65a35788ba7c680264" compoundref="_detectors_8hpp" startline="97" endline="97">Detectors::typeIndex</references>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1a04a1a6e9e32b48699affcd9adfffa2f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::writeCalibratedHisto</definition>
        <argsstring>(std::string const &amp;outfilename)</argsstring>
        <name>writeCalibratedHisto</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>outfilename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="69" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="1027" bodyend="1036"/>
        <references refid="struct_calibrator_1_1histograms_1ac32701da9acbca65baf18250a10b9b37" compoundref="_calibrator_8hpp" startline="142">Calibrator::histograms::all_calib</references>
        <references refid="struct_calibrator_1_1histograms_1ae518a10be1cffd8c718e7d6e0bc0c987" compoundref="_calibrator_8hpp" startline="141">Calibrator::histograms::calib_spectra</references>
        <references refid="class_calibrator_1adc2d012caeb55220308005a02190dd21">m_histos</references>
        <references refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" compoundref="print_8hpp" startline="44" endline="44">print</references>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1a5168dd14ccf0ad9629fa56185986d218" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::writeData</definition>
        <argsstring>(std::string const &amp;outfilename)</argsstring>
        <name>writeData</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>outfilename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="65" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="933" bodyend="942"/>
        <references refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813">detectors</references>
        <references refid="class_detectors_1a47ae394beae7efa2fb8fa1a3c7f8427d" compoundref="_detectors_8hpp" startline="64" endline="64">Detectors::exists</references>
        <references refid="class_calibrator_1af9f21ae4029930b0581d194f7f5007be" compoundref="_calibrator_8hpp" startline="115">m_fits</references>
        <references refid="class_file_1aec78af028103207cb2ce88c0120dd4f6" compoundref="files__functions_8hpp" startline="830" endline="830">File::makePath</references>
        <references refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" compoundref="print_8hpp" startline="44" endline="44">print</references>
        <references refid="class_file_1af4dee1c79bf496d505633211177c6ce3" compoundref="files__functions_8hpp" startline="829" endline="829">File::setExtension</references>
        <referencedby refid="class_calibrator_1af5fcdabfdef0a399a9e3a3992b3029fb" compoundref="_calibrator_8hpp" startline="221" endline="232">calculate</referencedby>
        <referencedby refid="class_calibrator_1af12375fcb4e97a40d98fb2549565f2f2" compoundref="_calibrator_8hpp" startline="274" endline="283">calculate2</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1ace95da8167dc1202e913a75c553313b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::writePosPeaks</definition>
        <argsstring>(std::string const &amp;outfilename)</argsstring>
        <name>writePosPeaks</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>outfilename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="64" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="915" bodyend="931"/>
        <references refid="class_calibrator_1af9f21ae4029930b0581d194f7f5007be" compoundref="_calibrator_8hpp" startline="115">m_fits</references>
        <references refid="class_file_1aec78af028103207cb2ce88c0120dd4f6" compoundref="files__functions_8hpp" startline="830" endline="830">File::makePath</references>
        <references refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" compoundref="print_8hpp" startline="44" endline="44">print</references>
        <references refid="class_file_1af4dee1c79bf496d505633211177c6ce3" compoundref="files__functions_8hpp" startline="829" endline="829">File::setExtension</references>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1a78414158b6fec48d58182e62c9478126" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::writeRawRoot</definition>
        <argsstring>(std::string const &amp;outfilename)</argsstring>
        <name>writeRawRoot</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>outfilename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="66" column="8" bodyfile="lib/Modules/Calibrator.hpp" bodystart="944" bodyend="951"/>
        <references refid="struct_calibrator_1_1histograms_1a8a6b7533a4ea0c474c8896120e1589f8" compoundref="_calibrator_8hpp" startline="138">Calibrator::histograms::all_raw_spectra</references>
        <references refid="class_calibrator_1adc2d012caeb55220308005a02190dd21">m_histos</references>
        <references refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" compoundref="print_8hpp" startline="44" endline="44">print</references>
        <references refid="struct_calibrator_1_1histograms_1adb60dbf765f5c82fb247c2aae1ec4d6d" compoundref="_calibrator_8hpp" startline="137">Calibrator::histograms::raw_spectra</references>
        <references refid="class_m_t_t_hist_1a84c745f09bbccc075589f8531c4454e3" compoundref="_m_t_t_hist_8hpp" startline="554" endline="578">MTTHist&lt; THist &gt;::Write</references>
        <referencedby refid="class_calibrator_1af5fcdabfdef0a399a9e3a3992b3029fb" compoundref="_calibrator_8hpp" startline="221" endline="232">calculate</referencedby>
        <referencedby refid="class_calibrator_1af12375fcb4e97a40d98fb2549565f2f2" compoundref="_calibrator_8hpp" startline="274" endline="283">calculate2</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1a42f20b668e32d1b43b2de39cb477e04f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Calibrator::~Calibrator</definition>
        <argsstring>()</argsstring>
        <name>~Calibrator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="28" column="3" bodyfile="lib/Modules/Calibrator.hpp" bodystart="28" bodyend="28"/>
        <references refid="class_calibrator_1a39c8a92b79d32122442419c7c2785dbf" compoundref="_calibrator_8hpp" startline="119">readFile</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_calibrator_1a87ba405f3d9af67c43789893fc5ff534" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::fillHisto</definition>
        <argsstring>(Hit &amp;hit, FasterReader &amp;reader, Calibrator &amp;calib)</argsstring>
        <name>fillHisto</name>
        <param>
          <type><ref refid="class_hit" kindref="compound">Hit</ref> &amp;</type>
          <declname>hit</declname>
        </param>
        <param>
          <type><ref refid="class_faster_reader" kindref="compound">FasterReader</ref> &amp;</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="class_calibrator" kindref="compound">Calibrator</ref> &amp;</type>
          <declname>calib</declname>
        </param>
        <briefdescription>
<para>Fills histograms. </para>
        </briefdescription>
        <detaileddescription>
<para>There are two modes : You can either fill the histograms with raw values Or you can use the loaded or calculated calibration factors to fille calibrated histograms</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hit</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>calib</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="58" column="15" bodyfile="lib/Modules/Calibrator.hpp" bodystart="401" bodyend="413"/>
        <references refid="class_hit_1a3d999e7bbbb470d1d3aa55ee772a98d6" compoundref="_hit_8hpp" startline="206">Hit::adc</references>
        <references refid="class_calibrator_1adab079fd4083424545ee758000887e87" compoundref="_calibrator_8hpp" startline="88" endline="88">calib</references>
        <references refid="_detectors_8hpp_1adc256156b68f8dd6b9f2c2da57808bd3">compressedLabel</references>
        <references refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813">detectors</references>
        <references refid="class_hit_1a7742ff02158f94fd0ccd163fc34ee9d1" compoundref="_hit_8hpp" startline="204">Hit::label</references>
        <references refid="class_faster_reader_1a2d05907241b80ed637b2ae5a01503756" compoundref="_faster_reader_8hpp" startline="263" endline="274">FasterReader::Read</references>
        <references refid="class_detectors_1ab4d5e6cc24173a65a35788ba7c680264" compoundref="_detectors_8hpp" startline="97" endline="97">Detectors::typeIndex</references>
        <referencedby refid="class_calibrator_1a00297f1bb253279bfa8bdce83fb81951" compoundref="_calibrator_8hpp" startline="311" endline="326">loadFasterData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1a08032bf64f38605b8b6daa4a839fe443" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::loadRootDataThread</definition>
        <argsstring>(Calibrator &amp;calib, MTList &amp;list)</argsstring>
        <name>loadRootDataThread</name>
        <param>
          <type><ref refid="class_calibrator" kindref="compound">Calibrator</ref> &amp;</type>
          <declname>calib</declname>
        </param>
        <param>
          <type><ref refid="_m_t_list_8hpp_1a5645cb48b623bfc2e6e274c70952a8e2" kindref="member">MTList</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="54" column="15" bodyfile="lib/Modules/Calibrator.hpp" bodystart="339" bodyend="346"/>
        <references refid="class_calibrator_1adab079fd4083424545ee758000887e87" compoundref="_calibrator_8hpp" startline="88" endline="88">calib</references>
        <references refid="class_m_t_vector_1a824a9ff009dde921eec4759c69f74ca7" compoundref="_m_t_list_8hpp" startline="82" endline="92">MTVector&lt; T &gt;::getNext</references>
        <referencedby refid="class_calibrator_1af067fee0c3a37336851ea63f2561b59f" compoundref="_calibrator_8hpp" startline="328" endline="337">loadRootData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1aab113de3373ab0677455bcd465ab5306" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Calibrator::treatOnlyGe</definition>
        <argsstring>(bool const &amp;b=true)</argsstring>
        <name>treatOnlyGe</name>
        <param>
          <type>bool const &amp;</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="92" column="15" bodyfile="lib/Modules/Calibrator.hpp" bodystart="92" bodyend="92"/>
        <references refid="class_calibrator_1a6d0b8ee9047fa180aa56f157e9f991c4" compoundref="_calibrator_8hpp" startline="112">m_treatOnlyGe</references>
      </memberdef>
      <memberdef kind="function" id="class_calibrator_1adba52414b26cd454f2095236c344e4f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Calibrator::treatOnlyParis</definition>
        <argsstring>(bool const &amp;b=true)</argsstring>
        <name>treatOnlyParis</name>
        <param>
          <type>bool const &amp;</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="91" column="15" bodyfile="lib/Modules/Calibrator.hpp" bodystart="91" bodyend="91"/>
        <references refid="class_calibrator_1a10d7597c3ff68484c243328415305e7c" compoundref="_calibrator_8hpp" startline="111">m_treatOnlyParis</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_calibrator_1a4c41a4cdb731bfa201e03e8d19628d59" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Calibrator::printParameters</definition>
        <argsstring>()</argsstring>
        <name>printParameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Modules/Calibrator.hpp" line="96" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Allows one to calculate and verify calibration coefficients for various sources and detectors for Nuball2. </para>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="todo_1_todo000014"><xreftitle>Todo</xreftitle><xrefdescription><para><ref refid="class_calibrator_1aad90b0e3951d4caffe11e319c7108a51" kindref="member">Calibrator::verify()</ref> DO NOT SUPPORT multithreading with <ref refid="class_m_t_object" kindref="compound">MTObject</ref> !! </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>Path</label>
        <link refid="class_path"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_recursive_folders</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>MTTHist&lt; TH2F &gt;</label>
        <link refid="class_m_t_t_hist"/>
      </node>
      <node id="5">
        <label>Calibrator::histograms</label>
        <link refid="struct_calibrator_1_1histograms"/>
        <childnode refid="6" relation="usage">
          <edgelabel>all_raw_spectra</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Folders</label>
        <link refid="class_folders"/>
      </node>
      <node id="7">
        <label>Calibration</label>
        <link refid="class_calibration"/>
      </node>
      <node id="2">
        <label>Fits</label>
        <link refid="class_fits"/>
      </node>
      <node id="1">
        <label>Calibrator</label>
        <link refid="class_calibrator"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_fits</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>dataPath</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_histos</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_calib</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="lib/Modules/Calibrator.hpp" line="23" column="1" bodyfile="lib/Modules/Calibrator.hpp" bodystart="24" bodyend="151"/>
    <listofallmembers>
      <member refid="class_calibrator_1aa15e2c6afb9da71595926a10d89f0761" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>analyse</name></member>
      <member refid="class_calibrator_1a00806ef12bceedaa6c16dad9b653f27f" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>analyse2</name></member>
      <member refid="class_calibrator_1af5fcdabfdef0a399a9e3a3992b3029fb" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>calculate</name></member>
      <member refid="class_calibrator_1a547f6f7bb37caef0b1a2e574422fb85f" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>calculate</name></member>
      <member refid="class_calibrator_1af12375fcb4e97a40d98fb2549565f2f2" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>calculate2</name></member>
      <member refid="class_calibrator_1adab079fd4083424545ee758000887e87" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>calib</name></member>
      <member refid="class_calibrator_1a2873b525b0a387de8c9f06e665d8e7ed" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>calib</name></member>
      <member refid="class_calibrator_1ad08f57f450b311f7f213b47388236362" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>calibrate_data</name></member>
      <member refid="class_calibrator_1a69cb999f260dfa070073a22709aac586" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>calibrate_data</name></member>
      <member refid="class_calibrator_1ac16a84c9c3244443c44a7c5de11ceb5f" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>calibrateFasterData</name></member>
      <member refid="class_calibrator_1aa45584fd0c25478ec98232ac18af3082" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>calibrateRootData</name></member>
      <member refid="class_calibrator_1ae54039d407ea1fe9a91876892317f6e7" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>calibration</name></member>
      <member refid="class_calibrator_1a03b4f69e1b937a479812fb60ea6f90a1" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>calibration</name></member>
      <member refid="class_calibrator_1ae55ce16f9f65ced4b0c74efaaf92ac42" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>Calibrator</name></member>
      <member refid="class_calibrator_1aa98a40455fa921b68858b94f6821426b" prot="private" virt="non-virtual"><scope>Calibrator</scope><name>dataPath</name></member>
      <member refid="class_calibrator_1a87ba405f3d9af67c43789893fc5ff534" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>fillHisto</name></member>
      <member refid="class_calibrator_1a01917c2d097c62f2c6dc3a608d4e3ab4" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>fillRootDataHisto</name></member>
      <member refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>fitCalibration</name></member>
      <member refid="class_calibrator_1ae81772276c36ab528b8147fa583356fd" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>Initialise</name></member>
      <member refid="class_calibrator_1a293b803d661723f873d34c5e0ccef310" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>loadCalibration</name></member>
      <member refid="class_calibrator_1a6f6b1a44ab84227e16be740e39449f08" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>loadCalibration</name></member>
      <member refid="class_calibrator_1a00297f1bb253279bfa8bdce83fb81951" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>loadFasterData</name></member>
      <member refid="class_calibrator_1a14ec7e7a2a8f36d31e474de1a67df7ec" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>loadFitInfo</name></member>
      <member refid="class_calibrator_1af067fee0c3a37336851ea63f2561b59f" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>loadRootData</name></member>
      <member refid="class_calibrator_1a08032bf64f38605b8b6daa4a839fe443" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>loadRootDataThread</name></member>
      <member refid="class_calibrator_1a0d2a41f02b2c16409b58ce3ee4183792" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>loadRootHisto</name></member>
      <member refid="class_calibrator_1ae1bf2cfab99dffa65adc9c5491a668b7" prot="private" virt="non-virtual"><scope>Calibrator</scope><name>m_calib</name></member>
      <member refid="class_calibrator_1a001ccdbc50c865246f88a77085680e7d" prot="private" virt="non-virtual"><scope>Calibrator</scope><name>m_calibrate_data</name></member>
      <member refid="class_calibrator_1af9f21ae4029930b0581d194f7f5007be" prot="private" virt="non-virtual"><scope>Calibrator</scope><name>m_fits</name></member>
      <member refid="class_calibrator_1a23efbbb0b3b113e8620e1f173a1ef795" prot="private" virt="non-virtual"><scope>Calibrator</scope><name>m_histo_loaded</name></member>
      <member refid="class_calibrator_1adc2d012caeb55220308005a02190dd21" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>m_histos</name></member>
      <member refid="class_calibrator_1a149bd96011065f976236c0bfd58085e8" prot="private" virt="non-virtual"><scope>Calibrator</scope><name>m_Initialised</name></member>
      <member refid="class_calibrator_1abb7cc034b66c4d986d28e3d1e3901b2c" prot="private" virt="non-virtual"><scope>Calibrator</scope><name>m_nb_bins_below</name></member>
      <member refid="class_calibrator_1ad001f1fd1adca313356b4b070e4b647c" prot="private" virt="non-virtual"><scope>Calibrator</scope><name>m_outCalib</name></member>
      <member refid="class_calibrator_1a75a33409cf6ac4509ccbd219ac39a353" prot="private" virt="non-virtual"><scope>Calibrator</scope><name>m_outDir</name></member>
      <member refid="class_calibrator_1a58fa98239eecf663449388fd3128184e" prot="private" virt="non-virtual"><scope>Calibrator</scope><name>m_outRoot</name></member>
      <member refid="class_calibrator_1aeeea0d6b5093606e9af2cb5565dc771d" prot="private" virt="non-virtual"><scope>Calibrator</scope><name>m_outRoot_b</name></member>
      <member refid="class_calibrator_1ac1218b83e5524b8817762bbc9ccbc32d" prot="private" virt="non-virtual"><scope>Calibrator</scope><name>m_rebin</name></member>
      <member refid="class_calibrator_1a6a8832e379513d4c6b9aeaeebf06dc28" prot="private" virt="non-virtual"><scope>Calibrator</scope><name>m_residus</name></member>
      <member refid="class_calibrator_1afa56c62f28c894f5374073cba7bd284a" prot="private" virt="non-virtual"><scope>Calibrator</scope><name>m_source</name></member>
      <member refid="class_calibrator_1afe2a295e4ebc9322bfd540085e531549" prot="private" virt="non-virtual"><scope>Calibrator</scope><name>m_threshold</name></member>
      <member refid="class_calibrator_1a6d0b8ee9047fa180aa56f157e9f991c4" prot="private" virt="non-virtual"><scope>Calibrator</scope><name>m_treatOnlyGe</name></member>
      <member refid="class_calibrator_1a10d7597c3ff68484c243328415305e7c" prot="private" virt="non-virtual"><scope>Calibrator</scope><name>m_treatOnlyParis</name></member>
      <member refid="class_calibrator_1ad7076abb546a7ef91b4c5df50b3dfffa" prot="private" virt="non-virtual"><scope>Calibrator</scope><name>m_verbose</name></member>
      <member refid="class_calibrator_1a6f433f9ca2ce1406d8ca5d55fdccb696" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>operator bool</name></member>
      <member refid="class_calibrator_1aa0fff626078ec3cd2e453c5cf6681462" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>peakFinder</name></member>
      <member refid="class_calibrator_1a4c41a4cdb731bfa201e03e8d19628d59" prot="private" virt="non-virtual"><scope>Calibrator</scope><name>printParameters</name></member>
      <member refid="class_calibrator_1a39c8a92b79d32122442419c7c2785dbf" prot="private" virt="non-virtual"><scope>Calibrator</scope><name>readFile</name></member>
      <member refid="class_calibrator_1ae47ff4fb802736a0880679f284aaef81" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>setSource</name></member>
      <member refid="class_calibrator_1aab113de3373ab0677455bcd465ab5306" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>treatOnlyGe</name></member>
      <member refid="class_calibrator_1adba52414b26cd454f2095236c344e4f8" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>treatOnlyParis</name></member>
      <member refid="class_calibrator_1a4efc8ed8fb70b22bb1e78e27e325359a" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>verbose</name></member>
      <member refid="class_calibrator_1aad90b0e3951d4caffe11e319c7108a51" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>verify</name></member>
      <member refid="class_calibrator_1a04a1a6e9e32b48699affcd9adfffa2f0" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>writeCalibratedHisto</name></member>
      <member refid="class_calibrator_1a5168dd14ccf0ad9629fa56185986d218" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>writeData</name></member>
      <member refid="class_calibrator_1ace95da8167dc1202e913a75c553313b3" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>writePosPeaks</name></member>
      <member refid="class_calibrator_1a78414158b6fec48d58182e62c9478126" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>writeRawRoot</name></member>
      <member refid="class_calibrator_1a42f20b668e32d1b43b2de39cb477e04f" prot="public" virt="non-virtual"><scope>Calibrator</scope><name>~Calibrator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
