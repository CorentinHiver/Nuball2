<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_near_line_8hpp" kind="file" language="C++">
    <compoundname>NearLine.hpp</compoundname>
    <includes refid="lib_root_8hpp" local="yes">../libRoot.hpp</includes>
    <includes local="yes">Histogramor.hpp</includes>
    <includes refid="_detectors_8hpp" local="yes">../Classes/Detectors.hpp</includes>
    <incdepgraph>
      <node id="20">
        <label>glob.h</label>
      </node>
      <node id="52">
        <label>TH1S.h</label>
      </node>
      <node id="25">
        <label>functional</label>
      </node>
      <node id="6">
        <label>iomanip</label>
      </node>
      <node id="29">
        <label>queue</label>
      </node>
      <node id="70">
        <label>TTreeIndex.h</label>
      </node>
      <node id="2">
        <label>../libRoot.hpp</label>
        <link refid="lib_root_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>filesystem</label>
      </node>
      <node id="39">
        <label>TAxis.h</label>
      </node>
      <node id="68">
        <label>TThread.h</label>
      </node>
      <node id="22">
        <label>errors.hpp</label>
        <link refid="errors_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>TH1D.h</label>
      </node>
      <node id="64">
        <label>TStopwatch.h</label>
      </node>
      <node id="30">
        <label>stdexcept</label>
      </node>
      <node id="28">
        <label>numeric</label>
      </node>
      <node id="15">
        <label>string</label>
      </node>
      <node id="8">
        <label>map</label>
      </node>
      <node id="73">
        <label>Hit.hpp</label>
        <link refid="_hit_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>libCo.hpp</label>
        <link refid="lib_co_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>TF1.h</label>
      </node>
      <node id="4">
        <label>print.hpp</label>
        <link refid="print_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>fstream</label>
      </node>
      <node id="42">
        <label>TError.h</label>
      </node>
      <node id="66">
        <label>TStyle.h</label>
      </node>
      <node id="23">
        <label>any</label>
      </node>
      <node id="17">
        <label>files_functions.hpp</label>
        <link refid="files__functions_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>random</label>
      </node>
      <node id="62">
        <label>TROOT.h</label>
      </node>
      <node id="34">
        <label>typeinfo</label>
      </node>
      <node id="72">
        <label>../Classes/Detectors.hpp</label>
        <link refid="_detectors_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>ctime</label>
      </node>
      <node id="41">
        <label>TChain.h</label>
      </node>
      <node id="71">
        <label>Histogramor.hpp</label>
      </node>
      <node id="67">
        <label>TSystem.h</label>
      </node>
      <node id="31">
        <label>stack</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
      <node id="44">
        <label>TF2.h</label>
      </node>
      <node id="45">
        <label>TFile.h</label>
      </node>
      <node id="40">
        <label>TCanvas.h</label>
      </node>
      <node id="55">
        <label>TH3I.h</label>
      </node>
      <node id="56">
        <label>TKey.h</label>
      </node>
      <node id="9">
        <label>vector_functions.hpp</label>
        <link refid="vector__functions_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>TSpectrum.h</label>
      </node>
      <node id="24">
        <label>array</label>
      </node>
      <node id="47">
        <label>TFitResult.h</label>
      </node>
      <node id="16">
        <label>sstream</label>
      </node>
      <node id="11">
        <label>randomCo.hpp</label>
        <link refid="random_co_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>TMarker.h</label>
      </node>
      <node id="49">
        <label>TGraphErrors.h</label>
      </node>
      <node id="53">
        <label>TH2.h</label>
      </node>
      <node id="37">
        <label>cstdlib</label>
      </node>
      <node id="50">
        <label>TH1F.h</label>
      </node>
      <node id="57">
        <label>TLeaf.h</label>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="13">
        <label>string_functions.hpp</label>
        <link refid="string__functions_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>unordered_map</label>
      </node>
      <node id="58">
        <label>TLegend.h</label>
      </node>
      <node id="65">
        <label>TString.h</label>
      </node>
      <node id="60">
        <label>TMath.h</label>
      </node>
      <node id="54">
        <label>TH2F.h</label>
      </node>
      <node id="27">
        <label>mutex</label>
      </node>
      <node id="36">
        <label>csignal</label>
      </node>
      <node id="32">
        <label>thread</label>
      </node>
      <node id="61">
        <label>TRandom.h</label>
      </node>
      <node id="69">
        <label>TTree.h</label>
      </node>
      <node id="1">
        <label>lib/Modules/NearLine.hpp</label>
        <link refid="_near_line_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>algorithm</label>
      </node>
      <node id="46">
        <label>TFitResultPtr.h</label>
      </node>
      <node id="14">
        <label>cstring</label>
      </node>
      <node id="48">
        <label>TGraph.h</label>
      </node>
      <node id="26">
        <label>memory</label>
      </node>
      <node id="33">
        <label>typeindex</label>
      </node>
      <node id="18">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_near_line" prot="public">NearLine</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>NEARLINE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NEARLINE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../libRoot.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Histogramor.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Classes/Detectors.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="class_near_line" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_near_line" kindref="compound">NearLine</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><ref refid="class_near_line_1adf3bc13e36dd295fc5668f08e81eaf32" kindref="member">NearLine</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_near_line_1a3280d6187c79a0aaf4f23b97fe3089ee" kindref="member">readParam</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="class_near_line_1a7a5987f603e02c97963ebc5f2e14709c" kindref="member">~NearLine</ref>();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22" refid="class_near_line_1a424af5c3473b89fc961227c55a1af01b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_near_line_1a424af5c3473b89fc961227c55a1af01b" kindref="member">m_hr</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_clover_spectra_1a693dcd3c5e09e4da918a6bb095060d37" kindref="member">CloverSpectra::printParameters</ref>()</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Usage<sp/>of<sp/>NearLine<sp/>:<sp/>/path/to/data<sp/>module<sp/>[[parameters]]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;modules<sp/>:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;--histo<sp/>:<sp/>Create<sp/>the<sp/>spectra<sp/>histo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>print(&quot;parameters<sp/>:&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>print(&quot;&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>print(&quot;-c<sp/>[calibration_file]<sp/><sp/>:<sp/>Loads<sp/>the<sp/>calibration<sp/>file&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>print(&quot;-e<sp/>[time_window_ns]<sp/><sp/><sp/><sp/>:<sp/>Perform<sp/>event<sp/>building<sp/>with<sp/>time_window_ns<sp/>=<sp/>1500<sp/>ns<sp/>by<sp/>default&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>print(&quot;-f<sp/>[files_number]<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Choose<sp/>the<sp/>total<sp/>number<sp/>of<sp/>files<sp/>to<sp/>treat<sp/>inside<sp/>a<sp/>data<sp/>folder&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>print(&quot;-i<sp/>[ID_file]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Load<sp/>ID<sp/>file&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>print(&quot;-n<sp/>[hits_number]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Choose<sp/>the<sp/>number<sp/>of<sp/>hits<sp/>to<sp/>read<sp/>inside<sp/>each<sp/>file&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>print(&quot;-m<sp/>[threads_number]<sp/><sp/><sp/><sp/>:<sp/>Choose<sp/>the<sp/>number<sp/>of<sp/>files<sp/>to<sp/>treat<sp/>in<sp/>parallel&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>print(&quot;-t<sp/>[time_window_ns]<sp/><sp/><sp/><sp/>:<sp/>Loads<sp/>timeshift<sp/>data&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>print(&quot;--throw-singles<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Throw<sp/>the<sp/>single<sp/>hits,<sp/>i.e.<sp/>no<sp/>coincidence&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_near_line_1a3280d6187c79a0aaf4f23b97fe3089ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_near_line_1a3280d6187c79a0aaf4f23b97fe3089ee" kindref="member">NearLine::readParam</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc&lt;2)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>printParameters();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>setDataPath(argv[1]);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>2;<sp/>i&lt;argc;<sp/>i++)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>command<sp/>=<sp/>argv[i];</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;-c&quot;</highlight><highlight class="normal">)<sp/>loadCalibration(argv[++i]);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;-e&quot;</highlight><highlight class="normal">)<sp/>setTimeWindow_ns(std::stoi(argv[++i]));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;-f&quot;</highlight><highlight class="normal">)<sp/>setNbFiles(std::stoi(argv[++i]));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;-i&quot;</highlight><highlight class="normal">)<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1a03f6e9974f958b86ddbbc4670d0209a2" kindref="member">load</ref>(argv[++i]);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;-m&quot;</highlight><highlight class="normal">)<sp/>setNbThreads(std::stoi(argv[++i]));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;-n&quot;</highlight><highlight class="normal">)<sp/><ref refid="class_faster_reader_1aa1fcb8d6721212bc982cac0ae4e597eb" kindref="member">FasterReader::setMaxHits</ref>(std::stoi(argv[++i]));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;-t&quot;</highlight><highlight class="normal">)<sp/>loadTimeshifts(argv[++i]);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;--throw-singles&quot;</highlight><highlight class="normal">)<sp/>m_throw_single<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;-w&quot;</highlight><highlight class="normal">)<sp/>setOutName(argv[++i]);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Unkown<sp/>command&quot;</highlight><highlight class="normal">,<sp/>command);}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="class_near_line_1adf3bc13e36dd295fc5668f08e81eaf32" refkind="member"><highlight class="normal"><ref refid="class_near_line_1adf3bc13e36dd295fc5668f08e81eaf32" kindref="member">NearLine::NearLine</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_near_line_1a3280d6187c79a0aaf4f23b97fe3089ee" kindref="member">readParam</ref>)<sp/><ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(</highlight><highlight class="stringliteral">&quot;Wrong<sp/>parameters...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="class_near_line_1a7a5987f603e02c97963ebc5f2e14709c" refkind="member"><highlight class="normal"><ref refid="class_near_line_1a7a5987f603e02c97963ebc5f2e14709c" kindref="member">NearLine::~NearLine</ref>()</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>NEARLINE_HPP</highlight></codeline>
    </programlisting>
    <location file="lib/Modules/NearLine.hpp"/>
  </compounddef>
</doxygen>
