<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_m_t_list_8hpp" kind="file" language="C++">
    <compoundname>MTList.hpp</compoundname>
    <includes refid="_m_t_object_8hpp" local="yes">MTObject.hpp</includes>
    <includes refid="lib_co_8hpp" local="yes">../libCo.hpp</includes>
    <includedby refid="_manip_8hpp" local="yes">lib/Classes/Manip.hpp</includedby>
    <includedby refid="_faster2_histo_8hpp" local="yes">lib/Modules/Faster2Histo.hpp</includedby>
    <includedby refid="_timeshifts_8hpp" local="yes">lib/Modules/Timeshifts.hpp</includedby>
    <includedby refid="_m_t_faster_reader_8hpp" local="yes">lib/MTObjects/MTFasterReader.hpp</includedby>
    <includedby refid="_m_t_files_manager_8hpp" local="yes">lib/MTObjects/MTFilesManager.hpp</includedby>
    <includedby refid="_m_t_root_reader_8hpp" local="yes">lib/MTObjects/MTRootReader.hpp</includedby>
    <incdepgraph>
      <node id="29">
        <label>glob.h</label>
      </node>
      <node id="53">
        <label>TH1S.h</label>
      </node>
      <node id="14">
        <label>iomanip</label>
      </node>
      <node id="13">
        <label>functional</label>
      </node>
      <node id="19">
        <label>queue</label>
      </node>
      <node id="34">
        <label>random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>TTreeIndex.h</label>
      </node>
      <node id="5">
        <label>../libRoot.hpp</label>
        <link refid="lib_root_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>filesystem</label>
      </node>
      <node id="40">
        <label>TAxis.h</label>
      </node>
      <node id="31">
        <label>stdlib.h</label>
      </node>
      <node id="69">
        <label>TThread.h</label>
      </node>
      <node id="52">
        <label>TH1D.h</label>
      </node>
      <node id="65">
        <label>TStopwatch.h</label>
      </node>
      <node id="21">
        <label>stdexcept</label>
      </node>
      <node id="18">
        <label>numeric</label>
      </node>
      <node id="22">
        <label>string</label>
      </node>
      <node id="16">
        <label>map</label>
      </node>
      <node id="6">
        <label>libCo.hpp</label>
        <link refid="lib_co_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>TF1.h</label>
      </node>
      <node id="33">
        <label>print.hpp</label>
        <link refid="print_8hpp"/>
      </node>
      <node id="12">
        <label>fstream</label>
      </node>
      <node id="1">
        <label>lib/MTObjects/MTList.hpp</label>
        <link refid="_m_t_list_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>TError.h</label>
      </node>
      <node id="67">
        <label>TStyle.h</label>
      </node>
      <node id="7">
        <label>any</label>
      </node>
      <node id="37">
        <label>files_functions.hpp</label>
        <link refid="files__functions_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>random</label>
      </node>
      <node id="63">
        <label>TROOT.h</label>
      </node>
      <node id="32">
        <label>string.h</label>
      </node>
      <node id="25">
        <label>typeinfo</label>
      </node>
      <node id="42">
        <label>TChain.h</label>
      </node>
      <node id="68">
        <label>TSystem.h</label>
      </node>
      <node id="27">
        <label>vector</label>
      </node>
      <node id="23">
        <label>stack</label>
      </node>
      <node id="45">
        <label>TF2.h</label>
      </node>
      <node id="46">
        <label>TFile.h</label>
      </node>
      <node id="41">
        <label>TCanvas.h</label>
      </node>
      <node id="56">
        <label>TH3I.h</label>
      </node>
      <node id="57">
        <label>TKey.h</label>
      </node>
      <node id="38">
        <label>vector_functions.hpp</label>
        <link refid="vector__functions_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>TSpectrum.h</label>
      </node>
      <node id="8">
        <label>array</label>
      </node>
      <node id="48">
        <label>TFitResult.h</label>
      </node>
      <node id="20">
        <label>sstream</label>
      </node>
      <node id="60">
        <label>TMarker.h</label>
      </node>
      <node id="50">
        <label>TGraphErrors.h</label>
      </node>
      <node id="54">
        <label>TH2.h</label>
      </node>
      <node id="10">
        <label>cstdlib</label>
      </node>
      <node id="51">
        <label>TH1F.h</label>
      </node>
      <node id="58">
        <label>TLeaf.h</label>
      </node>
      <node id="15">
        <label>iostream</label>
      </node>
      <node id="36">
        <label>string_functions.hpp</label>
        <link refid="string__functions_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>unordered_map</label>
      </node>
      <node id="59">
        <label>TLegend.h</label>
      </node>
      <node id="66">
        <label>TString.h</label>
      </node>
      <node id="61">
        <label>TMath.h</label>
      </node>
      <node id="55">
        <label>TH2F.h</label>
      </node>
      <node id="4">
        <label>mutex</label>
      </node>
      <node id="2">
        <label>MTObject.hpp</label>
        <link refid="_m_t_object_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>thread</label>
      </node>
      <node id="62">
        <label>TRandom.h</label>
      </node>
      <node id="70">
        <label>TTree.h</label>
      </node>
      <node id="9">
        <label>algorithm</label>
      </node>
      <node id="47">
        <label>TFitResultPtr.h</label>
      </node>
      <node id="30">
        <label>stdio.h</label>
      </node>
      <node id="11">
        <label>cstring</label>
      </node>
      <node id="49">
        <label>TGraph.h</label>
      </node>
      <node id="17">
        <label>memory</label>
      </node>
      <node id="24">
        <label>typeindex</label>
      </node>
      <node id="28">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>lib/Modules/Faster2Histo.hpp</label>
        <link refid="_faster2_histo_8hpp"/>
      </node>
      <node id="2">
        <label>lib/Classes/Manip.hpp</label>
        <link refid="_manip_8hpp"/>
      </node>
      <node id="8">
        <label>lib/MTObjects/MTFasterReader.hpp</label>
        <link refid="_m_t_faster_reader_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>lib/MTObjects/MTFilesManager.hpp</label>
        <link refid="_m_t_files_manager_8hpp"/>
      </node>
      <node id="5">
        <label>lib/Modules/CloverSpectra.hpp</label>
        <link refid="_clover_spectra_8hpp"/>
      </node>
      <node id="1">
        <label>lib/MTObjects/MTList.hpp</label>
        <link refid="_m_t_list_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>lib/Modules/Histogramor.hpp</label>
        <link refid="_histogramor_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>lib/Modules/Faster2Root.hpp</label>
        <link refid="_faster2_root_8hpp"/>
      </node>
      <node id="7">
        <label>lib/Modules/RunMatrixator.hpp</label>
        <link refid="_run_matrixator_8hpp"/>
      </node>
      <node id="11">
        <label>lib/Modules/NearLine.hpp</label>
        <link refid="_near_line_8hpp"/>
      </node>
      <node id="4">
        <label>lib/Modules/Timeshifts.hpp</label>
        <link refid="_timeshifts_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>lib/MTObjects/MTRootReader.hpp</label>
        <link refid="_m_t_root_reader_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>lib/Modules/Calibration.hpp</label>
        <link refid="_calibration_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_m_t_vector" prot="public">MTVector</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_m_t_list_8hpp_1a5645cb48b623bfc2e6e274c70952a8e2" prot="public" static="no">
        <type><ref refid="class_m_t_vector" kindref="compound">MTVector</ref>&lt; std::string &gt;</type>
        <definition>using MTList =  MTVector&lt;std::string&gt;</definition>
        <argsstring></argsstring>
        <name>MTList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTList.hpp" line="71" column="1" bodyfile="lib/MTObjects/MTList.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_m_t_list_8hpp_1a5ca09cd003ad326e7e70433ab01ea129" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;cout, MTVector&lt; T &gt; const &amp;list)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>cout</declname>
        </param>
        <param>
          <type><ref refid="class_m_t_vector" kindref="compound">MTVector</ref>&lt; T &gt; const &amp;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTList.hpp" line="74" column="1" bodyfile="lib/MTObjects/MTList.hpp" bodystart="74" bodyend="78"/>
        <references refid="class_m_t_vector_1ae6e4c7bbe8c226d36b317340c447e914" compoundref="_m_t_list_8hpp" startline="24" endline="24">MTVector&lt; T &gt;::get</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>MTLIST_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MTLIST_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_m_t_object_8hpp" kindref="compound">MTObject.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../libCo.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="8" refid="class_m_t_vector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_m_t_vector" kindref="compound">MTVector</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11" refid="class_m_t_vector_1a5b1308e464723c4ad533a4b47d2d28b5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_vector_1a5b1308e464723c4ad533a4b47d2d28b5" kindref="member">MTVector</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12" refid="class_m_t_vector_1aeeb4587a3061551d0ebe81559b6777d2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_vector_1aeeb4587a3061551d0ebe81559b6777d2" kindref="member">MTVector</ref>(std::vector&lt;T&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>collection)<sp/>:<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_t_vector_1a2c3ec2db54d57467063e4b9f3ef0d02f" kindref="member">m_collection</ref>(collection),<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_t_vector_1a42853e85d32b83e0ee6a8a822b5d532a" kindref="member">m_size</ref>(<ref refid="class_m_t_vector_1a2c3ec2db54d57467063e4b9f3ef0d02f" kindref="member">m_collection</ref>.<ref refid="class_m_t_vector_1adc40b9528bbbdcf2e3d33c1d93bb1582" kindref="member">size</ref>())<sp/>{}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="class_m_t_vector_1a17f4b1c62fa8f37d67955085a2f31918" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_t_vector_1a17f4b1c62fa8f37d67955085a2f31918" kindref="member">set</ref>(std::vector&lt;T&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>collection)<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_m_t_object_8hpp_1a225f8aadf270f4a69ad323e64b7eaa33" kindref="member">lock_mutex</ref><sp/>lock(<ref refid="class_m_t_vector_1a6352285479e71649dbd4ec8d32f08ca0" kindref="member">m_mutex</ref>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_t_vector_1a2c3ec2db54d57467063e4b9f3ef0d02f" kindref="member">m_collection</ref><sp/>=<sp/>collection;<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_t_vector_1a42853e85d32b83e0ee6a8a822b5d532a" kindref="member">m_size</ref><sp/>=<sp/><ref refid="class_m_t_vector_1a2c3ec2db54d57467063e4b9f3ef0d02f" kindref="member">m_collection</ref>.size();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_t_vector_1ae777fd124e908c9a638f4d41585ac1d3" kindref="member">resetRead</ref>();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_m_t_vector_1ae6e4c7bbe8c226d36b317340c447e914" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_m_t_vector_1ae6e4c7bbe8c226d36b317340c447e914" kindref="member">get</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_t_vector_1a2c3ec2db54d57467063e4b9f3ef0d02f" kindref="member">m_collection</ref>;}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_m_t_vector_1a824a9ff009dde921eec4759c69f74ca7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_t_vector_1a824a9ff009dde921eec4759c69f74ca7" kindref="member">getNext</ref>(T<sp/>&amp;<sp/>t);</highlight></codeline>
<codeline lineno="27" refid="class_m_t_vector_1aaae47be200e6af0a341a5f9407fe3a4d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_t_vector_1aaae47be200e6af0a341a5f9407fe3a4d" kindref="member">getNext</ref>(T<sp/>&amp;<sp/>t,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>&amp;<sp/>index);</highlight></codeline>
<codeline lineno="28" refid="class_m_t_vector_1ae777fd124e908c9a638f4d41585ac1d3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_t_vector_1ae777fd124e908c9a638f4d41585ac1d3" kindref="member">resetRead</ref>()<sp/>{<ref refid="class_m_t_vector_1a61e0c6ca31740a065b6a9fea31b471db" kindref="member">m_read_index</ref><sp/>=<sp/>0;}</highlight></codeline>
<codeline lineno="29" refid="class_m_t_vector_1ae3f2bdb83abfae640cdcfe0dd5cd05c3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_t_vector_1ae3f2bdb83abfae640cdcfe0dd5cd05c3" kindref="member">clear</ref>()<sp/>{<ref refid="class_m_t_vector_1a2c3ec2db54d57467063e4b9f3ef0d02f" kindref="member">m_collection</ref>.clear();}</highlight></codeline>
<codeline lineno="30" refid="class_m_t_vector_1aaf668b0e1119200aa54524e429acd0c9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_t_vector_1aaf668b0e1119200aa54524e429acd0c9" kindref="member">resize</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i<sp/>=<sp/>0)<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_m_t_object_8hpp_1a225f8aadf270f4a69ad323e64b7eaa33" kindref="member">lock_mutex</ref><sp/>lock(<ref refid="class_m_t_vector_1a6352285479e71649dbd4ec8d32f08ca0" kindref="member">m_mutex</ref>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_t_vector_1a42853e85d32b83e0ee6a8a822b5d532a" kindref="member">m_size</ref><sp/>=<sp/>i;<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_t_vector_1a2c3ec2db54d57467063e4b9f3ef0d02f" kindref="member">m_collection</ref>.resize(i);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_t_vector_1ae777fd124e908c9a638f4d41585ac1d3" kindref="member">resetRead</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38" refid="class_m_t_vector_1adc40b9528bbbdcf2e3d33c1d93bb1582" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_m_t_vector_1adc40b9528bbbdcf2e3d33c1d93bb1582" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_t_vector_1a42853e85d32b83e0ee6a8a822b5d532a" kindref="member">m_size</ref>;}</highlight></codeline>
<codeline lineno="39" refid="class_m_t_vector_1a29b5d2b3af7c22198407775ecab444b5" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_m_t_vector_1a29b5d2b3af7c22198407775ecab444b5" kindref="member">operator[] </ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_t_vector_1a2c3ec2db54d57467063e4b9f3ef0d02f" kindref="member">m_collection</ref>[i];}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_m_t_vector_1ae4daeb890c699da55114201063ea7b49" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_vector" kindref="compound">MTVector</ref>&amp;<sp/><ref refid="class_m_t_vector_1ae4daeb890c699da55114201063ea7b49" kindref="member">operator=</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>t)<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_m_t_object_8hpp_1a225f8aadf270f4a69ad323e64b7eaa33" kindref="member">lock_mutex</ref><sp/>lock(<ref refid="class_m_t_vector_1a6352285479e71649dbd4ec8d32f08ca0" kindref="member">m_mutex</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_m_t_vector_1ae3f2bdb83abfae640cdcfe0dd5cd05c3" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_m_t_vector_1ada63ea1ffe18a57ba1ce0e87e45e497c" kindref="member">push_back</ref>(t);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="class_m_t_vector_1ac635c567f37ab40e241f5eccdf49ac3d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_m_t_vector_1ac635c567f37ab40e241f5eccdf49ac3d" kindref="member">begin</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_t_vector_1a2c3ec2db54d57467063e4b9f3ef0d02f" kindref="member">m_collection</ref>.begin();}</highlight></codeline>
<codeline lineno="50" refid="class_m_t_vector_1a5e9df0c0baf0b23daf47797492e6068e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_m_t_vector_1a5e9df0c0baf0b23daf47797492e6068e" kindref="member">end</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_t_vector_1a2c3ec2db54d57467063e4b9f3ef0d02f" kindref="member">m_collection</ref>.end();}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_m_t_vector_1a99b913bfdcf68d04d080e7edb3ce89d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;()<sp/>&amp;<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_t_vector_1a2c3ec2db54d57467063e4b9f3ef0d02f" kindref="member">m_collection</ref>;}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="class_m_t_vector_1a7b972ae46bd6ca7086b45543bdee7503" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_t_vector_1a7b972ae46bd6ca7086b45543bdee7503" kindref="member">operator=</ref>(std::vector&lt;T&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>collection)<sp/>{this-&gt;<ref refid="class_m_t_vector_1a17f4b1c62fa8f37d67955085a2f31918" kindref="member">set</ref>(collection);}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="class_m_t_vector_1ada63ea1ffe18a57ba1ce0e87e45e497c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_t_vector_1ada63ea1ffe18a57ba1ce0e87e45e497c" kindref="member">push_back</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>t)<sp/>{<ref refid="class_m_t_vector_1a2c3ec2db54d57467063e4b9f3ef0d02f" kindref="member">m_collection</ref>.push_back(t);<sp/><ref refid="class_m_t_vector_1a42853e85d32b83e0ee6a8a822b5d532a" kindref="member">m_size</ref>++;;}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_m_t_vector_1a3bca517dd665e4ad48dceab41c6db9f7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_t_vector_1a3bca517dd665e4ad48dceab41c6db9f7" kindref="member">Print</ref>()<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_m_t_object_8hpp_1a225f8aadf270f4a69ad323e64b7eaa33" kindref="member">lock_mutex</ref><sp/>lock(<ref refid="class_m_t_vector_1a6352285479e71649dbd4ec8d32f08ca0" kindref="member">m_mutex</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(<ref refid="class_m_t_vector_1a2c3ec2db54d57467063e4b9f3ef0d02f" kindref="member">m_collection</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65" refid="class_m_t_vector_1a6352285479e71649dbd4ec8d32f08ca0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>std::mutex<sp/><ref refid="class_m_t_vector_1a6352285479e71649dbd4ec8d32f08ca0" kindref="member">m_mutex</ref>;</highlight></codeline>
<codeline lineno="66" refid="class_m_t_vector_1a2c3ec2db54d57467063e4b9f3ef0d02f" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;T&gt;<sp/><ref refid="class_m_t_vector_1a2c3ec2db54d57467063e4b9f3ef0d02f" kindref="member">m_collection</ref>;</highlight></codeline>
<codeline lineno="67" refid="class_m_t_vector_1a42853e85d32b83e0ee6a8a822b5d532a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_m_t_vector_1a42853e85d32b83e0ee6a8a822b5d532a" kindref="member">m_size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="68" refid="class_m_t_vector_1a61e0c6ca31740a065b6a9fea31b471db" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_m_t_vector_1a61e0c6ca31740a065b6a9fea31b471db" kindref="member">m_read_index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="_m_t_list_8hpp_1a5645cb48b623bfc2e6e274c70952a8e2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_m_t_vector" kindref="compound">MTList</ref><sp/>=<sp/><ref refid="class_m_t_vector" kindref="compound">MTVector&lt;std::string&gt;</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="74" refid="_m_t_list_8hpp_1a5ca09cd003ad326e7e70433ab01ea129" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="_m_t_list_8hpp_1a5ca09cd003ad326e7e70433ab01ea129" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>cout,<sp/><ref refid="class_m_t_vector" kindref="compound">MTVector&lt;T&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>list)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/>list.<ref refid="class_m_t_vector_1ae6e4c7bbe8c226d36b317340c447e914" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cout;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="81" refid="class_m_t_vector_1a824a9ff009dde921eec4759c69f74ca7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_t_vector_1a824a9ff009dde921eec4759c69f74ca7" kindref="member">MTVector&lt;T&gt;::getNext</ref>(T<sp/>&amp;<sp/>t)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="_m_t_object_8hpp_1a225f8aadf270f4a69ad323e64b7eaa33" kindref="member">lock_mutex</ref><sp/>lock(m_mutex);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_read_index&lt;m_size)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>m_collection[m_read_index];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_read_index;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="94" refid="class_m_t_vector_1aaae47be200e6af0a341a5f9407fe3a4d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_t_vector_1a824a9ff009dde921eec4759c69f74ca7" kindref="member">MTVector&lt;T&gt;::getNext</ref>(T<sp/>&amp;<sp/>t,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>&amp;<sp/>index)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="_m_t_object_8hpp_1a225f8aadf270f4a69ad323e64b7eaa33" kindref="member">lock_mutex</ref><sp/>lock(m_mutex);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_read_index&lt;m_size)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>m_collection[m_read_index];</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>++m_read_index;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//MTLIST_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="lib/MTObjects/MTList.hpp"/>
  </compounddef>
</doxygen>
