<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_paris_bidim_angles_8hpp" kind="file" language="C++">
    <compoundname>ParisBidimAngles.hpp</compoundname>
    <includedby refid="_paris_8hpp" local="yes">lib/Analyse/Paris.hpp</includedby>
    <invincdepgraph>
      <node id="1">
        <label>lib/Analyse/ParisBidimAngles.hpp</label>
        <link refid="_paris_bidim_angles_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>lib/Analyse/EventAnalyse.hpp</label>
        <link refid="_event_analyse_8hpp"/>
      </node>
      <node id="2">
        <label>lib/Analyse/Paris.hpp</label>
        <link refid="_paris_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_paris_bidim_angles_1_1_file_error" prot="public">ParisBidimAngles::FileError</innerclass>
    <innerclass refid="class_paris_bidim_angles" prot="public">ParisBidimAngles</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_paris_bidim_angles_8hpp_1acfc86248a9acc94731d9b97c23da3e56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, ParisBidimAngles &amp;angles)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="class_paris_bidim_angles" kindref="compound">ParisBidimAngles</ref> &amp;</type>
          <declname>angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/ParisBidimAngles.hpp" line="59" column="1" bodyfile="lib/Analyse/ParisBidimAngles.hpp" bodystart="59" bodyend="67"/>
        <references refid="class_paris_bidim_angles_1a72183315a0c50a92612964ed779a7419" compoundref="_paris_bidim_angles_8hpp" startline="17" endline="17">ParisBidimAngles::angleLaBr</references>
        <references refid="class_paris_bidim_angles_1a799125ee30452e7ba2d5f89b48c57da1" compoundref="_paris_bidim_angles_8hpp" startline="15" endline="15">ParisBidimAngles::angleNaI</references>
        <references refid="class_paris_bidim_angles_1ab8d9a5f52612a296bea2ada2ba64b385" compoundref="_paris_bidim_angles_8hpp" startline="22" endline="22">ParisBidimAngles::names</references>
        <references refid="class_paris_bidim_angles_1adc78f553d4c386a1ea6230965c11d68a" compoundref="_paris_bidim_angles_8hpp" startline="25" endline="25">ParisBidimAngles::sortNames</references>
      </memberdef>
      <memberdef kind="function" id="_paris_bidim_angles_8hpp_1a97bdc701c817182d1b3b70a0011f67f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, ParisBidimAngles const &amp;angles)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="class_paris_bidim_angles" kindref="compound">ParisBidimAngles</ref> const &amp;</type>
          <declname>angles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/ParisBidimAngles.hpp" line="69" column="1" bodyfile="lib/Analyse/ParisBidimAngles.hpp" bodystart="69" bodyend="75"/>
        <references refid="class_paris_bidim_angles_1a72183315a0c50a92612964ed779a7419" compoundref="_paris_bidim_angles_8hpp" startline="17" endline="17">ParisBidimAngles::angleLaBr</references>
        <references refid="class_paris_bidim_angles_1a799125ee30452e7ba2d5f89b48c57da1" compoundref="_paris_bidim_angles_8hpp" startline="15" endline="15">ParisBidimAngles::angleNaI</references>
        <references refid="class_paris_bidim_angles_1ab8d9a5f52612a296bea2ada2ba64b385" compoundref="_paris_bidim_angles_8hpp" startline="22" endline="22">ParisBidimAngles::names</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>PARISBIDIMANGLES_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PARISBIDIMANGLES_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="class_paris_bidim_angles" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_paris_bidim_angles" kindref="compound">ParisBidimAngles</ref></highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7" refid="class_paris_bidim_angles_1a1005f10d8eabebfd02d1dee6fafa9ebd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_paris_bidim_angles_1a1005f10d8eabebfd02d1dee6fafa9ebd" kindref="member">ParisBidimAngles</ref>()<sp/>noexcept<sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="8" refid="class_paris_bidim_angles_1a94f5dc80e2e164186840fdf9915e080e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_paris_bidim_angles" kindref="compound">ParisBidimAngles</ref>(std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>const<sp/>&amp;<sp/>filename)<sp/>:<sp/><ref refid="class_paris_bidim_angles_1a86e477b4aad725586be9bcdd64ef738f" kindref="member">m_filename</ref>(filename)<sp/>{<ref refid="class_paris_bidim_angles_1a904829a187c50059dda2d439ef0d6db1" kindref="member">load</ref>(filename);}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_paris_bidim_angles_1a904829a187c50059dda2d439ef0d6db1" kindref="member">load</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_paris_bidim_angles_1a0ca1c561f33bc79fc16b630ef4db9144" kindref="member">write</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="class_paris_bidim_angles_1a2fc512a76d77f8ecb97c3d46b07c088a" refkind="member"><highlight class="normal"><sp/><sp/>std::pair&lt;double,<sp/>double&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_paris_bidim_angles_1a2fc512a76d77f8ecb97c3d46b07c088a" kindref="member">operator[] </ref>(std::string<sp/>name)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_paris_bidim_angles_1ab6053684ae330a5e30a89618044a4e18" kindref="member">m_angles</ref>.at(name);}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="15" refid="class_paris_bidim_angles_1a799125ee30452e7ba2d5f89b48c57da1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_paris_bidim_angles_1a799125ee30452e7ba2d5f89b48c57da1" kindref="member">angleNaI</ref><sp/>(std::string<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_paris_bidim_angles_1aa58045051b25656e3ee374f0e930c6de" kindref="member">m_angleNaI</ref><sp/>.at(name);}</highlight></codeline>
<codeline lineno="16" refid="class_paris_bidim_angles_1a054559c88ccfa68ffc104ba8cf0c2fe6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_paris_bidim_angles_1a054559c88ccfa68ffc104ba8cf0c2fe6" kindref="member">angleNaI</ref><sp/>(std::string<sp/>name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_paris_bidim_angles_1aa58045051b25656e3ee374f0e930c6de" kindref="member">m_angleNaI</ref><sp/>.at(name);}</highlight></codeline>
<codeline lineno="17" refid="class_paris_bidim_angles_1a72183315a0c50a92612964ed779a7419" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_paris_bidim_angles_1a72183315a0c50a92612964ed779a7419" kindref="member">angleLaBr</ref>(std::string<sp/>name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_paris_bidim_angles_1aaf84ea92c8f0a178e039c173c71f0b1a" kindref="member">m_angleLaBr</ref>.at(name);}</highlight></codeline>
<codeline lineno="18" refid="class_paris_bidim_angles_1a737596223de54d2eabbb64a3d674e82f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_paris_bidim_angles_1a737596223de54d2eabbb64a3d674e82f" kindref="member">angleLaBr</ref>(std::string<sp/>name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_paris_bidim_angles_1aaf84ea92c8f0a178e039c173c71f0b1a" kindref="member">m_angleLaBr</ref>.at(name);}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_paris_bidim_angles_1afd9e6c297a0cc74001a6180f6b49d253" kindref="member">set</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_paris_bidim_angles_1a72183315a0c50a92612964ed779a7419" kindref="member">angleLaBr</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_paris_bidim_angles_1a799125ee30452e7ba2d5f89b48c57da1" kindref="member">angleNaI</ref>);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="class_paris_bidim_angles_1ab8d9a5f52612a296bea2ada2ba64b385" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_paris_bidim_angles_1ab8d9a5f52612a296bea2ada2ba64b385" kindref="member">names</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_paris_bidim_angles_1ad7e9840d2054070758edf03ce757cba0" kindref="member">m_names</ref>;}</highlight></codeline>
<codeline lineno="23" refid="class_paris_bidim_angles_1aa257a0e840f44672aa2bcbf23d103566" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_paris_bidim_angles_1aa257a0e840f44672aa2bcbf23d103566" kindref="member">names</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_paris_bidim_angles_1ad7e9840d2054070758edf03ce757cba0" kindref="member">m_names</ref>;}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_paris_bidim_angles_1adc78f553d4c386a1ea6230965c11d68a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_paris_bidim_angles_1adc78f553d4c386a1ea6230965c11d68a" kindref="member">sortNames</ref>()<sp/>{std::sort(<ref refid="class_paris_bidim_angles_1ad7e9840d2054070758edf03ce757cba0" kindref="member">m_names</ref>.begin(),<sp/><ref refid="class_paris_bidim_angles_1ad7e9840d2054070758edf03ce757cba0" kindref="member">m_names</ref>.end());}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_paris_bidim_angles_1a00fe25e6cdd8340cab38ba7f6fe2b1d7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_paris_bidim_angles_1a00fe25e6cdd8340cab38ba7f6fe2b1d7" kindref="member">printDeg</ref>()</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_paris_bidim_angles_1adc78f553d4c386a1ea6230965c11d68a" kindref="member">sortNames</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;name<sp/>angle_NaI<sp/>angle_LaBr3&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name<sp/>:<sp/><ref refid="class_paris_bidim_angles_1ad7e9840d2054070758edf03ce757cba0" kindref="member">m_names</ref>)<sp/>std::cout<sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="class_paris_bidim_angles_1a72183315a0c50a92612964ed779a7419" kindref="member">angleLaBr</ref>(name)/3.141596*180<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="class_paris_bidim_angles_1a799125ee30452e7ba2d5f89b48c57da1" kindref="member">angleNaI</ref>(name)/3.141596*180<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="class_paris_bidim_angles_1a7cc946220cdb4f0a42a8793cf6337f58" refkind="member"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;std::string,<sp/>double&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_paris_bidim_angles_1a7cc946220cdb4f0a42a8793cf6337f58" kindref="member">LaBr_angles</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_paris_bidim_angles_1aaf84ea92c8f0a178e039c173c71f0b1a" kindref="member">m_angleLaBr</ref>;}</highlight></codeline>
<codeline lineno="37" refid="class_paris_bidim_angles_1aa0d0e80c56a0e44766c856b3560a0ba0" refkind="member"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;std::string,<sp/>double&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_paris_bidim_angles_1aa0d0e80c56a0e44766c856b3560a0ba0" kindref="member">NaI_angles</ref><sp/>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_paris_bidim_angles_1aa58045051b25656e3ee374f0e930c6de" kindref="member">m_angleNaI</ref><sp/>;}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_paris_bidim_angles_1ab440b2ada4931a8f26eece54a1ec8a16" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_paris_bidim_angles_1ab440b2ada4931a8f26eece54a1ec8a16" kindref="member">m_ok</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42" refid="class_paris_bidim_angles_1a86e477b4aad725586be9bcdd64ef738f" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_paris_bidim_angles_1a86e477b4aad725586be9bcdd64ef738f" kindref="member">m_filename</ref>;</highlight></codeline>
<codeline lineno="43" refid="class_paris_bidim_angles_1a3c71992fbda09a6d859949cba76d0d87" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="class_paris_bidim_angles_1a3c71992fbda09a6d859949cba76d0d87" kindref="member">m_extension</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_paris_bidim_angles_1ad7e9840d2054070758edf03ce757cba0" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="class_paris_bidim_angles_1ad7e9840d2054070758edf03ce757cba0" kindref="member">m_names</ref>;</highlight></codeline>
<codeline lineno="46" refid="class_paris_bidim_angles_1aaf84ea92c8f0a178e039c173c71f0b1a" refkind="member"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;std::string,<sp/>double&gt;<sp/><ref refid="class_paris_bidim_angles_1aaf84ea92c8f0a178e039c173c71f0b1a" kindref="member">m_angleLaBr</ref>;</highlight></codeline>
<codeline lineno="47" refid="class_paris_bidim_angles_1aa58045051b25656e3ee374f0e930c6de" refkind="member"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;std::string,<sp/>double&gt;<sp/><ref refid="class_paris_bidim_angles_1aa58045051b25656e3ee374f0e930c6de" kindref="member">m_angleNaI</ref>;</highlight></codeline>
<codeline lineno="48" refid="class_paris_bidim_angles_1ab6053684ae330a5e30a89618044a4e18" refkind="member"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;std::string,<sp/>std::pair&lt;double,<sp/>double&gt;&gt;<sp/><ref refid="class_paris_bidim_angles_1ab6053684ae330a5e30a89618044a4e18" kindref="member">m_angles</ref>;<sp/></highlight><highlight class="comment">//<sp/>First<sp/>angle<sp/>is<sp/>LaBr3<sp/>and<sp/>second<sp/>angle<sp/>NaI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51" refid="class_paris_bidim_angles_1_1_file_error" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_paris_bidim_angles_1_1_file_error" kindref="compound">FileError</ref></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53" refid="class_paris_bidim_angles_1_1_file_error_1a262dced802827f156f0e120dcc91f016" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_paris_bidim_angles_1_1_file_error_1a262dced802827f156f0e120dcc91f016" kindref="member">FileError</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename)<sp/>{<ref refid="print_8hpp_1a553a9a331cc4556c2d9bb3aaa8533528" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>PARIS<sp/>file<sp/>found<sp/>at&quot;</highlight><highlight class="normal">,<sp/>filename);}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">std::string<sp/><ref refid="class_paris_bidim_angles_1a3c71992fbda09a6d859949cba76d0d87" kindref="member">ParisBidimAngles::m_extension</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;angles&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="_paris_bidim_angles_8hpp_1acfc86248a9acc94731d9b97c23da3e56" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="_paris_bidim_angles_8hpp_1acfc86248a9acc94731d9b97c23da3e56" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/><ref refid="class_paris_bidim_angles" kindref="compound">ParisBidimAngles</ref><sp/>&amp;<sp/>angles)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>angles.<ref refid="class_paris_bidim_angles_1adc78f553d4c386a1ea6230965c11d68a" kindref="member">sortNames</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;name<sp/>angle_NaI<sp/>angle_LaBr3&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name<sp/>:<sp/>angles.<ref refid="class_paris_bidim_angles_1ab8d9a5f52612a296bea2ada2ba64b385" kindref="member">names</ref>())<sp/>out<sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>angles.<ref refid="class_paris_bidim_angles_1a799125ee30452e7ba2d5f89b48c57da1" kindref="member">angleNaI</ref>(name)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>angles.<ref refid="class_paris_bidim_angles_1a72183315a0c50a92612964ed779a7419" kindref="member">angleLaBr</ref>(name)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="_paris_bidim_angles_8hpp_1a97bdc701c817182d1b3b70a0011f67f4" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="_paris_bidim_angles_8hpp_1acfc86248a9acc94731d9b97c23da3e56" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/><ref refid="class_paris_bidim_angles" kindref="compound">ParisBidimAngles</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>angles)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;name<sp/>angle_LaBr3<sp/>angle_NaI&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name<sp/>:<sp/>angles.<ref refid="class_paris_bidim_angles_1ab8d9a5f52612a296bea2ada2ba64b385" kindref="member">names</ref>())<sp/>out<sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>angles.<ref refid="class_paris_bidim_angles_1a799125ee30452e7ba2d5f89b48c57da1" kindref="member">angleNaI</ref>(name)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>angles.<ref refid="class_paris_bidim_angles_1a72183315a0c50a92612964ed779a7419" kindref="member">angleLaBr</ref>(name)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="class_paris_bidim_angles_1a0ca1c561f33bc79fc16b630ef4db9144" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_paris_bidim_angles_1a0ca1c561f33bc79fc16b630ef4db9144" kindref="member">ParisBidimAngles::write</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="class_file" kindref="compound">File</ref><sp/>outFile(filename);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>outFile.<ref refid="class_file_1af4dee1c79bf496d505633211177c6ce3" kindref="member">setExtension</ref>(<ref refid="class_paris_bidim_angles_1a3c71992fbda09a6d859949cba76d0d87" kindref="member">m_extension</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outFile.<ref refid="class_file_1a53118ce36851cb1c6845a82f915fd8ba" kindref="member">exists</ref>())<sp/>{<ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Overwritting<sp/>the<sp/>file&quot;</highlight><highlight class="normal">,<sp/>filename,<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>press<sp/>the<sp/>button<sp/>to<sp/>proceed&quot;</highlight><highlight class="normal">);<sp/>std::cin.get();}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>(outFile.<ref refid="class_file_1aec78af028103207cb2ce88c0120dd4f6" kindref="member">makePath</ref>());<sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>path<sp/>if<sp/>it<sp/>doesn&apos;t<sp/>already<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>std::ofstream<sp/>outfile(outFile.<ref refid="class_file_1a899e6a7c528ab2824c7c584c4ee63073" kindref="member">string</ref>(),<sp/>std::ios::out);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>outfile<sp/>&lt;&lt;<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>outfile.close();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(outFile.<ref refid="class_file_1a899e6a7c528ab2824c7c584c4ee63073" kindref="member">string</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;written&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="class_paris_bidim_angles_1afd9e6c297a0cc74001a6180f6b49d253" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_paris_bidim_angles_1afd9e6c297a0cc74001a6180f6b49d253" kindref="member">ParisBidimAngles::set</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>angleNaI,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>angleLaBr)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="class_paris_bidim_angles_1ad7e9840d2054070758edf03ce757cba0" kindref="member">m_names</ref>.push_back(name);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="class_paris_bidim_angles_1aa58045051b25656e3ee374f0e930c6de" kindref="member">m_angleNaI</ref><sp/>.emplace(name,<sp/><ref refid="class_paris_bidim_angles_1a799125ee30452e7ba2d5f89b48c57da1" kindref="member">angleNaI</ref><sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="class_paris_bidim_angles_1aaf84ea92c8f0a178e039c173c71f0b1a" kindref="member">m_angleLaBr</ref>.emplace(name,<sp/><ref refid="class_paris_bidim_angles_1a72183315a0c50a92612964ed779a7419" kindref="member">angleLaBr</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="class_paris_bidim_angles_1ab6053684ae330a5e30a89618044a4e18" kindref="member">m_angles</ref><sp/><sp/><sp/>.emplace(name,<sp/>std::pair&lt;double,<sp/>double&gt;(<ref refid="class_paris_bidim_angles_1a799125ee30452e7ba2d5f89b48c57da1" kindref="member">angleNaI</ref>,<sp/><ref refid="class_paris_bidim_angles_1a72183315a0c50a92612964ed779a7419" kindref="member">angleLaBr</ref>));</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_paris_bidim_angles_1a904829a187c50059dda2d439ef0d6db1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_paris_bidim_angles_1a904829a187c50059dda2d439ef0d6db1" kindref="member">ParisBidimAngles::load</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_filename)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="class_file" kindref="compound">File</ref><sp/>file(_filename);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>file.<ref refid="class_file_1af4dee1c79bf496d505633211177c6ce3" kindref="member">setExtension</ref>(<ref refid="class_paris_bidim_angles_1a3c71992fbda09a6d859949cba76d0d87" kindref="member">m_extension</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file.<ref refid="class_file_1a53118ce36851cb1c6845a82f915fd8ba" kindref="member">exists</ref>())<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_paris_bidim_angles_1_1_file_error" kindref="compound">FileError</ref>(file.<ref refid="class_file_1a899e6a7c528ab2824c7c584c4ee63073" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename<sp/>=<sp/>file.<ref refid="class_file_1a899e6a7c528ab2824c7c584c4ee63073" kindref="member">string</ref>();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>std::ifstream<sp/>inputfile(filename,<sp/>std::ios::in);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inputfile.good())<sp/>{<ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;CAN&apos;T<sp/>OPEN<sp/>THE<sp/>PARIS<sp/>ANGLES<sp/>FILE<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>filename);<sp/><ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(</highlight><highlight class="stringliteral">&quot;PARIS<sp/>ANGLES&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="files__functions_8hpp_1afd584978228fac5fae283c12837378dd" kindref="member">file_is_empty</ref>(inputfile))<sp/>{<ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;PARIS<sp/>ANGLES<sp/>FILE&quot;</highlight><highlight class="normal">,<sp/>filename,<sp/></highlight><highlight class="stringliteral">&quot;EMPTY<sp/>!&quot;</highlight><highlight class="normal">);<sp/><ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(</highlight><highlight class="stringliteral">&quot;PARIS<sp/>ANGLES&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>std::string<sp/>line;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>getline(inputfile,<sp/>line);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_paris_bidim_angles_1a72183315a0c50a92612964ed779a7419" kindref="member">angleLaBr</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_paris_bidim_angles_1a799125ee30452e7ba2d5f89b48c57da1" kindref="member">angleNaI</ref><sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(getline(inputfile,<sp/>line))</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istringstream<sp/>iss<sp/>(line);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>iss<sp/>&gt;&gt;<sp/>name<sp/>&gt;&gt;<sp/><ref refid="class_paris_bidim_angles_1a799125ee30452e7ba2d5f89b48c57da1" kindref="member">angleNaI</ref><sp/>&gt;&gt;<sp/><ref refid="class_paris_bidim_angles_1a72183315a0c50a92612964ed779a7419" kindref="member">angleLaBr</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_paris_bidim_angles_1afd9e6c297a0cc74001a6180f6b49d253" kindref="member">set</ref>(name,<sp/><ref refid="class_paris_bidim_angles_1a799125ee30452e7ba2d5f89b48c57da1" kindref="member">angleNaI</ref>,<sp/><ref refid="class_paris_bidim_angles_1a72183315a0c50a92612964ed779a7419" kindref="member">angleLaBr</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_paris_bidim_angles_1a72183315a0c50a92612964ed779a7419" kindref="member">angleLaBr</ref><sp/>=<sp/><ref refid="class_paris_bidim_angles_1a799125ee30452e7ba2d5f89b48c57da1" kindref="member">angleNaI</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//PARISBIDIMANGLES_HPP</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="lib/Analyse/ParisBidimAngles.hpp"/>
  </compounddef>
</doxygen>
