<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_vertice" kind="class" language="C++" prot="public">
    <compoundname>Vertice</compoundname>
    <includes refid="_spectra_alignator_8hpp" local="no">SpectraAlignator.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Vertice::m_coordinates</definition>
        <argsstring></argsstring>
        <name>m_coordinates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="197" column="15" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="197" bodyend="-1"/>
        <referencedby refid="class_vertice_1a0b6f58d8c0efedbb726e408c4e6527de" compoundref="_spectra_alignator_8hpp" startline="130" endline="130">begin</referencedby>
        <referencedby refid="class_vertice_1a2b540156c45d4c5c519cb9035c7a3648" compoundref="_spectra_alignator_8hpp" startline="100" endline="105">cleanMove</referencedby>
        <referencedby refid="class_vertice_1ae4155cad8d004c954916882157c9375f" compoundref="_spectra_alignator_8hpp" startline="56" endline="62">copy</referencedby>
        <referencedby refid="class_vertice_1a1215380e747b2cf93f861407a5bf9c3d" compoundref="_spectra_alignator_8hpp" startline="131" endline="131">end</referencedby>
        <referencedby refid="class_vertice_1a1c3b20dfc14068262251ce9930dfa88f" compoundref="_spectra_alignator_8hpp" startline="113" endline="113">fill</referencedby>
        <referencedby refid="class_vertice_1a11e12aac4668a10a6b1706db7e5ebbcd" compoundref="_spectra_alignator_8hpp" startline="121" endline="121">get</referencedby>
        <referencedby refid="class_vertice_1a082dc91912838405b4c98eec453cd7fe" compoundref="_spectra_alignator_8hpp" startline="174" endline="178">operator*=</referencedby>
        <referencedby refid="class_vertice_1ae6bf8b5aab5ad865f4fdd9a9b91f7e92" compoundref="_spectra_alignator_8hpp" startline="137" endline="143">operator+</referencedby>
        <referencedby refid="class_vertice_1aba263387b931496c5937f8645ded93ae" compoundref="_spectra_alignator_8hpp" startline="145" endline="154">operator-</referencedby>
        <referencedby refid="class_vertice_1a20a711ace767a031ec41eb3a0dd75ed1" compoundref="_spectra_alignator_8hpp" startline="51" endline="51">operator[]</referencedby>
        <referencedby refid="class_vertice_1a1884b3dc38c78b7526fe7e75d1bb4604" compoundref="_spectra_alignator_8hpp" startline="114" endline="114">resize</referencedby>
        <referencedby refid="class_vertice_1aad52a08bb2c5b6f92119d42956051924" compoundref="_spectra_alignator_8hpp" startline="80" endline="85">set</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" prot="private" static="no" mutable="no">
        <type><ref refid="lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
        <definition>size_t Vertice::m_dim</definition>
        <argsstring></argsstring>
        <name>m_dim</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="196" column="10" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="196" bodyend="-1"/>
        <referencedby refid="class_vertice_1a2b540156c45d4c5c519cb9035c7a3648" compoundref="_spectra_alignator_8hpp" startline="100" endline="105">cleanMove</referencedby>
        <referencedby refid="class_vertice_1ae4155cad8d004c954916882157c9375f" compoundref="_spectra_alignator_8hpp" startline="56" endline="62">copy</referencedby>
        <referencedby refid="class_vertice_1ae6bf8b5aab5ad865f4fdd9a9b91f7e92" compoundref="_spectra_alignator_8hpp" startline="137" endline="143">operator+</referencedby>
        <referencedby refid="class_vertice_1aba263387b931496c5937f8645ded93ae" compoundref="_spectra_alignator_8hpp" startline="145" endline="154">operator-</referencedby>
        <referencedby refid="class_vertice_1a1884b3dc38c78b7526fe7e75d1bb4604" compoundref="_spectra_alignator_8hpp" startline="114" endline="114">resize</referencedby>
        <referencedby refid="class_vertice_1aad52a08bb2c5b6f92119d42956051924" compoundref="_spectra_alignator_8hpp" startline="80" endline="85">set</referencedby>
        <referencedby refid="class_vertice_1a93b6febeec367c7c2211eb1e34dcfce4" compoundref="_spectra_alignator_8hpp" startline="127" endline="127">size</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_vertice_1a5ef7f30be58758901c1e35e0bfe4d681" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Vertice::m_value</definition>
        <argsstring></argsstring>
        <name>m_value</name>
        <initializer>= NAN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="198" column="10" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="198" bodyend="-1"/>
        <referencedby refid="class_vertice_1a2b540156c45d4c5c519cb9035c7a3648" compoundref="_spectra_alignator_8hpp" startline="100" endline="105">cleanMove</referencedby>
        <referencedby refid="class_vertice_1ae4155cad8d004c954916882157c9375f" compoundref="_spectra_alignator_8hpp" startline="56" endline="62">copy</referencedby>
        <referencedby refid="class_vertice_1a6a4e7b2f8b617f2153b2fc0f0742a09e" compoundref="_spectra_alignator_8hpp" startline="184" endline="188">evaluate</referencedby>
        <referencedby refid="class_vertice_1a5f23c4ece665d5a55b5c3b67fc45ffb3" compoundref="_spectra_alignator_8hpp" startline="181" endline="181">getValue</referencedby>
        <referencedby refid="class_vertice_1afe53f60865f26d7945c338eb3f2422ac" compoundref="_spectra_alignator_8hpp" startline="190" endline="190">operator&lt;</referencedby>
        <referencedby refid="class_vertice_1a540a77aff2f79ae4cd5bb932311118fd" compoundref="_spectra_alignator_8hpp" startline="192" endline="192">operator&lt;=</referencedby>
        <referencedby refid="class_vertice_1ab7e40502eaba03b6b1576cbf39c358f0" compoundref="_spectra_alignator_8hpp" startline="191" endline="191">operator&gt;</referencedby>
        <referencedby refid="class_vertice_1ad563d154d6ffe9f7a75323bc0d706fe4" compoundref="_spectra_alignator_8hpp" startline="193" endline="193">operator&gt;=</referencedby>
        <referencedby refid="class_vertice_1aad52a08bb2c5b6f92119d42956051924" compoundref="_spectra_alignator_8hpp" startline="80" endline="85">set</referencedby>
        <referencedby refid="class_vertice_1a0ab115f978a0d9c454b957d5cc531c57" compoundref="_spectra_alignator_8hpp" startline="180" endline="180">setValue</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_vertice_1a0b6f58d8c0efedbb726e408c4e6527de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Vertice::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="130" column="8" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="130" bodyend="130"/>
        <references refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" compoundref="_spectra_alignator_8hpp" startline="197">m_coordinates</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1aad7a051c244a4565277290b7c4cb3382" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Vertice::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="133" column="8" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="133" bodyend="133"/>
        <references refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" compoundref="_spectra_alignator_8hpp" startline="197">m_coordinates</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a2b540156c45d4c5c519cb9035c7a3648" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Vertice::cleanMove</definition>
        <argsstring>(Vertice &amp;_vertice)</argsstring>
        <name>cleanMove</name>
        <param>
          <type><ref refid="class_vertice" kindref="compound">Vertice</ref> &amp;</type>
          <declname>_vertice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="100" column="8" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="100" bodyend="105"/>
        <references refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" compoundref="_spectra_alignator_8hpp" startline="197">m_coordinates</references>
        <references refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" compoundref="_spectra_alignator_8hpp" startline="196">m_dim</references>
        <references refid="class_vertice_1a5ef7f30be58758901c1e35e0bfe4d681" compoundref="_spectra_alignator_8hpp" startline="198">m_value</references>
        <referencedby refid="class_vertice_1a8b64784c593d9d75f9052a7a9d2fee02" compoundref="_spectra_alignator_8hpp" startline="63" endline="70">copy</referencedby>
        <referencedby refid="class_vertice_1a59ec9893ab3e7bbadfbd2e54ea283e8e" compoundref="_spectra_alignator_8hpp" startline="86" endline="92">set</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1ae9c9917341984b56f264c4478b9d8791" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Vertice::copy</definition>
        <argsstring>(std::vector&lt; double &gt; const &amp;point)</argsstring>
        <name>copy</name>
        <param>
          <type>std::vector&lt; double &gt; const &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="71" column="8" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="71" bodyend="76"/>
        <references refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" compoundref="_spectra_alignator_8hpp" startline="197">m_coordinates</references>
        <references refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" compoundref="_spectra_alignator_8hpp" startline="196">m_dim</references>
        <references refid="class_vertice_1a5ef7f30be58758901c1e35e0bfe4d681" compoundref="_spectra_alignator_8hpp" startline="198">m_value</references>
        <references refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" compoundref="lib_co_8hpp" startline="156" endline="156">throw_error</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a8b64784c593d9d75f9052a7a9d2fee02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Vertice::copy</definition>
        <argsstring>(Vertice &amp;&amp;other)</argsstring>
        <name>copy</name>
        <param>
          <type><ref refid="class_vertice" kindref="compound">Vertice</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="63" column="8" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="63" bodyend="70"/>
        <references refid="class_vertice_1a2b540156c45d4c5c519cb9035c7a3648" compoundref="_spectra_alignator_8hpp" startline="100" endline="105">cleanMove</references>
        <references refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" compoundref="_spectra_alignator_8hpp" startline="197">m_coordinates</references>
        <references refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" compoundref="_spectra_alignator_8hpp" startline="196">m_dim</references>
        <references refid="class_vertice_1a5ef7f30be58758901c1e35e0bfe4d681" compoundref="_spectra_alignator_8hpp" startline="198">m_value</references>
        <references refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" compoundref="lib_co_8hpp" startline="156" endline="156">throw_error</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1ae4155cad8d004c954916882157c9375f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Vertice::copy</definition>
        <argsstring>(Vertice const &amp;other)</argsstring>
        <name>copy</name>
        <param>
          <type><ref refid="class_vertice" kindref="compound">Vertice</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="56" column="8" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="56" bodyend="62"/>
        <references refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" compoundref="_spectra_alignator_8hpp" startline="197">m_coordinates</references>
        <references refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" compoundref="_spectra_alignator_8hpp" startline="196">m_dim</references>
        <references refid="class_vertice_1a5ef7f30be58758901c1e35e0bfe4d681" compoundref="_spectra_alignator_8hpp" startline="198">m_value</references>
        <references refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" compoundref="lib_co_8hpp" startline="156" endline="156">throw_error</references>
        <referencedby refid="class_minimisator_1a3c467eeb96f716414dbfb6f2348c6340" compoundref="_spectra_alignator_8hpp" startline="460" endline="631">Minimisator::nelderMead</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a1215380e747b2cf93f861407a5bf9c3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Vertice::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="131" column="8" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="131" bodyend="131"/>
        <references refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" compoundref="_spectra_alignator_8hpp" startline="197">m_coordinates</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a5f64695b3dcd9bca4f2fb6e0ed83348c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Vertice::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="134" column="8" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="134" bodyend="134"/>
        <references refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" compoundref="_spectra_alignator_8hpp" startline="197">m_coordinates</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a6a4e7b2f8b617f2153b2fc0f0742a09e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; Vertice::evaluate</definition>
        <argsstring>(std::function&lt; double(const Vertice &amp;)&gt; objective_function)</argsstring>
        <name>evaluate</name>
        <param>
          <type>std::function&lt; double(const <ref refid="class_vertice" kindref="compound">Vertice</ref> &amp;)&gt;</type>
          <declname>objective_function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="184" column="15" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="184" bodyend="188"/>
        <references refid="class_vertice_1a5ef7f30be58758901c1e35e0bfe4d681" compoundref="_spectra_alignator_8hpp" startline="198">m_value</references>
        <referencedby refid="class_minimisator_1a3c467eeb96f716414dbfb6f2348c6340" compoundref="_spectra_alignator_8hpp" startline="460" endline="631">Minimisator::nelderMead</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a1c3b20dfc14068262251ce9930dfa88f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Vertice::fill</definition>
        <argsstring>(double const &amp;value)</argsstring>
        <name>fill</name>
        <param>
          <type>double const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="113" column="8" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="113" bodyend="113"/>
        <references refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" compoundref="_spectra_alignator_8hpp" startline="197">m_coordinates</references>
        <referencedby refid="class_vertice_1a9ab0c67e95e2ebd4ccd3d648d22c78eb" compoundref="_spectra_alignator_8hpp" startline="115" endline="119">resize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a7ae35dd4e65c993d7faa019d8b966086" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; Vertice::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="122" column="9" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="122" bodyend="122"/>
        <references refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" compoundref="_spectra_alignator_8hpp" startline="197">m_coordinates</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a11e12aac4668a10a6b1706db7e5ebbcd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; Vertice::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="121" column="15" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="121" bodyend="121"/>
        <references refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" compoundref="_spectra_alignator_8hpp" startline="197">m_coordinates</references>
        <referencedby refid="_spectra_alignator_8hpp_1a658a331239a2db3139f2a2163a4c182f" compoundref="_spectra_alignator_8hpp" startline="208" endline="213">operator*</referencedby>
        <referencedby refid="class_vertice_1af7bdce52a3f6189f94f05a80127f949d" compoundref="_spectra_alignator_8hpp" startline="157" endline="165">operator*</referencedby>
        <referencedby refid="_spectra_alignator_8hpp_1a00041d0900b9f4e90f24fc9f5f61208f" compoundref="_spectra_alignator_8hpp" startline="201" endline="206">operator&lt;&lt;</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1af3563e71bc70c76de76010a381fd3afb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; Vertice::get</definition>
        <argsstring>(int const &amp;coordinate_i)</argsstring>
        <name>get</name>
        <param>
          <type>int const &amp;</type>
          <declname>coordinate_i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="125" column="9" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="125" bodyend="125"/>
        <references refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" compoundref="_spectra_alignator_8hpp" startline="197">m_coordinates</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a6c5691267912f8f2cc04aa708e6a8f2b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; Vertice::get</definition>
        <argsstring>(int const &amp;coordinate_i) const</argsstring>
        <name>get</name>
        <param>
          <type>int const &amp;</type>
          <declname>coordinate_i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="124" column="15" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="124" bodyend="124"/>
        <references refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" compoundref="_spectra_alignator_8hpp" startline="197">m_coordinates</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a54771ef13c85f80a0603765273e2c8dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Vertice::getValue</definition>
        <argsstring>()</argsstring>
        <name>getValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="182" column="16" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="182" bodyend="182"/>
        <references refid="class_vertice_1a5ef7f30be58758901c1e35e0bfe4d681" compoundref="_spectra_alignator_8hpp" startline="198">m_value</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a5f23c4ece665d5a55b5c3b67fc45ffb3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; Vertice::getValue</definition>
        <argsstring>() const</argsstring>
        <name>getValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="181" column="15" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="181" bodyend="181"/>
        <references refid="class_vertice_1a5ef7f30be58758901c1e35e0bfe4d681" compoundref="_spectra_alignator_8hpp" startline="198">m_value</references>
        <referencedby refid="_spectra_alignator_8hpp_1a00041d0900b9f4e90f24fc9f5f61208f" compoundref="_spectra_alignator_8hpp" startline="201" endline="206">operator&lt;&lt;</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a82b943e02b26f4e9d713aceb17ccab61" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_vertice" kindref="compound">Vertice</ref></type>
        <definition>Vertice Vertice::operator*</definition>
        <argsstring>(double const &amp;constant) const</argsstring>
        <name>operator*</name>
        <param>
          <type>double const &amp;</type>
          <declname>constant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="167" column="11" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="167" bodyend="172"/>
        <references refid="class_vertice_1a11e12aac4668a10a6b1706db7e5ebbcd" compoundref="_spectra_alignator_8hpp" startline="121" endline="121">get</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1af7bdce52a3f6189f94f05a80127f949d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_vertice" kindref="compound">Vertice</ref></type>
        <definition>Vertice Vertice::operator*</definition>
        <argsstring>(Vertice const &amp;other) const</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="class_vertice" kindref="compound">Vertice</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="157" column="11" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="157" bodyend="165"/>
        <references refid="class_vertice_1a11e12aac4668a10a6b1706db7e5ebbcd" compoundref="_spectra_alignator_8hpp" startline="121" endline="121">get</references>
        <references refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" compoundref="lib_co_8hpp" startline="156" endline="156">throw_error</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a082dc91912838405b4c98eec453cd7fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_vertice" kindref="compound">Vertice</ref> &amp;</type>
        <definition>Vertice&amp; Vertice::operator*=</definition>
        <argsstring>(double const &amp;constant)</argsstring>
        <name>operator*=</name>
        <param>
          <type>double const &amp;</type>
          <declname>constant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="174" column="11" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="174" bodyend="178"/>
        <references refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" compoundref="_spectra_alignator_8hpp" startline="197">m_coordinates</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1ae6bf8b5aab5ad865f4fdd9a9b91f7e92" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_vertice" kindref="compound">Vertice</ref></type>
        <definition>Vertice Vertice::operator+</definition>
        <argsstring>(Vertice const &amp;other) const</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="class_vertice" kindref="compound">Vertice</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="137" column="11" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="137" bodyend="143"/>
        <references refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" compoundref="_spectra_alignator_8hpp" startline="197">m_coordinates</references>
        <references refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" compoundref="_spectra_alignator_8hpp" startline="196">m_dim</references>
        <references refid="class_vertice_1a93b6febeec367c7c2211eb1e34dcfce4" compoundref="_spectra_alignator_8hpp" startline="127" endline="127">size</references>
        <references refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" compoundref="lib_co_8hpp" startline="156" endline="156">throw_error</references>
        <references refid="class_vertice_1a4beafe087884524a9728617bff98029f">Vertice</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1aba263387b931496c5937f8645ded93ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_vertice" kindref="compound">Vertice</ref></type>
        <definition>Vertice Vertice::operator-</definition>
        <argsstring>(Vertice const &amp;other) const</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="class_vertice" kindref="compound">Vertice</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="145" column="11" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="145" bodyend="154"/>
        <references refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" compoundref="_spectra_alignator_8hpp" startline="197">m_coordinates</references>
        <references refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" compoundref="_spectra_alignator_8hpp" startline="196">m_dim</references>
        <references refid="class_vertice_1a93b6febeec367c7c2211eb1e34dcfce4" compoundref="_spectra_alignator_8hpp" startline="127" endline="127">size</references>
        <references refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" compoundref="lib_co_8hpp" startline="156" endline="156">throw_error</references>
        <references refid="class_vertice_1a4beafe087884524a9728617bff98029f">Vertice</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1afe53f60865f26d7945c338eb3f2422ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Vertice::operator&lt;</definition>
        <argsstring>(Vertice const &amp;other) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="class_vertice" kindref="compound">Vertice</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="190" column="3" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="190" bodyend="190"/>
        <references refid="class_vertice_1a5ef7f30be58758901c1e35e0bfe4d681" compoundref="_spectra_alignator_8hpp" startline="198">m_value</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a540a77aff2f79ae4cd5bb932311118fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Vertice::operator&lt;=</definition>
        <argsstring>(Vertice const &amp;other) const</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type><ref refid="class_vertice" kindref="compound">Vertice</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="192" column="3" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="192" bodyend="192"/>
        <references refid="class_vertice_1a5ef7f30be58758901c1e35e0bfe4d681" compoundref="_spectra_alignator_8hpp" startline="198">m_value</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a651eb7cb39f966a5ff2d6d24c3e1e785" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_vertice" kindref="compound">Vertice</ref> &amp;</type>
        <definition>Vertice&amp; Vertice::operator=</definition>
        <argsstring>(std::vector&lt; double &gt; const &amp;point)</argsstring>
        <name>operator=</name>
        <param>
          <type>std::vector&lt; double &gt; const &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="107" column="11" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="107" bodyend="107"/>
        <references refid="class_vertice_1aad52a08bb2c5b6f92119d42956051924" compoundref="_spectra_alignator_8hpp" startline="80" endline="85">set</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a45871718e86053a0a03565bbe672f7a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_vertice" kindref="compound">Vertice</ref> &amp;</type>
        <definition>Vertice&amp; Vertice::operator=</definition>
        <argsstring>(Vertice &amp;&amp;vertice)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_vertice" kindref="compound">Vertice</ref> &amp;&amp;</type>
          <declname>vertice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="109" column="11" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="109" bodyend="109"/>
        <references refid="class_vertice_1aad52a08bb2c5b6f92119d42956051924" compoundref="_spectra_alignator_8hpp" startline="80" endline="85">set</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1ab16b5e8facd201c70bdab71384adc6df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_vertice" kindref="compound">Vertice</ref> &amp;</type>
        <definition>Vertice&amp; Vertice::operator=</definition>
        <argsstring>(Vertice const &amp;vertice)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_vertice" kindref="compound">Vertice</ref> const &amp;</type>
          <declname>vertice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="108" column="11" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="108" bodyend="108"/>
        <references refid="class_vertice_1aad52a08bb2c5b6f92119d42956051924" compoundref="_spectra_alignator_8hpp" startline="80" endline="85">set</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1ab7e40502eaba03b6b1576cbf39c358f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Vertice::operator&gt;</definition>
        <argsstring>(Vertice const &amp;other) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type><ref refid="class_vertice" kindref="compound">Vertice</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="191" column="8" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="191" bodyend="191"/>
        <references refid="class_vertice_1a5ef7f30be58758901c1e35e0bfe4d681" compoundref="_spectra_alignator_8hpp" startline="198">m_value</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1ad563d154d6ffe9f7a75323bc0d706fe4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Vertice::operator&gt;=</definition>
        <argsstring>(Vertice const &amp;other) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type><ref refid="class_vertice" kindref="compound">Vertice</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="193" column="8" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="193" bodyend="193"/>
        <references refid="class_vertice_1a5ef7f30be58758901c1e35e0bfe4d681" compoundref="_spectra_alignator_8hpp" startline="198">m_value</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a20a711ace767a031ec41eb3a0dd75ed1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; Vertice::operator[]</definition>
        <argsstring>(int const &amp;i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int const &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="51" column="9" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="51" bodyend="51"/>
        <references refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" compoundref="_spectra_alignator_8hpp" startline="197">m_coordinates</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1ad7e931f0342f3c2a87d0d8e46936416d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; Vertice::operator[]</definition>
        <argsstring>(int const &amp;i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>int const &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="52" column="15" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="52" bodyend="52"/>
        <references refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" compoundref="_spectra_alignator_8hpp" startline="197">m_coordinates</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a1884b3dc38c78b7526fe7e75d1bb4604" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Vertice::resize</definition>
        <argsstring>(size_t const &amp;size)</argsstring>
        <name>resize</name>
        <param>
          <type><ref refid="lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref> const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="114" column="8" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="114" bodyend="114"/>
        <references refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" compoundref="_spectra_alignator_8hpp" startline="197">m_coordinates</references>
        <references refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" compoundref="_spectra_alignator_8hpp" startline="196">m_dim</references>
        <references refid="class_vertice_1a93b6febeec367c7c2211eb1e34dcfce4" compoundref="_spectra_alignator_8hpp" startline="127" endline="127">size</references>
        <referencedby refid="class_vertice_1a9ab0c67e95e2ebd4ccd3d648d22c78eb" compoundref="_spectra_alignator_8hpp" startline="115" endline="119">resize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a9ab0c67e95e2ebd4ccd3d648d22c78eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Vertice::resize</definition>
        <argsstring>(size_t const &amp;size, double const &amp;value)</argsstring>
        <name>resize</name>
        <param>
          <type><ref refid="lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref> const &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>double const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="115" column="8" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="115" bodyend="119"/>
        <references refid="class_vertice_1a1c3b20dfc14068262251ce9930dfa88f" compoundref="_spectra_alignator_8hpp" startline="113" endline="113">fill</references>
        <references refid="class_vertice_1a1884b3dc38c78b7526fe7e75d1bb4604" compoundref="_spectra_alignator_8hpp" startline="114" endline="114">resize</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a3554246d64dc33a7719b5cd2d112e67b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Vertice::set</definition>
        <argsstring>(int const &amp;coordinate_i, double const &amp;coordinate)</argsstring>
        <name>set</name>
        <param>
          <type>int const &amp;</type>
          <declname>coordinate_i</declname>
        </param>
        <param>
          <type>double const &amp;</type>
          <declname>coordinate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="111" column="8" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="111" bodyend="111"/>
        <references refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" compoundref="_spectra_alignator_8hpp" startline="197">m_coordinates</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1ab5519307ad24edb7b482ce63f41d3b63" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Vertice::set</definition>
        <argsstring>(std::vector&lt; double &gt; const &amp;point)</argsstring>
        <name>set</name>
        <param>
          <type>std::vector&lt; double &gt; const &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="93" column="8" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="93" bodyend="98"/>
        <references refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" compoundref="_spectra_alignator_8hpp" startline="197">m_coordinates</references>
        <references refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" compoundref="_spectra_alignator_8hpp" startline="196">m_dim</references>
        <references refid="class_vertice_1a5ef7f30be58758901c1e35e0bfe4d681" compoundref="_spectra_alignator_8hpp" startline="198">m_value</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a59ec9893ab3e7bbadfbd2e54ea283e8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Vertice::set</definition>
        <argsstring>(Vertice &amp;&amp;other)</argsstring>
        <name>set</name>
        <param>
          <type><ref refid="class_vertice" kindref="compound">Vertice</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="86" column="8" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="86" bodyend="92"/>
        <references refid="class_vertice_1a2b540156c45d4c5c519cb9035c7a3648" compoundref="_spectra_alignator_8hpp" startline="100" endline="105">cleanMove</references>
        <references refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" compoundref="_spectra_alignator_8hpp" startline="197">m_coordinates</references>
        <references refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" compoundref="_spectra_alignator_8hpp" startline="196">m_dim</references>
        <references refid="class_vertice_1a5ef7f30be58758901c1e35e0bfe4d681" compoundref="_spectra_alignator_8hpp" startline="198">m_value</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1aad52a08bb2c5b6f92119d42956051924" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Vertice::set</definition>
        <argsstring>(Vertice const &amp;other)</argsstring>
        <name>set</name>
        <param>
          <type><ref refid="class_vertice" kindref="compound">Vertice</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="80" column="8" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="80" bodyend="85"/>
        <references refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" compoundref="_spectra_alignator_8hpp" startline="197">m_coordinates</references>
        <references refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" compoundref="_spectra_alignator_8hpp" startline="196">m_dim</references>
        <references refid="class_vertice_1a5ef7f30be58758901c1e35e0bfe4d681" compoundref="_spectra_alignator_8hpp" startline="198">m_value</references>
        <referencedby refid="class_minimisator_1a3c467eeb96f716414dbfb6f2348c6340" compoundref="_spectra_alignator_8hpp" startline="460" endline="631">Minimisator::nelderMead</referencedby>
        <referencedby refid="class_vertice_1a651eb7cb39f966a5ff2d6d24c3e1e785" compoundref="_spectra_alignator_8hpp" startline="107" endline="107">operator=</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a0ab115f978a0d9c454b957d5cc531c57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Vertice::setValue</definition>
        <argsstring>(double const &amp;_value)</argsstring>
        <name>setValue</name>
        <param>
          <type>double const &amp;</type>
          <declname>_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="180" column="8" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="180" bodyend="180"/>
        <references refid="class_vertice_1a5ef7f30be58758901c1e35e0bfe4d681" compoundref="_spectra_alignator_8hpp" startline="198">m_value</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a93b6febeec367c7c2211eb1e34dcfce4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; Vertice::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="127" column="9" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="127" bodyend="127"/>
        <references refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" compoundref="_spectra_alignator_8hpp" startline="196">m_dim</references>
        <referencedby refid="class_simplex_1a4212e98efa0b1468955d32a51387f3fc" compoundref="_spectra_alignator_8hpp" startline="299" endline="318">Simplex::centroid</referencedby>
        <referencedby refid="class_vertice_1ae6bf8b5aab5ad865f4fdd9a9b91f7e92" compoundref="_spectra_alignator_8hpp" startline="137" endline="143">operator+</referencedby>
        <referencedby refid="class_vertice_1aba263387b931496c5937f8645ded93ae" compoundref="_spectra_alignator_8hpp" startline="145" endline="154">operator-</referencedby>
        <referencedby refid="class_vertice_1a1884b3dc38c78b7526fe7e75d1bb4604" compoundref="_spectra_alignator_8hpp" startline="114" endline="114">resize</referencedby>
        <referencedby refid="class_minimisator_1a3583b6db1e38e9d0342c8e417d7c67e6" compoundref="_spectra_alignator_8hpp" startline="634" endline="638">Minimisator::setInitialGuess</referencedby>
        <referencedby refid="class_simplex_1ac74b813d1b4b98e97d1c98157997d294" compoundref="_spectra_alignator_8hpp" startline="236" endline="243">Simplex::Simplex</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1ae6a2eb34867f3c9ac333b267e3f20a17" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; Vertice::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="128" column="15" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="128" bodyend="128"/>
        <references refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" compoundref="_spectra_alignator_8hpp" startline="196">m_dim</references>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a4beafe087884524a9728617bff98029f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vertice::Vertice</definition>
        <argsstring>()=default</argsstring>
        <name>Vertice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="17" column="3"/>
        <referencedby refid="class_vertice_1ae6bf8b5aab5ad865f4fdd9a9b91f7e92" compoundref="_spectra_alignator_8hpp" startline="137" endline="143">operator+</referencedby>
        <referencedby refid="class_vertice_1aba263387b931496c5937f8645ded93ae" compoundref="_spectra_alignator_8hpp" startline="145" endline="154">operator-</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a25640d2ace19cf2993c1854edd452ef0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Vertice::Vertice</definition>
        <argsstring>(size_t size)</argsstring>
        <name>Vertice</name>
        <param>
          <type><ref refid="lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="45" column="3" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="45" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a9b171d24a90abd98983bd7cfc4796aa9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Vertice::Vertice</definition>
        <argsstring>(std::Initialiser_list&lt; double &gt; const &amp;init_list)</argsstring>
        <name>Vertice</name>
        <param>
          <type>std::Initialiser_list&lt; double &gt; const &amp;</type>
          <declname>init_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="25" column="3" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="25" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1a6e2e24eb4beb27f1b42163fda1777c40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Vertice::Vertice</definition>
        <argsstring>(std::vector&lt; double &gt; const &amp;coords)</argsstring>
        <name>Vertice</name>
        <param>
          <type>std::vector&lt; double &gt; const &amp;</type>
          <declname>coords</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="19" column="3" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="19" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1afddab470753508f96eeb0735e1400cbb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Vertice::Vertice</definition>
        <argsstring>(Vertice &amp;&amp;_vertice)</argsstring>
        <name>Vertice</name>
        <param>
          <type><ref refid="class_vertice" kindref="compound">Vertice</ref> &amp;&amp;</type>
          <declname>_vertice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="38" column="3" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="38" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_vertice_1aa498494b022d938d1b641cc6d8aac2f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Vertice::Vertice</definition>
        <argsstring>(Vertice const &amp;_vertice)</argsstring>
        <name>Vertice</name>
        <param>
          <type><ref refid="class_vertice" kindref="compound">Vertice</ref> const &amp;</type>
          <declname>_vertice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/SpectraAlignator.hpp" line="31" column="3" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="31" bodyend="36"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="lib/Analyse/SpectraAlignator.hpp" line="14" column="1" bodyfile="lib/Analyse/SpectraAlignator.hpp" bodystart="15" bodyend="199"/>
    <listofallmembers>
      <member refid="class_vertice_1a0b6f58d8c0efedbb726e408c4e6527de" prot="public" virt="non-virtual"><scope>Vertice</scope><name>begin</name></member>
      <member refid="class_vertice_1aad7a051c244a4565277290b7c4cb3382" prot="public" virt="non-virtual"><scope>Vertice</scope><name>begin</name></member>
      <member refid="class_vertice_1a2b540156c45d4c5c519cb9035c7a3648" prot="public" virt="non-virtual"><scope>Vertice</scope><name>cleanMove</name></member>
      <member refid="class_vertice_1ae4155cad8d004c954916882157c9375f" prot="public" virt="non-virtual"><scope>Vertice</scope><name>copy</name></member>
      <member refid="class_vertice_1a8b64784c593d9d75f9052a7a9d2fee02" prot="public" virt="non-virtual"><scope>Vertice</scope><name>copy</name></member>
      <member refid="class_vertice_1ae9c9917341984b56f264c4478b9d8791" prot="public" virt="non-virtual"><scope>Vertice</scope><name>copy</name></member>
      <member refid="class_vertice_1a1215380e747b2cf93f861407a5bf9c3d" prot="public" virt="non-virtual"><scope>Vertice</scope><name>end</name></member>
      <member refid="class_vertice_1a5f64695b3dcd9bca4f2fb6e0ed83348c" prot="public" virt="non-virtual"><scope>Vertice</scope><name>end</name></member>
      <member refid="class_vertice_1a6a4e7b2f8b617f2153b2fc0f0742a09e" prot="public" virt="non-virtual"><scope>Vertice</scope><name>evaluate</name></member>
      <member refid="class_vertice_1a1c3b20dfc14068262251ce9930dfa88f" prot="public" virt="non-virtual"><scope>Vertice</scope><name>fill</name></member>
      <member refid="class_vertice_1a11e12aac4668a10a6b1706db7e5ebbcd" prot="public" virt="non-virtual"><scope>Vertice</scope><name>get</name></member>
      <member refid="class_vertice_1a7ae35dd4e65c993d7faa019d8b966086" prot="public" virt="non-virtual"><scope>Vertice</scope><name>get</name></member>
      <member refid="class_vertice_1a6c5691267912f8f2cc04aa708e6a8f2b" prot="public" virt="non-virtual"><scope>Vertice</scope><name>get</name></member>
      <member refid="class_vertice_1af3563e71bc70c76de76010a381fd3afb" prot="public" virt="non-virtual"><scope>Vertice</scope><name>get</name></member>
      <member refid="class_vertice_1a5f23c4ece665d5a55b5c3b67fc45ffb3" prot="public" virt="non-virtual"><scope>Vertice</scope><name>getValue</name></member>
      <member refid="class_vertice_1a54771ef13c85f80a0603765273e2c8dd" prot="public" virt="non-virtual"><scope>Vertice</scope><name>getValue</name></member>
      <member refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" prot="private" virt="non-virtual"><scope>Vertice</scope><name>m_coordinates</name></member>
      <member refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" prot="private" virt="non-virtual"><scope>Vertice</scope><name>m_dim</name></member>
      <member refid="class_vertice_1a5ef7f30be58758901c1e35e0bfe4d681" prot="private" virt="non-virtual"><scope>Vertice</scope><name>m_value</name></member>
      <member refid="class_vertice_1af7bdce52a3f6189f94f05a80127f949d" prot="public" virt="non-virtual"><scope>Vertice</scope><name>operator*</name></member>
      <member refid="class_vertice_1a82b943e02b26f4e9d713aceb17ccab61" prot="public" virt="non-virtual"><scope>Vertice</scope><name>operator*</name></member>
      <member refid="class_vertice_1a082dc91912838405b4c98eec453cd7fe" prot="public" virt="non-virtual"><scope>Vertice</scope><name>operator*=</name></member>
      <member refid="class_vertice_1ae6bf8b5aab5ad865f4fdd9a9b91f7e92" prot="public" virt="non-virtual"><scope>Vertice</scope><name>operator+</name></member>
      <member refid="class_vertice_1aba263387b931496c5937f8645ded93ae" prot="public" virt="non-virtual"><scope>Vertice</scope><name>operator-</name></member>
      <member refid="class_vertice_1afe53f60865f26d7945c338eb3f2422ac" prot="public" virt="non-virtual"><scope>Vertice</scope><name>operator&lt;</name></member>
      <member refid="class_vertice_1a540a77aff2f79ae4cd5bb932311118fd" prot="public" virt="non-virtual"><scope>Vertice</scope><name>operator&lt;=</name></member>
      <member refid="class_vertice_1a651eb7cb39f966a5ff2d6d24c3e1e785" prot="public" virt="non-virtual"><scope>Vertice</scope><name>operator=</name></member>
      <member refid="class_vertice_1ab16b5e8facd201c70bdab71384adc6df" prot="public" virt="non-virtual"><scope>Vertice</scope><name>operator=</name></member>
      <member refid="class_vertice_1a45871718e86053a0a03565bbe672f7a3" prot="public" virt="non-virtual"><scope>Vertice</scope><name>operator=</name></member>
      <member refid="class_vertice_1ab7e40502eaba03b6b1576cbf39c358f0" prot="public" virt="non-virtual"><scope>Vertice</scope><name>operator&gt;</name></member>
      <member refid="class_vertice_1ad563d154d6ffe9f7a75323bc0d706fe4" prot="public" virt="non-virtual"><scope>Vertice</scope><name>operator&gt;=</name></member>
      <member refid="class_vertice_1a20a711ace767a031ec41eb3a0dd75ed1" prot="public" virt="non-virtual"><scope>Vertice</scope><name>operator[]</name></member>
      <member refid="class_vertice_1ad7e931f0342f3c2a87d0d8e46936416d" prot="public" virt="non-virtual"><scope>Vertice</scope><name>operator[]</name></member>
      <member refid="class_vertice_1a1884b3dc38c78b7526fe7e75d1bb4604" prot="public" virt="non-virtual"><scope>Vertice</scope><name>resize</name></member>
      <member refid="class_vertice_1a9ab0c67e95e2ebd4ccd3d648d22c78eb" prot="public" virt="non-virtual"><scope>Vertice</scope><name>resize</name></member>
      <member refid="class_vertice_1aad52a08bb2c5b6f92119d42956051924" prot="public" virt="non-virtual"><scope>Vertice</scope><name>set</name></member>
      <member refid="class_vertice_1a59ec9893ab3e7bbadfbd2e54ea283e8e" prot="public" virt="non-virtual"><scope>Vertice</scope><name>set</name></member>
      <member refid="class_vertice_1ab5519307ad24edb7b482ce63f41d3b63" prot="public" virt="non-virtual"><scope>Vertice</scope><name>set</name></member>
      <member refid="class_vertice_1a3554246d64dc33a7719b5cd2d112e67b" prot="public" virt="non-virtual"><scope>Vertice</scope><name>set</name></member>
      <member refid="class_vertice_1a0ab115f978a0d9c454b957d5cc531c57" prot="public" virt="non-virtual"><scope>Vertice</scope><name>setValue</name></member>
      <member refid="class_vertice_1a93b6febeec367c7c2211eb1e34dcfce4" prot="public" virt="non-virtual"><scope>Vertice</scope><name>size</name></member>
      <member refid="class_vertice_1ae6a2eb34867f3c9ac333b267e3f20a17" prot="public" virt="non-virtual"><scope>Vertice</scope><name>size</name></member>
      <member refid="class_vertice_1a4beafe087884524a9728617bff98029f" prot="public" virt="non-virtual"><scope>Vertice</scope><name>Vertice</name></member>
      <member refid="class_vertice_1a6e2e24eb4beb27f1b42163fda1777c40" prot="public" virt="non-virtual"><scope>Vertice</scope><name>Vertice</name></member>
      <member refid="class_vertice_1a9b171d24a90abd98983bd7cfc4796aa9" prot="public" virt="non-virtual"><scope>Vertice</scope><name>Vertice</name></member>
      <member refid="class_vertice_1aa498494b022d938d1b641cc6d8aac2f3" prot="public" virt="non-virtual"><scope>Vertice</scope><name>Vertice</name></member>
      <member refid="class_vertice_1afddab470753508f96eeb0735e1400cbb" prot="public" virt="non-virtual"><scope>Vertice</scope><name>Vertice</name></member>
      <member refid="class_vertice_1a25640d2ace19cf2993c1854edd452ef0" prot="public" virt="non-virtual"><scope>Vertice</scope><name>Vertice</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
