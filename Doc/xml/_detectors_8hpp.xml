<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_detectors_8hpp" kind="file" language="C++">
    <compoundname>Detectors.hpp</compoundname>
    <includes refid="lib_root_8hpp" local="yes">../libRoot.hpp</includes>
    <includes refid="_hit_8hpp" local="yes">Hit.hpp</includes>
    <includedby refid="_analyse_2_counters_8hpp" local="no">lib/Analyse/Counters.hpp</includedby>
    <includedby refid="_d_s_s_d_8hpp" local="yes">lib/Analyse/DSSD.hpp</includedby>
    <includedby refid="_paris_8hpp" local="yes">lib/Analyse/Paris.hpp</includedby>
    <includedby refid="_calibration_8hpp" local="yes">lib/Classes/Calibration.hpp</includedby>
    <includedby refid="_classes_2_counters_8hpp" local="yes">lib/Classes/Counters.hpp</includedby>
    <includedby refid="_calibrator_8hpp" local="yes">lib/Modules/Calibrator.hpp</includedby>
    <includedby refid="_cobalt_calorimeter_8hpp" local="yes">lib/Modules/CobaltCalorimeter.hpp</includedby>
    <includedby refid="_evolution_peaks_8hpp" local="yes">lib/Modules/EvolutionPeaks.hpp</includedby>
    <includedby refid="_faster2_histo_8hpp" local="yes">lib/Modules/Faster2Histo.hpp</includedby>
    <includedby refid="_faster2_root_8hpp" local="yes">lib/Modules/Faster2Root.hpp</includedby>
    <includedby refid="_near_line_8hpp" local="yes">lib/Modules/NearLine.hpp</includedby>
    <includedby refid="_run_matrixator_8hpp" local="yes">lib/Modules/RunMatrixator.hpp</includedby>
    <includedby refid="_timeshifts_8hpp" local="yes">lib/Modules/Timeshifts.hpp</includedby>
    <incdepgraph>
      <node id="20">
        <label>glob.h</label>
      </node>
      <node id="52">
        <label>TH1S.h</label>
      </node>
      <node id="25">
        <label>functional</label>
      </node>
      <node id="6">
        <label>iomanip</label>
      </node>
      <node id="29">
        <label>queue</label>
      </node>
      <node id="70">
        <label>TTreeIndex.h</label>
      </node>
      <node id="2">
        <label>../libRoot.hpp</label>
        <link refid="lib_root_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>filesystem</label>
      </node>
      <node id="39">
        <label>TAxis.h</label>
      </node>
      <node id="68">
        <label>TThread.h</label>
      </node>
      <node id="22">
        <label>errors.hpp</label>
        <link refid="errors_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>TH1D.h</label>
      </node>
      <node id="64">
        <label>TStopwatch.h</label>
      </node>
      <node id="30">
        <label>stdexcept</label>
      </node>
      <node id="28">
        <label>numeric</label>
      </node>
      <node id="15">
        <label>string</label>
      </node>
      <node id="8">
        <label>map</label>
      </node>
      <node id="71">
        <label>Hit.hpp</label>
        <link refid="_hit_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>libCo.hpp</label>
        <link refid="lib_co_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>TF1.h</label>
      </node>
      <node id="4">
        <label>print.hpp</label>
        <link refid="print_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>fstream</label>
      </node>
      <node id="42">
        <label>TError.h</label>
      </node>
      <node id="66">
        <label>TStyle.h</label>
      </node>
      <node id="23">
        <label>any</label>
      </node>
      <node id="17">
        <label>files_functions.hpp</label>
        <link refid="files__functions_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>random</label>
      </node>
      <node id="62">
        <label>TROOT.h</label>
      </node>
      <node id="34">
        <label>typeinfo</label>
      </node>
      <node id="1">
        <label>lib/Classes/Detectors.hpp</label>
        <link refid="_detectors_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>ctime</label>
      </node>
      <node id="41">
        <label>TChain.h</label>
      </node>
      <node id="67">
        <label>TSystem.h</label>
      </node>
      <node id="31">
        <label>stack</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
      <node id="44">
        <label>TF2.h</label>
      </node>
      <node id="45">
        <label>TFile.h</label>
      </node>
      <node id="40">
        <label>TCanvas.h</label>
      </node>
      <node id="55">
        <label>TH3I.h</label>
      </node>
      <node id="56">
        <label>TKey.h</label>
      </node>
      <node id="9">
        <label>vector_functions.hpp</label>
        <link refid="vector__functions_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>TSpectrum.h</label>
      </node>
      <node id="24">
        <label>array</label>
      </node>
      <node id="47">
        <label>TFitResult.h</label>
      </node>
      <node id="16">
        <label>sstream</label>
      </node>
      <node id="11">
        <label>randomCo.hpp</label>
        <link refid="random_co_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>TMarker.h</label>
      </node>
      <node id="49">
        <label>TGraphErrors.h</label>
      </node>
      <node id="53">
        <label>TH2.h</label>
      </node>
      <node id="37">
        <label>cstdlib</label>
      </node>
      <node id="50">
        <label>TH1F.h</label>
      </node>
      <node id="57">
        <label>TLeaf.h</label>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="13">
        <label>string_functions.hpp</label>
        <link refid="string__functions_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>unordered_map</label>
      </node>
      <node id="58">
        <label>TLegend.h</label>
      </node>
      <node id="65">
        <label>TString.h</label>
      </node>
      <node id="60">
        <label>TMath.h</label>
      </node>
      <node id="54">
        <label>TH2F.h</label>
      </node>
      <node id="27">
        <label>mutex</label>
      </node>
      <node id="36">
        <label>csignal</label>
      </node>
      <node id="32">
        <label>thread</label>
      </node>
      <node id="61">
        <label>TRandom.h</label>
      </node>
      <node id="69">
        <label>TTree.h</label>
      </node>
      <node id="10">
        <label>algorithm</label>
      </node>
      <node id="46">
        <label>TFitResultPtr.h</label>
      </node>
      <node id="14">
        <label>cstring</label>
      </node>
      <node id="48">
        <label>TGraph.h</label>
      </node>
      <node id="26">
        <label>memory</label>
      </node>
      <node id="33">
        <label>typeindex</label>
      </node>
      <node id="18">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>lib/Analyse/Counters.hpp</label>
        <link refid="_analyse_2_counters_8hpp"/>
      </node>
      <node id="14">
        <label>lib/Modules/Faster2Histo.hpp</label>
        <link refid="_faster2_histo_8hpp"/>
      </node>
      <node id="11">
        <label>lib/Modules/EvolutionPeaks.hpp</label>
        <link refid="_evolution_peaks_8hpp"/>
      </node>
      <node id="3">
        <label>lib/Analyse/DSSD.hpp</label>
        <link refid="_d_s_s_d_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>lib/Analyse/EventAnalyse.hpp</label>
        <link refid="_event_analyse_8hpp"/>
      </node>
      <node id="13">
        <label>lib/Modules/CobaltCalorimeter.hpp</label>
        <link refid="_cobalt_calorimeter_8hpp"/>
      </node>
      <node id="12">
        <label>lib/Modules/CloverSpectra.hpp</label>
        <link refid="_clover_spectra_8hpp"/>
      </node>
      <node id="7">
        <label>lib/Classes/Calibration.hpp</label>
        <link refid="_calibration_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>lib/Classes/Counters.hpp</label>
        <link refid="_classes_2_counters_8hpp"/>
      </node>
      <node id="8">
        <label>lib/Analyse/SpectraCo.hpp</label>
        <link refid="_spectra_co_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>lib/Analyse/SpectraAlignator.hpp</label>
        <link refid="_spectra_alignator_8hpp"/>
      </node>
      <node id="1">
        <label>lib/Classes/Detectors.hpp</label>
        <link refid="_detectors_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>lib/Analyse/Sorted_Event.hpp</label>
        <link refid="_sorted___event_8hpp"/>
      </node>
      <node id="15">
        <label>lib/Modules/Faster2Root.hpp</label>
        <link refid="_faster2_root_8hpp"/>
      </node>
      <node id="18">
        <label>lib/Modules/RunMatrixator.hpp</label>
        <link refid="_run_matrixator_8hpp"/>
      </node>
      <node id="17">
        <label>lib/Modules/NearLine.hpp</label>
        <link refid="_near_line_8hpp"/>
      </node>
      <node id="19">
        <label>lib/Modules/Timeshifts.hpp</label>
        <link refid="_timeshifts_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>lib/Analyse/Paris.hpp</label>
        <link refid="_paris_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>lib/Modules/Calibrator.hpp</label>
        <link refid="_calibrator_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_detectors" prot="public">Detectors</innerclass>
    <innerclass refid="class_detectors_1_1_empty_error" prot="public">Detectors::EmptyError</innerclass>
    <innerclass refid="class_detectors_1_1_error" prot="public">Detectors::Error</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" prot="public" static="no">
        <name>SIZE_LOOKUP</name>
        <initializer>1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="9" column="9" bodyfile="lib/Classes/Detectors.hpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a" prot="public" static="no">
        <type>std::string</type>
        <definition>using dType =  std::string</definition>
        <argsstring></argsstring>
        <name>dType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="7" column="1" bodyfile="lib/Classes/Detectors.hpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" prot="public" static="no" mutable="no">
        <type>class <ref refid="class_detectors" kindref="compound">Detectors</ref></type>
        <definition>class Detectors detectors</definition>
        <argsstring></argsstring>
        <name>detectors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="217" column="11"/>
        <referencedby refid="class_timeshifts_1a608d9443a15dd669920e10dd8baee23a" compoundref="_timeshifts_8hpp" startline="893" endline="1007">Timeshifts::analyse</referencedby>
        <referencedby refid="class_calibrator_1a00806ef12bceedaa6c16dad9b653f27f" compoundref="_calibrator_8hpp" startline="796" endline="870">Calibrator::analyse2</referencedby>
        <referencedby refid="class_timeshifts_1a715283a5be42b86ca70b4e468ccb2931" compoundref="_timeshifts_8hpp" startline="219" endline="227">Timeshifts::CheckParameters</referencedby>
        <referencedby refid="class_run_matrixator_1a1f6ba04bc894d68a6d72ccedf8367ad4" compoundref="_run_matrixator_8hpp" startline="59" endline="71">RunMatrixator::dontMatrixate</referencedby>
        <referencedby refid="class_calibrator_1a87ba405f3d9af67c43789893fc5ff534" compoundref="_calibrator_8hpp" startline="401" endline="413">Calibrator::fillHisto</referencedby>
        <referencedby refid="class_faster2_histo_1a327a8348f79c5ecf27a58baef32b81d8" compoundref="_faster2_histo_8hpp" startline="216" endline="270">Faster2Histo::fillHisto</referencedby>
        <referencedby refid="class_run_matrixator_1af360ec9f7686353b663ce0bdcfa3e2df" compoundref="_run_matrixator_8hpp" startline="313" endline="499">RunMatrixator::fillMatrixes</referencedby>
        <referencedby refid="class_calibrator_1a01917c2d097c62f2c6dc3a608d4e3ab4" compoundref="_calibrator_8hpp" startline="348" endline="388">Calibrator::fillRootDataHisto</referencedby>
        <referencedby refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" compoundref="_calibrator_8hpp" startline="722" endline="780">Calibrator::fitCalibration</referencedby>
        <referencedby refid="class_calibrator_1ae81772276c36ab528b8147fa583356fd" compoundref="_calibrator_8hpp" startline="44" endline="51">Calibrator::Initialise</referencedby>
        <referencedby refid="struct_calibrator_1_1histograms_1a4ec16b7a4a18e1f8988684e837bd4d4e" compoundref="_calibrator_8hpp" startline="156" endline="200">Calibrator::histograms::Initialise</referencedby>
        <referencedby refid="class_run_matrixator_1a7254994e33c3a8a124a7fd4d67158a52" compoundref="_run_matrixator_8hpp" startline="152" endline="239">RunMatrixator::Initialise</referencedby>
        <referencedby refid="class_timeshifts_1a95e126cc70243c24a016af24652ecb0b" compoundref="_timeshifts_8hpp" startline="533" endline="566">Timeshifts::Initialise</referencedby>
        <referencedby refid="class_clover_spectra_1a84dbd5cac3977a0082ab763d51f938d7" compoundref="_clover_spectra_8hpp" startline="114" endline="145">CloverSpectra::Initialise</referencedby>
        <referencedby refid="class_run_matrixator_1a0ae1d8ed78f3b5d6b7ac64361772734d" compoundref="_run_matrixator_8hpp" startline="53" endline="57">RunMatrixator::Initialise_dontMatrixate</referencedby>
        <referencedby refid="class_timeshifts_1a1eaf31f737ca23292d92babdf2f21fd8" compoundref="_timeshifts_8hpp" startline="495" endline="531">Timeshifts::InitialiseCorrected</referencedby>
        <referencedby refid="class_timeshifts_1a7c87fcd3920ef2f785349c392890e795" compoundref="_timeshifts_8hpp" startline="377" endline="386">Timeshifts::InitialisePreferencesArrays</referencedby>
        <referencedby refid="class_timeshifts_1abf99e2b89b819a92e4891d1c3da4e704" compoundref="_timeshifts_8hpp" startline="460" endline="493">Timeshifts::InitialiseRaw</referencedby>
        <referencedby refid="class_cobalt_calorimeter_1aceaa8e906e0257f450799026ec2269ca" compoundref="_cobalt_calorimeter_8hpp" startline="824" endline="837">CobaltCalorimeter::launchFaster</referencedby>
        <referencedby refid="class_cobalt_calorimeter_1ae731ee28c852d150fbf668c27604b8ed" compoundref="_cobalt_calorimeter_8hpp" startline="281" endline="295">CobaltCalorimeter::launchRoot</referencedby>
        <referencedby refid="class_calibration_1a660694835089e0020f014c65f3d6f7e7" compoundref="_calibration_8hpp" startline="283" endline="327">Calibration::load</referencedby>
        <referencedby refid="class_faster2_root_1ad30ccf937150bbd3504ec3a354b76c8f" compoundref="_faster2_root_8hpp" startline="211" endline="265">Faster2Root::load</referencedby>
        <referencedby refid="class_faster2_histo_1a72f8004ae550c02db09791b810c0252d" compoundref="_faster2_histo_8hpp" startline="146" endline="187">Faster2Histo::load</referencedby>
        <referencedby refid="class_timeshifts_1a28163efe8d487669cf50d5f6e1060d71" compoundref="_timeshifts_8hpp" startline="388" endline="427">Timeshifts::load</referencedby>
        <referencedby refid="class_evolution_peaks_1a4dce5d05c6d643d582829be29b6b16e5" compoundref="_evolution_peaks_8hpp" startline="44" endline="44">EvolutionPeaks::loadDetectors</referencedby>
        <referencedby refid="class_calibrator_1a14ec7e7a2a8f36d31e474de1a67df7ec" compoundref="_calibrator_8hpp" startline="249" endline="272">Calibrator::loadFitInfo</referencedby>
        <referencedby refid="_detectors_8hpp_1ae343a2d2d22d862f6ac7ae10ba1b3d41" compoundref="_detectors_8hpp" startline="431" endline="453">loadFormattedTH1F</referencedby>
        <referencedby refid="_detectors_8hpp_1a2fa75cda21d89a0dcd5f8135c5a2c8bc" compoundref="_detectors_8hpp" startline="227" endline="231">operator&lt;&lt;</referencedby>
        <referencedby refid="class_calibrator_1aa0fff626078ec3cd2e453c5cf6681462" compoundref="_calibrator_8hpp" startline="421" endline="720">Calibrator::peakFinder</referencedby>
        <referencedby refid="class_calibration_1a7545c0c01c4d8e1c5c28fb7930bfd3a0" compoundref="_calibration_8hpp" startline="355" endline="377">Calibration::Print</referencedby>
        <referencedby refid="class_near_line_1a3280d6187c79a0aaf4f23b97fe3089ee" compoundref="_near_line_8hpp" startline="44" endline="68">NearLine::readParam</referencedby>
        <referencedby refid="class_evolution_peaks_1a5645dd6726d0af38e8a4d849da6a8d18" compoundref="_evolution_peaks_8hpp" startline="102" endline="345">EvolutionPeaks::run</referencedby>
        <referencedby refid="class_timeshifts_1aa7cb3acf23e80927fa85be636f55a99d" compoundref="_timeshifts_8hpp" startline="1102" endline="1108">Timeshifts::setTimeReference</referencedby>
        <referencedby refid="struct_calibrator_1_1histograms_1a5c30eec7418701ef02ce4faf97fef690" compoundref="_calibrator_8hpp" startline="202" endline="219">Calibrator::histograms::setTypeBins</referencedby>
        <referencedby refid="class_timeshifts_1a6520eab7a8824f41a2be8517d83fc835" compoundref="_timeshifts_8hpp" startline="621" endline="665">Timeshifts::verify</referencedby>
        <referencedby refid="class_calibrator_1aad90b0e3951d4caffe11e319c7108a51" compoundref="_calibrator_8hpp" startline="960" endline="1025">Calibrator::verify</referencedby>
        <referencedby refid="class_calibrator_1a5168dd14ccf0ad9629fa56185986d218" compoundref="_calibrator_8hpp" startline="933" endline="942">Calibrator::writeData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_detectors_8hpp_1a4e969925c521d2b624de9829460bf419" prot="public" static="no" mutable="no">
        <type><ref refid="class_bools" kindref="compound">Bools</ref></type>
        <definition>Bools isBack(SIZE_LOOKUP)</definition>
        <argsstring>(SIZE_LOOKUP)</argsstring>
        <name>isBack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="33" column="7"/>
        <referencedby refid="class_detectors_1a8d5c0f2d189ddda12ed3c36f13887cfd" compoundref="_detectors_8hpp" startline="295" endline="396">Detectors::makeArrays</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_detectors_8hpp_1acad86c343cb1a6d3f382c2468415cc8a" prot="public" static="no" mutable="no">
        <type><ref refid="class_bools" kindref="compound">Bools</ref></type>
        <definition>Bools isBGO(SIZE_LOOKUP)</definition>
        <argsstring>(SIZE_LOOKUP)</argsstring>
        <name>isBGO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="13" column="7"/>
        <referencedby refid="_cobalt_calorimeter_8hpp_1a1d20e8635afe69d2732de36128f82652" compoundref="_cobalt_calorimeter_8hpp" startline="312" endline="312">calibBGO</referencedby>
        <referencedby refid="class_counters_1a438d855f700f802261df045b1f52723e" compoundref="_analyse_2_counters_8hpp" startline="63" endline="121">Counters::count_event</referencedby>
        <referencedby refid="class_detectors_1a8d5c0f2d189ddda12ed3c36f13887cfd" compoundref="_detectors_8hpp" startline="295" endline="396">Detectors::makeArrays</referencedby>
        <referencedby refid="class_counters_1a64f2e9cf1e132725e4b5a6b0fcdb9ea5" compoundref="_classes_2_counters_8hpp" startline="65" endline="97">Counters::set_hit</referencedby>
        <referencedby refid="class_sorted___event_1a526eefb6a423a59ff6096766c04c98e2" compoundref="_sorted___event_8hpp" startline="254" endline="372">Sorted_Event::sortEvent</referencedby>
        <referencedby refid="class_cobalt_calorimeter_1a760c56b79865a37984edc07165a7bc73" compoundref="_cobalt_calorimeter_8hpp" startline="332" endline="660">CobaltCalorimeter::work</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_detectors_8hpp_1a7f34eb1e6f5368d8eda70a8558cc971e" prot="public" static="no" mutable="no">
        <type><ref refid="class_bools" kindref="compound">Bools</ref></type>
        <definition>Bools isClover(SIZE_LOOKUP)</definition>
        <argsstring>(SIZE_LOOKUP)</argsstring>
        <name>isClover</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="22" column="7"/>
        <referencedby refid="class_run_matrixator_1af360ec9f7686353b663ce0bdcfa3e2df" compoundref="_run_matrixator_8hpp" startline="313" endline="499">RunMatrixator::fillMatrixes</referencedby>
        <referencedby refid="class_detectors_1a8d5c0f2d189ddda12ed3c36f13887cfd" compoundref="_detectors_8hpp" startline="295" endline="396">Detectors::makeArrays</referencedby>
        <referencedby refid="class_clover_spectra_1a614d7deabde77b0ffea91ca2a6002484" compoundref="_clover_spectra_8hpp" startline="161" endline="207">CloverSpectra::runFasterReader</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_detectors_8hpp_1a3148345147f51e96aaa73e5d9f8e9d93" prot="public" static="no" mutable="no">
        <type><ref refid="class_bools" kindref="compound">Bools</ref></type>
        <definition>Bools isDSSD(SIZE_LOOKUP)</definition>
        <argsstring>(SIZE_LOOKUP)</argsstring>
        <name>isDSSD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="18" column="7"/>
        <referencedby refid="class_counters_1a438d855f700f802261df045b1f52723e" compoundref="_analyse_2_counters_8hpp" startline="63" endline="121">Counters::count_event</referencedby>
        <referencedby refid="class_d_s_s_d_1aeb787f13de411a3e801360d85c6ed00b" compoundref="_d_s_s_d_8hpp" startline="169" endline="194">DSSD::Fill</referencedby>
        <referencedby refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" compoundref="_calibrator_8hpp" startline="722" endline="780">Calibrator::fitCalibration</referencedby>
        <referencedby refid="class_detectors_1a8d5c0f2d189ddda12ed3c36f13887cfd" compoundref="_detectors_8hpp" startline="295" endline="396">Detectors::makeArrays</referencedby>
        <referencedby refid="class_event_analyse_1a3667d9363f41262088e0ca5c1f06fc7e" compoundref="_event_analyse_8hpp" startline="36" endline="50">EventAnalyse::Set</referencedby>
        <referencedby refid="class_counters_1a64f2e9cf1e132725e4b5a6b0fcdb9ea5" compoundref="_classes_2_counters_8hpp" startline="65" endline="97">Counters::set_hit</referencedby>
        <referencedby refid="class_sorted___event_1a526eefb6a423a59ff6096766c04c98e2" compoundref="_sorted___event_8hpp" startline="254" endline="372">Sorted_Event::sortEvent</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_detectors_8hpp_1acb7c68db854de8244a7d8149cba30a11" prot="public" static="no" mutable="no">
        <type><ref refid="class_bools" kindref="compound">Bools</ref></type>
        <definition>Bools isEden(SIZE_LOOKUP)</definition>
        <argsstring>(SIZE_LOOKUP)</argsstring>
        <name>isEden</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="15" column="7"/>
        <referencedby refid="class_detectors_1a8d5c0f2d189ddda12ed3c36f13887cfd" compoundref="_detectors_8hpp" startline="295" endline="396">Detectors::makeArrays</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_detectors_8hpp_1aa4101394fbd7e5aeb24813175aeb4056" prot="public" static="no" mutable="no">
        <type><ref refid="class_bools" kindref="compound">Bools</ref></type>
        <definition>Bools isFront(SIZE_LOOKUP)</definition>
        <argsstring>(SIZE_LOOKUP)</argsstring>
        <name>isFront</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="34" column="7"/>
        <referencedby refid="class_detectors_1a8d5c0f2d189ddda12ed3c36f13887cfd" compoundref="_detectors_8hpp" startline="295" endline="396">Detectors::makeArrays</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_detectors_8hpp_1a5da74af4e038f2a435565e2e93a6831e" prot="public" static="no" mutable="no">
        <type><ref refid="class_bools" kindref="compound">Bools</ref></type>
        <definition>Bools isGe(SIZE_LOOKUP)</definition>
        <argsstring>(SIZE_LOOKUP)</argsstring>
        <name>isGe</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="12" column="7"/>
        <referencedby refid="class_counters_1a438d855f700f802261df045b1f52723e" compoundref="_analyse_2_counters_8hpp" startline="63" endline="121">Counters::count_event</referencedby>
        <referencedby refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" compoundref="_calibrator_8hpp" startline="722" endline="780">Calibrator::fitCalibration</referencedby>
        <referencedby refid="class_detectors_1a8d5c0f2d189ddda12ed3c36f13887cfd" compoundref="_detectors_8hpp" startline="295" endline="396">Detectors::makeArrays</referencedby>
        <referencedby refid="class_clover_spectra_1a614d7deabde77b0ffea91ca2a6002484" compoundref="_clover_spectra_8hpp" startline="161" endline="207">CloverSpectra::runFasterReader</referencedby>
        <referencedby refid="class_counters_1a64f2e9cf1e132725e4b5a6b0fcdb9ea5" compoundref="_classes_2_counters_8hpp" startline="65" endline="97">Counters::set_hit</referencedby>
        <referencedby refid="_cobalt_calorimeter_8hpp_1ad1190ea3cb14e028de24091d74939599" compoundref="_cobalt_calorimeter_8hpp" startline="319" endline="328">smear</referencedby>
        <referencedby refid="class_sorted___event_1a526eefb6a423a59ff6096766c04c98e2" compoundref="_sorted___event_8hpp" startline="254" endline="372">Sorted_Event::sortEvent</referencedby>
        <referencedby refid="class_cobalt_calorimeter_1a760c56b79865a37984edc07165a7bc73" compoundref="_cobalt_calorimeter_8hpp" startline="332" endline="660">CobaltCalorimeter::work</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_detectors_8hpp_1ac1f4e8d98df1dbbcb0c6ccf4a7b9a538" prot="public" static="no" mutable="no">
        <type><ref refid="class_bools" kindref="compound">Bools</ref></type>
        <definition>Bools isLaBr3(SIZE_LOOKUP)</definition>
        <argsstring>(SIZE_LOOKUP)</argsstring>
        <name>isLaBr3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="14" column="7"/>
        <referencedby refid="class_counters_1a438d855f700f802261df045b1f52723e" compoundref="_analyse_2_counters_8hpp" startline="63" endline="121">Counters::count_event</referencedby>
        <referencedby refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" compoundref="_calibrator_8hpp" startline="722" endline="780">Calibrator::fitCalibration</referencedby>
        <referencedby refid="class_detectors_1a8d5c0f2d189ddda12ed3c36f13887cfd" compoundref="_detectors_8hpp" startline="295" endline="396">Detectors::makeArrays</referencedby>
        <referencedby refid="class_counters_1a64f2e9cf1e132725e4b5a6b0fcdb9ea5" compoundref="_classes_2_counters_8hpp" startline="65" endline="97">Counters::set_hit</referencedby>
        <referencedby refid="class_sorted___event_1a526eefb6a423a59ff6096766c04c98e2" compoundref="_sorted___event_8hpp" startline="254" endline="372">Sorted_Event::sortEvent</referencedby>
        <referencedby refid="class_cobalt_calorimeter_1a760c56b79865a37984edc07165a7bc73" compoundref="_cobalt_calorimeter_8hpp" startline="332" endline="660">CobaltCalorimeter::work</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_detectors_8hpp_1a82c5910e3b4f178c276c8b888c5ac162" prot="public" static="no" mutable="no">
        <type><ref refid="class_bools" kindref="compound">Bools</ref></type>
        <definition>Bools isParis(SIZE_LOOKUP)</definition>
        <argsstring>(SIZE_LOOKUP)</argsstring>
        <name>isParis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="17" column="7"/>
        <referencedby refid="class_counters_1a438d855f700f802261df045b1f52723e" compoundref="_analyse_2_counters_8hpp" startline="63" endline="121">Counters::count_event</referencedby>
        <referencedby refid="class_run_matrixator_1af360ec9f7686353b663ce0bdcfa3e2df" compoundref="_run_matrixator_8hpp" startline="313" endline="499">RunMatrixator::fillMatrixes</referencedby>
        <referencedby refid="class_calibrator_1a01917c2d097c62f2c6dc3a608d4e3ab4" compoundref="_calibrator_8hpp" startline="348" endline="388">Calibrator::fillRootDataHisto</referencedby>
        <referencedby refid="class_calibrator_1a7f0728db56f517ca2dfe8182a122e094" compoundref="_calibrator_8hpp" startline="722" endline="780">Calibrator::fitCalibration</referencedby>
        <referencedby refid="class_detectors_1a8d5c0f2d189ddda12ed3c36f13887cfd" compoundref="_detectors_8hpp" startline="295" endline="396">Detectors::makeArrays</referencedby>
        <referencedby refid="class_cobalt_calorimeter_1aeb58f6286af52ee8d74f4188664f6af5" compoundref="_cobalt_calorimeter_8hpp" startline="305" endline="310">CobaltCalorimeter::NaI_pid</referencedby>
        <referencedby refid="class_event_analyse_1a3667d9363f41262088e0ca5c1f06fc7e" compoundref="_event_analyse_8hpp" startline="36" endline="50">EventAnalyse::Set</referencedby>
        <referencedby refid="class_counters_1a64f2e9cf1e132725e4b5a6b0fcdb9ea5" compoundref="_classes_2_counters_8hpp" startline="65" endline="97">Counters::set_hit</referencedby>
        <referencedby refid="_cobalt_calorimeter_8hpp_1ad1190ea3cb14e028de24091d74939599" compoundref="_cobalt_calorimeter_8hpp" startline="319" endline="328">smear</referencedby>
        <referencedby refid="class_sorted___event_1a526eefb6a423a59ff6096766c04c98e2" compoundref="_sorted___event_8hpp" startline="254" endline="372">Sorted_Event::sortEvent</referencedby>
        <referencedby refid="class_cobalt_calorimeter_1a760c56b79865a37984edc07165a7bc73" compoundref="_cobalt_calorimeter_8hpp" startline="332" endline="660">CobaltCalorimeter::work</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_detectors_8hpp_1ae7667a7434fc704d9dcaf6d5e6bd8e39" prot="public" static="no" mutable="no">
        <type><ref refid="class_bools" kindref="compound">Bools</ref></type>
        <definition>Bools isRF(SIZE_LOOKUP)</definition>
        <argsstring>(SIZE_LOOKUP)</argsstring>
        <name>isRF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="16" column="7"/>
        <referencedby refid="class_detectors_1a8d5c0f2d189ddda12ed3c36f13887cfd" compoundref="_detectors_8hpp" startline="295" endline="396">Detectors::makeArrays</referencedby>
        <referencedby refid="class_timeshifts_1abef7234fe827ae3c7758788cf22b6921" compoundref="_timeshifts_8hpp" startline="732" endline="771">Timeshifts::treatFasterFile</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_detectors_8hpp_1a256ea354de5d7f81049eaf74528626b7" prot="public" static="no" mutable="no">
        <type><ref refid="class_bools" kindref="compound">Bools</ref></type>
        <definition>Bools isRing(SIZE_LOOKUP)</definition>
        <argsstring>(SIZE_LOOKUP)</argsstring>
        <name>isRing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="32" column="7"/>
        <referencedby refid="class_detectors_1a8d5c0f2d189ddda12ed3c36f13887cfd" compoundref="_detectors_8hpp" startline="295" endline="396">Detectors::makeArrays</referencedby>
        <referencedby refid="class_sorted___event_1a526eefb6a423a59ff6096766c04c98e2" compoundref="_sorted___event_8hpp" startline="254" endline="372">Sorted_Event::sortEvent</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_detectors_8hpp_1a401c5e7f43ae309c8fcd39c977104f3e" prot="public" static="no" mutable="no">
        <type><ref refid="class_bools" kindref="compound">Bools</ref></type>
        <definition>Bools isS1(SIZE_LOOKUP)</definition>
        <argsstring>(SIZE_LOOKUP)</argsstring>
        <name>isS1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="30" column="7"/>
        <referencedby refid="class_detectors_1a8d5c0f2d189ddda12ed3c36f13887cfd" compoundref="_detectors_8hpp" startline="295" endline="396">Detectors::makeArrays</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_detectors_8hpp_1a2d41f8a0901b30f33b83df128512fc4f" prot="public" static="no" mutable="no">
        <type><ref refid="class_bools" kindref="compound">Bools</ref></type>
        <definition>Bools isS2(SIZE_LOOKUP)</definition>
        <argsstring>(SIZE_LOOKUP)</argsstring>
        <name>isS2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="31" column="7"/>
        <referencedby refid="class_detectors_1a8d5c0f2d189ddda12ed3c36f13887cfd" compoundref="_detectors_8hpp" startline="295" endline="396">Detectors::makeArrays</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_detectors_8hpp_1adee12970e5a76c075d5b98b5c098b22a" prot="public" static="no" mutable="no">
        <type><ref refid="class_bools" kindref="compound">Bools</ref></type>
        <definition>Bools isSector(SIZE_LOOKUP)</definition>
        <argsstring>(SIZE_LOOKUP)</argsstring>
        <name>isSector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="29" column="7"/>
        <referencedby refid="class_detectors_1a8d5c0f2d189ddda12ed3c36f13887cfd" compoundref="_detectors_8hpp" startline="295" endline="396">Detectors::makeArrays</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_detectors_8hpp_1aa4d7f26a632b3df166ad7a08cad05af1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib_co_8hpp_1a632090884b4aa0585e747446a2683963" kindref="member">Strings</ref></type>
        <definition>Strings clover_pos</definition>
        <argsstring>(SIZE_LOOKUP,&quot;&quot;)</argsstring>
        <name>clover_pos</name>
        <param>
          <type><ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref></type>
        </param>
        <param>
          <type>&quot;&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="26" column="9" declfile="lib/Classes/Detectors.hpp" declline="26" declcolumn="9"/>
        <referencedby refid="class_detectors_1a8d5c0f2d189ddda12ed3c36f13887cfd" compoundref="_detectors_8hpp" startline="295" endline="396">Detectors::makeArrays</referencedby>
      </memberdef>
      <memberdef kind="function" id="_detectors_8hpp_1adc256156b68f8dd6b9f2c2da57808bd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_hit_8hpp_1a25e4b8c1ad7e877a2fd808d3c661b22d" kindref="member">Label_vec</ref></type>
        <definition>Label_vec compressedLabel</definition>
        <argsstring>(SIZE_LOOKUP,-1)</argsstring>
        <name>compressedLabel</name>
        <param>
          <type><ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref></type>
        </param>
        <param>
          <type>-</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="37" column="11" declfile="lib/Classes/Detectors.hpp" declline="37" declcolumn="11"/>
        <referencedby refid="class_calibrator_1a87ba405f3d9af67c43789893fc5ff534" compoundref="_calibrator_8hpp" startline="401" endline="413">Calibrator::fillHisto</referencedby>
        <referencedby refid="class_calibrator_1a01917c2d097c62f2c6dc3a608d4e3ab4" compoundref="_calibrator_8hpp" startline="348" endline="388">Calibrator::fillRootDataHisto</referencedby>
        <referencedby refid="class_detectors_1a8d5c0f2d189ddda12ed3c36f13887cfd" compoundref="_detectors_8hpp" startline="295" endline="396">Detectors::makeArrays</referencedby>
        <referencedby refid="class_calibrator_1aad90b0e3951d4caffe11e319c7108a51" compoundref="_calibrator_8hpp" startline="960" endline="1025">Calibrator::verify</referencedby>
      </memberdef>
      <memberdef kind="function" id="_detectors_8hpp_1a2f5a496d7673272c5c21b29a2d41bde2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21" kindref="member">uchar</ref> &gt;</type>
        <definition>std::vector&lt;uchar&gt; labelToBGOcrystal</definition>
        <argsstring>(SIZE_LOOKUP, 0)</argsstring>
        <name>labelToBGOcrystal</name>
        <param>
          <type><ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref></type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="24" column="13" declfile="lib/Classes/Detectors.hpp" declline="24" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_detectors_8hpp_1adccbc8332a89f48a35baea4a37255e2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21" kindref="member">uchar</ref> &gt;</type>
        <definition>std::vector&lt;uchar&gt; labelToClover</definition>
        <argsstring>(SIZE_LOOKUP, 0)</argsstring>
        <name>labelToClover</name>
        <param>
          <type><ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref></type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="23" column="13" declfile="lib/Classes/Detectors.hpp" declline="23" declcolumn="13"/>
        <referencedby refid="class_counters_1a438d855f700f802261df045b1f52723e" compoundref="_analyse_2_counters_8hpp" startline="63" endline="121">Counters::count_event</referencedby>
        <referencedby refid="class_detectors_1a8d5c0f2d189ddda12ed3c36f13887cfd" compoundref="_detectors_8hpp" startline="295" endline="396">Detectors::makeArrays</referencedby>
        <referencedby refid="class_counters_1a64f2e9cf1e132725e4b5a6b0fcdb9ea5" compoundref="_classes_2_counters_8hpp" startline="65" endline="97">Counters::set_hit</referencedby>
        <referencedby refid="class_sorted___event_1a526eefb6a423a59ff6096766c04c98e2" compoundref="_sorted___event_8hpp" startline="254" endline="372">Sorted_Event::sortEvent</referencedby>
        <referencedby refid="class_sorted___event_1a868a20701f8be649bbaf0a0366c378d0" compoundref="_sorted___event_8hpp" startline="231" endline="252">Sorted_Event::sortGeClover</referencedby>
      </memberdef>
      <memberdef kind="function" id="_detectors_8hpp_1a13f8fc40b8957fe11c059d8d17523704" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21" kindref="member">uchar</ref> &gt;</type>
        <definition>std::vector&lt;uchar&gt; labelToGecrystal</definition>
        <argsstring>(SIZE_LOOKUP, 0)</argsstring>
        <name>labelToGecrystal</name>
        <param>
          <type><ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref></type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="25" column="13" declfile="lib/Classes/Detectors.hpp" declline="25" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_detectors_8hpp_1ae343a2d2d22d862f6ac7ae10ba1b3d41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; <ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref>, TH1F * &gt;</type>
        <definition>std::map&lt;Label, TH1F*&gt; loadFormattedTH1F</definition>
        <argsstring>(TFile *file)</argsstring>
        <name>loadFormattedTH1F</name>
        <param>
          <type>TFile *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="431" column="10" bodyfile="lib/Classes/Detectors.hpp" bodystart="431" bodyend="453"/>
        <references refid="string__functions_8hpp_1ae058d07fbc702d0b0f79e3650e7804a2" compoundref="string__functions_8hpp" startline="240" endline="245">concatenate</references>
        <references refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813">detectors</references>
        <references refid="print_8hpp_1a553a9a331cc4556c2d9bb3aaa8533528" compoundref="print_8hpp" startline="176" endline="181">error</references>
        <references refid="string__functions_8hpp_1a87d8e2cb69021ab11e443cb140349eb6" compoundref="string__functions_8hpp" startline="137" endline="140">found</references>
        <references refid="lib_root_8hpp_1a7b3e18ff762f0dfa647f03b8275e33c0" compoundref="lib_root_8hpp" startline="1118" endline="1127">get_TH1F_map</references>
        <references refid="class_detectors_1ad535ab86053baec3294cda955ea275cd" compoundref="_detectors_8hpp" startline="90" endline="90">Detectors::names</references>
        <references refid="string__functions_8hpp_1a9b6b51fed28f705d129f02193ce89b3c" compoundref="string__functions_8hpp" startline="143" endline="153">remove</references>
        <references refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" compoundref="lib_co_8hpp" startline="156" endline="156">throw_error</references>
        <referencedby refid="class_calibrator_1a0d2a41f02b2c16409b58ce3ee4183792" compoundref="_calibrator_8hpp" startline="290" endline="309">Calibrator::loadRootHisto</referencedby>
      </memberdef>
      <memberdef kind="function" id="_detectors_8hpp_1af8a018699aa5d8544bc4877f40463a5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib_co_8hpp_1a54161053f7c12fa7dd7bddf119708644" kindref="member">Ints</ref></type>
        <definition>Ints m_index</definition>
        <argsstring>(SIZE_LOOKUP,-1)</argsstring>
        <name>m_index</name>
        <param>
          <type><ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref></type>
        </param>
        <param>
          <type>-</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="38" column="6" declfile="lib/Classes/Detectors.hpp" declline="38" declcolumn="6"/>
        <referencedby refid="class_detectors_1a3c4f247022eb113c0371899060ea0199" compoundref="_detectors_8hpp" startline="135" endline="135">Detectors::index</referencedby>
        <referencedby refid="class_detectors_1a8d5c0f2d189ddda12ed3c36f13887cfd" compoundref="_detectors_8hpp" startline="295" endline="396">Detectors::makeArrays</referencedby>
      </memberdef>
      <memberdef kind="function" id="_detectors_8hpp_1a2fa75cda21d89a0dcd5f8135c5a2c8bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, Detectors const &amp;detectors)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="class_detectors" kindref="compound">Detectors</ref> const &amp;</type>
          <declname>detectors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/Detectors.hpp" line="227" column="1" bodyfile="lib/Classes/Detectors.hpp" bodystart="227" bodyend="231"/>
        <references refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813">detectors</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>DETECTORS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DETECTORS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../libRoot.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_hit_8hpp" kindref="compound">Hit.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="_detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a" kindref="member">dType</ref><sp/>=<sp/>std::string;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIZE_LOOKUP<sp/>1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>detectors<sp/>lookup<sp/>tables<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="_detectors_8hpp_1a5da74af4e038f2a435565e2e93a6831e" refkind="member"><highlight class="normal"><ref refid="class_bools" kindref="compound">Bools</ref><sp/><ref refid="_detectors_8hpp_1a5da74af4e038f2a435565e2e93a6831e" kindref="member">isGe</ref><sp/><sp/><sp/><sp/>(<ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref>);</highlight></codeline>
<codeline lineno="13" refid="_detectors_8hpp_1acad86c343cb1a6d3f382c2468415cc8a" refkind="member"><highlight class="normal"><ref refid="class_bools" kindref="compound">Bools</ref><sp/><ref refid="_detectors_8hpp_1acad86c343cb1a6d3f382c2468415cc8a" kindref="member">isBGO</ref><sp/><sp/><sp/>(<ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref>);</highlight></codeline>
<codeline lineno="14" refid="_detectors_8hpp_1ac1f4e8d98df1dbbcb0c6ccf4a7b9a538" refkind="member"><highlight class="normal"><ref refid="class_bools" kindref="compound">Bools</ref><sp/><ref refid="_detectors_8hpp_1ac1f4e8d98df1dbbcb0c6ccf4a7b9a538" kindref="member">isLaBr3</ref><sp/>(<ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref>);</highlight></codeline>
<codeline lineno="15" refid="_detectors_8hpp_1acb7c68db854de8244a7d8149cba30a11" refkind="member"><highlight class="normal"><ref refid="class_bools" kindref="compound">Bools</ref><sp/><ref refid="_detectors_8hpp_1acb7c68db854de8244a7d8149cba30a11" kindref="member">isEden</ref><sp/><sp/>(<ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref>);</highlight></codeline>
<codeline lineno="16" refid="_detectors_8hpp_1ae7667a7434fc704d9dcaf6d5e6bd8e39" refkind="member"><highlight class="normal"><ref refid="class_bools" kindref="compound">Bools</ref><sp/><ref refid="_detectors_8hpp_1ae7667a7434fc704d9dcaf6d5e6bd8e39" kindref="member">isRF</ref><sp/><sp/><sp/><sp/>(<ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref>);</highlight></codeline>
<codeline lineno="17" refid="_detectors_8hpp_1a82c5910e3b4f178c276c8b888c5ac162" refkind="member"><highlight class="normal"><ref refid="class_bools" kindref="compound">Bools</ref><sp/><ref refid="_detectors_8hpp_1a82c5910e3b4f178c276c8b888c5ac162" kindref="member">isParis</ref><sp/>(<ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref>);</highlight></codeline>
<codeline lineno="18" refid="_detectors_8hpp_1a3148345147f51e96aaa73e5d9f8e9d93" refkind="member"><highlight class="normal"><ref refid="class_bools" kindref="compound">Bools</ref><sp/><ref refid="_detectors_8hpp_1a3148345147f51e96aaa73e5d9f8e9d93" kindref="member">isDSSD</ref><sp/><sp/>(<ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>--<sp/>Clover<sp/>specific<sp/>lookup<sp/>tables<sp/>--<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="_detectors_8hpp_1a7f34eb1e6f5368d8eda70a8558cc971e" refkind="member"><highlight class="normal"><ref refid="class_bools" kindref="compound">Bools</ref><sp/><ref refid="_detectors_8hpp_1a7f34eb1e6f5368d8eda70a8558cc971e" kindref="member">isClover</ref>(<ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref>);</highlight><highlight class="comment">//<sp/>is<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="_detectors_8hpp_1adccbc8332a89f48a35baea4a37255e2c" refkind="member"><highlight class="normal">std::vector&lt;uchar&gt;<sp/><ref refid="_detectors_8hpp_1adccbc8332a89f48a35baea4a37255e2c" kindref="member">labelToClover</ref>(<ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref>,0);</highlight></codeline>
<codeline lineno="24" refid="_detectors_8hpp_1a2f5a496d7673272c5c21b29a2d41bde2" refkind="member"><highlight class="normal">std::vector&lt;uchar&gt;<sp/><ref refid="_detectors_8hpp_1a2f5a496d7673272c5c21b29a2d41bde2" kindref="member">labelToBGOcrystal</ref>(<ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref>,0);</highlight></codeline>
<codeline lineno="25" refid="_detectors_8hpp_1a13f8fc40b8957fe11c059d8d17523704" refkind="member"><highlight class="normal">std::vector&lt;uchar&gt;<sp/><ref refid="_detectors_8hpp_1a13f8fc40b8957fe11c059d8d17523704" kindref="member">labelToGecrystal</ref>(<ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref>,0);</highlight></codeline>
<codeline lineno="26" refid="_detectors_8hpp_1aa4d7f26a632b3df166ad7a08cad05af1" refkind="member"><highlight class="normal"><ref refid="lib_co_8hpp_1a632090884b4aa0585e747446a2683963" kindref="member">Strings</ref><sp/><ref refid="_detectors_8hpp_1aa4d7f26a632b3df166ad7a08cad05af1" kindref="member">clover_pos</ref><sp/>(<ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref>,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DSSD<sp/>specific<sp/>lookup<sp/>tables<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="_detectors_8hpp_1adee12970e5a76c075d5b98b5c098b22a" refkind="member"><highlight class="normal"><ref refid="class_bools" kindref="compound">Bools</ref><sp/><ref refid="_detectors_8hpp_1adee12970e5a76c075d5b98b5c098b22a" kindref="member">isSector</ref>(<ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref>);</highlight></codeline>
<codeline lineno="30" refid="_detectors_8hpp_1a401c5e7f43ae309c8fcd39c977104f3e" refkind="member"><highlight class="normal"><ref refid="class_bools" kindref="compound">Bools</ref><sp/><ref refid="_detectors_8hpp_1a401c5e7f43ae309c8fcd39c977104f3e" kindref="member">isS1</ref><sp/><sp/><sp/><sp/>(<ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref>);</highlight></codeline>
<codeline lineno="31" refid="_detectors_8hpp_1a2d41f8a0901b30f33b83df128512fc4f" refkind="member"><highlight class="normal"><ref refid="class_bools" kindref="compound">Bools</ref><sp/><ref refid="_detectors_8hpp_1a2d41f8a0901b30f33b83df128512fc4f" kindref="member">isS2</ref><sp/><sp/><sp/><sp/>(<ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref>);</highlight></codeline>
<codeline lineno="32" refid="_detectors_8hpp_1a256ea354de5d7f81049eaf74528626b7" refkind="member"><highlight class="normal"><ref refid="class_bools" kindref="compound">Bools</ref><sp/><ref refid="_detectors_8hpp_1a256ea354de5d7f81049eaf74528626b7" kindref="member">isRing</ref><sp/><sp/>(<ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref>);</highlight></codeline>
<codeline lineno="33" refid="_detectors_8hpp_1a4e969925c521d2b624de9829460bf419" refkind="member"><highlight class="normal"><ref refid="class_bools" kindref="compound">Bools</ref><sp/><ref refid="_detectors_8hpp_1a4e969925c521d2b624de9829460bf419" kindref="member">isBack</ref><sp/><sp/>(<ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref>);</highlight></codeline>
<codeline lineno="34" refid="_detectors_8hpp_1aa4101394fbd7e5aeb24813175aeb4056" refkind="member"><highlight class="normal"><ref refid="class_bools" kindref="compound">Bools</ref><sp/><ref refid="_detectors_8hpp_1aa4101394fbd7e5aeb24813175aeb4056" kindref="member">isFront</ref><sp/>(<ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Other<sp/>lookup<sp/>tables<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="_detectors_8hpp_1adc256156b68f8dd6b9f2c2da57808bd3" refkind="member"><highlight class="normal"><ref refid="_hit_8hpp_1a25e4b8c1ad7e877a2fd808d3c661b22d" kindref="member">Label_vec</ref><sp/><ref refid="_detectors_8hpp_1adc256156b68f8dd6b9f2c2da57808bd3" kindref="member">compressedLabel</ref>(<ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref>,-1);<sp/></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>put<sp/>all<sp/>the<sp/>detectors<sp/>one<sp/>after<sp/>the<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="_detectors_8hpp_1af8a018699aa5d8544bc4877f40463a5a" refkind="member"><highlight class="normal"><ref refid="lib_co_8hpp_1a54161053f7c12fa7dd7bddf119708644" kindref="member">Ints</ref><sp/><ref refid="_detectors_8hpp_1af8a018699aa5d8544bc4877f40463a5a" kindref="member">m_index</ref>(<ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref>,-1);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_detectors" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_detectors" kindref="compound">Detectors</ref></highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="class_detectors_1a4f3fbf890600aec5e75cdd943ec274d4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_detectors_1a4f3fbf890600aec5e75cdd943ec274d4" kindref="member">Detectors</ref>(){}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_detectors_1a930c2b917e87154c1337ecf8551a3ab4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="lib_co_8hpp_1a632090884b4aa0585e747446a2683963" kindref="member">Strings</ref><sp/><ref refid="class_detectors_1a930c2b917e87154c1337ecf8551a3ab4" kindref="member">types_handled</ref><sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;ge&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bgo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;labr&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;paris&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dssd&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;eden&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;RF&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>static<sp/>bool<sp/>typeHandled(int<sp/>const<sp/>&amp;<sp/>id)<sp/>const<sp/>{}<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>static<sp/>bool<sp/>typeID(int<sp/>const<sp/>&amp;<sp/>id)<sp/>const<sp/>{}<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="class_detectors_1a47ae394beae7efa2fb8fa1a3c7f8427d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a47ae394beae7efa2fb8fa1a3c7f8427d" kindref="member">exists</ref>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a29d73ee6f748035ace066db47a923735" kindref="member">m_exists</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>];}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a03f6e9974f958b86ddbbc4670d0209a2" kindref="member">load</ref><sp/>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a3d5631f8fd2770b6b3a2a178130519ad" kindref="member">readFile</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1abb9cb0d9f8cc7e136ee0ed7f357ee42b" kindref="member">file</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a8d5c0f2d189ddda12ed3c36f13887cfd" kindref="member">makeArrays</ref>();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_detectors_1a8780c1daca5724bb16ba07824f3c3665" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/><ref refid="class_detectors_1a8780c1daca5724bb16ba07824f3c3665" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_hit_8hpp_1af181231d97866aa957e8fe8bd67f7f64" kindref="member">Label_cast</ref>(<ref refid="class_detectors_1a6994304445c6fc6137346690683b56ec" kindref="member">m_list</ref>.size());}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="class_detectors_1a4d20a642176613274e1b8a42f7a0bf01" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a4d20a642176613274e1b8a42f7a0bf01" kindref="member">number</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1aa765faf4ef9745156ccb29d616ff3860" kindref="member">m_nb_detectors</ref>;}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>the<sp/>existing<sp/>detectors<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="class_detectors_1a2990dd023e93c1e50343aa47b94453a0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a2990dd023e93c1e50343aa47b94453a0" kindref="member">begin</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a6994304445c6fc6137346690683b56ec" kindref="member">m_list</ref>.begin();}</highlight></codeline>
<codeline lineno="83" refid="class_detectors_1aa93345c742983ca53dfde026c8285893" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1aa93345c742983ca53dfde026c8285893" kindref="member">end</ref><sp/><sp/>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a6994304445c6fc6137346690683b56ec" kindref="member">m_list</ref>.end<sp/><sp/>();}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="class_detectors_1a9b89d5cf2dbdf1e56b6703cfcbc49547" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a9b89d5cf2dbdf1e56b6703cfcbc49547" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a6994304445c6fc6137346690683b56ec" kindref="member">m_list</ref>.begin();}</highlight></codeline>
<codeline lineno="86" refid="class_detectors_1abca6e29645c33e041e8273845f6c6dd9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1abca6e29645c33e041e8273845f6c6dd9" kindref="member">end</ref><sp/><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a6994304445c6fc6137346690683b56ec" kindref="member">m_list</ref>.end<sp/><sp/>();}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="class_detectors_1ae0bd442e4f8fa32b23f890a3f25e595b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1ae0bd442e4f8fa32b23f890a3f25e595b" kindref="member">get</ref>()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a6994304445c6fc6137346690683b56ec" kindref="member">m_list</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;}</highlight></codeline>
<codeline lineno="89" refid="class_detectors_1aae4bbbd3eb0f515868e4160a7091beef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1aae4bbbd3eb0f515868e4160a7091beef" kindref="member">list</ref>()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a6994304445c6fc6137346690683b56ec" kindref="member">m_list</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;}</highlight></codeline>
<codeline lineno="90" refid="class_detectors_1ad535ab86053baec3294cda955ea275cd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1ad535ab86053baec3294cda955ea275cd" kindref="member">names</ref>()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a6994304445c6fc6137346690683b56ec" kindref="member">m_list</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;}</highlight></codeline>
<codeline lineno="91" refid="class_detectors_1a67986c6e80a0ac1fc78539eff3d52e9e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a67986c6e80a0ac1fc78539eff3d52e9e" kindref="member">getExistsArray</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a29d73ee6f748035ace066db47a923735" kindref="member">m_exists</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;}</highlight></codeline>
<codeline lineno="92" refid="class_detectors_1a7170a4aafdd8cedc0beab11e87446b0a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a7170a4aafdd8cedc0beab11e87446b0a" kindref="member">getLabelsMap</ref>()</highlight><highlight class="keyword"><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a1f886bf622ed3fd2bb9c4f749504415a" kindref="member">m_labels_map</ref><sp/><sp/><sp/><sp/>;}</highlight></codeline>
<codeline lineno="93" refid="class_detectors_1abdba5d8991ded8844de7900d8e64d788" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1abdba5d8991ded8844de7900d8e64d788" kindref="member">labels</ref>()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a1a7b4644a4309a4d90adfd9fcf13d7a0" kindref="member">m_labels_vector</ref><sp/>;}</highlight></codeline>
<codeline lineno="94" refid="class_detectors_1a6c368aa8fe9d985fd742371179718d71" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a6c368aa8fe9d985fd742371179718d71" kindref="member">types</ref>()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a0e9964892db1d2dfdb3a8cbdd6c87aeb" kindref="member">m_types_ID</ref>;}</highlight></codeline>
<codeline lineno="95" refid="class_detectors_1ae462c1e1acd5b2dc7757715fd68c362d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1ae462c1e1acd5b2dc7757715fd68c362d" kindref="member">typesArray</ref>()</highlight><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a5677eaffae4eea104f04c3f85e2c5fbe" kindref="member">m_types</ref>;}</highlight></codeline>
<codeline lineno="96" refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a5677eaffae4eea104f04c3f85e2c5fbe" kindref="member">m_types</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>];}</highlight></codeline>
<codeline lineno="97" refid="class_detectors_1ab4d5e6cc24173a65a35788ba7c680264" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1ab4d5e6cc24173a65a35788ba7c680264" kindref="member">typeIndex</ref>(<ref refid="_detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a" kindref="member">dType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref><sp/>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1acb3bb5bfbb60a5861b87ddc17c7466d8" kindref="member">m_types_index</ref>[<ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref>];}</highlight></codeline>
<codeline lineno="98" refid="class_detectors_1a8bde22f3796788ad458127147fd3a5d2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a8bde22f3796788ad458127147fd3a5d2" kindref="member">typeIndex</ref>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1acb3bb5bfbb60a5861b87ddc17c7466d8" kindref="member">m_types_index</ref>[</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref>(<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>)];}</highlight></codeline>
<codeline lineno="99" refid="class_detectors_1a52d1ae2692c70d702883e5c1a637ce51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a52d1ae2692c70d702883e5c1a637ce51" kindref="member">getTypeName</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>type_i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a0e9964892db1d2dfdb3a8cbdd6c87aeb" kindref="member">m_types_ID</ref>[type_i];}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="class_detectors_1a9f0298ea9621d3680607633908b1daff" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a9f0298ea9621d3680607633908b1daff" kindref="member">getName</ref><sp/>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a6994304445c6fc6137346690683b56ec" kindref="member">m_list</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;}</highlight></codeline>
<codeline lineno="102" refid="class_detectors_1a538487678aa928ab2956e6fb40c90472" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a538487678aa928ab2956e6fb40c90472" kindref="member">getLabel</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1afd00ee8a76386f7356a12858b1dd7c6b" kindref="member">name</ref><sp/>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a1f886bf622ed3fd2bb9c4f749504415a" kindref="member">m_labels_map</ref>[<ref refid="class_detectors_1afd00ee8a76386f7356a12858b1dd7c6b" kindref="member">name</ref>];}</highlight></codeline>
<codeline lineno="103" refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1afd00ee8a76386f7356a12858b1dd7c6b" kindref="member">name</ref><sp/>)<sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a1f886bf622ed3fd2bb9c4f749504415a" kindref="member">m_labels_map</ref>[<ref refid="class_detectors_1afd00ee8a76386f7356a12858b1dd7c6b" kindref="member">name</ref>];}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="class_detectors_1a0aa2791c5f5b7133fd5816d2f4dc0b56" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a0aa2791c5f5b7133fd5816d2f4dc0b56" kindref="member">operator=</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename)<sp/>{</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_detectors_1a03f6e9974f958b86ddbbc4670d0209a2" kindref="member">load</ref>(filename);}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="class_detectors_1a93874c5bc3918096ad880329b89cd632" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a93874c5bc3918096ad880329b89cd632" kindref="member">operator[] </ref>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a6994304445c6fc6137346690683b56ec" kindref="member">m_list</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>];}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="class_detectors_1a9feeeb0d176405478ffc53b1eda6c9a8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a93874c5bc3918096ad880329b89cd632" kindref="member">operator[] </ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1afd00ee8a76386f7356a12858b1dd7c6b" kindref="member">name</ref>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a1f886bf622ed3fd2bb9c4f749504415a" kindref="member">m_labels_map</ref>[<ref refid="class_detectors_1afd00ee8a76386f7356a12858b1dd7c6b" kindref="member">name</ref>];}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="class_detectors_1ab18d3d10214de7727199f9090fdde164" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>bool()<sp/>const<sp/>&amp;<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a601c91cb6246165a623dd99eb6c4bdc3" kindref="member">m_ok</ref>;}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="class_detectors_1adc3246e1180dfd8b2fb52bf0924aa7ef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1adc3246e1180dfd8b2fb52bf0924aa7ef" kindref="member">nbTypes</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a0e9964892db1d2dfdb3a8cbdd6c87aeb" kindref="member">m_types_ID</ref>.size();}</highlight></codeline>
<codeline lineno="118" refid="class_detectors_1af2539ac04844248329ca07525fc5da7b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1af2539ac04844248329ca07525fc5da7b" kindref="member">nbTypes</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a0e9964892db1d2dfdb3a8cbdd6c87aeb" kindref="member">m_types_ID</ref>.size();}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="class_detectors_1ae5e6ff02bf3d79da3f034f7404e0677c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1ae5e6ff02bf3d79da3f034f7404e0677c" kindref="member">nbOfType</ref>(<ref refid="_detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a" kindref="member">dType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref>)<sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="string__functions_8hpp_1a87d8e2cb69021ab11e443cb140349eb6" kindref="member">found</ref>(<ref refid="class_detectors_1a5677eaffae4eea104f04c3f85e2c5fbe" kindref="member">m_types</ref>,<sp/><ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref>))<sp/><ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(</highlight><highlight class="stringliteral">&quot;Detectors<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>handled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a767e2461f5118cd3789c50786b297037" kindref="member">m_type_counter</ref>[<ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref>];</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="class_detectors_1afd00ee8a76386f7356a12858b1dd7c6b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1afd00ee8a76386f7356a12858b1dd7c6b" kindref="member">name</ref>(<ref refid="_detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a" kindref="member">dType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a3c4f247022eb113c0371899060ea0199" kindref="member">index</ref>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a5063cdef991cb6ddbb36be3f55d50e40" kindref="member">m_names</ref>[<ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref>][<ref refid="class_detectors_1a3c4f247022eb113c0371899060ea0199" kindref="member">index</ref>];}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="class_detectors_1afc638e3f514370a477c6445efc11dfcb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1afc638e3f514370a477c6445efc11dfcb" kindref="member">label</ref>(<ref refid="_detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a" kindref="member">dType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a3c4f247022eb113c0371899060ea0199" kindref="member">index</ref>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a5a5289db11cb3ad98c96c69f58f6a6d5" kindref="member">m_labels</ref>[<ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref>][<ref refid="class_detectors_1a3c4f247022eb113c0371899060ea0199" kindref="member">index</ref>];}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="class_detectors_1a3c4f247022eb113c0371899060ea0199" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a3c4f247022eb113c0371899060ea0199" kindref="member">index</ref>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_detectors_8hpp_1af8a018699aa5d8544bc4877f40463a5a" kindref="member">m_index</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>];}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="class_detectors_1af54374260cdfa1cd60b6364f07f882b4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1af54374260cdfa1cd60b6364f07f882b4" kindref="member">ADCBin</ref>(<ref refid="_detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a" kindref="member">dType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>it<sp/>=<sp/><ref refid="class_detectors_1a244a6b586bda7fd0054a8217ed005019" kindref="member">ADC_bins</ref>.find(<ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_detectors_1a244a6b586bda7fd0054a8217ed005019" kindref="member">ADC_bins</ref>.end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a244a6b586bda7fd0054a8217ed005019" kindref="member">ADC_bins</ref>[</highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="class_detectors_1aaadeec0d94fd7daea1b8e4c9d861fbde" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1aaadeec0d94fd7daea1b8e4c9d861fbde" kindref="member">energyBin</ref>(<ref refid="_detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a" kindref="member">dType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>it<sp/>=<sp/><ref refid="class_detectors_1af47d4b9af7b3f9e698b3e0b63a8b77eb" kindref="member">energy_bins</ref>.find(<ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_detectors_1af47d4b9af7b3f9e698b3e0b63a8b77eb" kindref="member">energy_bins</ref>.end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1af47d4b9af7b3f9e698b3e0b63a8b77eb" kindref="member">energy_bins</ref>[</highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="154" refid="class_detectors_1a4cc1eacca959595eb53a16b75f2d65d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a4cc1eacca959595eb53a16b75f2d65d8" kindref="member">energyBidimBin</ref>(<ref refid="_detectors_8hpp_1a7ea6a1daded60b9200989100a41bbc3a" kindref="member">dType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>it<sp/>=<sp/><ref refid="class_detectors_1a13bd00fc428ecb36ba850e09cc5e147c" kindref="member">energy_bidim_bins</ref>.find(<ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/><ref refid="class_detectors_1a13bd00fc428ecb36ba850e09cc5e147c" kindref="member">energy_bidim_bins</ref>.end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a13bd00fc428ecb36ba850e09cc5e147c" kindref="member">energy_bidim_bins</ref>[</highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="class_detectors_1aba567529b262d88913de6ccb05a71a99" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1aba567529b262d88913de6ccb05a71a99" kindref="member">getADCBin</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a244a6b586bda7fd0054a8217ed005019" kindref="member">ADC_bins</ref>;}</highlight></codeline>
<codeline lineno="164" refid="class_detectors_1ae1ead00f89e7fcb96cefa082f9b4e290" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1ae1ead00f89e7fcb96cefa082f9b4e290" kindref="member">getEnergyBin</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1af47d4b9af7b3f9e698b3e0b63a8b77eb" kindref="member">energy_bins</ref>;}</highlight></codeline>
<codeline lineno="166" refid="class_detectors_1abb012a70535ce52a84340d656a75252f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1abb012a70535ce52a84340d656a75252f" kindref="member">getBidimBin</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a13bd00fc428ecb36ba850e09cc5e147c" kindref="member">energy_bidim_bins</ref>;}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>:<sp/>a<sp/>more<sp/>clever<sp/>print<sp/>with<sp/>also<sp/>the<sp/>type<sp/>and<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="class_detectors_1a66378b2d41c18a11de52e9590380028f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a66378b2d41c18a11de52e9590380028f" kindref="member">Print</ref>()<sp/>{</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d<sp/>:<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d!=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{std::cout<sp/>&lt;&lt;<sp/>d<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;}<sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1af2bb20ee60f504df326b87e9ebbaef30" kindref="member">resize</ref>(<ref refid="lib_co_8hpp_1ad29aff8b0f7fde4ef0291331012e596a" kindref="member">ushort</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>new_size);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="class_detectors_1abb9cb0d9f8cc7e136ee0ed7f357ee42b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1abb9cb0d9f8cc7e136ee0ed7f357ee42b" kindref="member">file</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a28bdd4905a9dd8f89bd74e992c2d5fbd" kindref="member">m_filename</ref>;}</highlight></codeline>
<codeline lineno="175" refid="class_detectors_1a215f3df7a89de48d67b832a3240bbfa6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a215f3df7a89de48d67b832a3240bbfa6" kindref="member">file</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a28bdd4905a9dd8f89bd74e992c2d5fbd" kindref="member">m_filename</ref>;}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Useful<sp/>informations<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="class_detectors_1a601c91cb6246165a623dd99eb6c4bdc3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a601c91cb6246165a623dd99eb6c4bdc3" kindref="member">m_ok</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182" refid="class_detectors_1a76926048c17f155fc444aab17233e0f8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a76926048c17f155fc444aab17233e0f8" kindref="member">m_loaded</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183" refid="class_detectors_1ac7bf8a0616a138a02d7c09bdf898fe66" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1ac7bf8a0616a138a02d7c09bdf898fe66" kindref="member">m_Initialised</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184" refid="class_detectors_1aa765faf4ef9745156ccb29d616ff3860" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="lib_co_8hpp_1ad29aff8b0f7fde4ef0291331012e596a" kindref="member">ushort</ref><sp/><ref refid="class_detectors_1aa765faf4ef9745156ccb29d616ff3860" kindref="member">m_nb_detectors</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="185" refid="class_detectors_1a28bdd4905a9dd8f89bd74e992c2d5fbd" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_detectors_1a28bdd4905a9dd8f89bd74e992c2d5fbd" kindref="member">m_filename</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Arrays<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="class_detectors_1a5677eaffae4eea104f04c3f85e2c5fbe" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="lib_co_8hpp_1a632090884b4aa0585e747446a2683963" kindref="member">Strings</ref><sp/><ref refid="class_detectors_1a5677eaffae4eea104f04c3f85e2c5fbe" kindref="member">m_types</ref><sp/>=<sp/><ref refid="lib_co_8hpp_1a632090884b4aa0585e747446a2683963" kindref="member">Strings</ref>(<ref refid="_detectors_8hpp_1a66ffad8e00f3e94ca2040082469213c6" kindref="member">SIZE_LOOKUP</ref>);</highlight></codeline>
<codeline lineno="189" refid="class_detectors_1a29d73ee6f748035ace066db47a923735" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_bools" kindref="compound">Bools</ref><sp/><sp/><sp/><ref refid="class_detectors_1a29d73ee6f748035ace066db47a923735" kindref="member">m_exists</ref>;</highlight></codeline>
<codeline lineno="190" refid="class_detectors_1a6994304445c6fc6137346690683b56ec" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="lib_co_8hpp_1a632090884b4aa0585e747446a2683963" kindref="member">Strings</ref><sp/><ref refid="class_detectors_1a6994304445c6fc6137346690683b56ec" kindref="member">m_list</ref>;</highlight></codeline>
<codeline lineno="191" refid="class_detectors_1a0e9964892db1d2dfdb3a8cbdd6c87aeb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="lib_co_8hpp_1a632090884b4aa0585e747446a2683963" kindref="member">Strings</ref><sp/><ref refid="class_detectors_1a0e9964892db1d2dfdb3a8cbdd6c87aeb" kindref="member">m_types_ID</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="class_detectors_1a1a7b4644a4309a4d90adfd9fcf13d7a0" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;Label&gt;<sp/><ref refid="class_detectors_1a1a7b4644a4309a4d90adfd9fcf13d7a0" kindref="member">m_labels_vector</ref>;</highlight></codeline>
<codeline lineno="194" refid="class_detectors_1a1f886bf622ed3fd2bb9c4f749504415a" refkind="member"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;std::string,<sp/>Label&gt;<sp/><ref refid="class_detectors_1a1f886bf622ed3fd2bb9c4f749504415a" kindref="member">m_labels_map</ref>;</highlight></codeline>
<codeline lineno="195" refid="class_detectors_1acb3bb5bfbb60a5861b87ddc17c7466d8" refkind="member"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;dType,<sp/>int&gt;<sp/><ref refid="class_detectors_1acb3bb5bfbb60a5861b87ddc17c7466d8" kindref="member">m_types_index</ref>;</highlight></codeline>
<codeline lineno="196" refid="class_detectors_1a767e2461f5118cd3789c50786b297037" refkind="member"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;dType,<sp/>int&gt;<sp/><ref refid="class_detectors_1a767e2461f5118cd3789c50786b297037" kindref="member">m_type_counter</ref>;<sp/></highlight><highlight class="comment">//<sp/>To<sp/>get<sp/>the<sp/>number<sp/>of<sp/>detectors<sp/>of<sp/>each<sp/>type.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="class_detectors_1a5063cdef991cb6ddbb36be3f55d50e40" refkind="member"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;dType,<sp/>Strings&gt;<sp/><ref refid="class_detectors_1a5063cdef991cb6ddbb36be3f55d50e40" kindref="member">m_names</ref>;</highlight></codeline>
<codeline lineno="198" refid="class_detectors_1a5a5289db11cb3ad98c96c69f58f6a6d5" refkind="member"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;dType,<sp/>Label_vec&gt;<sp/><ref refid="class_detectors_1a5a5289db11cb3ad98c96c69f58f6a6d5" kindref="member">m_labels</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Binning<sp/>informations<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="class_detectors_1af47d4b9af7b3f9e698b3e0b63a8b77eb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unordered_map&lt;dType,<sp/>THBinning&gt;<sp/><ref refid="class_detectors_1af47d4b9af7b3f9e698b3e0b63a8b77eb" kindref="member">energy_bins</ref>;</highlight></codeline>
<codeline lineno="202" refid="class_detectors_1a244a6b586bda7fd0054a8217ed005019" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unordered_map&lt;dType,<sp/>THBinning&gt;<sp/><ref refid="class_detectors_1a244a6b586bda7fd0054a8217ed005019" kindref="member">ADC_bins</ref>;</highlight></codeline>
<codeline lineno="203" refid="class_detectors_1a13bd00fc428ecb36ba850e09cc5e147c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unordered_map&lt;dType,<sp/>THBinning&gt;<sp/><ref refid="class_detectors_1a13bd00fc428ecb36ba850e09cc5e147c" kindref="member">energy_bidim_bins</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="207" refid="class_detectors_1_1_error" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_detectors_1_1_error" kindref="compound">Error</ref></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="209" refid="class_detectors_1_1_error_1a59974e434a9b91b0ed91c2674ad20452" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_detectors_1_1_error_1a59974e434a9b91b0ed91c2674ad20452" kindref="member">Error</ref>()<sp/>noexcept<sp/>{<ref refid="print_8hpp_1a553a9a331cc4556c2d9bb3aaa8533528" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;Detector<sp/>ID<sp/>file<sp/>not<sp/>loaded&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="210" refid="class_detectors_1_1_error_1ae214a13f4991963e3beadfa56cf4ccaf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_detectors_1_1_error_1ae214a13f4991963e3beadfa56cf4ccaf" kindref="member">Error</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>message)<sp/>noexcept<sp/>{<ref refid="print_8hpp_1a553a9a331cc4556c2d9bb3aaa8533528" kindref="member">error</ref>(message);}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="class_detectors_1_1_empty_error" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_detectors_1_1_empty_error" kindref="compound">EmptyError</ref></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="215" refid="class_detectors_1_1_empty_error_1aeeb433faed85351daaf637651f38fdf9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_detectors_1_1_empty_error_1aeeb433faed85351daaf637651f38fdf9" kindref="member">EmptyError</ref>()<sp/>noexcept<sp/>{<ref refid="print_8hpp_1a553a9a331cc4556c2d9bb3aaa8533528" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;Detector<sp/>ID<sp/>file<sp/>empty<sp/>!&quot;</highlight><highlight class="normal">);}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="217" refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" refkind="member"><highlight class="normal">}<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="class_detectors_1af2bb20ee60f504df326b87e9ebbaef30" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1af2bb20ee60f504df326b87e9ebbaef30" kindref="member">Detectors::resize</ref>(<ref refid="lib_co_8hpp_1ad29aff8b0f7fde4ef0291331012e596a" kindref="member">ushort</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>new_size)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Maximum<sp/>label<sp/>is&quot;</highlight><highlight class="normal">,<sp/>new_size);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><ref refid="class_detectors_1a29d73ee6f748035ace066db47a923735" kindref="member">m_exists</ref>.<ref refid="class_bools_1a628b60a5f89363e2b59de0bd58267ddc" kindref="member">resize</ref>(new_size,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><ref refid="class_detectors_1a6994304445c6fc6137346690683b56ec" kindref="member">m_list</ref>.resize(new_size,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><ref refid="class_detectors_1a5677eaffae4eea104f04c3f85e2c5fbe" kindref="member">m_types</ref>.resize(new_size,<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="_detectors_8hpp_1a2fa75cda21d89a0dcd5f8135c5a2c8bc" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="_detectors_8hpp_1a2fa75cda21d89a0dcd5f8135c5a2c8bc" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/><ref refid="class_detectors" kindref="compound">Detectors</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>)</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d<sp/>:<sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>)<sp/>{out<sp/>&lt;&lt;<sp/>d<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="class_detectors_1a03f6e9974f958b86ddbbc4670d0209a2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a03f6e9974f958b86ddbbc4670d0209a2" kindref="member">Detectors::load</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename)</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_detectors_1a3d5631f8fd2770b6b3a2a178130519ad" kindref="member">readFile</ref>(filename);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_detectors_1a8d5c0f2d189ddda12ed3c36f13887cfd" kindref="member">makeArrays</ref>();</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="class_detectors_1a3d5631f8fd2770b6b3a2a178130519ad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a3d5631f8fd2770b6b3a2a178130519ad" kindref="member">Detectors::readFile</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>filename)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>std::ifstream<sp/>inputfile(filename,<sp/>std::ifstream::in);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inputfile.is_open())</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_detectors_1a601c91cb6246165a623dd99eb6c4bdc3" kindref="member">m_ok</ref><sp/>=<sp/><ref refid="class_detectors_1a76926048c17f155fc444aab17233e0f8" kindref="member">m_loaded</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_detectors_1a6994304445c6fc6137346690683b56ec" kindref="member">m_list</ref>.clear();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print_8hpp_1a553a9a331cc4556c2d9bb3aaa8533528" kindref="member">error</ref>(<ref refid="string__functions_8hpp_1ae058d07fbc702d0b0f79e3650e7804a2" kindref="member">concatenate</ref>(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>open<sp/>ID<sp/>file<sp/>named<sp/>&apos;&quot;</highlight><highlight class="normal">,<sp/>filename,<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="files__functions_8hpp_1afd584978228fac5fae283c12837378dd" kindref="member">file_is_empty</ref>(inputfile))</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_detectors_1a601c91cb6246165a623dd99eb6c4bdc3" kindref="member">m_ok</ref><sp/>=<sp/><ref refid="class_detectors_1a76926048c17f155fc444aab17233e0f8" kindref="member">m_loaded</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(filename,<sp/></highlight><highlight class="stringliteral">&quot;is<sp/>empty<sp/>!!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_detectors_1a6994304445c6fc6137346690683b56ec" kindref="member">m_list</ref>.clear();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><ref refid="class_detectors_1a28bdd4905a9dd8f89bd74e992c2d5fbd" kindref="member">m_filename</ref><sp/>=<sp/>filename;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-----------------------------------------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//First<sp/>reading<sp/>of<sp/>the<sp/>file<sp/>:<sp/>extract<sp/>the<sp/>maximum<sp/>label<sp/>to<sp/>be<sp/>the<sp/>size<sp/>of<sp/>the<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><ref refid="lib_co_8hpp_1ad29aff8b0f7fde4ef0291331012e596a" kindref="member">ushort</ref><sp/><ref refid="class_detectors_1a8780c1daca5724bb16ba07824f3c3665" kindref="member">size</ref><sp/>=<sp/>0;<sp/>std::string<sp/>line<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_detectors_1afd00ee8a76386f7356a12858b1dd7c6b" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/><ref refid="lib_co_8hpp_1ad29aff8b0f7fde4ef0291331012e596a" kindref="member">ushort</ref><sp/><ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>std::string<sp/>oneline;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(getline(inputfile,<sp/>oneline))</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istringstream<sp/>is(oneline);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>is&gt;&gt;<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_detectors_1a8780c1daca5724bb16ba07824f3c3665" kindref="member">size</ref>&lt;<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>)<sp/><ref refid="class_detectors_1a8780c1daca5724bb16ba07824f3c3665" kindref="member">size</ref><sp/>=<sp/><ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><ref refid="class_detectors_1a8780c1daca5724bb16ba07824f3c3665" kindref="member">size</ref>++;</highlight><highlight class="comment">//<sp/>The<sp/>size<sp/>of<sp/>the<sp/>vector<sp/>must<sp/>be<sp/>label_max+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-----------------------------------------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Second<sp/>reading<sp/>:<sp/>fill<sp/>the<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><ref refid="class_detectors_1a6994304445c6fc6137346690683b56ec" kindref="member">m_list</ref>.resize(<ref refid="class_detectors_1a8780c1daca5724bb16ba07824f3c3665" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><ref refid="class_detectors_1a29d73ee6f748035ace066db47a923735" kindref="member">m_exists</ref>.<ref refid="class_bools_1a628b60a5f89363e2b59de0bd58267ddc" kindref="member">resize</ref>(<ref refid="class_detectors_1a8780c1daca5724bb16ba07824f3c3665" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>inputfile.clear();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>inputfile.seekg(0,<sp/>inputfile.beg);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(getline(inputfile,<sp/>oneline))</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istringstream<sp/>is(oneline);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>is&gt;&gt;<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>&gt;&gt;<ref refid="class_detectors_1afd00ee8a76386f7356a12858b1dd7c6b" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oneline.size()&gt;1)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_detectors_1a29d73ee6f748035ace066db47a923735" kindref="member">m_exists</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_detectors_1a6994304445c6fc6137346690683b56ec" kindref="member">m_list</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/><ref refid="class_detectors_1afd00ee8a76386f7356a12858b1dd7c6b" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_detectors_1afd00ee8a76386f7356a12858b1dd7c6b" kindref="member">name</ref>!=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_detectors_1a1f886bf622ed3fd2bb9c4f749504415a" kindref="member">m_labels_map</ref>[<ref refid="class_detectors_1afd00ee8a76386f7356a12858b1dd7c6b" kindref="member">name</ref>]<sp/>=<sp/><ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_detectors_1a1a7b4644a4309a4d90adfd9fcf13d7a0" kindref="member">m_labels_vector</ref>.push_back(<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>std::sort(<ref refid="class_detectors_1a1a7b4644a4309a4d90adfd9fcf13d7a0" kindref="member">m_labels_vector</ref>.begin(),<sp/><ref refid="class_detectors_1a1a7b4644a4309a4d90adfd9fcf13d7a0" kindref="member">m_labels_vector</ref>.end());</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>inputfile.close();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Labels<sp/>extracted<sp/>from&quot;</highlight><highlight class="normal">,<sp/>filename);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><ref refid="class_detectors_1a601c91cb6246165a623dd99eb6c4bdc3" kindref="member">m_ok</ref><sp/>=<sp/><ref refid="class_detectors_1a76926048c17f155fc444aab17233e0f8" kindref="member">m_loaded</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="class_detectors_1a8d5c0f2d189ddda12ed3c36f13887cfd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a8d5c0f2d189ddda12ed3c36f13887cfd" kindref="member">Detectors::makeArrays</ref>()</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_detectors_1a76926048c17f155fc444aab17233e0f8" kindref="member">m_loaded</ref>)<sp/>{</highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;ID<sp/>file<sp/>not<sp/>loaded<sp/>!!&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Looping<sp/>through<sp/>the<sp/>labels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/><ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref><sp/>=<sp/>0;<sp/><ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>&lt;this-&gt;<ref refid="class_detectors_1a8780c1daca5724bb16ba07824f3c3665" kindref="member">size</ref>();<sp/><ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>++)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>det_name<sp/>=<sp/><ref refid="class_detectors_1a6994304445c6fc6137346690683b56ec" kindref="member">m_list</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>];</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istringstream<sp/>is(<ref refid="string__functions_8hpp_1ab2c67e2ba68d5a42ce9a48dafdbba829" kindref="member">replaceCharacter</ref>(det_name,<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Looping<sp/>through<sp/>the<sp/>subparts<sp/>of<sp/>the<sp/>name<sp/>&quot;subpart_subpart_..._subpart&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(is<sp/>&gt;&gt;<sp/>str)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;red&quot;</highlight><highlight class="normal"><sp/>||<sp/>str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;green&quot;</highlight><highlight class="normal"><sp/>||<sp/>str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;black&quot;</highlight><highlight class="normal"><sp/>||<sp/>str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;blue&quot;</highlight><highlight class="normal"><sp/>||<sp/>str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ge&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_detectors_8hpp_1a5da74af4e038f2a435565e2e93a6831e" kindref="member">isGe</ref><sp/><sp/><sp/>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_detectors_1a5677eaffae4eea104f04c3f85e2c5fbe" kindref="member">m_types</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/><ref refid="class_detectors_1a930c2b917e87154c1337ecf8551a3ab4" kindref="member">types_handled</ref>[0];</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;BGO1&quot;</highlight><highlight class="normal"><sp/>||<sp/>str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;BGO2&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_detectors_8hpp_1acad86c343cb1a6d3f382c2468415cc8a" kindref="member">isBGO</ref><sp/><sp/>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_detectors_1a5677eaffae4eea104f04c3f85e2c5fbe" kindref="member">m_types</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/><ref refid="class_detectors_1a930c2b917e87154c1337ecf8551a3ab4" kindref="member">types_handled</ref>[1];</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;FATIMA&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_detectors_8hpp_1ac1f4e8d98df1dbbcb0c6ccf4a7b9a538" kindref="member">isLaBr3</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_detectors_1a5677eaffae4eea104f04c3f85e2c5fbe" kindref="member">m_types</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/><ref refid="class_detectors_1a930c2b917e87154c1337ecf8551a3ab4" kindref="member">types_handled</ref>[2];</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;PARIS&quot;</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_detectors_8hpp_1a82c5910e3b4f178c276c8b888c5ac162" kindref="member">isParis</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_detectors_1a5677eaffae4eea104f04c3f85e2c5fbe" kindref="member">m_types</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/><ref refid="class_detectors_1a930c2b917e87154c1337ecf8551a3ab4" kindref="member">types_handled</ref>[3];</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;DSSD&quot;</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_detectors_1a5677eaffae4eea104f04c3f85e2c5fbe" kindref="member">m_types</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/><ref refid="class_detectors_1a930c2b917e87154c1337ecf8551a3ab4" kindref="member">types_handled</ref>[4];</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_detectors_8hpp_1a3148345147f51e96aaa73e5d9f8e9d93" kindref="member">isDSSD</ref><sp/>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;EDEN&quot;</highlight><highlight class="normal"><sp/><sp/>){</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_detectors_1a5677eaffae4eea104f04c3f85e2c5fbe" kindref="member">m_types</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/><ref refid="class_detectors_1a930c2b917e87154c1337ecf8551a3ab4" kindref="member">types_handled</ref>[5];</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_detectors_8hpp_1acb7c68db854de8244a7d8149cba30a11" kindref="member">isEden</ref><sp/>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;RF&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>){</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_detectors_1a5677eaffae4eea104f04c3f85e2c5fbe" kindref="member">m_types</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/><ref refid="class_detectors_1a930c2b917e87154c1337ecf8551a3ab4" kindref="member">types_handled</ref>[6];</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_detectors_8hpp_1ae7667a7434fc704d9dcaf6d5e6bd8e39" kindref="member">isRF</ref><sp/><sp/><sp/>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>here<sp/>any<sp/>additionnal<sp/>detector<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Additionnal<sp/>position<sp/>information<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str.size()&gt;2<sp/>&amp;&amp;<sp/>str[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;R&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>str[2]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_detectors_8hpp_1aa4d7f26a632b3df166ad7a08cad05af1" kindref="member">clover_pos</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str.substr(0,2)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;BR&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_detectors_8hpp_1a4e969925c521d2b624de9829460bf419" kindref="member">isBack</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str.substr(0,2)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;FR&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_detectors_8hpp_1aa4101394fbd7e5aeb24813175aeb4056" kindref="member">isFront</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;S1&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_detectors_8hpp_1adee12970e5a76c075d5b98b5c098b22a" kindref="member">isSector</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_detectors_8hpp_1a401c5e7f43ae309c8fcd39c977104f3e" kindref="member">isS1</ref><sp/><sp/><sp/><sp/>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;S2&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_detectors_8hpp_1adee12970e5a76c075d5b98b5c098b22a" kindref="member">isSector</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_detectors_8hpp_1a2d41f8a0901b30f33b83df128512fc4f" kindref="member">isS2</ref><sp/><sp/><sp/><sp/>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;R&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_detectors_8hpp_1a256ea354de5d7f81049eaf74528626b7" kindref="member">isRing</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Other<sp/>lookup<sp/>tables<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_detectors_8hpp_1a7f34eb1e6f5368d8eda70a8558cc971e" kindref="member">isClover</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/>(<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>&gt;22<sp/>&amp;&amp;<sp/><ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>&lt;167);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_detectors_8hpp_1adccbc8332a89f48a35baea4a37255e2c" kindref="member">labelToClover</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/><ref refid="lib_co_8hpp_1ade77d1f37b1311b3f80ce429a33fd226" kindref="member">uchar_cast</ref>((<ref refid="_detectors_8hpp_1a7f34eb1e6f5368d8eda70a8558cc971e" kindref="member">isClover</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>])<sp/>?<sp/>(<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>-23)%6<sp/>:<sp/>-1);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_detectors_1a29d73ee6f748035ace066db47a923735" kindref="member">m_exists</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>])</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>compressed<sp/>labels<sp/>is<sp/>filled<sp/>with<sp/>the<sp/>current<sp/>number<sp/>of<sp/>detectors<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_detectors_8hpp_1adc256156b68f8dd6b9f2c2da57808bd3" kindref="member">compressedLabel</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/><ref refid="class_detectors_1aa765faf4ef9745156ccb29d616ff3860" kindref="member">m_nb_detectors</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>the<sp/>number<sp/>of<sp/>detectors<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_detectors_1aa765faf4ef9745156ccb29d616ff3860" kindref="member">m_nb_detectors</ref>++;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Counts<sp/>the<sp/>number<sp/>of<sp/>detectors<sp/>for<sp/>the<sp/>current<sp/>type<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>detector_index<sp/>=<sp/><ref refid="class_detectors_1a767e2461f5118cd3789c50786b297037" kindref="member">m_type_counter</ref>[<ref refid="class_detectors_1a5677eaffae4eea104f04c3f85e2c5fbe" kindref="member">m_types</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]]++;<sp/></highlight><highlight class="comment">//<sp/>NB:<sp/>Returns<sp/>the<sp/>number<sp/>before<sp/>increment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_detectors_8hpp_1af8a018699aa5d8544bc4877f40463a5a" kindref="member">m_index</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/>detector_index;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_type<sp/>=<sp/><ref refid="class_detectors_1a5677eaffae4eea104f04c3f85e2c5fbe" kindref="member">m_types</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>];</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lookup<sp/>table<sp/>to<sp/>get<sp/>the<sp/>name<sp/>from<sp/>the<sp/>type<sp/>and<sp/>detector<sp/>index<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_detectors_1a5063cdef991cb6ddbb36be3f55d50e40" kindref="member">m_names</ref>[_type].push_back(det_name);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lookup<sp/>table<sp/>between<sp/>the<sp/>global<sp/>label<sp/>from<sp/>the<sp/>type<sp/>and<sp/>detector<sp/>index<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_detectors_1a5a5289db11cb3ad98c96c69f58f6a6d5" kindref="member">m_labels</ref>[_type].push_back(<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="_detectors_8hpp_1adc256156b68f8dd6b9f2c2da57808bd3" kindref="member">compressedLabel</ref>[<ref refid="class_detectors_1a349500ec816bd7761de87c54b95000bc" kindref="member">label</ref>]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>the<sp/>list<sp/>of<sp/>all<sp/>the<sp/>detector<sp/>types<sp/>present<sp/>in<sp/>the<sp/>ID<sp/>file<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref><sp/>:<sp/><ref refid="class_detectors_1a930c2b917e87154c1337ecf8551a3ab4" kindref="member">types_handled</ref>)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_detectors_1a767e2461f5118cd3789c50786b297037" kindref="member">m_type_counter</ref>[<ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref>]&gt;0)<sp/><ref refid="class_detectors_1a0e9964892db1d2dfdb3a8cbdd6c87aeb" kindref="member">m_types_ID</ref>.push_back(<ref refid="class_detectors_1a0be56517035f1272af33392665b9ff1f" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reverse<sp/>lookup<sp/>:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_detectors_1a3c4f247022eb113c0371899060ea0199" kindref="member">index</ref><sp/>=<sp/>0;<sp/><ref refid="class_detectors_1a3c4f247022eb113c0371899060ea0199" kindref="member">index</ref>&lt;<ref refid="class_detectors_1a0e9964892db1d2dfdb3a8cbdd6c87aeb" kindref="member">m_types_ID</ref>.size();<sp/><ref refid="class_detectors_1a3c4f247022eb113c0371899060ea0199" kindref="member">index</ref>++)<sp/><ref refid="class_detectors_1acb3bb5bfbb60a5861b87ddc17c7466d8" kindref="member">m_types_index</ref>[<ref refid="class_detectors_1a0e9964892db1d2dfdb3a8cbdd6c87aeb" kindref="member">m_types_ID</ref>[<ref refid="class_detectors_1a3c4f247022eb113c0371899060ea0199" kindref="member">index</ref>]]<sp/>=<sp/><ref refid="lib_co_8hpp_1a48e80fbfd11f9fb219b92ba1c29c1b2a" kindref="member">int_cast</ref>(<ref refid="class_detectors_1a3c4f247022eb113c0371899060ea0199" kindref="member">index</ref>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal">std::unordered_map&lt;dType,<sp/>THBinning&gt;<sp/><ref refid="class_detectors_1a244a6b586bda7fd0054a8217ed005019" kindref="member">Detectors::ADC_bins</ref><sp/>=<sp/></highlight></codeline>
<codeline lineno="399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ge&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>,<sp/>{10000,<sp/>0.,<sp/>200000.<sp/>}},</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;bgo&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>{1000<sp/>,<sp/>0.,<sp/>200000.<sp/>}},</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;labr&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>,<sp/>{2000<sp/>,<sp/>0.,<sp/>200000.<sp/>}},</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;paris&quot;</highlight><highlight class="normal"><sp/><sp/>,<sp/>{2000<sp/>,<sp/>0.,<sp/>200000.<sp/>}},</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;eden&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>,<sp/>{1000<sp/>,<sp/>0.,<sp/>200000.<sp/>}},</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;dssd&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>,<sp/>{1000<sp/>,<sp/>0.,<sp/>200000.<sp/>}},</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">,<sp/>{10000,<sp/>0.,<sp/>1000000.}}</highlight></codeline>
<codeline lineno="407"><highlight class="normal">};</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal">std::unordered_map&lt;dType,<sp/>THBinning&gt;<sp/><ref refid="class_detectors_1af47d4b9af7b3f9e698b3e0b63a8b77eb" kindref="member">Detectors::energy_bins</ref><sp/>=<sp/></highlight></codeline>
<codeline lineno="410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ge&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>,<sp/>{10000,<sp/>0.,<sp/>10000.}},</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;bgo&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>{1000<sp/>,<sp/>0.,<sp/>10000.}},</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;labr&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>,<sp/>{2000<sp/>,<sp/>0.,<sp/>10000.}},</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;paris&quot;</highlight><highlight class="normal"><sp/><sp/>,<sp/>{2000<sp/>,<sp/>0.,<sp/>10000.}},</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;eden&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>,<sp/>{1000<sp/>,-2.,<sp/>2.<sp/><sp/><sp/><sp/>}},</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;dssd&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>,<sp/>{1000<sp/>,<sp/>0.,<sp/>20000.}},</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">,<sp/>{1000<sp/>,<sp/>0.,<sp/>50000.}}</highlight></codeline>
<codeline lineno="418"><highlight class="normal">};</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal">std::unordered_map&lt;dType,<sp/>THBinning&gt;<sp/><ref refid="class_detectors_1a13bd00fc428ecb36ba850e09cc5e147c" kindref="member">Detectors::energy_bidim_bins</ref><sp/>=<sp/></highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ge&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>,<sp/>{5000,<sp/>0.,<sp/>10000.}},</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;bgo&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>{250<sp/>,<sp/>0.,<sp/>10000.}},</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;labr&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>,<sp/>{1000,<sp/>0.,<sp/>10000.}},</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;paris&quot;</highlight><highlight class="normal"><sp/><sp/>,<sp/>{1000,<sp/>0.,<sp/>10000.}},</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;eden&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>,<sp/>{1000,-2.,<sp/>2.<sp/><sp/><sp/><sp/>}},</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;dssd&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>,<sp/>{200<sp/>,<sp/>0.,<sp/>20000.}},</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">,<sp/>{200<sp/>,<sp/>0.,<sp/>20000.}}</highlight></codeline>
<codeline lineno="429"><highlight class="normal">};</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431" refid="_detectors_8hpp_1ae343a2d2d22d862f6ac7ae10ba1b3d41" refkind="member"><highlight class="normal">std::map&lt;Label,<sp/>TH1F*&gt;<sp/><ref refid="_detectors_8hpp_1ae343a2d2d22d862f6ac7ae10ba1b3d41" kindref="member">loadFormattedTH1F</ref>(TFile<sp/>*<sp/>file)</highlight></codeline>
<codeline lineno="432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file<sp/>||<sp/>file-&gt;IsZombie())<sp/><ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(<ref refid="string__functions_8hpp_1ae058d07fbc702d0b0f79e3650e7804a2" kindref="member">concatenate</ref>(file-&gt;GetName(),<sp/></highlight><highlight class="stringliteral">&quot;<sp/>can&apos;t<sp/>be<sp/>open<sp/>!!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>)<sp/><ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(<ref refid="string__functions_8hpp_1ae058d07fbc702d0b0f79e3650e7804a2" kindref="member">concatenate</ref>(</highlight><highlight class="stringliteral">&quot;As<sp/>the<sp/>histograms<sp/>are<sp/>labeled<sp/>with<sp/>names,<sp/>one<sp/>has<sp/>to<sp/>provide<sp/>the<sp/>correct<sp/>index.list<sp/>file<sp/>!!<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>parameter<sp/>-i<sp/>[filename]<sp/>or<sp/>detectors.load(filename).&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>std::map&lt;Label,<sp/>TH1F*&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>list_histo<sp/>=<sp/><ref refid="lib_root_8hpp_1a7b3e18ff762f0dfa647f03b8275e33c0" kindref="member">get_TH1F_map</ref>(file);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ret.reserve(list_histo.size());<sp/>//<sp/>Might<sp/>be<sp/>unnecessary/dangerous<sp/>optimisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>pair<sp/>:<sp/>list_histo)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>pair.first;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>histo<sp/>=<sp/>pair.second;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_co_8hpp_1a632090884b4aa0585e747446a2683963" kindref="member">Strings</ref><sp/>possible_additionnal_text<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;_adc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;_energy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;_calib&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;_raw&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>text<sp/>:<sp/>possible_additionnal_text)<sp/><ref refid="string__functions_8hpp_1a9b6b51fed28f705d129f02193ce89b3c" kindref="member">remove</ref>(name,<sp/>text);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="string__functions_8hpp_1a87d8e2cb69021ab11e443cb140349eb6" kindref="member">found</ref>(<ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>.<ref refid="class_detectors_1ad535ab86053baec3294cda955ea275cd" kindref="member">names</ref>(),<sp/>name))</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>Either<sp/>the<sp/>histogram<sp/>label<sp/>is<sp/>already<sp/>the<sp/>label<sp/>in<sp/>int,<sp/>or<sp/>is<sp/>the<sp/>name<sp/>of<sp/>the<sp/>detector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{ret.emplace(string_to&lt;Label&gt;(name),<sp/>histo);}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<ref refid="class_cast_impossible" kindref="compound">CastImpossible</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="print_8hpp_1a553a9a331cc4556c2d9bb3aaa8533528" kindref="member">error</ref>)<sp/>{ret.emplace(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_detectors_8hpp_1a06939d30171afd1f13893e05454ed813" kindref="member">detectors</ref>[name],<sp/>histo);}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//DETECTORS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="comment">//<sp/>using<sp/>dAlias<sp/>=<sp/>std::string;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">//<sp/>auto<sp/>ge_a<sp/><sp/><sp/><sp/>=<sp/>Detectors::alias::ge;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">//<sp/>auto<sp/>bgo_a<sp/><sp/><sp/>=<sp/>Detectors::alias::bgo;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="comment">//<sp/>auto<sp/>labr_a<sp/><sp/>=<sp/>Detectors::alias::labr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="comment">//<sp/>auto<sp/>paris_a<sp/>=<sp/>Detectors::alias::paris;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="comment">//<sp/>auto<sp/>dssd_a<sp/><sp/>=<sp/>Detectors::alias::dssd;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment">//<sp/>auto<sp/>eden_a<sp/><sp/>=<sp/>Detectors::alias::eden;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">//<sp/>auto<sp/>RF_a<sp/><sp/><sp/><sp/>=<sp/>Detectors::alias::RF;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="comment">//<sp/>auto<sp/>null_a<sp/><sp/>=<sp/>Detectors::alias::null;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Detectors(std::string<sp/>const<sp/>&amp;<sp/>filename)<sp/>{this<sp/>-&gt;<sp/>load(filename);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>///<sp/>@brief<sp/>Loads<sp/>the<sp/>list<sp/>of<sp/>detectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Detectors(const<sp/>char*<sp/>filename)<sp/>{this<sp/>-&gt;<sp/>load(filename);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Detectors&amp;<sp/>operator=(Detectors<sp/>otherList)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>m_exists<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>otherList.m_exists;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>m_ok<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>otherList.m_ok;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>m_filename<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>otherList.m_filename;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>m_list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>otherList.m_list;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>m_labels_map<sp/>=<sp/>otherList.m_labels_map;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>m_type_counter<sp/>=<sp/>otherList.m_type_counter;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>return<sp/>*this;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>static<sp/>size_t<sp/>nb_aliases()<sp/>{return<sp/>null_a;}<sp/>//<sp/>as<sp/>Detector::alias::null<sp/>is<sp/>defined<sp/>at<sp/>the<sp/>last<sp/>position<sp/>in<sp/>enum,<sp/>it<sp/>holds<sp/>the<sp/>number<sp/>of<sp/>detectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size_t<sp/>const<sp/>&amp;<sp/>nb_det_in_alias(dAlias<sp/>const<sp/>&amp;<sp/>alias)<sp/>const<sp/>{return<sp/>m_type_counter[alias];}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>/**</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/>@brief<sp/>Handles<sp/>the<sp/>type<sp/>of<sp/>detector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/>@details<sp/>If<sp/>you<sp/>whish<sp/>to<sp/>add<sp/>a<sp/>new<sp/>type<sp/>of<sp/>detector,<sp/>do<sp/>it<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>enum<sp/>alias<sp/>{ge,<sp/>bgo,<sp/>labr,<sp/>paris,<sp/>dssd,<sp/>eden,<sp/>RF,<sp/>null};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>alias<sp/>getAlias(std::string<sp/>const<sp/>&amp;<sp/>str)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>auto<sp/>it<sp/>=<sp/>std::find(alias_str.begin(),<sp/>alias_str.end(),<sp/>str);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>return<sp/>(it<sp/>==<sp/>std::end(alias_str))<sp/>?<sp/>null<sp/>:<sp/>static_cast&lt;alias&gt;(it-alias_str.begin());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>static<sp/>std::string<sp/>type<sp/>(Label<sp/>const<sp/>&amp;<sp/>label)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>if<sp/><sp/><sp/><sp/><sp/><sp/>(isGe<sp/><sp/><sp/><sp/>[label])<sp/>return<sp/>&quot;ge&quot;<sp/><sp/><sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>else<sp/>if<sp/>(isBGO<sp/><sp/><sp/>[label])<sp/>return<sp/>&quot;bgo&quot;<sp/><sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>else<sp/>if<sp/>(isLaBr3<sp/>[label])<sp/>return<sp/>&quot;labr&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>else<sp/>if<sp/>(isParis<sp/>[label])<sp/>return<sp/>&quot;paris&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>else<sp/>if<sp/>(isDSSD<sp/><sp/>[label])<sp/>return<sp/>&quot;dssd&quot;<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>else<sp/>if<sp/>(isRF<sp/><sp/><sp/><sp/>[label])<sp/>return<sp/>&quot;RF&quot;<sp/><sp/><sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>else<sp/>if<sp/>(isEden<sp/><sp/>[label])<sp/>return<sp/>&quot;eden&quot;<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>&quot;null&quot;<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="lib/Classes/Detectors.hpp"/>
  </compounddef>
</doxygen>
