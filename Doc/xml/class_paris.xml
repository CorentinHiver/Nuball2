<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_paris" kind="class" language="C++" prot="public">
    <compoundname>Paris</compoundname>
    <includes refid="_paris_8hpp" local="no">Paris.hpp</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_paris_1a4598dcb03f0900aa81b9e9cc1954c7cd" prot="public" static="yes" mutable="no">
        <type>std::array&lt; <ref refid="lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21" kindref="member">uchar</ref>, 1000 &gt;</type>
        <definition>std::array&lt; uchar, 1000 &gt; Paris::cluster</definition>
        <argsstring></argsstring>
        <name>cluster</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/Paris.hpp" line="41" column="21" bodyfile="lib/Analyse/Paris.hpp" bodystart="41" bodyend="-1"/>
        <referencedby refid="class_paris_1aaa7a70ca124d8c0428ee54c7d9d42256" compoundref="_paris_8hpp" startline="45" endline="61">InitialiseArrays</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_paris_1ad870c58010fc1f7608be62b2b8c02b15" prot="public" static="yes" mutable="no">
        <type>std::array&lt; <ref refid="lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21" kindref="member">uchar</ref>, 1000 &gt;</type>
        <definition>std::array&lt; uchar, 1000 &gt; Paris::index</definition>
        <argsstring></argsstring>
        <name>index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/Paris.hpp" line="42" column="21" bodyfile="lib/Analyse/Paris.hpp" bodystart="42" bodyend="-1"/>
        <referencedby refid="class_paris_1acfde42a5101236f9f4063c22661563f0" compoundref="_paris_8hpp" startline="121" endline="125">Fill</referencedby>
        <referencedby refid="class_paris_1aaa7a70ca124d8c0428ee54c7d9d42256" compoundref="_paris_8hpp" startline="45" endline="61">InitialiseArrays</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_paris_1a03d3050af7163dfc8c5cc1fb0598885c" prot="public" static="yes" mutable="no">
        <type>std::array&lt; bool, 1000 &gt;</type>
        <definition>std::array&lt; bool, 1000 &gt; Paris::is</definition>
        <argsstring></argsstring>
        <name>is</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/Paris.hpp" line="40" column="21" bodyfile="lib/Analyse/Paris.hpp" bodystart="40" bodyend="-1"/>
        <referencedby refid="class_paris_1aaa7a70ca124d8c0428ee54c7d9d42256" compoundref="_paris_8hpp" startline="45" endline="61">InitialiseArrays</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_paris_1ab8b82c446fd5c617a70be80207894368" prot="public" static="no" mutable="no">
        <type><ref refid="class_paris_cluster" kindref="compound">ParisCluster</ref>&lt; 28 &gt;</type>
        <definition>ParisCluster&lt;28&gt; Paris::clusterBack</definition>
        <argsstring></argsstring>
        <name>clusterBack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/Paris.hpp" line="74" column="16" bodyfile="lib/Analyse/Paris.hpp" bodystart="74" bodyend="-1"/>
        <referencedby refid="class_paris_1ac6fb6d9310b0dd298ebf10862497954a" compoundref="_paris_8hpp" startline="127" endline="131">Analyse</referencedby>
        <referencedby refid="class_paris_1a4fb89c70f74288ffba9041dad5c0b341" compoundref="_paris_8hpp" startline="81" endline="81">back</referencedby>
        <referencedby refid="class_paris_1acfde42a5101236f9f4063c22661563f0" compoundref="_paris_8hpp" startline="121" endline="125">Fill</referencedby>
        <referencedby refid="class_paris_1a2d405a64e0e65a845a2723bb3b2af697" compoundref="_paris_8hpp" startline="105" endline="113">Initialise</referencedby>
        <referencedby refid="class_paris_1ad9b942023bbc514963ee8742aeccd23c" compoundref="_paris_8hpp" startline="115" endline="119">Reset</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_paris_1afd25e98773ccf32549495e4c4035db4a" prot="public" static="no" mutable="no">
        <type><ref refid="class_paris_cluster" kindref="compound">ParisCluster</ref>&lt; 36 &gt;</type>
        <definition>ParisCluster&lt;36&gt; Paris::clusterFront</definition>
        <argsstring></argsstring>
        <name>clusterFront</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/Paris.hpp" line="75" column="16" bodyfile="lib/Analyse/Paris.hpp" bodystart="75" bodyend="-1"/>
        <referencedby refid="class_paris_1ac6fb6d9310b0dd298ebf10862497954a" compoundref="_paris_8hpp" startline="127" endline="131">Analyse</referencedby>
        <referencedby refid="class_paris_1acfde42a5101236f9f4063c22661563f0" compoundref="_paris_8hpp" startline="121" endline="125">Fill</referencedby>
        <referencedby refid="class_paris_1adf36cdac7f24cbc27ace07ec0afeb6a6" compoundref="_paris_8hpp" startline="82" endline="82">front</referencedby>
        <referencedby refid="class_paris_1a2d405a64e0e65a845a2723bb3b2af697" compoundref="_paris_8hpp" startline="105" endline="113">Initialise</referencedby>
        <referencedby refid="class_paris_1ad9b942023bbc514963ee8742aeccd23c" compoundref="_paris_8hpp" startline="115" endline="119">Reset</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_paris_1a35fdae4555744730c04ef90228b50865" prot="public" static="no" mutable="no">
        <type><ref refid="class_static_vector" kindref="compound">StaticVector</ref>&lt; <ref refid="lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21" kindref="member">uchar</ref> &gt;</type>
        <definition>StaticVector&lt;uchar&gt; Paris::Hits</definition>
        <argsstring></argsstring>
        <name>Hits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/Paris.hpp" line="72" column="16" bodyfile="lib/Analyse/Paris.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_paris_1a992926f1f1315dbc0949d84fcca9896e" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool Paris::s_initialised</definition>
        <argsstring></argsstring>
        <name>s_initialised</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/Paris.hpp" line="95" column="15" bodyfile="lib/Analyse/Paris.hpp" bodystart="95" bodyend="-1"/>
        <referencedby refid="class_paris_1aaa7a70ca124d8c0428ee54c7d9d42256" compoundref="_paris_8hpp" startline="45" endline="61">InitialiseArrays</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_paris_1a9efcee0bca9b694ae7993a2c773d6dc3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Paris::m_initialised</definition>
        <argsstring></argsstring>
        <name>m_initialised</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/Paris.hpp" line="96" column="8" bodyfile="lib/Analyse/Paris.hpp" bodystart="96" bodyend="-1"/>
        <referencedby refid="class_paris_1a2d405a64e0e65a845a2723bb3b2af697" compoundref="_paris_8hpp" startline="105" endline="113">Initialise</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_paris_1a66745a02a04a8733eba514f319b1cc5e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Paris::calculateBidimAngles</definition>
        <argsstring>(std::string file, std::string const &amp;outfilename, bool write_graphs=true)</argsstring>
        <name>calculateBidimAngles</name>
        <param>
          <type>std::string</type>
          <declname>file</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>outfilename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>write_graphs</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/Paris.hpp" line="89" column="15" bodyfile="lib/Analyse/Paris.hpp" bodystart="283" bodyend="316"/>
        <references refid="class_paris_1ad83b7a82190285f4c69fb5eeb30c5db6" compoundref="_paris_8hpp" startline="133" endline="272">findAngles</references>
        <references refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" compoundref="print_8hpp" startline="44" endline="44">print</references>
        <references refid="string__functions_8hpp_1a9b6b51fed28f705d129f02193ce89b3c" compoundref="string__functions_8hpp" startline="143" endline="153">remove</references>
        <references refid="class_paris_bidim_angles_1afd9e6c297a0cc74001a6180f6b49d253" compoundref="_paris_bidim_angles_8hpp" startline="90" endline="96">ParisBidimAngles::set</references>
        <references refid="class_co_progress_bar_1a79b92711e75250b41c39aeeca73a1621" compoundref="_co_progress_bar_8hpp" startline="76" endline="100">CoProgressBar&lt; T &gt;::show</references>
        <references refid="class_paris_bidim_angles_1a0ca1c561f33bc79fc16b630ef4db9144" compoundref="_paris_bidim_angles_8hpp" startline="77" endline="88">ParisBidimAngles::write</references>
      </memberdef>
      <memberdef kind="function" id="class_paris_1ad83b7a82190285f4c69fb5eeb30c5db6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; double, double &gt;</type>
        <definition>std::pair&lt; double, double &gt; Paris::findAngles</definition>
        <argsstring>(TH2F *bidim, int nb_bins=10, bool write_graphs=false)</argsstring>
        <name>findAngles</name>
        <param>
          <type>TH2F *</type>
          <declname>bidim</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nb_bins</declname>
          <defval>10</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>write_graphs</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/Paris.hpp" line="87" column="20" bodyfile="lib/Analyse/Paris.hpp" bodystart="133" bodyend="272"/>
        <references refid="string__functions_8hpp_1ae058d07fbc702d0b0f79e3650e7804a2" compoundref="string__functions_8hpp" startline="240" endline="245">concatenate</references>
        <references refid="lib_root_8hpp_1a5d8e6d047f89cfacdca99f300e08a8a8" compoundref="lib_root_8hpp" startline="274" endline="282">findNextBinAbove</references>
        <references refid="lib_root_8hpp_1a913983a1e3590c8dddff74dd195dba8a" compoundref="lib_root_8hpp" startline="264" endline="272">findNextBinBelow</references>
        <references refid="class_peak_fitter_1ae83803972d52d79a55f2af7b1dde0ae5" compoundref="lib_root_8hpp" startline="1423" endline="1423">PeakFitter::getMean</references>
        <references refid="vector__functions_8hpp_1a4baf3e978c4b72d0b3c52b064fa3c03e" compoundref="vector__functions_8hpp" startline="128" endline="134">maximum</references>
        <referencedby refid="class_paris_1a66745a02a04a8733eba514f319b1cc5e" compoundref="_paris_8hpp" startline="283" endline="316">calculateBidimAngles</referencedby>
        <referencedby refid="class_paris_1a4605af4582a21a229000502ab0cbf827" compoundref="_paris_8hpp" startline="275" endline="281">findAnglesDeg</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_paris_1a4605af4582a21a229000502ab0cbf827" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; double, double &gt;</type>
        <definition>std::pair&lt; double, double &gt; Paris::findAnglesDeg</definition>
        <argsstring>(TH2F *bidim, int nb_bins=10, bool write_graphs=false)</argsstring>
        <name>findAnglesDeg</name>
        <param>
          <type>TH2F *</type>
          <declname>bidim</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nb_bins</declname>
          <defval>10</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>write_graphs</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/Paris.hpp" line="88" column="20" bodyfile="lib/Analyse/Paris.hpp" bodystart="275" bodyend="281"/>
        <references refid="class_paris_1ad83b7a82190285f4c69fb5eeb30c5db6" compoundref="_paris_8hpp" startline="133" endline="272">findAngles</references>
      </memberdef>
      <memberdef kind="function" id="class_paris_1aaa7a70ca124d8c0428ee54c7d9d42256" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Paris::InitialiseArrays</definition>
        <argsstring>()</argsstring>
        <name>InitialiseArrays</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/Paris.hpp" line="45" column="15" bodyfile="lib/Analyse/Paris.hpp" bodystart="45" bodyend="61"/>
        <references refid="class_paris_1a4598dcb03f0900aa81b9e9cc1954c7cd" compoundref="_paris_8hpp" startline="41">cluster</references>
        <references refid="class_paris_1ad870c58010fc1f7608be62b2b8c02b15" compoundref="_paris_8hpp" startline="42">index</references>
        <references refid="class_paris_1a03d3050af7163dfc8c5cc1fb0598885c" compoundref="_paris_8hpp" startline="40">is</references>
        <references refid="class_paris_1a5e84a66240e195c7743f8c8dae84f800" compoundref="_paris_8hpp" startline="24" endline="29">is_paris</references>
        <references refid="class_paris_1a060a9d4c6345e7b73ac62ad5aee1bd23" compoundref="_paris_8hpp" startline="31" endline="38">label_to_index</references>
        <references refid="class_m_t_object_1a79d86fbc8837ba0f9a4cd1405fddef1c" compoundref="_m_t_object_8hpp" startline="246">MTObject::mutex</references>
        <references refid="_paris_8h_1adab138f24a10b06a4dc409a8cf76593c" compoundref="_paris_8h" startline="4">paris_labels</references>
        <references refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" compoundref="print_8hpp" startline="44" endline="44">print</references>
        <references refid="class_paris_1a992926f1f1315dbc0949d84fcca9896e" compoundref="_paris_8hpp" startline="95">s_initialised</references>
        <referencedby refid="class_paris_1a1f05e7dfce90ff9808cf79ebbbb23008" compoundref="_paris_8hpp" startline="66" endline="66">Paris</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_paris_1a5e84a66240e195c7743f8c8dae84f800" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Paris::is_paris</definition>
        <argsstring>(Label const &amp;l)</argsstring>
        <name>is_paris</name>
        <param>
          <type><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref> const &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/Paris.hpp" line="24" column="15" bodyfile="lib/Analyse/Paris.hpp" bodystart="24" bodyend="29"/>
        <references refid="_paris_8h_1adab138f24a10b06a4dc409a8cf76593c" compoundref="_paris_8h" startline="4">paris_labels</references>
        <referencedby refid="class_paris_1aaa7a70ca124d8c0428ee54c7d9d42256" compoundref="_paris_8hpp" startline="45" endline="61">InitialiseArrays</referencedby>
        <referencedby refid="class_paris_1a060a9d4c6345e7b73ac62ad5aee1bd23" compoundref="_paris_8hpp" startline="31" endline="38">label_to_index</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_paris_1a060a9d4c6345e7b73ac62ad5aee1bd23" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21" kindref="member">uchar</ref></type>
        <definition>static uchar Paris::label_to_index</definition>
        <argsstring>(Label const &amp;l)</argsstring>
        <name>label_to_index</name>
        <param>
          <type><ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref> const &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/Paris.hpp" line="31" column="16" bodyfile="lib/Analyse/Paris.hpp" bodystart="31" bodyend="38"/>
        <references refid="class_paris_1a5e84a66240e195c7743f8c8dae84f800" compoundref="_paris_8hpp" startline="24" endline="29">is_paris</references>
        <references refid="_paris_8h_1adab138f24a10b06a4dc409a8cf76593c" compoundref="_paris_8h" startline="4">paris_labels</references>
        <referencedby refid="class_paris_1aaa7a70ca124d8c0428ee54c7d9d42256" compoundref="_paris_8hpp" startline="45" endline="61">InitialiseArrays</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_paris_1a21f73f502db25f43f31426c4ea88f419" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TH2F *</type>
        <definition>TH2F * Paris::rotate</definition>
        <argsstring>(TH2F *bidim, double angleLaBr, double angleNaI, bool quickNdirty=false)</argsstring>
        <name>rotate</name>
        <param>
          <type>TH2F *</type>
          <declname>bidim</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angleLaBr</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angleNaI</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>quickNdirty</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/Paris.hpp" line="90" column="15" bodyfile="lib/Analyse/Paris.hpp" bodystart="318" bodyend="373"/>
        <references refid="string__functions_8hpp_1ae058d07fbc702d0b0f79e3650e7804a2" compoundref="string__functions_8hpp" startline="240" endline="245">concatenate</references>
        <references refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" compoundref="print_8hpp" startline="44" endline="44">print</references>
        <references refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" compoundref="lib_co_8hpp" startline="156" endline="156">throw_error</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_paris_1ac6fb6d9310b0dd298ebf10862497954a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Paris::Analyse</definition>
        <argsstring>()</argsstring>
        <name>Analyse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/Paris.hpp" line="70" column="8" bodyfile="lib/Analyse/Paris.hpp" bodystart="127" bodyend="131"/>
        <references refid="class_paris_cluster_1a6b62c6df3f369da38428d7afa96e2316" compoundref="_paris_cluster_8hpp" startline="114" endline="148">ParisCluster&lt; nb_phoswitch &gt;::Analyse</references>
        <references refid="class_paris_1ab8b82c446fd5c617a70be80207894368" compoundref="_paris_8hpp" startline="74">clusterBack</references>
        <references refid="class_paris_1afd25e98773ccf32549495e4c4035db4a" compoundref="_paris_8hpp" startline="75">clusterFront</references>
        <referencedby refid="class_event_analyse_1a3667d9363f41262088e0ca5c1f06fc7e" compoundref="_event_analyse_8hpp" startline="36" endline="50">EventAnalyse::Set</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_paris_1a4fb89c70f74288ffba9041dad5c0b341" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; Paris::back</definition>
        <argsstring>()</argsstring>
        <name>back</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/Paris.hpp" line="81" column="9" bodyfile="lib/Analyse/Paris.hpp" bodystart="81" bodyend="81"/>
        <references refid="class_paris_1ab8b82c446fd5c617a70be80207894368" compoundref="_paris_8hpp" startline="74">clusterBack</references>
      </memberdef>
      <memberdef kind="function" id="class_paris_1acfde42a5101236f9f4063c22661563f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Paris::Fill</definition>
        <argsstring>(Event const &amp;event, size_t const &amp;i)</argsstring>
        <name>Fill</name>
        <param>
          <type><ref refid="class_event" kindref="compound">Event</ref> const &amp;</type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref> const &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/Paris.hpp" line="68" column="8" bodyfile="lib/Analyse/Paris.hpp" bodystart="121" bodyend="125"/>
        <references refid="class_paris_1ab8b82c446fd5c617a70be80207894368" compoundref="_paris_8hpp" startline="74">clusterBack</references>
        <references refid="class_paris_1afd25e98773ccf32549495e4c4035db4a" compoundref="_paris_8hpp" startline="75">clusterFront</references>
        <references refid="class_paris_cluster_1a00f32121b8702aae3b51826a8aa36f7b" compoundref="_paris_cluster_8hpp" startline="104" endline="111">ParisCluster&lt; nb_phoswitch &gt;::Fill</references>
        <references refid="class_paris_1ad870c58010fc1f7608be62b2b8c02b15" compoundref="_paris_8hpp" startline="42">index</references>
        <references refid="class_event_1ad016b65deeaef393a94793ef140e1bb8" compoundref="_event_8hpp" startline="182">Event::labels</references>
      </memberdef>
      <memberdef kind="function" id="class_paris_1adf36cdac7f24cbc27ace07ec0afeb6a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; Paris::front</definition>
        <argsstring>()</argsstring>
        <name>front</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/Paris.hpp" line="82" column="9" bodyfile="lib/Analyse/Paris.hpp" bodystart="82" bodyend="82"/>
        <references refid="class_paris_1afd25e98773ccf32549495e4c4035db4a" compoundref="_paris_8hpp" startline="75">clusterFront</references>
      </memberdef>
      <memberdef kind="function" id="class_paris_1a2d405a64e0e65a845a2723bb3b2af697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Paris::Initialise</definition>
        <argsstring>()</argsstring>
        <name>Initialise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/Paris.hpp" line="67" column="8" bodyfile="lib/Analyse/Paris.hpp" bodystart="105" bodyend="113"/>
        <references refid="class_paris_1ab8b82c446fd5c617a70be80207894368" compoundref="_paris_8hpp" startline="74">clusterBack</references>
        <references refid="class_paris_1afd25e98773ccf32549495e4c4035db4a" compoundref="_paris_8hpp" startline="75">clusterFront</references>
        <references refid="class_paris_cluster_1ac89d80e3d0f7bf119ebb9b8de972c5b0" compoundref="_paris_cluster_8hpp" startline="54" endline="74">ParisCluster&lt; nb_phoswitch &gt;::Initialise</references>
        <references refid="class_paris_1a9efcee0bca9b694ae7993a2c773d6dc3" compoundref="_paris_8hpp" startline="96">m_initialised</references>
        <referencedby refid="class_event_analyse_1ad1a958082173e421e93221ce6759c850" compoundref="_event_analyse_8hpp" startline="26" endline="34">EventAnalyse::EventAnalyse</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_paris_1a1f05e7dfce90ff9808cf79ebbbb23008" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Paris::Paris</definition>
        <argsstring>()</argsstring>
        <name>Paris</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/Paris.hpp" line="66" column="3" bodyfile="lib/Analyse/Paris.hpp" bodystart="66" bodyend="66"/>
        <references refid="class_paris_1aaa7a70ca124d8c0428ee54c7d9d42256" compoundref="_paris_8hpp" startline="45" endline="61">InitialiseArrays</references>
      </memberdef>
      <memberdef kind="function" id="class_paris_1ad9b942023bbc514963ee8742aeccd23c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Paris::Reset</definition>
        <argsstring>()</argsstring>
        <name>Reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/Paris.hpp" line="69" column="8" bodyfile="lib/Analyse/Paris.hpp" bodystart="115" bodyend="119"/>
        <references refid="class_paris_1ab8b82c446fd5c617a70be80207894368" compoundref="_paris_8hpp" startline="74">clusterBack</references>
        <references refid="class_paris_1afd25e98773ccf32549495e4c4035db4a" compoundref="_paris_8hpp" startline="75">clusterFront</references>
        <references refid="class_paris_cluster_1aed843cd658540524bb00eaccc16d5c47" compoundref="_paris_cluster_8hpp" startline="90" endline="101">ParisCluster&lt; nb_phoswitch &gt;::Reset</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>ParisCluster&lt; 28 &gt;</label>
        <link refid="class_paris_cluster"/>
      </node>
      <node id="1">
        <label>Paris</label>
        <link refid="class_paris"/>
        <childnode refid="2" relation="usage">
          <edgelabel>clusterBack</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>clusterFront</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>Hits</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>ParisCluster&lt; 36 &gt;</label>
        <link refid="class_paris_cluster"/>
      </node>
      <node id="4">
        <label>StaticVector&lt; uchar &gt;</label>
        <link refid="class_static_vector"/>
      </node>
    </collaborationgraph>
    <location file="lib/Analyse/Paris.hpp" line="18" column="1" bodyfile="lib/Analyse/Paris.hpp" bodystart="19" bodyend="97"/>
    <listofallmembers>
      <member refid="class_paris_1ac6fb6d9310b0dd298ebf10862497954a" prot="public" virt="non-virtual"><scope>Paris</scope><name>Analyse</name></member>
      <member refid="class_paris_1a4fb89c70f74288ffba9041dad5c0b341" prot="public" virt="non-virtual"><scope>Paris</scope><name>back</name></member>
      <member refid="class_paris_1a66745a02a04a8733eba514f319b1cc5e" prot="public" virt="non-virtual"><scope>Paris</scope><name>calculateBidimAngles</name></member>
      <member refid="class_paris_1a4598dcb03f0900aa81b9e9cc1954c7cd" prot="public" virt="non-virtual"><scope>Paris</scope><name>cluster</name></member>
      <member refid="class_paris_1ab8b82c446fd5c617a70be80207894368" prot="public" virt="non-virtual"><scope>Paris</scope><name>clusterBack</name></member>
      <member refid="class_paris_1afd25e98773ccf32549495e4c4035db4a" prot="public" virt="non-virtual"><scope>Paris</scope><name>clusterFront</name></member>
      <member refid="class_paris_1acfde42a5101236f9f4063c22661563f0" prot="public" virt="non-virtual"><scope>Paris</scope><name>Fill</name></member>
      <member refid="class_paris_1ad83b7a82190285f4c69fb5eeb30c5db6" prot="public" virt="non-virtual"><scope>Paris</scope><name>findAngles</name></member>
      <member refid="class_paris_1a4605af4582a21a229000502ab0cbf827" prot="public" virt="non-virtual"><scope>Paris</scope><name>findAnglesDeg</name></member>
      <member refid="class_paris_1adf36cdac7f24cbc27ace07ec0afeb6a6" prot="public" virt="non-virtual"><scope>Paris</scope><name>front</name></member>
      <member refid="class_paris_1a35fdae4555744730c04ef90228b50865" prot="public" virt="non-virtual"><scope>Paris</scope><name>Hits</name></member>
      <member refid="class_paris_1ad870c58010fc1f7608be62b2b8c02b15" prot="public" virt="non-virtual"><scope>Paris</scope><name>index</name></member>
      <member refid="class_paris_1a2d405a64e0e65a845a2723bb3b2af697" prot="public" virt="non-virtual"><scope>Paris</scope><name>Initialise</name></member>
      <member refid="class_paris_1aaa7a70ca124d8c0428ee54c7d9d42256" prot="public" virt="non-virtual"><scope>Paris</scope><name>InitialiseArrays</name></member>
      <member refid="class_paris_1a03d3050af7163dfc8c5cc1fb0598885c" prot="public" virt="non-virtual"><scope>Paris</scope><name>is</name></member>
      <member refid="class_paris_1a5e84a66240e195c7743f8c8dae84f800" prot="public" virt="non-virtual"><scope>Paris</scope><name>is_paris</name></member>
      <member refid="class_paris_1a060a9d4c6345e7b73ac62ad5aee1bd23" prot="public" virt="non-virtual"><scope>Paris</scope><name>label_to_index</name></member>
      <member refid="class_paris_1a9efcee0bca9b694ae7993a2c773d6dc3" prot="private" virt="non-virtual"><scope>Paris</scope><name>m_initialised</name></member>
      <member refid="class_paris_1a1f05e7dfce90ff9808cf79ebbbb23008" prot="public" virt="non-virtual"><scope>Paris</scope><name>Paris</name></member>
      <member refid="class_paris_1ad9b942023bbc514963ee8742aeccd23c" prot="public" virt="non-virtual"><scope>Paris</scope><name>Reset</name></member>
      <member refid="class_paris_1a21f73f502db25f43f31426c4ea88f419" prot="public" virt="non-virtual"><scope>Paris</scope><name>rotate</name></member>
      <member refid="class_paris_1a992926f1f1315dbc0949d84fcca9896e" prot="private" virt="non-virtual"><scope>Paris</scope><name>s_initialised</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
