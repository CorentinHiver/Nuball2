<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structis__container" kind="struct" language="C++" prot="public">
    <compoundname>is_container</compoundname>
    <includes refid="lib_co_8hpp" local="no">libCo.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structis__container_1abe72bf896680aa10340ccf08a5d293c7" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool is_container&lt; T &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <initializer>= decltype(<ref refid="structis__container_1aa5aa36a7f90719cf56b0888bccb34ac4" kindref="member">test</ref>&lt;T&gt;(0))::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libCo.hpp" line="449" column="27" bodyfile="lib/libCo.hpp" bodystart="449" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structis__container_1a0d9f3142d7b172650f1a4713e443aad6" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
          </param>
        </templateparamlist>
        <type>std::false_type</type>
        <definition>static std::false_type is_container&lt; T &gt;::test</definition>
        <argsstring>(...)</argsstring>
        <name>test</name>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libCo.hpp" line="446" column="28"/>
      </memberdef>
      <memberdef kind="function" id="structis__container_1aa5aa36a7f90719cf56b0888bccb34ac4" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename C</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto is_container&lt; T &gt;::test</definition>
        <argsstring>(int) -&gt; decltype(std::begin(std::declval&lt; C &gt;()), std::end(std::declval&lt; C &gt;()), std::true_type())</argsstring>
        <name>test</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/libCo.hpp" line="443" column="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="lib/libCo.hpp" line="440" column="1" bodyfile="lib/libCo.hpp" bodystart="440" bodyend="450"/>
    <listofallmembers>
      <member refid="structis__container_1aa5aa36a7f90719cf56b0888bccb34ac4" prot="private" virt="non-virtual"><scope>is_container</scope><name>test</name></member>
      <member refid="structis__container_1a0d9f3142d7b172650f1a4713e443aad6" prot="private" virt="non-virtual"><scope>is_container</scope><name>test</name></member>
      <member refid="structis__container_1abe72bf896680aa10340ccf08a5d293c7" prot="public" virt="non-virtual"><scope>is_container</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
