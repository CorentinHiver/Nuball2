<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_folders" kind="class" language="C++" prot="public">
    <compoundname>Folders</compoundname>
    <includes refid="files__functions_8hpp" local="no">files_functions.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_folders_1aeb55402a14a1b9d847838882c43dbd14" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_folder" kindref="compound">Folder</ref> &gt;</type>
        <definition>std::vector&lt;Folder&gt; Folders::m_folders</definition>
        <argsstring></argsstring>
        <name>m_folders</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="477" column="15" bodyfile="lib/files_functions.hpp" bodystart="477" bodyend="-1"/>
        <referencedby refid="class_folders_1a08d92a79fdced661ca94fb0547dfcbf2" compoundref="files__functions_8hpp" startline="467" endline="467">begin</referencedby>
        <referencedby refid="class_folders_1aaa63ca280c10fc90c09cc29e38c80a02" compoundref="files__functions_8hpp" startline="462" endline="462">clear</referencedby>
        <referencedby refid="class_folders_1a11de303e1a1926a03212fa4b085285ca" compoundref="files__functions_8hpp" startline="468" endline="468">end</referencedby>
        <referencedby refid="class_folders_1aa6c7cccbbb9de930b9a41dc42dcbb840" compoundref="files__functions_8hpp" startline="459" endline="459">erase</referencedby>
        <referencedby refid="class_folders_1a8be43dfb713e9320014ff37a2e5ca5cb" compoundref="files__functions_8hpp" startline="433" endline="436">Folders</referencedby>
        <referencedby refid="class_folders_1aab07a96e82a348fe89b817c6d7b60394" compoundref="files__functions_8hpp" startline="471" endline="471">get</referencedby>
        <referencedby refid="class_folders_1ac590b52776691483bd9647c18d22bd10" compoundref="files__functions_8hpp" startline="470" endline="470">list</referencedby>
        <referencedby refid="class_folders_1a616485734815d9827798b56a265cdc9e" compoundref="files__functions_8hpp" startline="456" endline="456">operator std::vector&lt; Folder &gt;</referencedby>
        <referencedby refid="class_folders_1a4a7246912adc54275ac8ded201c7ad3a" compoundref="files__functions_8hpp" startline="442" endline="442">operator=</referencedby>
        <referencedby refid="class_folders_1ae627977a3c889589d2077f57554301b4" compoundref="files__functions_8hpp" startline="457" endline="457">operator[]</referencedby>
        <referencedby refid="class_folders_1ab7471e5d0263ec69f2c87f184c004395" compoundref="files__functions_8hpp" startline="473" endline="473">push_back</referencedby>
        <referencedby refid="class_folders_1a9b9a8af61bcaec214ec25ec217b84ef7" compoundref="files__functions_8hpp" startline="463" endline="463">resize</referencedby>
        <referencedby refid="class_folders_1a415c1107abd57b7a9c63fd8959a220cd" compoundref="files__functions_8hpp" startline="465" endline="465">size</referencedby>
        <referencedby refid="class_folders_1a21778cd16e2d1dfa91886bba394a506f" compoundref="files__functions_8hpp" startline="448" endline="453">string</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_folders_1a08d92a79fdced661ca94fb0547dfcbf2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Folders::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="467" column="8" bodyfile="lib/files_functions.hpp" bodystart="467" bodyend="467"/>
        <references refid="class_folders_1aeb55402a14a1b9d847838882c43dbd14" compoundref="files__functions_8hpp" startline="477">m_folders</references>
      </memberdef>
      <memberdef kind="function" id="class_folders_1aaa63ca280c10fc90c09cc29e38c80a02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Folders::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="462" column="8" bodyfile="lib/files_functions.hpp" bodystart="462" bodyend="462"/>
        <references refid="class_folders_1aeb55402a14a1b9d847838882c43dbd14" compoundref="files__functions_8hpp" startline="477">m_folders</references>
        <referencedby refid="class_path_1af8ae2716e0002e69eff44e6d669e6051" compoundref="files__functions_8hpp" startline="580" endline="613">Path::loadPath</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_folders_1a11de303e1a1926a03212fa4b085285ca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Folders::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="468" column="8" bodyfile="lib/files_functions.hpp" bodystart="468" bodyend="468"/>
        <references refid="class_folders_1aeb55402a14a1b9d847838882c43dbd14" compoundref="files__functions_8hpp" startline="477">m_folders</references>
      </memberdef>
      <memberdef kind="function" id="class_folders_1aa6c7cccbbb9de930b9a41dc42dcbb840" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Folders::erase</definition>
        <argsstring>(size_t const &amp;pos)</argsstring>
        <name>erase</name>
        <param>
          <type><ref refid="lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref> const &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="459" column="8" bodyfile="lib/files_functions.hpp" bodystart="459" bodyend="459"/>
        <references refid="class_folders_1aeb55402a14a1b9d847838882c43dbd14" compoundref="files__functions_8hpp" startline="477">m_folders</references>
        <referencedby refid="class_path_1ac40c8c627d0412be849f1e6cd4cdc556" compoundref="files__functions_8hpp" startline="616" endline="636">Path::cleanPath</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_folders_1a035d2b31430c66fc7a8941a9d938b658" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Folders::erase</definition>
        <argsstring>(size_t const &amp;pos, size_t const &amp;size)</argsstring>
        <name>erase</name>
        <param>
          <type><ref refid="lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref> const &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref> const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="460" column="8" bodyfile="lib/files_functions.hpp" bodystart="460" bodyend="460"/>
        <references refid="class_folders_1aeb55402a14a1b9d847838882c43dbd14" compoundref="files__functions_8hpp" startline="477">m_folders</references>
        <references refid="class_folders_1a415c1107abd57b7a9c63fd8959a220cd" compoundref="files__functions_8hpp" startline="465" endline="465">size</references>
      </memberdef>
      <memberdef kind="function" id="class_folders_1abb5ba77dd0b151ddc2479831740e514b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Folders::Folders</definition>
        <argsstring>()</argsstring>
        <name>Folders</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="431" column="3" bodyfile="lib/files_functions.hpp" bodystart="431" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="class_folders_1aa84623a40e39787329ca5ef8dbfa9d6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Folders::Folders</definition>
        <argsstring>(Folders const &amp;folders)</argsstring>
        <name>Folders</name>
        <param>
          <type><ref refid="class_folders" kindref="compound">Folders</ref> const &amp;</type>
          <declname>folders</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="440" column="3" bodyfile="lib/files_functions.hpp" bodystart="440" bodyend="440"/>
        <references refid="class_folders_1aeb55402a14a1b9d847838882c43dbd14" compoundref="files__functions_8hpp" startline="477">m_folders</references>
      </memberdef>
      <memberdef kind="function" id="class_folders_1ae28297a4e83670ce6894c115e6be2592" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Folders::Folders</definition>
        <argsstring>(std::vector&lt; Folder &gt; const &amp;folders)</argsstring>
        <name>Folders</name>
        <param>
          <type>std::vector&lt; <ref refid="class_folder" kindref="compound">Folder</ref> &gt; const &amp;</type>
          <declname>folders</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="438" column="3" bodyfile="lib/files_functions.hpp" bodystart="438" bodyend="438"/>
        <references refid="class_folders_1aeb55402a14a1b9d847838882c43dbd14" compoundref="files__functions_8hpp" startline="477">m_folders</references>
      </memberdef>
      <memberdef kind="function" id="class_folders_1a8be43dfb713e9320014ff37a2e5ca5cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Folders::Folders</definition>
        <argsstring>(std::vector&lt; std::string &gt; const &amp;folders)</argsstring>
        <name>Folders</name>
        <param>
          <type>std::vector&lt; std::string &gt; const &amp;</type>
          <declname>folders</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="433" column="3" bodyfile="lib/files_functions.hpp" bodystart="433" bodyend="436"/>
        <references refid="class_folders_1aeb55402a14a1b9d847838882c43dbd14" compoundref="files__functions_8hpp" startline="477">m_folders</references>
      </memberdef>
      <memberdef kind="function" id="class_folders_1aab07a96e82a348fe89b817c6d7b60394" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; Folders::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="471" column="15" bodyfile="lib/files_functions.hpp" bodystart="471" bodyend="471"/>
        <references refid="class_folders_1aeb55402a14a1b9d847838882c43dbd14" compoundref="files__functions_8hpp" startline="477">m_folders</references>
        <referencedby refid="class_path_1a859f02f9224a864b541b15e8db325409" compoundref="files__functions_8hpp" startline="536" endline="536">Path::folder</referencedby>
        <referencedby refid="files__functions_8hpp_1aa889cd33a4965fd9590feac2fb26b0f2" compoundref="files__functions_8hpp" startline="480" endline="485">operator&lt;&lt;</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_folders_1ac590b52776691483bd9647c18d22bd10" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto const  &amp;</type>
        <definition>auto const&amp; Folders::list</definition>
        <argsstring>() const</argsstring>
        <name>list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="470" column="15" bodyfile="lib/files_functions.hpp" bodystart="470" bodyend="470"/>
        <references refid="class_folders_1aeb55402a14a1b9d847838882c43dbd14" compoundref="files__functions_8hpp" startline="477">m_folders</references>
      </memberdef>
      <memberdef kind="function" id="class_folders_1a8e586d397638ccf72386fadd5d4a6df6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Folders::operator std::string</definition>
        <argsstring>()</argsstring>
        <name>operator std::string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="455" column="3" bodyfile="lib/files_functions.hpp" bodystart="455" bodyend="455"/>
        <references refid="class_folders_1a8e586d397638ccf72386fadd5d4a6df6" compoundref="files__functions_8hpp" startline="455" endline="455">operator std::string</references>
        <referencedby refid="class_folders_1a8e586d397638ccf72386fadd5d4a6df6" compoundref="files__functions_8hpp" startline="455" endline="455">operator std::string</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_folders_1a616485734815d9827798b56a265cdc9e" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>Folders::operator std::vector&lt; Folder &gt;</definition>
        <argsstring>() const &amp;</argsstring>
        <name>operator std::vector&lt; Folder &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="456" column="3" bodyfile="lib/files_functions.hpp" bodystart="456" bodyend="456"/>
        <references refid="class_folders_1aeb55402a14a1b9d847838882c43dbd14" compoundref="files__functions_8hpp" startline="477">m_folders</references>
      </memberdef>
      <memberdef kind="function" id="class_folders_1a4a7246912adc54275ac8ded201c7ad3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_folders" kindref="compound">Folders</ref> &amp;</type>
        <definition>Folders&amp; Folders::operator=</definition>
        <argsstring>(Folders const &amp;folders)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_folders" kindref="compound">Folders</ref> const &amp;</type>
          <declname>folders</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="442" column="11" bodyfile="lib/files_functions.hpp" bodystart="442" bodyend="442"/>
        <references refid="class_folders_1aeb55402a14a1b9d847838882c43dbd14" compoundref="files__functions_8hpp" startline="477">m_folders</references>
      </memberdef>
      <memberdef kind="function" id="class_folders_1a6757711b57054c387a2309302c216eb7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_folders" kindref="compound">Folders</ref> &amp;</type>
        <definition>Folders&amp; Folders::operator=</definition>
        <argsstring>(std::vector&lt; std::string &gt; const &amp;folders)</argsstring>
        <name>operator=</name>
        <param>
          <type>std::vector&lt; std::string &gt; const &amp;</type>
          <declname>folders</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="443" column="11" bodyfile="lib/files_functions.hpp" bodystart="443" bodyend="446"/>
        <references refid="class_folders_1aeb55402a14a1b9d847838882c43dbd14" compoundref="files__functions_8hpp" startline="477">m_folders</references>
      </memberdef>
      <memberdef kind="function" id="class_folders_1ae627977a3c889589d2077f57554301b4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_folder" kindref="compound">Folder</ref> const  &amp;</type>
        <definition>Folder const&amp; Folders::operator[]</definition>
        <argsstring>(size_t const &amp;i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref> const &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="457" column="17" bodyfile="lib/files_functions.hpp" bodystart="457" bodyend="457"/>
        <references refid="class_folders_1aeb55402a14a1b9d847838882c43dbd14" compoundref="files__functions_8hpp" startline="477">m_folders</references>
      </memberdef>
      <memberdef kind="function" id="class_folders_1ab7471e5d0263ec69f2c87f184c004395" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Folders::push_back</definition>
        <argsstring>(Folder const &amp;folder)</argsstring>
        <name>push_back</name>
        <param>
          <type><ref refid="class_folder" kindref="compound">Folder</ref> const &amp;</type>
          <declname>folder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="473" column="8" bodyfile="lib/files_functions.hpp" bodystart="473" bodyend="473"/>
        <references refid="class_folders_1aeb55402a14a1b9d847838882c43dbd14" compoundref="files__functions_8hpp" startline="477">m_folders</references>
        <referencedby refid="class_path_1a99656cd73eb5c5fa461d7570b86eb66d" compoundref="files__functions_8hpp" startline="515" endline="522">Path::addFolder</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_folders_1a9b9a8af61bcaec214ec25ec217b84ef7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_folders" kindref="compound">Folders</ref> &amp;</type>
        <definition>Folders&amp; Folders::resize</definition>
        <argsstring>(int const &amp;size)</argsstring>
        <name>resize</name>
        <param>
          <type>int const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="463" column="12" bodyfile="lib/files_functions.hpp" bodystart="463" bodyend="463"/>
        <references refid="class_folders_1aeb55402a14a1b9d847838882c43dbd14" compoundref="files__functions_8hpp" startline="477">m_folders</references>
        <references refid="class_folders_1a415c1107abd57b7a9c63fd8959a220cd" compoundref="files__functions_8hpp" startline="465" endline="465">size</references>
      </memberdef>
      <memberdef kind="function" id="class_folders_1a415c1107abd57b7a9c63fd8959a220cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Folders::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="465" column="8" bodyfile="lib/files_functions.hpp" bodystart="465" bodyend="465"/>
        <references refid="class_folders_1aeb55402a14a1b9d847838882c43dbd14" compoundref="files__functions_8hpp" startline="477">m_folders</references>
        <referencedby refid="class_path_1ac40c8c627d0412be849f1e6cd4cdc556" compoundref="files__functions_8hpp" startline="616" endline="636">Path::cleanPath</referencedby>
        <referencedby refid="class_folders_1a035d2b31430c66fc7a8941a9d938b658" compoundref="files__functions_8hpp" startline="460" endline="460">erase</referencedby>
        <referencedby refid="class_folders_1a9b9a8af61bcaec214ec25ec217b84ef7" compoundref="files__functions_8hpp" startline="463" endline="463">resize</referencedby>
        <referencedby refid="class_path_1ae0110636233610d4f90c0441181ccf9f" compoundref="files__functions_8hpp" startline="537" endline="537">Path::size</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_folders_1a21778cd16e2d1dfa91886bba394a506f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Folders::string</definition>
        <argsstring>() const</argsstring>
        <name>string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="448" column="15" bodyfile="lib/files_functions.hpp" bodystart="448" bodyend="453"/>
        <references refid="class_folders_1aeb55402a14a1b9d847838882c43dbd14" compoundref="files__functions_8hpp" startline="477">m_folders</references>
        <referencedby refid="class_path_1ac40c8c627d0412be849f1e6cd4cdc556" compoundref="files__functions_8hpp" startline="616" endline="636">Path::cleanPath</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>EXPERIMENTAL Object used to hold a list of folders. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="lib/files_functions.hpp" line="427" column="1" bodyfile="lib/files_functions.hpp" bodystart="428" bodyend="478"/>
    <listofallmembers>
      <member refid="class_folders_1a08d92a79fdced661ca94fb0547dfcbf2" prot="public" virt="non-virtual"><scope>Folders</scope><name>begin</name></member>
      <member refid="class_folders_1aaa63ca280c10fc90c09cc29e38c80a02" prot="public" virt="non-virtual"><scope>Folders</scope><name>clear</name></member>
      <member refid="class_folders_1a11de303e1a1926a03212fa4b085285ca" prot="public" virt="non-virtual"><scope>Folders</scope><name>end</name></member>
      <member refid="class_folders_1aa6c7cccbbb9de930b9a41dc42dcbb840" prot="public" virt="non-virtual"><scope>Folders</scope><name>erase</name></member>
      <member refid="class_folders_1a035d2b31430c66fc7a8941a9d938b658" prot="public" virt="non-virtual"><scope>Folders</scope><name>erase</name></member>
      <member refid="class_folders_1abb5ba77dd0b151ddc2479831740e514b" prot="public" virt="non-virtual"><scope>Folders</scope><name>Folders</name></member>
      <member refid="class_folders_1a8be43dfb713e9320014ff37a2e5ca5cb" prot="public" virt="non-virtual"><scope>Folders</scope><name>Folders</name></member>
      <member refid="class_folders_1ae28297a4e83670ce6894c115e6be2592" prot="public" virt="non-virtual"><scope>Folders</scope><name>Folders</name></member>
      <member refid="class_folders_1aa84623a40e39787329ca5ef8dbfa9d6c" prot="public" virt="non-virtual"><scope>Folders</scope><name>Folders</name></member>
      <member refid="class_folders_1aab07a96e82a348fe89b817c6d7b60394" prot="public" virt="non-virtual"><scope>Folders</scope><name>get</name></member>
      <member refid="class_folders_1ac590b52776691483bd9647c18d22bd10" prot="public" virt="non-virtual"><scope>Folders</scope><name>list</name></member>
      <member refid="class_folders_1aeb55402a14a1b9d847838882c43dbd14" prot="private" virt="non-virtual"><scope>Folders</scope><name>m_folders</name></member>
      <member refid="class_folders_1a8e586d397638ccf72386fadd5d4a6df6" prot="public" virt="non-virtual"><scope>Folders</scope><name>operator std::string</name></member>
      <member refid="class_folders_1a616485734815d9827798b56a265cdc9e" prot="public" virt="non-virtual"><scope>Folders</scope><name>operator std::vector&lt; Folder &gt;</name></member>
      <member refid="class_folders_1a4a7246912adc54275ac8ded201c7ad3a" prot="public" virt="non-virtual"><scope>Folders</scope><name>operator=</name></member>
      <member refid="class_folders_1a6757711b57054c387a2309302c216eb7" prot="public" virt="non-virtual"><scope>Folders</scope><name>operator=</name></member>
      <member refid="class_folders_1ae627977a3c889589d2077f57554301b4" prot="public" virt="non-virtual"><scope>Folders</scope><name>operator[]</name></member>
      <member refid="class_folders_1ab7471e5d0263ec69f2c87f184c004395" prot="public" virt="non-virtual"><scope>Folders</scope><name>push_back</name></member>
      <member refid="class_folders_1a9b9a8af61bcaec214ec25ec217b84ef7" prot="public" virt="non-virtual"><scope>Folders</scope><name>resize</name></member>
      <member refid="class_folders_1a415c1107abd57b7a9c63fd8959a220cd" prot="public" virt="non-virtual"><scope>Folders</scope><name>size</name></member>
      <member refid="class_folders_1a21778cd16e2d1dfa91886bba394a506f" prot="public" virt="non-virtual"><scope>Folders</scope><name>string</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
