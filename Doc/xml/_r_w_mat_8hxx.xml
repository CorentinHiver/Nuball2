<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_r_w_mat_8hxx" kind="file" language="C++">
    <compoundname>RWMat.hxx</compoundname>
    <includes local="no">math.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">fstream</includes>
    <includes local="no">sstream</includes>
    <includes local="no">iomanip</includes>
    <includes local="yes">TH2F.h</includes>
    <includes refid="lib_co_8hpp" local="yes">../libCo.hpp</includes>
    <incdepgraph>
      <node id="29">
        <label>glob.h</label>
      </node>
      <node id="16">
        <label>functional</label>
      </node>
      <node id="9">
        <label>iomanip</label>
      </node>
      <node id="21">
        <label>queue</label>
      </node>
      <node id="34">
        <label>random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>lib/Classes/RWMat.hxx</label>
        <link refid="_r_w_mat_8hxx"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>filesystem</label>
      </node>
      <node id="31">
        <label>stdlib.h</label>
      </node>
      <node id="22">
        <label>stdexcept</label>
      </node>
      <node id="20">
        <label>numeric</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="17">
        <label>map</label>
      </node>
      <node id="11">
        <label>../libCo.hpp</label>
        <link refid="lib_co_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>print.hpp</label>
        <link refid="print_8hpp"/>
      </node>
      <node id="7">
        <label>fstream</label>
      </node>
      <node id="12">
        <label>any</label>
      </node>
      <node id="37">
        <label>files_functions.hpp</label>
        <link refid="files__functions_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>random</label>
      </node>
      <node id="32">
        <label>string.h</label>
      </node>
      <node id="26">
        <label>typeinfo</label>
      </node>
      <node id="23">
        <label>stack</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="38">
        <label>vector_functions.hpp</label>
        <link refid="vector__functions_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>array</label>
      </node>
      <node id="8">
        <label>sstream</label>
      </node>
      <node id="2">
        <label>math.h</label>
      </node>
      <node id="6">
        <label>cstdlib</label>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
      <node id="36">
        <label>string_functions.hpp</label>
        <link refid="string__functions_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>unordered_map</label>
      </node>
      <node id="10">
        <label>TH2F.h</label>
      </node>
      <node id="19">
        <label>mutex</label>
      </node>
      <node id="24">
        <label>thread</label>
      </node>
      <node id="14">
        <label>algorithm</label>
      </node>
      <node id="30">
        <label>stdio.h</label>
      </node>
      <node id="15">
        <label>cstring</label>
      </node>
      <node id="18">
        <label>memory</label>
      </node>
      <node id="25">
        <label>typeindex</label>
      </node>
      <node id="28">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_r_w_mat" prot="public">RWMat</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_RWMat_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_RWMat_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TH2F.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../libCo.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_r_w_mat" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_r_w_mat" kindref="compound">RWMat</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><ref refid="class_r_w_mat_1ad245f6dc989a954229821900e5c17458" kindref="member">RWMat</ref>(std::string<sp/>name=</highlight><highlight class="stringliteral">&quot;test.m4b&quot;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nchans=4096);<sp/></highlight><highlight class="comment">//@-<sp/>Default<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><ref refid="class_r_w_mat_1ad245f6dc989a954229821900e5c17458" kindref="member">RWMat</ref>(TH2F*<sp/>RootMat);<sp/></highlight><highlight class="comment">//@-<sp/>constructor<sp/>from<sp/>Root<sp/>2D<sp/>histogram</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="class_r_w_mat_1ad245f6dc989a954229821900e5c17458" kindref="member">RWMat</ref>(<ref refid="class_m_t_t_hist" kindref="compound">MTTHist&lt;T&gt;</ref><sp/>&amp;<sp/>MTRootMat);<sp/><sp/></highlight><highlight class="comment">//@-<sp/>constructor<sp/>from<sp/>MTThist<sp/>2D<sp/>histogram</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><ref refid="class_r_w_mat_1add7fb5d29a3eda4401b94481bcddc896" kindref="member">~RWMat</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//@-<sp/>Normal<sp/>destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>THist&gt;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_w_mat_1a2a38f63e3061d82c63f8d87227bef093" kindref="member">Reset</ref>(THist*<sp/>RootMat);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_w_mat_1ab155902ca767a777680d3196661a7878" kindref="member">Write</ref>(std::string<sp/>name=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>path<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;./&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//write<sp/>the<sp/>RWMat<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_w_mat_1ae8a3886033955806c9e13a98064e9faa" kindref="member">Read</ref>(std::string<sp/><ref refid="class_filename" kindref="compound">Filename</ref>=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsInteger=</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//Read<sp/>matrix<sp/>from<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_r_w_mat_1a9079d6bdafb40bcf8fc84fee35d5f4b4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_r_w_mat_1a9079d6bdafb40bcf8fc84fee35d5f4b4" kindref="member">Get</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>j)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_r_w_mat_1aa0e60afd074b20cdd737fafcd3fced37" kindref="member">fRWMat</ref>[i][j];}</highlight></codeline>
<codeline lineno="30" refid="class_r_w_mat_1a42bd9b2702bcac07a1a332ef1eebb0b6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_w_mat_1a42bd9b2702bcac07a1a332ef1eebb0b6" kindref="member">Set</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{<ref refid="class_r_w_mat_1aa0e60afd074b20cdd737fafcd3fced37" kindref="member">fRWMat</ref>[i][j]=val;}</highlight></codeline>
<codeline lineno="31" refid="class_r_w_mat_1addc9b12da9c59cb419e487ab133b163e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_w_mat_1addc9b12da9c59cb419e487ab133b163e" kindref="member">Set</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/>{<ref refid="class_r_w_mat_1aa0e60afd074b20cdd737fafcd3fced37" kindref="member">fRWMat</ref>[i][j]=val;}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_w_mat_1ace8b6917a8fbc9501a743cf4466b08c6" kindref="member">Fill</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>j);<sp/></highlight><highlight class="comment">//increment<sp/>channel<sp/>by<sp/>1<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="class_r_w_mat" kindref="compound">RWMat</ref>*<sp/><ref refid="class_r_w_mat_1ac6ba02395cf6ef6abee70690be8080f3" kindref="member">Add</ref>(<ref refid="class_r_w_mat" kindref="compound">RWMat</ref>*<sp/>Matrix,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_r_w_mat_1a085345e7c3f8e7c33a2551376bf9d985" kindref="member">Integral</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_w_mat_1a218cbcc341e23f37e9398c038d9353e8" kindref="member">ReSymmetrise</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_r_w_mat_1af756111c15613e541d22447dde9addc2" kindref="member">FindMinMax</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_r_w_mat_1a031953fd22b694722f332661ed130110" kindref="member">FindMinChan</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40" refid="class_r_w_mat_1a078fa06934beca6a0b26e8d390b47502" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><ref refid="class_r_w_mat_1a078fa06934beca6a0b26e8d390b47502" kindref="member">fNChannels</ref>;</highlight></codeline>
<codeline lineno="41" refid="class_r_w_mat_1a1f1ba15012123f1e9300198569dfc41d" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><ref refid="class_r_w_mat_1a1f1ba15012123f1e9300198569dfc41d" kindref="member">fName</ref>;</highlight></codeline>
<codeline lineno="42" refid="class_r_w_mat_1aa0e60afd074b20cdd737fafcd3fced37" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">**<sp/><sp/><ref refid="class_r_w_mat_1aa0e60afd074b20cdd737fafcd3fced37" kindref="member">fRWMat</ref>;</highlight></codeline>
<codeline lineno="43" refid="class_r_w_mat_1ac474b466b02ad230cef4547e636cb6ab" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_r_w_mat_1ac474b466b02ad230cef4547e636cb6ab" kindref="member">fTotalCounts</ref>;</highlight></codeline>
<codeline lineno="44" refid="class_r_w_mat_1a4208d4292b829b19a94c1d089cf7b2c5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_r_w_mat_1a4208d4292b829b19a94c1d089cf7b2c5" kindref="member">fMaxCounts</ref>;</highlight></codeline>
<codeline lineno="45" refid="class_r_w_mat_1a0ec72e725999c7216f1a76ac7d145e9e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_r_w_mat_1a0ec72e725999c7216f1a76ac7d145e9e" kindref="member">m_ok</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46" refid="class_r_w_mat_1ab4ce18606ed04d40b50ff6b8f6af6a21" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_r_w_mat_1ab4ce18606ed04d40b50ff6b8f6af6a21" kindref="member">deleted</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="class_r_w_mat_1ad245f6dc989a954229821900e5c17458" refkind="member"><highlight class="normal"><ref refid="class_r_w_mat_1ad245f6dc989a954229821900e5c17458" kindref="member">RWMat::RWMat</ref>(std::string<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nchans)<sp/></highlight><highlight class="comment">//default<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="class_r_w_mat_1a078fa06934beca6a0b26e8d390b47502" kindref="member">fNChannels</ref>=nchans;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="class_r_w_mat_1a1f1ba15012123f1e9300198569dfc41d" kindref="member">fName</ref>=name;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="class_r_w_mat_1aa0e60afd074b20cdd737fafcd3fced37" kindref="member">fRWMat</ref>=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*[<ref refid="class_r_w_mat_1a078fa06934beca6a0b26e8d390b47502" kindref="member">fNChannels</ref>];</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0<sp/>;<sp/>i<sp/>&lt;<sp/><ref refid="class_r_w_mat_1a078fa06934beca6a0b26e8d390b47502" kindref="member">fNChannels</ref><sp/>;<sp/>i++)<sp/><ref refid="class_r_w_mat_1aa0e60afd074b20cdd737fafcd3fced37" kindref="member">fRWMat</ref>[i]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[<ref refid="class_r_w_mat_1a078fa06934beca6a0b26e8d390b47502" kindref="member">fNChannels</ref>];</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="58" refid="class_r_w_mat_1a2e77ce21675eb416b09dd3c9911be13b" refkind="member"><highlight class="normal"><ref refid="class_r_w_mat_1ad245f6dc989a954229821900e5c17458" kindref="member">RWMat::RWMat</ref>(<ref refid="class_m_t_t_hist" kindref="compound">MTTHist&lt;T&gt;</ref><sp/>&amp;<sp/>MTRootMat)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MTRootMat.<ref refid="class_m_t_t_hist_1a5c8a398dfdd3fad0a4529453caf93bd2" kindref="member">Integral</ref>()<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_r_w_mat_1a0ec72e725999c7216f1a76ac7d145e9e" kindref="member">m_ok</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>MTRootMat.<ref refid="class_m_t_t_hist_1a7c92589542fe14a28350712bab17c7ff" kindref="member">Merge</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!MTRootMat<sp/>-&gt;<sp/>InheritsFrom(</highlight><highlight class="stringliteral">&quot;TH2&quot;</highlight><highlight class="normal">))<sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(MTRootMat.<ref refid="class_m_t_t_hist_1a317a4a786844491e45a270e87acd1e89" kindref="member">GetName</ref>(),</highlight><highlight class="stringliteral">&quot;is<sp/>not<sp/>a<sp/>TH2x<sp/>!!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="class_r_w_mat_1a2a38f63e3061d82c63f8d87227bef093" kindref="member">Reset</ref>(MTRootMat.<ref refid="class_m_t_t_hist_1a9c2f7d05c9f8506382211635b35bd97b" kindref="member">get</ref>());</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="class_r_w_mat_1a25c4d6ab84120b88df33e44a3539988d" refkind="member"><highlight class="normal"><ref refid="class_r_w_mat_1ad245f6dc989a954229821900e5c17458" kindref="member">RWMat::RWMat</ref>(TH2F*<sp/>RootMat)<sp/></highlight><highlight class="comment">//constructor<sp/>from<sp/>root<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_r_w_mat_1a2a38f63e3061d82c63f8d87227bef093" kindref="member">Reset</ref>(RootMat);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>THist&gt;</highlight></codeline>
<codeline lineno="76" refid="class_r_w_mat_1a2a38f63e3061d82c63f8d87227bef093" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_w_mat_1a2a38f63e3061d82c63f8d87227bef093" kindref="member">RWMat::Reset</ref>(THist*<sp/>RootMat)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RootMat-&gt;Integral()<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(RootMat-&gt;GetName(),<sp/></highlight><highlight class="stringliteral">&quot;empty<sp/>!!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_r_w_mat_1a0ec72e725999c7216f1a76ac7d145e9e" kindref="member">m_ok</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!RootMat<sp/>-&gt;<sp/>InheritsFrom(</highlight><highlight class="stringliteral">&quot;TH2&quot;</highlight><highlight class="normal">))<sp/>{<ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(RootMat-&gt;GetName(),</highlight><highlight class="stringliteral">&quot;is<sp/>not<sp/>a<sp/>TH2x<sp/>!!&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xchans=RootMat-&gt;GetNbinsX();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ychans=RootMat-&gt;GetNbinsY();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_r_w_mat_1a078fa06934beca6a0b26e8d390b47502" kindref="member">fNChannels</ref>=4096;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_r_w_mat_1a1f1ba15012123f1e9300198569dfc41d" kindref="member">fName</ref>=RootMat-&gt;GetName();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_r_w_mat_1a1f1ba15012123f1e9300198569dfc41d" kindref="member">fName</ref>=<ref refid="class_r_w_mat_1a1f1ba15012123f1e9300198569dfc41d" kindref="member">fName</ref>+</highlight><highlight class="stringliteral">&quot;.m4b&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(<ref refid="class_r_w_mat_1a1f1ba15012123f1e9300198569dfc41d" kindref="member">fName</ref>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_r_w_mat_1aa0e60afd074b20cdd737fafcd3fced37" kindref="member">fRWMat</ref>=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*[<ref refid="class_r_w_mat_1a078fa06934beca6a0b26e8d390b47502" kindref="member">fNChannels</ref>];</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0<sp/>;<sp/>i<sp/>&lt;<sp/><ref refid="class_r_w_mat_1a078fa06934beca6a0b26e8d390b47502" kindref="member">fNChannels</ref><sp/>;<sp/>i++)<sp/><ref refid="class_r_w_mat_1aa0e60afd074b20cdd737fafcd3fced37" kindref="member">fRWMat</ref>[i]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[<ref refid="class_r_w_mat_1a078fa06934beca6a0b26e8d390b47502" kindref="member">fNChannels</ref>];</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val=0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>xchans<sp/>;<sp/>i++)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j<sp/>&lt;<sp/>ychans<sp/>;<sp/>j++)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_w_mat_1aa0e60afd074b20cdd737fafcd3fced37" kindref="member">fRWMat</ref>[i][j]=RootMat-&gt;GetBinContent(i,j);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val+=<ref refid="class_r_w_mat_1aa0e60afd074b20cdd737fafcd3fced37" kindref="member">fRWMat</ref>[i][j];</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="class_r_w_mat_1add7fb5d29a3eda4401b94481bcddc896" refkind="member"><highlight class="normal"><ref refid="class_r_w_mat_1add7fb5d29a3eda4401b94481bcddc896" kindref="member">RWMat::~RWMat</ref>()</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_r_w_mat_1ab4ce18606ed04d40b50ff6b8f6af6a21" kindref="member">deleted</ref>)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;RWMat&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_r_w_mat_1a1f1ba15012123f1e9300198569dfc41d" kindref="member">fName</ref>,<sp/></highlight><highlight class="stringliteral">&quot;double<sp/>delete,<sp/>be<sp/>careful<sp/>!!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_r_w_mat_1a0ec72e725999c7216f1a76ac7d145e9e" kindref="member">m_ok</ref>)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/><ref refid="class_r_w_mat_1a078fa06934beca6a0b26e8d390b47502" kindref="member">fNChannels</ref>;<sp/>i++)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="class_r_w_mat_1aa0e60afd074b20cdd737fafcd3fced37" kindref="member">fRWMat</ref>[i];</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="class_r_w_mat_1aa0e60afd074b20cdd737fafcd3fced37" kindref="member">fRWMat</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_r_w_mat_1ab4ce18606ed04d40b50ff6b8f6af6a21" kindref="member">deleted</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="class_r_w_mat_1ace8b6917a8fbc9501a743cf4466b08c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_w_mat_1ace8b6917a8fbc9501a743cf4466b08c6" kindref="member">RWMat::Fill</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>j)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((i<sp/>&lt;<sp/><ref refid="class_r_w_mat_1a078fa06934beca6a0b26e8d390b47502" kindref="member">fNChannels</ref>)<sp/>&amp;&amp;<sp/>(j<sp/>&lt;<sp/><ref refid="class_r_w_mat_1a078fa06934beca6a0b26e8d390b47502" kindref="member">fNChannels</ref>)){<ref refid="class_r_w_mat_1aa0e60afd074b20cdd737fafcd3fced37" kindref="member">fRWMat</ref>[i][j]++;}</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="class_r_w_mat_1ae8a3886033955806c9e13a98064e9faa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_w_mat_1ae8a3886033955806c9e13a98064e9faa" kindref="member">RWMat::Read</ref>(std::string<sp/>fname,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsInteger)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="class_r_w_mat_1a1f1ba15012123f1e9300198569dfc41d" kindref="member">fName</ref>=fname;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>FILE<sp/>*fprad;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>fprad<sp/>=<sp/>fopen(fname.c_str(),</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fprad)<sp/>{std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Reading<sp/>RWMat<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fname<sp/>&lt;&lt;<sp/>std::endl;}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>Reading<sp/>RWMat<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fname<sp/>&lt;&lt;<sp/>std::endl;<sp/>exit(1);}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size=<ref refid="class_r_w_mat_1a078fa06934beca6a0b26e8d390b47502" kindref="member">fNChannels</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>buffer=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[size];</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>bufferi=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[size];</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>channels<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_r_w_mat_1a078fa06934beca6a0b26e8d390b47502" kindref="member">fNChannels</ref><sp/>&lt;&lt;<sp/><sp/>std::endl;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;size;<sp/>i++)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>fread(bufferi,<sp/>size,<sp/>(<sp/>(IsInteger)<sp/>?<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>:<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>),<sp/>fprad);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;size;<sp/>j++)<sp/><ref refid="class_r_w_mat_1aa0e60afd074b20cdd737fafcd3fced37" kindref="member">fRWMat</ref>[i][j]=bufferi[j];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>fclose(fprad);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>buffer;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>bufferi;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="class_r_w_mat_1ab155902ca767a777680d3196661a7878" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_w_mat_1ab155902ca767a777680d3196661a7878" kindref="member">RWMat::Write</ref>(std::string<sp/>name,<sp/>std::string<sp/>path)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_r_w_mat_1a0ec72e725999c7216f1a76ac7d145e9e" kindref="member">m_ok</ref>)<sp/>{<ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;CAN&apos;T<sp/>WRITE&quot;</highlight><highlight class="normal">,<sp/>name,<sp/></highlight><highlight class="stringliteral">&quot;RADWARE<sp/>MATRIX&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>FILE<sp/>*fprad;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name==</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{name=<ref refid="class_r_w_mat_1a1f1ba15012123f1e9300198569dfc41d" kindref="member">fName</ref>;}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<ref refid="class_r_w_mat_1a1f1ba15012123f1e9300198569dfc41d" kindref="member">fName</ref>=name;}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path.back()<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>path.push_back(</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>name<sp/>=<sp/>path+name;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>fprad<sp/>=<sp/>fopen(name.c_str(),</highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fprad)<sp/>{std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Writing<sp/>RWMat<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/>std::endl;}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>Writing<sp/>RWMat<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/>std::endl;<sp/>exit(1);}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size=<ref refid="class_r_w_mat_1a078fa06934beca6a0b26e8d390b47502" kindref="member">fNChannels</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>buffer=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[size];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;channels<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_r_w_mat_1a078fa06934beca6a0b26e8d390b47502" kindref="member">fNChannels</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>counts<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="class_r_w_mat_1a085345e7c3f8e7c33a2551376bf9d985" kindref="member">Integral</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>size<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>size*size*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int)/1048576<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Mo&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;size;<sp/>i++)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;size;<sp/>j++)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer[j]=<ref refid="class_r_w_mat_1aa0e60afd074b20cdd737fafcd3fced37" kindref="member">fRWMat</ref>[i][j];</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(buffer,<sp/>size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>fprad);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>fclose(fprad);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>buffer;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="class_r_w_mat_1ac6ba02395cf6ef6abee70690be8080f3" refkind="member"><highlight class="normal"><ref refid="class_r_w_mat" kindref="compound">RWMat</ref>*<sp/><ref refid="class_r_w_mat_1ac6ba02395cf6ef6abee70690be8080f3" kindref="member">RWMat::Add</ref>(<ref refid="class_r_w_mat" kindref="compound">RWMat</ref>*<sp/>Matrix,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><ref refid="class_r_w_mat" kindref="compound">RWMat</ref><sp/>*mat3=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_r_w_mat_1ad245f6dc989a954229821900e5c17458" kindref="member">RWMat</ref>();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_r_w_mat_1a078fa06934beca6a0b26e8d390b47502" kindref="member">fNChannels</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;<ref refid="class_r_w_mat_1a078fa06934beca6a0b26e8d390b47502" kindref="member">fNChannels</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mat3-&gt;<ref refid="class_r_w_mat_1a42bd9b2702bcac07a1a332ef1eebb0b6" kindref="member">Set</ref>(i,j,(<ref refid="class_r_w_mat_1aa0e60afd074b20cdd737fafcd3fced37" kindref="member">fRWMat</ref>[i][j]+(Matrix-&gt;<ref refid="class_r_w_mat_1a9079d6bdafb40bcf8fc84fee35d5f4b4" kindref="member">Get</ref>(i,j)*val)));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat3;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="class_r_w_mat_1a085345e7c3f8e7c33a2551376bf9d985" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_r_w_mat_1a085345e7c3f8e7c33a2551376bf9d985" kindref="member">RWMat::Integral</ref>()</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val=0.;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_r_w_mat_1a078fa06934beca6a0b26e8d390b47502" kindref="member">fNChannels</ref>;<sp/>i++)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;<ref refid="class_r_w_mat_1a078fa06934beca6a0b26e8d390b47502" kindref="member">fNChannels</ref>;<sp/>j++)<sp/>val+=<ref refid="class_r_w_mat_1aa0e60afd074b20cdd737fafcd3fced37" kindref="member">fRWMat</ref>[i][j];</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="class_r_w_mat_1a218cbcc341e23f37e9398c038d9353e8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_r_w_mat_1a218cbcc341e23f37e9398c038d9353e8" kindref="member">RWMat::ReSymmetrise</ref>()</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_r_w_mat_1a078fa06934beca6a0b26e8d390b47502" kindref="member">fNChannels</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;i;<sp/>j++)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val1=<ref refid="class_r_w_mat_1aa0e60afd074b20cdd737fafcd3fced37" kindref="member">fRWMat</ref>[i][j];</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val2=<ref refid="class_r_w_mat_1aa0e60afd074b20cdd737fafcd3fced37" kindref="member">fRWMat</ref>[j][i];</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_w_mat_1aa0e60afd074b20cdd737fafcd3fced37" kindref="member">fRWMat</ref>[i][j]=(val1+val2)/2.0;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_w_mat_1aa0e60afd074b20cdd737fafcd3fced37" kindref="member">fRWMat</ref>[j][i]=(val1+val2)/2.0;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="class_r_w_mat_1af756111c15613e541d22447dde9addc2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_r_w_mat_1af756111c15613e541d22447dde9addc2" kindref="member">RWMat::FindMinMax</ref>()</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxval=0;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minval=0;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxx<sp/>=<sp/>0,<sp/>maxy<sp/>=<sp/>0,<sp/>minx<sp/>=<sp/>0,<sp/>miny<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_r_w_mat_1a078fa06934beca6a0b26e8d390b47502" kindref="member">fNChannels</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;i;<sp/>j++)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val1=<ref refid="class_r_w_mat_1aa0e60afd074b20cdd737fafcd3fced37" kindref="member">fRWMat</ref>[i][j];</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val1<sp/>&gt;<sp/>maxval)<sp/>{maxval=val1;<sp/>maxx=i;<sp/>maxy=j;}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val1<sp/>&lt;<sp/>minval)<sp/>{minval=val1;<sp/>minx=i;<sp/>miny=j;}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Max<sp/>Value<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>maxval<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>at<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;maxx<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;maxy&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Min<sp/>Value<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>minval<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>at<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;minx<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;miny&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>minval;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//________________________________________________________________________</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="class_r_w_mat_1a031953fd22b694722f332661ed130110" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_r_w_mat_1a031953fd22b694722f332661ed130110" kindref="member">RWMat::FindMinChan</ref>()</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minval=0;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minx<sp/>=<sp/>0,<sp/>miny<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="class_r_w_mat_1a078fa06934beca6a0b26e8d390b47502" kindref="member">fNChannels</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;i;<sp/>j++)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val1=<ref refid="class_r_w_mat_1aa0e60afd074b20cdd737fafcd3fced37" kindref="member">fRWMat</ref>[i][j];</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val1<sp/>&lt;<sp/>minval)<sp/>{minval=val1;<sp/>minx=i;<sp/>miny=j;}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minx<sp/>&gt;<sp/>miny)<sp/>{miny=minx;}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>miny;</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="lib/Classes/RWMat.hxx"/>
  </compounddef>
</doxygen>
