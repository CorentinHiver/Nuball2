<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_m_t_counter_8hpp" kind="file" language="C++">
    <compoundname>MTCounter.hpp</compoundname>
    <includes refid="_m_t_object_8hpp" local="yes">MTObject.hpp</includes>
    <includedby refid="_performances_8hpp" local="yes">lib/Classes/Performances.hpp</includedby>
    <includedby refid="_m_t_t_hist_8hpp" local="yes">lib/MTObjects/MTTHist.hpp</includedby>
    <incdepgraph>
      <node id="10">
        <label>TThread.h</label>
      </node>
      <node id="1">
        <label>lib/MTObjects/MTCounter.hpp</label>
        <link refid="_m_t_counter_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>TROOT.h</label>
      </node>
      <node id="4">
        <label>future</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
      <node id="8">
        <label>iostream</label>
      </node>
      <node id="6">
        <label>mutex</label>
      </node>
      <node id="3">
        <label>csignal</label>
      </node>
      <node id="2">
        <label>MTObject.hpp</label>
        <link refid="_m_t_object_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>thread</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6">
        <label>lib/Modules/Faster2Histo.hpp</label>
        <link refid="_faster2_histo_8hpp"/>
      </node>
      <node id="11">
        <label>lib/Modules/EvolutionPeaks.hpp</label>
        <link refid="_evolution_peaks_8hpp"/>
      </node>
      <node id="1">
        <label>lib/MTObjects/MTCounter.hpp</label>
        <link refid="_m_t_counter_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>lib/Modules/CobaltCalorimeter.hpp</label>
        <link refid="_cobalt_calorimeter_8hpp"/>
      </node>
      <node id="4">
        <label>lib/Modules/CloverSpectra.hpp</label>
        <link refid="_clover_spectra_8hpp"/>
      </node>
      <node id="9">
        <label>lib/MTObjects/MTTHist.hpp</label>
        <link refid="_m_t_t_hist_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>lib/Modules/Faster2Root.hpp</label>
        <link refid="_faster2_root_8hpp"/>
      </node>
      <node id="8">
        <label>lib/Modules/RunMatrixator.hpp</label>
        <link refid="_run_matrixator_8hpp"/>
      </node>
      <node id="3">
        <label>lib/Modules/Timeshifts.hpp</label>
        <link refid="_timeshifts_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>lib/Modules/Calibrator.hpp</label>
        <link refid="_calibrator_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>lib/Classes/Performances.hpp</label>
        <link refid="_performances_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_m_t_counter" prot="public">MTCounter</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_m_t_counter_8hpp_1ac7b80782972d3aa547791a4bb31e9872" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, MTCounter const &amp;counter)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="class_m_t_counter" kindref="compound">MTCounter</ref> const &amp;</type>
          <declname>counter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/MTObjects/MTCounter.hpp" line="46" column="1" bodyfile="lib/MTObjects/MTCounter.hpp" bodystart="46" bodyend="50"/>
        <references refid="class_m_t_counter_1af8ce9a0c5504fc0f3275942dfa247c46" compoundref="_m_t_counter_8hpp" startline="21" endline="21">MTCounter::get</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>MTCOUNTER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MTCOUNTER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_m_t_object_8hpp" kindref="compound">MTObject.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="class_m_t_counter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_m_t_counter" kindref="compound">MTCounter</ref><sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15" refid="class_m_t_counter_1a41ee2ae0194c65d7d2bbc319f761e526" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_counter_1a41ee2ae0194c65d7d2bbc319f761e526" kindref="member">MTCounter</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>check_T_is_number<sp/>=<sp/>T_is_number&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="18" refid="class_m_t_counter_1ac70f9fc54c597480c314bc344a443239" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_counter_1ac70f9fc54c597480c314bc344a443239" kindref="member">MTCounter</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>value)<sp/>:<sp/><ref refid="class_m_t_counter_1a284d6290040d3ba03ad1ee201ddc2055" kindref="member">m_counter</ref>(<ref refid="lib_co_8hpp_1a237f678c718382f74a68364c0fc1779a" kindref="member">size_cast</ref>(value))<sp/>{}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_m_t_counter_1a172c8749fe46af5088b190d96c01f371" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_t_counter_1a284d6290040d3ba03ad1ee201ddc2055" kindref="member">m_counter</ref>.load();<sp/>}</highlight></codeline>
<codeline lineno="21" refid="class_m_t_counter_1af8ce9a0c5504fc0f3275942dfa247c46" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_m_t_counter_1af8ce9a0c5504fc0f3275942dfa247c46" kindref="member">get</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_t_counter_1a284d6290040d3ba03ad1ee201ddc2055" kindref="member">m_counter</ref>.load();<sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="class_m_t_counter_1a6a496ce44c384cb77ae1bfb0c2cc9386" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_m_t_counter_1a6a496ce44c384cb77ae1bfb0c2cc9386" kindref="member">operator++</ref>()<sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_t_counter_1a284d6290040d3ba03ad1ee201ddc2055" kindref="member">m_counter</ref>.fetch_add(1,<sp/>std::memory_order_relaxed);}<sp/></highlight><highlight class="comment">//<sp/>to<sp/>do<sp/>counter++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_m_t_counter_1adf119e63b77446423d7b1ce9b676b4e6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_m_t_counter_1adf119e63b77446423d7b1ce9b676b4e6" kindref="member">operator++</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_m_t_counter_1a284d6290040d3ba03ad1ee201ddc2055" kindref="member">m_counter</ref>.fetch_add(1,<sp/>std::memory_order_relaxed)+1);}</highlight><highlight class="comment">//<sp/>to<sp/>do<sp/>++counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_m_t_counter_1a4f07c44489cc9ad30eb4e90aa31fcaf9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_m_t_counter_1a4f07c44489cc9ad30eb4e90aa31fcaf9" kindref="member">incr</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_t_counter_1a284d6290040d3ba03ad1ee201ddc2055" kindref="member">m_counter</ref>.fetch_add(1,<sp/>std::memory_order_seq_cst)+1;}</highlight></codeline>
<codeline lineno="26" refid="class_m_t_counter_1ac39d8dfbf5d1e1c04d8f8e5d01b1bb68" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_m_t_counter_1ac39d8dfbf5d1e1c04d8f8e5d01b1bb68" kindref="member">increment</ref>()<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_t_counter_1a284d6290040d3ba03ad1ee201ddc2055" kindref="member">m_counter</ref>.fetch_add(1,<sp/>std::memory_order_seq_cst)+1;}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="28" refid="class_m_t_counter_1a02fc60a8ffdcaf8c305cdfe4d9f75080" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_m_t_counter_1a02fc60a8ffdcaf8c305cdfe4d9f75080" kindref="member">operator--</ref>()<sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_t_counter_1a284d6290040d3ba03ad1ee201ddc2055" kindref="member">m_counter</ref>.fetch_sub(-1,<sp/>std::memory_order_relaxed);}<sp/></highlight><highlight class="comment">//<sp/>to<sp/>do<sp/>counter--</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_m_t_counter_1a58bdc4e3b741bf50db4738b837b0c309" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_m_t_counter_1a58bdc4e3b741bf50db4738b837b0c309" kindref="member">operator--</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_t_counter_1a284d6290040d3ba03ad1ee201ddc2055" kindref="member">m_counter</ref>.fetch_sub(-1,<sp/>std::memory_order_relaxed)-1;}</highlight><highlight class="comment">//<sp/>to<sp/>do<sp/>--counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_m_t_counter_1a0f22cd113e1ab51159f288dd7b04f1ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_m_t_counter_1a0f22cd113e1ab51159f288dd7b04f1ae" kindref="member">decr</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_t_counter_1a284d6290040d3ba03ad1ee201ddc2055" kindref="member">m_counter</ref>.fetch_sub(-1,<sp/>std::memory_order_seq_cst)-1;}</highlight></codeline>
<codeline lineno="31" refid="class_m_t_counter_1a47de3b1465e5f66822131ba49a97132f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_m_t_counter_1a47de3b1465e5f66822131ba49a97132f" kindref="member">decrement</ref>()<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_t_counter_1a284d6290040d3ba03ad1ee201ddc2055" kindref="member">m_counter</ref>.fetch_sub(-1,<sp/>std::memory_order_seq_cst)-1;}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>check_T_is_number<sp/>=<sp/>T_is_number&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="34" refid="class_m_t_counter_1a62d12e221986dda2cb740d9e8da4ee55" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_t_counter_1a62d12e221986dda2cb740d9e8da4ee55" kindref="member">add</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>t)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_t_counter_1a284d6290040d3ba03ad1ee201ddc2055" kindref="member">m_counter</ref>.fetch_add(<ref refid="lib_co_8hpp_1a237f678c718382f74a68364c0fc1779a" kindref="member">size_cast</ref>(t),<sp/>std::memory_order_seq_cst);}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>check_T_is_number<sp/>=<sp/>T_is_number&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="37" refid="class_m_t_counter_1ad0851e43d22e6ffe02b1ecc66e4b793d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_t_counter_1ad0851e43d22e6ffe02b1ecc66e4b793d" kindref="member">operator+=</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>t)<sp/>{<ref refid="class_m_t_counter_1a284d6290040d3ba03ad1ee201ddc2055" kindref="member">m_counter</ref>.fetch_add(<ref refid="lib_co_8hpp_1a237f678c718382f74a68364c0fc1779a" kindref="member">size_cast</ref>(t),<sp/>std::memory_order_relaxed);}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>check_T_is_number<sp/>=<sp/>T_is_number&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="40" refid="class_m_t_counter_1a833a2a1bedd059ba424d8150a418c351" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_t_counter_1a833a2a1bedd059ba424d8150a418c351" kindref="member">operator=</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>t)<sp/>{<ref refid="class_m_t_counter_1a284d6290040d3ba03ad1ee201ddc2055" kindref="member">m_counter</ref>.store(<ref refid="lib_co_8hpp_1a237f678c718382f74a68364c0fc1779a" kindref="member">size_cast</ref>(t),<sp/>std::memory_order_relaxed);}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43" refid="class_m_t_counter_1a284d6290040d3ba03ad1ee201ddc2055" refkind="member"><highlight class="normal"><sp/><sp/>std::atomic&lt;ulonglong&gt;<sp/><ref refid="class_m_t_counter_1a284d6290040d3ba03ad1ee201ddc2055" kindref="member">m_counter</ref>{0};</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="_m_t_counter_8hpp_1ac7b80782972d3aa547791a4bb31e9872" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="_m_t_counter_8hpp_1ac7b80782972d3aa547791a4bb31e9872" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>os,<sp/><ref refid="class_m_t_counter" kindref="compound">MTCounter</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>counter)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/>counter.<ref refid="class_m_t_counter_1af8ce9a0c5504fc0f3275942dfa247c46" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//MTCOUNTER_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="lib/MTObjects/MTCounter.hpp"/>
  </compounddef>
</doxygen>
