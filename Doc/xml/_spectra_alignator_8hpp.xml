<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_spectra_alignator_8hpp" kind="file" language="C++">
    <compoundname>SpectraAlignator.hpp</compoundname>
    <includes refid="lib_root_8hpp" local="yes">../libRoot.hpp</includes>
    <incdepgraph>
      <node id="28">
        <label>glob.h</label>
      </node>
      <node id="52">
        <label>TH1S.h</label>
      </node>
      <node id="11">
        <label>iomanip</label>
      </node>
      <node id="10">
        <label>functional</label>
      </node>
      <node id="17">
        <label>queue</label>
      </node>
      <node id="33">
        <label>random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>TTreeIndex.h</label>
      </node>
      <node id="2">
        <label>../libRoot.hpp</label>
        <link refid="lib_root_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>filesystem</label>
      </node>
      <node id="39">
        <label>TAxis.h</label>
      </node>
      <node id="30">
        <label>stdlib.h</label>
      </node>
      <node id="68">
        <label>TThread.h</label>
      </node>
      <node id="51">
        <label>TH1D.h</label>
      </node>
      <node id="64">
        <label>TStopwatch.h</label>
      </node>
      <node id="19">
        <label>stdexcept</label>
      </node>
      <node id="16">
        <label>numeric</label>
      </node>
      <node id="20">
        <label>string</label>
      </node>
      <node id="13">
        <label>map</label>
      </node>
      <node id="3">
        <label>libCo.hpp</label>
        <link refid="lib_co_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>TF1.h</label>
      </node>
      <node id="32">
        <label>print.hpp</label>
        <link refid="print_8hpp"/>
      </node>
      <node id="9">
        <label>fstream</label>
      </node>
      <node id="42">
        <label>TError.h</label>
      </node>
      <node id="66">
        <label>TStyle.h</label>
      </node>
      <node id="4">
        <label>any</label>
      </node>
      <node id="36">
        <label>files_functions.hpp</label>
        <link refid="files__functions_8hpp"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>random</label>
      </node>
      <node id="62">
        <label>TROOT.h</label>
      </node>
      <node id="31">
        <label>string.h</label>
      </node>
      <node id="24">
        <label>typeinfo</label>
      </node>
      <node id="41">
        <label>TChain.h</label>
      </node>
      <node id="1">
        <label>lib/Classes/SpectraAlignator.hpp</label>
        <link refid="_spectra_alignator_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>TSystem.h</label>
      </node>
      <node id="26">
        <label>vector</label>
      </node>
      <node id="21">
        <label>stack</label>
      </node>
      <node id="44">
        <label>TF2.h</label>
      </node>
      <node id="45">
        <label>TFile.h</label>
      </node>
      <node id="40">
        <label>TCanvas.h</label>
      </node>
      <node id="55">
        <label>TH3I.h</label>
      </node>
      <node id="56">
        <label>TKey.h</label>
      </node>
      <node id="37">
        <label>vector_functions.hpp</label>
        <link refid="vector__functions_8hpp"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>TSpectrum.h</label>
      </node>
      <node id="5">
        <label>array</label>
      </node>
      <node id="47">
        <label>TFitResult.h</label>
      </node>
      <node id="18">
        <label>sstream</label>
      </node>
      <node id="59">
        <label>TMarker.h</label>
      </node>
      <node id="49">
        <label>TGraphErrors.h</label>
      </node>
      <node id="53">
        <label>TH2.h</label>
      </node>
      <node id="7">
        <label>cstdlib</label>
      </node>
      <node id="50">
        <label>TH1F.h</label>
      </node>
      <node id="57">
        <label>TLeaf.h</label>
      </node>
      <node id="12">
        <label>iostream</label>
      </node>
      <node id="35">
        <label>string_functions.hpp</label>
        <link refid="string__functions_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>unordered_map</label>
      </node>
      <node id="58">
        <label>TLegend.h</label>
      </node>
      <node id="65">
        <label>TString.h</label>
      </node>
      <node id="60">
        <label>TMath.h</label>
      </node>
      <node id="54">
        <label>TH2F.h</label>
      </node>
      <node id="15">
        <label>mutex</label>
      </node>
      <node id="22">
        <label>thread</label>
      </node>
      <node id="61">
        <label>TRandom.h</label>
      </node>
      <node id="69">
        <label>TTree.h</label>
      </node>
      <node id="6">
        <label>algorithm</label>
      </node>
      <node id="46">
        <label>TFitResultPtr.h</label>
      </node>
      <node id="29">
        <label>stdio.h</label>
      </node>
      <node id="8">
        <label>cstring</label>
      </node>
      <node id="48">
        <label>TGraph.h</label>
      </node>
      <node id="14">
        <label>memory</label>
      </node>
      <node id="23">
        <label>typeindex</label>
      </node>
      <node id="27">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_minimisator" prot="public">Minimisator</innerclass>
    <innerclass refid="struct_minimisator_1_1_nelder_mead_parameters" prot="private">Minimisator::NelderMeadParameters</innerclass>
    <innerclass refid="class_recalibration" prot="public">Recalibration</innerclass>
    <innerclass refid="class_simplex" prot="public">Simplex</innerclass>
    <innerclass refid="class_spectra_alignator" prot="public">SpectraAlignator</innerclass>
    <innerclass refid="class_spectra_co" prot="public">SpectraCo</innerclass>
    <innerclass refid="class_vertice" prot="public">Vertice</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_spectra_alignator_8hpp_1aa5842b2bdb6a161db3b676a1381e73c0" prot="public" static="no">
        <name>MAX_ORDER2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/SpectraAlignator.hpp" line="6" column="9" bodyfile="lib/Classes/SpectraAlignator.hpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_spectra_alignator_8hpp_1afafb4a66ac57eb9c69b1fe6488851c4e" prot="public" static="no">
        <type>std::vector&lt; <ref refid="class_vertice" kindref="compound">Vertice</ref> &gt;</type>
        <definition>using Vertices =  std::vector&lt;Vertice&gt;</definition>
        <argsstring></argsstring>
        <name>Vertices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/SpectraAlignator.hpp" line="468" column="1" bodyfile="lib/Classes/SpectraAlignator.hpp" bodystart="468" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_spectra_alignator_8hpp_1a658a331239a2db3139f2a2163a4c182f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_vertice" kindref="compound">Vertice</ref></type>
        <definition>Vertice operator*</definition>
        <argsstring>(double const &amp;constant, Vertice const &amp;vertice)</argsstring>
        <name>operator*</name>
        <param>
          <type>double const &amp;</type>
          <declname>constant</declname>
        </param>
        <param>
          <type><ref refid="class_vertice" kindref="compound">Vertice</ref> const &amp;</type>
          <declname>vertice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/SpectraAlignator.hpp" line="461" column="9" bodyfile="lib/Classes/SpectraAlignator.hpp" bodystart="461" bodyend="466"/>
        <references refid="class_vertice_1a11e12aac4668a10a6b1706db7e5ebbcd" compoundref="_spectra_alignator_8hpp" startline="401" endline="401">Vertice::get</references>
      </memberdef>
      <memberdef kind="function" id="_spectra_alignator_8hpp_1a1c2f6d6b9b8d19b513889e59666d3967" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, Recalibration const &amp;recal)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="class_recalibration" kindref="compound">Recalibration</ref> const &amp;</type>
          <declname>recal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/SpectraAlignator.hpp" line="66" column="1" bodyfile="lib/Classes/SpectraAlignator.hpp" bodystart="66" bodyend="71"/>
        <references refid="class_recalibration_1a1b6076eaf677ac06dd70846a49479ab2" compoundref="_spectra_alignator_8hpp" startline="25" endline="25">Recalibration::a0</references>
        <references refid="class_recalibration_1ac00b395bd23d0b31ecfc17eecf3ec562" compoundref="_spectra_alignator_8hpp" startline="26" endline="26">Recalibration::a1</references>
        <references refid="class_recalibration_1a32775f494bdbb0ca5d4e6200a176f51b" compoundref="_spectra_alignator_8hpp" startline="27" endline="27">Recalibration::a2</references>
        <references refid="class_recalibration_1afb0a1a290ee2913fab53a51d1080fb4f" compoundref="_spectra_alignator_8hpp" startline="28" endline="28">Recalibration::a3</references>
        <references refid="class_recalibration_1a5fd3c1468ba53b676933f9c39ce8ca06" compoundref="_spectra_alignator_8hpp" startline="29" endline="29">Recalibration::aSqrt</references>
      </memberdef>
      <memberdef kind="function" id="_spectra_alignator_8hpp_1a2b92434fd8aaf67b841513f9b83eaaa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, Simplex const &amp;simplex)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="class_simplex" kindref="compound">Simplex</ref> const &amp;</type>
          <declname>simplex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/SpectraAlignator.hpp" line="564" column="1" bodyfile="lib/Classes/SpectraAlignator.hpp" bodystart="564" bodyend="569"/>
        <references refid="class_simplex_1ae39ce6d0a47986ceabb9a76146a8225b" compoundref="_spectra_alignator_8hpp" startline="551" endline="551">Simplex::size</references>
      </memberdef>
      <memberdef kind="function" id="_spectra_alignator_8hpp_1a00041d0900b9f4e90f24fc9f5f61208f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, Vertice const &amp;vertice)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="class_vertice" kindref="compound">Vertice</ref> const &amp;</type>
          <declname>vertice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Classes/SpectraAlignator.hpp" line="455" column="1" bodyfile="lib/Classes/SpectraAlignator.hpp" bodystart="455" bodyend="459"/>
        <references refid="class_vertice_1a11e12aac4668a10a6b1706db7e5ebbcd" compoundref="_spectra_alignator_8hpp" startline="401" endline="401">Vertice::get</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>SPECTRAALINGATOR_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPECTRAALINGATOR_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../libRoot.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="_spectra_alignator_8hpp_1aa5842b2bdb6a161db3b676a1381e73c0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_ORDER2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="class_recalibration" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_recalibration" kindref="compound">Recalibration</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11" refid="class_recalibration_1aa9dc73a23ffe032a72c50c30efe99929" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_recalibration_1aa9dc73a23ffe032a72c50c30efe99929" kindref="member">Recalibration</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_a0<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_a1<sp/>=<sp/>1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_a2<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_a3<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_aSqrt<sp/>=<sp/>0)<sp/>:</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref><sp/>({_a0,<sp/>_a1,<sp/>_a2,<sp/>_a3,<sp/>_aSqrt})</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="class_recalibration_1a9ac1a9416a818ee37a4a5fd8ad6120c2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_recalibration_1a9ac1a9416a818ee37a4a5fd8ad6120c2" kindref="member">Recalibration</ref>(<ref refid="class_recalibration" kindref="compound">Recalibration</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref><sp/>=<sp/>other.<ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Getters<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>const<sp/>getters<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="class_recalibration_1ad5e0d1f201966edfef75b060ca6b80ed" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1ad5e0d1f201966edfef75b060ca6b80ed" kindref="member">operator[] </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref>[i];}</highlight></codeline>
<codeline lineno="24" refid="class_recalibration_1ae86101c1d4238dd16bffd4911ee8092b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1ae86101c1d4238dd16bffd4911ee8092b" kindref="member">getParameter</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref>[i];}</highlight></codeline>
<codeline lineno="25" refid="class_recalibration_1a1b6076eaf677ac06dd70846a49479ab2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1a1b6076eaf677ac06dd70846a49479ab2" kindref="member">a0</ref><sp/><sp/><sp/><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref>[0];}</highlight></codeline>
<codeline lineno="26" refid="class_recalibration_1ac00b395bd23d0b31ecfc17eecf3ec562" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1ac00b395bd23d0b31ecfc17eecf3ec562" kindref="member">a1</ref><sp/><sp/><sp/><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref>[1];}</highlight></codeline>
<codeline lineno="27" refid="class_recalibration_1a32775f494bdbb0ca5d4e6200a176f51b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1a32775f494bdbb0ca5d4e6200a176f51b" kindref="member">a2</ref><sp/><sp/><sp/><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref>[2];}</highlight></codeline>
<codeline lineno="28" refid="class_recalibration_1afb0a1a290ee2913fab53a51d1080fb4f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1afb0a1a290ee2913fab53a51d1080fb4f" kindref="member">a3</ref><sp/><sp/><sp/><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref>[3];}</highlight></codeline>
<codeline lineno="29" refid="class_recalibration_1a5fd3c1468ba53b676933f9c39ce8ca06" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1a5fd3c1468ba53b676933f9c39ce8ca06" kindref="member">aSqrt</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref>[4];}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>not<sp/>const<sp/>getters<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_recalibration_1a53d116a242af33d63a5c17abad7ad35a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1ad5e0d1f201966edfef75b060ca6b80ed" kindref="member">operator[] </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref>[i];}</highlight></codeline>
<codeline lineno="33" refid="class_recalibration_1a01a34a50202c14313dce8b13d393169e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1a01a34a50202c14313dce8b13d393169e" kindref="member">getParameter</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref>[i];}</highlight></codeline>
<codeline lineno="34" refid="class_recalibration_1acb2b1f60462430f242447dd7f2286c66" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1acb2b1f60462430f242447dd7f2286c66" kindref="member">a0</ref><sp/><sp/><sp/><sp/>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref>[0];}</highlight></codeline>
<codeline lineno="35" refid="class_recalibration_1af0c8f7f42525ded09b34e7a51b86c916" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1af0c8f7f42525ded09b34e7a51b86c916" kindref="member">a1</ref><sp/><sp/><sp/><sp/>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref>[1];}</highlight></codeline>
<codeline lineno="36" refid="class_recalibration_1acb6aa7f788871cf8289ebfad7bb5f661" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1acb6aa7f788871cf8289ebfad7bb5f661" kindref="member">a2</ref><sp/><sp/><sp/><sp/>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref>[2];}</highlight></codeline>
<codeline lineno="37" refid="class_recalibration_1a4a040444a51c8fb8d9e3f75496832ca4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1a4a040444a51c8fb8d9e3f75496832ca4" kindref="member">a3</ref><sp/><sp/><sp/><sp/>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref>[3];}</highlight></codeline>
<codeline lineno="38" refid="class_recalibration_1a5b39212075300ce2b67d68e4829b81fd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1a5b39212075300ce2b67d68e4829b81fd" kindref="member">aSqrt</ref><sp/>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref>[4];}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setters<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_recalibration_1ac98afc36338de322cde52205b01971ff" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1ac98afc36338de322cde52205b01971ff" kindref="member">setParameter</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>a)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref>[i]<sp/>=<sp/>a);}</highlight></codeline>
<codeline lineno="42" refid="class_recalibration_1acacda60d186a17af0794f2c72e2d34c6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1acacda60d186a17af0794f2c72e2d34c6" kindref="member">setParameter</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>a)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref>[i]<sp/>=<sp/>a);}</highlight></codeline>
<codeline lineno="43" refid="class_recalibration_1a4d5a3852cdb8f5d02282eb7c37a7df6c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1a4d5a3852cdb8f5d02282eb7c37a7df6c" kindref="member">a0</ref><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1a1b6076eaf677ac06dd70846a49479ab2" kindref="member">a0</ref>)<sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref>[0]<sp/>=<sp/><ref refid="class_recalibration_1a1b6076eaf677ac06dd70846a49479ab2" kindref="member">a0</ref>);}</highlight></codeline>
<codeline lineno="44" refid="class_recalibration_1a54dbf3d380efae15883f94d5275dfbf1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1a54dbf3d380efae15883f94d5275dfbf1" kindref="member">a1</ref><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1ac00b395bd23d0b31ecfc17eecf3ec562" kindref="member">a1</ref>)<sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref>[1]<sp/>=<sp/><ref refid="class_recalibration_1ac00b395bd23d0b31ecfc17eecf3ec562" kindref="member">a1</ref>);}</highlight></codeline>
<codeline lineno="45" refid="class_recalibration_1a844c6526e701a6d88507bb761bbc30bf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1a844c6526e701a6d88507bb761bbc30bf" kindref="member">a2</ref><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1a32775f494bdbb0ca5d4e6200a176f51b" kindref="member">a2</ref>)<sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref>[2]<sp/>=<sp/><ref refid="class_recalibration_1a32775f494bdbb0ca5d4e6200a176f51b" kindref="member">a2</ref>);}</highlight></codeline>
<codeline lineno="46" refid="class_recalibration_1a126c31e5ccd9cc3e4efacc7ba82be9e9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1a126c31e5ccd9cc3e4efacc7ba82be9e9" kindref="member">a3</ref><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1afb0a1a290ee2913fab53a51d1080fb4f" kindref="member">a3</ref>)<sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref>[3]<sp/>=<sp/><ref refid="class_recalibration_1afb0a1a290ee2913fab53a51d1080fb4f" kindref="member">a3</ref>);}</highlight></codeline>
<codeline lineno="47" refid="class_recalibration_1a1552960d9d25edc15b0ef5a4f0cb809c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1a1552960d9d25edc15b0ef5a4f0cb809c" kindref="member">aSqrt</ref><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_recalibration_1a5fd3c1468ba53b676933f9c39ce8ca06" kindref="member">aSqrt</ref>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref>[4]<sp/>=<sp/><ref refid="class_recalibration_1a5fd3c1468ba53b676933f9c39ce8ca06" kindref="member">aSqrt</ref>);}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MAX_ORDER2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="class_recalibration_1a6ce90b10d69409fdbc385ba6f990e073" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1a6ce90b10d69409fdbc385ba6f990e073" kindref="member">calculate</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>x)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1a1b6076eaf677ac06dd70846a49479ab2" kindref="member">a0</ref>()<sp/>+<sp/><ref refid="class_recalibration_1ac00b395bd23d0b31ecfc17eecf3ec562" kindref="member">a1</ref>()*x<sp/>+<sp/><ref refid="class_recalibration_1a32775f494bdbb0ca5d4e6200a176f51b" kindref="member">a2</ref>()*x*x<sp/>;}</highlight></codeline>
<codeline lineno="52" refid="class_recalibration_1aa9421b4e58d718e18ef17a82b4a37fcc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1aa9421b4e58d718e18ef17a82b4a37fcc" kindref="member">calculate</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1a1b6076eaf677ac06dd70846a49479ab2" kindref="member">a0</ref>()<sp/>+<sp/><ref refid="class_recalibration_1ac00b395bd23d0b31ecfc17eecf3ec562" kindref="member">a1</ref>()*x<sp/>+<sp/><ref refid="class_recalibration_1a32775f494bdbb0ca5d4e6200a176f51b" kindref="member">a2</ref>()*x*x<sp/>;}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1a6ce90b10d69409fdbc385ba6f990e073" kindref="member">calculate</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>x)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1a1b6076eaf677ac06dd70846a49479ab2" kindref="member">a0</ref>()<sp/>+<sp/><ref refid="class_recalibration_1ac00b395bd23d0b31ecfc17eecf3ec562" kindref="member">a1</ref>()*x<sp/>+<sp/><ref refid="class_recalibration_1a32775f494bdbb0ca5d4e6200a176f51b" kindref="member">a2</ref>()*x*x<sp/>+<sp/><ref refid="class_recalibration_1afb0a1a290ee2913fab53a51d1080fb4f" kindref="member">a3</ref>()*x*x*x<sp/>+<sp/><ref refid="class_recalibration_1a5fd3c1468ba53b676933f9c39ce8ca06" kindref="member">aSqrt</ref>()*x;}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1a6ce90b10d69409fdbc385ba6f990e073" kindref="member">calculate</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1a1b6076eaf677ac06dd70846a49479ab2" kindref="member">a0</ref>()<sp/>+<sp/><ref refid="class_recalibration_1ac00b395bd23d0b31ecfc17eecf3ec562" kindref="member">a1</ref>()*x<sp/>+<sp/><ref refid="class_recalibration_1a32775f494bdbb0ca5d4e6200a176f51b" kindref="member">a2</ref>()*x*x<sp/>+<sp/><ref refid="class_recalibration_1afb0a1a290ee2913fab53a51d1080fb4f" kindref="member">a3</ref>()*x*x*x<sp/>+<sp/><ref refid="class_recalibration_1a5fd3c1468ba53b676933f9c39ce8ca06" kindref="member">aSqrt</ref>()*x;}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//MAX_ORDER2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_recalibration_1a020eb53732eef370a3938eef68c59b5f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1a020eb53732eef370a3938eef68c59b5f" kindref="member">operator() </ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1a6ce90b10d69409fdbc385ba6f990e073" kindref="member">calculate</ref>(x)<sp/>;}</highlight></codeline>
<codeline lineno="59" refid="class_recalibration_1a486ef28992aca9993a14923100ad12bc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1a020eb53732eef370a3938eef68c59b5f" kindref="member">operator() </ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>x)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_recalibration_1a6ce90b10d69409fdbc385ba6f990e073" kindref="member">calculate</ref>(x)<sp/>;}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="class_recalibration_1ab2b32920bd00fc958c82740efd306fac" kindref="member">m_parameters</ref><sp/>=<sp/>std::vector&lt;double&gt;(5);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="_spectra_alignator_8hpp_1a1c2f6d6b9b8d19b513889e59666d3967" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="_spectra_alignator_8hpp_1a1c2f6d6b9b8d19b513889e59666d3967" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/><ref refid="class_recalibration" kindref="compound">Recalibration</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>recal)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>out<sp/>&lt;&lt;<sp/>recal.<ref refid="class_recalibration_1a1b6076eaf677ac06dd70846a49479ab2" kindref="member">a0</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>+<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>recal.<ref refid="class_recalibration_1ac00b395bd23d0b31ecfc17eecf3ec562" kindref="member">a1</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x<sp/>+<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>recal.<ref refid="class_recalibration_1a32775f494bdbb0ca5d4e6200a176f51b" kindref="member">a2</ref>()<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x2<sp/>+<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>recal.<ref refid="class_recalibration_1afb0a1a290ee2913fab53a51d1080fb4f" kindref="member">a3</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x3<sp/>+<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>recal.<ref refid="class_recalibration_1a5fd3c1468ba53b676933f9c39ce8ca06" kindref="member">aSqrt</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;sqrt(x)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="comment">//<sp/>SpectraCo<sp/>//</highlight></codeline>
<codeline lineno="76"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="class_spectra_co" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_spectra_co" kindref="compound">SpectraCo</ref></highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="class_spectra_co_1a570ba99fb9ea9f066b85089222d08fd7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_spectra_co_1a570ba99fb9ea9f066b85089222d08fd7" kindref="member">SpectraCo</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="class_spectra_co_1a5b36618b661bac6d8d8c6cfb809eeb74" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_spectra_co_1a5b36618b661bac6d8d8c6cfb809eeb74" kindref="member">SpectraCo</ref>(TH1*<sp/>root_spectra)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1ad357dfc02fbb9ad6fc308ecf07f07fea" kindref="member">load</ref>(root_spectra);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="class_spectra_co_1ac8b2232b16c1ef5379b614aff60d8538" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_spectra_co_1ac8b2232b16c1ef5379b614aff60d8538" kindref="member">SpectraCo</ref>(<ref refid="class_spectra_co" kindref="compound">SpectraCo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>other)<sp/>:<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1afaf3a8b0918de26d2c37392c0bc853a4" kindref="member">m_spectra</ref><sp/><sp/><sp/>(other.<ref refid="class_spectra_co_1afaf3a8b0918de26d2c37392c0bc853a4" kindref="member">m_spectra</ref>),</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1ac2f903ccb1ff1079f7667e3c9f25b154" kindref="member">m_name</ref><sp/><sp/><sp/><sp/><sp/><sp/>(other.<ref refid="class_spectra_co_1ac2f903ccb1ff1079f7667e3c9f25b154" kindref="member">m_name</ref>),</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref><sp/><sp/><sp/><sp/><sp/><sp/>(other.<ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1acdaa8ad0f11fa4c3fd7aa6eae2dacbd7" kindref="member">m_integral</ref><sp/><sp/>(other.<ref refid="class_spectra_co_1acdaa8ad0f11fa4c3fd7aa6eae2dacbd7" kindref="member">m_integral</ref>),</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1a027efc7bfb6426b5d3f90813e182885e" kindref="member">m_min_value</ref><sp/>(other.<ref refid="class_spectra_co_1a027efc7bfb6426b5d3f90813e182885e" kindref="member">m_min_value</ref>),</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1a84d2c65395a0f25fd84d6c5019e9d149" kindref="member">m_max_value</ref><sp/>(other.<ref refid="class_spectra_co_1a84d2c65395a0f25fd84d6c5019e9d149" kindref="member">m_max_value</ref>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>throw_error(&quot;SpectraCo::SpectraCo(SpectraCo<sp/>const<sp/>&amp;<sp/>other)<sp/>:<sp/>function<sp/>is<sp/>not<sp/>working<sp/>!&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="class_spectra_co_1a3e4d1435fa3a80662a8c4442464988e1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_spectra_co_1a3e4d1435fa3a80662a8c4442464988e1" kindref="member">SpectraCo</ref>(<ref refid="class_spectra_co" kindref="compound">SpectraCo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>other,<sp/><ref refid="class_recalibration" kindref="compound">Recalibration</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>recal)<sp/>:<sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1afaf3a8b0918de26d2c37392c0bc853a4" kindref="member">m_spectra</ref><sp/><sp/><sp/>(other.<ref refid="class_spectra_co_1afaf3a8b0918de26d2c37392c0bc853a4" kindref="member">m_spectra</ref>),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1ac2f903ccb1ff1079f7667e3c9f25b154" kindref="member">m_name</ref><sp/><sp/><sp/><sp/><sp/><sp/>(other.<ref refid="class_spectra_co_1ac2f903ccb1ff1079f7667e3c9f25b154" kindref="member">m_name</ref>),</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref><sp/><sp/><sp/><sp/><sp/><sp/>(other.<ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1acdaa8ad0f11fa4c3fd7aa6eae2dacbd7" kindref="member">m_integral</ref><sp/><sp/>(other.<ref refid="class_spectra_co_1acdaa8ad0f11fa4c3fd7aa6eae2dacbd7" kindref="member">m_integral</ref>),</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1a027efc7bfb6426b5d3f90813e182885e" kindref="member">m_min_value</ref><sp/>(other.<ref refid="class_spectra_co_1a027efc7bfb6426b5d3f90813e182885e" kindref="member">m_min_value</ref>),</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1a84d2c65395a0f25fd84d6c5019e9d149" kindref="member">m_max_value</ref><sp/>(other.<ref refid="class_spectra_co_1a84d2c65395a0f25fd84d6c5019e9d149" kindref="member">m_max_value</ref>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>throw_error(&quot;SpectraCo::SpectraCo(SpectraCo<sp/>const<sp/>&amp;<sp/>other)<sp/>:<sp/>function<sp/>is<sp/>not<sp/>working<sp/>!&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_spectra_co_1a085a0452438dbffc3452aed6733a9103" kindref="member">recalibrate</ref>(recal);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="class_spectra_co_1a06daa646799145f445d02f3d2c193d52" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_spectra_co_1a06daa646799145f445d02f3d2c193d52" kindref="member">SpectraCo</ref>(std::vector&lt;double&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>data)<sp/>:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1afaf3a8b0918de26d2c37392c0bc853a4" kindref="member">m_spectra</ref>(data),</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>(data.<ref refid="class_spectra_co_1af819f84c4dfd2a2bf9ee87809dec1159" kindref="member">size</ref>()),</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1a027efc7bfb6426b5d3f90813e182885e" kindref="member">m_min_value</ref>(0),</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1a84d2c65395a0f25fd84d6c5019e9d149" kindref="member">m_max_value</ref>(<ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="class_spectra_co_1ad094b13ab3d8e445b04edc68a5c12ec0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_spectra_co" kindref="compound">SpectraCo</ref>&amp;<sp/><ref refid="class_spectra_co_1ad094b13ab3d8e445b04edc68a5c12ec0" kindref="member">operator=</ref>(TH1*<sp/>root_spectra)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1ad357dfc02fbb9ad6fc308ecf07f07fea" kindref="member">load</ref>(root_spectra);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="class_spectra_co_1ad357dfc02fbb9ad6fc308ecf07f07fea" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1ad357dfc02fbb9ad6fc308ecf07f07fea" kindref="member">load</ref>(TH1*<sp/>root_spectra)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root_spectra-&gt;IsA()-&gt;InheritsFrom(TH2::Class())<sp/>||<sp/>root_spectra-&gt;IsA()-&gt;InheritsFrom(TH3::Class()))</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(</highlight><highlight class="stringliteral">&quot;In<sp/>SpectraAlignator::SpectraAlignator(TH1*<sp/>root_spectra)<sp/>:<sp/>root_spectra<sp/>is<sp/>a<sp/>TH2<sp/>or<sp/>TH3<sp/>!!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1ac2f903ccb1ff1079f7667e3c9f25b154" kindref="member">m_name</ref><sp/>=<sp/>root_spectra-&gt;GetName();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1ab75ab520b8b67a200bacd3a492179b1b" kindref="member">m_title</ref><sp/>=<sp/>root_spectra-&gt;GetTitle();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1acdaa8ad0f11fa4c3fd7aa6eae2dacbd7" kindref="member">m_integral</ref><sp/>=<sp/>root_spectra-&gt;Integral();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref><sp/>=<sp/>root_spectra<sp/>-&gt;<sp/>GetXaxis()<sp/>-&gt;<sp/>GetNbins();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1a027efc7bfb6426b5d3f90813e182885e" kindref="member">m_min_value</ref><sp/>=<sp/>root_spectra<sp/>-&gt;<sp/>GetXaxis()<sp/>-&gt;<sp/>GetBinLowEdge(0)+1;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1a84d2c65395a0f25fd84d6c5019e9d149" kindref="member">m_max_value</ref><sp/>=<sp/>root_spectra<sp/>-&gt;<sp/>GetXaxis()<sp/>-&gt;<sp/>GetBinLowEdge(<ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>)+1;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1afaf3a8b0918de26d2c37392c0bc853a4" kindref="member">m_spectra</ref>.resize(<ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>0;<sp/>bin&lt;<ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>;<sp/>bin++)<sp/><ref refid="class_spectra_co_1afaf3a8b0918de26d2c37392c0bc853a4" kindref="member">m_spectra</ref>[bin]<sp/>=<sp/>root_spectra-&gt;GetBinContent(bin);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="class_spectra_co_1ab5b718f73fbb499af3b81c52d31a734a" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_spectra_co_1ab5b718f73fbb499af3b81c52d31a734a" kindref="member">derivative</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1abb9f6f024b15f071563ebcaa4dcd5720" kindref="member">m_derivative</ref>;}</highlight></codeline>
<codeline lineno="145" refid="class_spectra_co_1a856d2c283dcce4570a7610e0ee88297a" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_spectra_co_1a856d2c283dcce4570a7610e0ee88297a" kindref="member">derivate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>smooth<sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1abb9f6f024b15f071563ebcaa4dcd5720" kindref="member">m_derivative</ref>.resize(<ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>low_sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>up_sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lower_bin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>upper_bin<sp/>=<sp/><ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>0;<sp/>bin&lt;<ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>;<sp/>bin++)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First,<sp/>sum<sp/>the<sp/>value<sp/>of<sp/>all<sp/>the<sp/>bins<sp/>on<sp/>the<sp/>left<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>low_sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin_low<sp/>=<sp/>((lower_bin<sp/>=<sp/>bin-smooth)<sp/>&lt;<sp/>1)<sp/>?<sp/>0<sp/>:<sp/>lower_bin;<sp/>bin_low&lt;bin;<sp/>bin_low++)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>low_sum+=<ref refid="class_spectra_co_1afaf3a8b0918de26d2c37392c0bc853a4" kindref="member">m_spectra</ref>[bin_low];</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Second,<sp/>sum<sp/>the<sp/>value<sp/>of<sp/>all<sp/>the<sp/>bins<sp/>on<sp/>the<sp/>right<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>up_sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>upper_bin<sp/>=<sp/>((upper_bin<sp/>=<sp/>bin+smooth)&lt;(<ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>+1))<sp/>?<sp/>upper_bin<sp/>:<sp/><ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin_up<sp/>=<sp/>bin;<sp/>bin_up&lt;upper_bin;<sp/>bin_up++)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>up_sum+=<ref refid="class_spectra_co_1afaf3a8b0918de26d2c37392c0bc853a4" kindref="member">m_spectra</ref>[bin_up];</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>derivative<sp/>:<sp/>(sum_left<sp/>-<sp/>sum_right)<sp/>/<sp/>(x_right<sp/>-<sp/>x_left)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1abb9f6f024b15f071563ebcaa4dcd5720" kindref="member">m_derivative</ref>[bin]<sp/>=<sp/>(low_sum-up_sum)/(2*smooth);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(smooth&lt;1)<sp/>throw_error(&quot;in<sp/>SpectraCo::derivate(int<sp/>const<sp/>&amp;<sp/>smooth<sp/>=<sp/>1)<sp/>:<sp/>smooth<sp/>&lt;<sp/>1,<sp/>can&apos;t<sp/>do<sp/>that<sp/>!!&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(smooth&gt;3)<sp/>throw_error(&quot;in<sp/>SpectraCo::derivate(int<sp/>const<sp/>&amp;<sp/>smooth<sp/>=<sp/>1)<sp/>:<sp/>smooth<sp/>&gt;<sp/>3,<sp/>can&apos;t<sp/>do<sp/>that<sp/>!!&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(smooth<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>m_derivative[0]<sp/>=<sp/>m_spectra[1]-m_spectra[0];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>for<sp/>(int<sp/>bin<sp/>=<sp/>1;<sp/>bin&lt;m_size-1;<sp/>bin++)<sp/>m_derivative[bin]<sp/>=<sp/>(m_spectra[bin+1]-m_spectra[bin-1])/2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>m_derivative[m_size]<sp/>=<sp/>m_spectra[m_size]-m_spectra[m_size-1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else<sp/>if<sp/>(smooth<sp/>==<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>m_derivative[0]<sp/>=<sp/>m_spectra[1]-m_spectra[0]/2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>m_derivative[1]<sp/>=<sp/>m_spectra[2]-m_spectra[0]/2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>for<sp/>(int<sp/>bin<sp/>=<sp/>2;<sp/>bin&lt;m_size-1;<sp/>bin++)<sp/>m_derivative[bin]<sp/>=<sp/>(m_spectra[bin+2]+m_spectra[bin+1]-m_spectra[bin-1]-m_spectra[bin-2])/4;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>m_derivative[m_size-1]<sp/>=<sp/>m_spectra[m_size]-m_spectra[m_size-2]/2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>m_derivative[m_size]<sp/>=<sp/>m_spectra[m_size]-m_spectra[m_size-1]/2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else<sp/>if<sp/>(smooth<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>m_derivative[0]<sp/>=<sp/>m_spectra[1]-m_spectra[0]/2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>m_derivative[1]<sp/>=<sp/>m_spectra[2]-m_spectra[0]/2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>m_derivative[2]<sp/>=<sp/>m_spectra[3]-m_spectra[1]/2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>for<sp/>(int<sp/>bin<sp/>=<sp/>3;<sp/>bin&lt;m_size-1;<sp/>bin++)<sp/>m_derivative[bin]<sp/>=<sp/>(m_spectra[bin+3]+m_spectra[bin+2]+m_spectra[bin+1]<sp/>-<sp/>m_spectra[bin-1]-m_spectra[bin-2]-m_spectra[bin-3])/6;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>m_derivative[m_size-2]<sp/>=<sp/>m_spectra[m_size-1]-m_spectra[m_size-3]/2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>m_derivative[m_size-1]<sp/>=<sp/>m_spectra[m_size]-m_spectra[m_size-2]/2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>m_derivative[m_size]<sp/>=<sp/>m_spectra[m_size]-m_spectra[m_size-1]/2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1abb9f6f024b15f071563ebcaa4dcd5720" kindref="member">m_derivative</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="class_spectra_co_1a047126db866b95f6cc6c8bd92db37588" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_spectra_co_1a047126db866b95f6cc6c8bd92db37588" kindref="member">derivative2</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1ad72044a11386a8d712d0b2620e111cf2" kindref="member">m_derivative2</ref>;}</highlight></codeline>
<codeline lineno="202" refid="class_spectra_co_1acae7e2189022b271400874d523ccbf30" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_spectra_co_1acae7e2189022b271400874d523ccbf30" kindref="member">derivate2</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>smooth<sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1a856d2c283dcce4570a7610e0ee88297a" kindref="member">derivate</ref>(smooth);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1ad72044a11386a8d712d0b2620e111cf2" kindref="member">m_derivative2</ref>.resize(<ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>low_sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>up_sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lower_bin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>upper_bin<sp/>=<sp/><ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>0;<sp/>bin&lt;<ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>;<sp/>bin++)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First,<sp/>sum<sp/>the<sp/>value<sp/>of<sp/>all<sp/>the<sp/>bins<sp/>on<sp/>the<sp/>left<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>low_sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin_low<sp/>=<sp/>((lower_bin<sp/>=<sp/>bin-smooth)<sp/>&lt;<sp/>1)<sp/>?<sp/>0<sp/>:<sp/>lower_bin;<sp/>bin_low&lt;bin;<sp/>bin_low++)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>low_sum+=<ref refid="class_spectra_co_1abb9f6f024b15f071563ebcaa4dcd5720" kindref="member">m_derivative</ref>[bin_low];</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Second,<sp/>sum<sp/>the<sp/>value<sp/>of<sp/>all<sp/>the<sp/>bins<sp/>on<sp/>the<sp/>right<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>up_sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>upper_bin<sp/>=<sp/>((upper_bin<sp/>=<sp/>bin+smooth)&lt;(<ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>+1))<sp/>?<sp/>upper_bin<sp/>:<sp/><ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin_up<sp/>=<sp/>bin;<sp/>bin_up&lt;upper_bin;<sp/>bin_up++)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>up_sum+=<ref refid="class_spectra_co_1abb9f6f024b15f071563ebcaa4dcd5720" kindref="member">m_derivative</ref>[bin_up];</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>derivative<sp/>:<sp/>(sum_left<sp/>-<sp/>sum_right)<sp/>/<sp/>(x_right<sp/>-<sp/>x_left)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1ad72044a11386a8d712d0b2620e111cf2" kindref="member">m_derivative2</ref>[bin]<sp/>=<sp/>(low_sum-up_sum)/(2*smooth);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>m_derivative2[0]<sp/>=<sp/>m_derivative[1]-m_derivative[0];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(int<sp/>bin<sp/>=<sp/>1;<sp/>bin&lt;m_size-1;<sp/>bin++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>m_derivative2[bin]<sp/>=<sp/>(m_derivative[bin+1]-m_derivative[bin-1]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>m_derivative2[m_size]<sp/>=<sp/>m_derivative[m_size]-m_derivative[m_size-1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1ad72044a11386a8d712d0b2620e111cf2" kindref="member">m_derivative2</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="class_spectra_co_1acaf5d71eb3c562fb0f99a67a6740c6d6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1acaf5d71eb3c562fb0f99a67a6740c6d6" kindref="member">setMinValue</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_min_value)<sp/>{<ref refid="class_spectra_co_1a027efc7bfb6426b5d3f90813e182885e" kindref="member">m_min_value</ref><sp/>=<sp/>_min_value;}</highlight></codeline>
<codeline lineno="240" refid="class_spectra_co_1a24e38db30865e8a8e3f341fa958fe125" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1a24e38db30865e8a8e3f341fa958fe125" kindref="member">setMaxValue</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_max_value)<sp/>{<ref refid="class_spectra_co_1a84d2c65395a0f25fd84d6c5019e9d149" kindref="member">m_max_value</ref><sp/>=<sp/>_max_value;}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="class_spectra_co_1a63e44855e3e049f64759cff74aa15a52" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1a63e44855e3e049f64759cff74aa15a52" kindref="member">name</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_spectra_co_1a571209e16332182019598b86d9a5e234" kindref="member">name</ref>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_spectra_co_1ac2f903ccb1ff1079f7667e3c9f25b154" kindref="member">m_name</ref><sp/>=<sp/><ref refid="class_spectra_co_1a571209e16332182019598b86d9a5e234" kindref="member">name</ref>);}</highlight></codeline>
<codeline lineno="243" refid="class_spectra_co_1a723f0ea2cd8230e4b5e94b8d07127268" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1a723f0ea2cd8230e4b5e94b8d07127268" kindref="member">title</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_spectra_co_1a2764c882d467992cc40a71c0e952363e" kindref="member">title</ref>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_spectra_co_1ab75ab520b8b67a200bacd3a492179b1b" kindref="member">m_title</ref><sp/>=<sp/><ref refid="class_spectra_co_1a2764c882d467992cc40a71c0e952363e" kindref="member">title</ref>);}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="class_spectra_co_1a571209e16332182019598b86d9a5e234" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_spectra_co_1a571209e16332182019598b86d9a5e234" kindref="member">name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1ac2f903ccb1ff1079f7667e3c9f25b154" kindref="member">m_name</ref>;}</highlight></codeline>
<codeline lineno="246" refid="class_spectra_co_1a2764c882d467992cc40a71c0e952363e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_spectra_co_1a2764c882d467992cc40a71c0e952363e" kindref="member">title</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1ab75ab520b8b67a200bacd3a492179b1b" kindref="member">m_title</ref>;}</highlight></codeline>
<codeline lineno="247" refid="class_spectra_co_1af819f84c4dfd2a2bf9ee87809dec1159" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_spectra_co_1af819f84c4dfd2a2bf9ee87809dec1159" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>;}</highlight></codeline>
<codeline lineno="248" refid="class_spectra_co_1aad2d7fb657b00304906a0c5e3c9a3aed" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_spectra_co_1aad2d7fb657b00304906a0c5e3c9a3aed" kindref="member">integral</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1acdaa8ad0f11fa4c3fd7aa6eae2dacbd7" kindref="member">m_integral</ref>;}</highlight></codeline>
<codeline lineno="249" refid="class_spectra_co_1a3c8d8bf91f0b24d1fe73e9a1392c7c7c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_spectra_co_1a3c8d8bf91f0b24d1fe73e9a1392c7c7c" kindref="member">minValue</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1a027efc7bfb6426b5d3f90813e182885e" kindref="member">m_min_value</ref>;}</highlight></codeline>
<codeline lineno="250" refid="class_spectra_co_1af5ec8bba0e514f659750d5ccde3e40a4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_spectra_co_1af5ec8bba0e514f659750d5ccde3e40a4" kindref="member">maxValue</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1a84d2c65395a0f25fd84d6c5019e9d149" kindref="member">m_max_value</ref>;}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="class_spectra_co_1a4d14e86e9dd8d42c0ce5a72a2f3b7dfc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_spectra_co_1a4d14e86e9dd8d42c0ce5a72a2f3b7dfc" kindref="member">get</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1afaf3a8b0918de26d2c37392c0bc853a4" kindref="member">m_spectra</ref>;}</highlight></codeline>
<codeline lineno="253" refid="class_spectra_co_1a9cbf03e7634f8a80d65aec65d3d9119c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_spectra_co_1a9cbf03e7634f8a80d65aec65d3d9119c" kindref="member">get</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1afaf3a8b0918de26d2c37392c0bc853a4" kindref="member">m_spectra</ref>;}</highlight></codeline>
<codeline lineno="254" refid="class_spectra_co_1a1b66482bf4e3ff7903bda481d6d67a8d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_spectra_co_1a1b66482bf4e3ff7903bda481d6d67a8d" kindref="member">lastBin</ref>()</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1afaf3a8b0918de26d2c37392c0bc853a4" kindref="member">m_spectra</ref>.back();}</highlight></codeline>
<codeline lineno="255" refid="class_spectra_co_1a626908f0a27928d07d980cfcec3b8454" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_spectra_co_1a626908f0a27928d07d980cfcec3b8454" kindref="member">back</ref>()</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1afaf3a8b0918de26d2c37392c0bc853a4" kindref="member">m_spectra</ref>.back();}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="class_spectra_co_1afa082bf0e51974bc36aa4146e49f7b67" refkind="member"><highlight class="normal"><sp/><sp/>TH1D*<sp/><ref refid="class_spectra_co_1afa082bf0e51974bc36aa4146e49f7b67" kindref="member">createTH1D</ref>(std::string<sp/>newName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>newTitle<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>newName<sp/>=<sp/><ref refid="class_spectra_co_1ac2f903ccb1ff1079f7667e3c9f25b154" kindref="member">m_name</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newTitle<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>newTitle<sp/>=<sp/><ref refid="class_spectra_co_1ab75ab520b8b67a200bacd3a492179b1b" kindref="member">m_title</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>TH1D*<sp/>out<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1D(<ref refid="class_spectra_co_1ac2f903ccb1ff1079f7667e3c9f25b154" kindref="member">m_name</ref>.c_str(),<sp/><ref refid="class_spectra_co_1ab75ab520b8b67a200bacd3a492179b1b" kindref="member">m_title</ref>.c_str(),<sp/><ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>,<sp/>this-&gt;minValue(),<sp/>this-&gt;maxValue());</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>0;<sp/>bin&lt;<ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>;<sp/>bin++)<sp/>out-&gt;SetBinContent(bin,<sp/><ref refid="class_spectra_co_1afaf3a8b0918de26d2c37392c0bc853a4" kindref="member">m_spectra</ref>[bin]);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="class_spectra_co_1a108392b2f02481c7e779c1d7b57a49ce" refkind="member"><highlight class="normal"><sp/><sp/>TH1F*<sp/><ref refid="class_spectra_co_1a108392b2f02481c7e779c1d7b57a49ce" kindref="member">createTH1F</ref>(std::string<sp/>newName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>std::string<sp/>newTitle<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>newName<sp/>=<sp/><ref refid="class_spectra_co_1ac2f903ccb1ff1079f7667e3c9f25b154" kindref="member">m_name</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newTitle<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>newTitle<sp/>=<sp/><ref refid="class_spectra_co_1ab75ab520b8b67a200bacd3a492179b1b" kindref="member">m_title</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>TH1F*<sp/>out<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(newName.c_str(),<sp/>newTitle.c_str(),<sp/><ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>,<sp/>this-&gt;minValue(),<sp/>this-&gt;maxValue());</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>0;<sp/>bin&lt;<ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>;<sp/>bin++)<sp/>out-&gt;SetBinContent(bin,<sp/><ref refid="class_spectra_co_1afaf3a8b0918de26d2c37392c0bc853a4" kindref="member">m_spectra</ref>[bin]);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="class_spectra_co_1a117a00a1dba583c4b3171be6a3854832" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_spectra_co_1a117a00a1dba583c4b3171be6a3854832" kindref="member">get</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>bin)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1afaf3a8b0918de26d2c37392c0bc853a4" kindref="member">m_spectra</ref>[bin];}</highlight></codeline>
<codeline lineno="276" refid="class_spectra_co_1aaa6bb97ab64f7a60d0afcf62aaabeb65" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_spectra_co_1aaa6bb97ab64f7a60d0afcf62aaabeb65" kindref="member">operator[] </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>bin)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1afaf3a8b0918de26d2c37392c0bc853a4" kindref="member">m_spectra</ref>[bin];}</highlight></codeline>
<codeline lineno="277" refid="class_spectra_co_1ae49c5b411286f40051406ad83824217d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_spectra_co_1aaa6bb97ab64f7a60d0afcf62aaabeb65" kindref="member">operator[] </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>bin)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1afaf3a8b0918de26d2c37392c0bc853a4" kindref="member">m_spectra</ref>[bin];}</highlight></codeline>
<codeline lineno="278" refid="class_spectra_co_1a885e4ddea8b0bbeb5bace4fe2f8123f9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1aaa6bb97ab64f7a60d0afcf62aaabeb65" kindref="member">operator[] </ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>bin)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="279"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bin);<sp/></highlight><highlight class="comment">//bin_i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&lt;0)<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>(<ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>-1))<sp/>i<sp/>=<sp/><ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>a<sp/>=<sp/><ref refid="class_spectra_co_1afaf3a8b0918de26d2c37392c0bc853a4" kindref="member">m_spectra</ref>[i+1]<sp/>-<sp/><ref refid="class_spectra_co_1afaf3a8b0918de26d2c37392c0bc853a4" kindref="member">m_spectra</ref>[i];</highlight><highlight class="comment">//<sp/>a<sp/><sp/>=<sp/><sp/>y_i+1<sp/>-<sp/>y_i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>b<sp/>=<sp/><ref refid="class_spectra_co_1afaf3a8b0918de26d2c37392c0bc853a4" kindref="member">m_spectra</ref>[i]<sp/>-<sp/>a*i;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>b<sp/><sp/>=<sp/><sp/>y_i<sp/>-<sp/>a*bin_i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a*bin+b;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="288" refid="class_spectra_co_1ad2f1bf0e5e8ac584e0aac00e753e8395" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_spectra_co" kindref="compound">SpectraCo</ref><sp/><ref refid="class_spectra_co_1ad2f1bf0e5e8ac584e0aac00e753e8395" kindref="member">operator+</ref>(<ref refid="class_spectra_co" kindref="compound">SpectraCo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other.<ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref><sp/>!=<sp/><ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>)<sp/><ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(</highlight><highlight class="stringliteral">&quot;in<sp/>operator+(SpectraCo<sp/>const<sp/>&amp;<sp/>other)<sp/>:<sp/>other<sp/>size<sp/>is<sp/>different<sp/>from<sp/>that<sp/>of<sp/>this<sp/>spectra&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co" kindref="compound">SpectraCo</ref><sp/>spectra(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>0;<sp/>bin&lt;<ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>;<sp/>bin++)<sp/>spectra[bin]<sp/>+=<sp/>other[bin];</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>spectra.<ref refid="class_spectra_co_1a63e44855e3e049f64759cff74aa15a52" kindref="member">name</ref>(spectra.<ref refid="class_spectra_co_1a63e44855e3e049f64759cff74aa15a52" kindref="member">name</ref>()+</highlight><highlight class="stringliteral">&quot;<sp/>+<sp/>&quot;</highlight><highlight class="normal">+other.<ref refid="class_spectra_co_1a63e44855e3e049f64759cff74aa15a52" kindref="member">name</ref>());</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>spectra.<ref refid="class_spectra_co_1a723f0ea2cd8230e4b5e94b8d07127268" kindref="member">title</ref>(spectra.<ref refid="class_spectra_co_1a723f0ea2cd8230e4b5e94b8d07127268" kindref="member">title</ref>()+</highlight><highlight class="stringliteral">&quot;<sp/>+<sp/>&quot;</highlight><highlight class="normal">+other.<ref refid="class_spectra_co_1a723f0ea2cd8230e4b5e94b8d07127268" kindref="member">title</ref>());</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>spectra;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="class_spectra_co_1af251452bf4de93adc2ddc7b7ae594415" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_spectra_co" kindref="compound">SpectraCo</ref><sp/><ref refid="class_spectra_co_1af251452bf4de93adc2ddc7b7ae594415" kindref="member">operator-</ref>(<ref refid="class_spectra_co" kindref="compound">SpectraCo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other.<ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref><sp/>!=<sp/><ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>)<sp/><ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(</highlight><highlight class="stringliteral">&quot;in<sp/>operator+(SpectraCo<sp/>const<sp/>&amp;<sp/>other)<sp/>:<sp/>other<sp/>size<sp/>is<sp/>different<sp/>from<sp/>that<sp/>of<sp/>this<sp/>spectra&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co" kindref="compound">SpectraCo</ref><sp/>spectra(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>0;<sp/>bin&lt;<ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>;<sp/>bin++)<sp/>spectra[bin]<sp/>-=<sp/>other[bin];</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>spectra.<ref refid="class_spectra_co_1a63e44855e3e049f64759cff74aa15a52" kindref="member">name</ref>(spectra.<ref refid="class_spectra_co_1a63e44855e3e049f64759cff74aa15a52" kindref="member">name</ref>()+</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>&quot;</highlight><highlight class="normal">+other.<ref refid="class_spectra_co_1a63e44855e3e049f64759cff74aa15a52" kindref="member">name</ref>());</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>spectra.<ref refid="class_spectra_co_1a723f0ea2cd8230e4b5e94b8d07127268" kindref="member">title</ref>(spectra.<ref refid="class_spectra_co_1a723f0ea2cd8230e4b5e94b8d07127268" kindref="member">title</ref>()+</highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>&quot;</highlight><highlight class="normal">+other.<ref refid="class_spectra_co_1a723f0ea2cd8230e4b5e94b8d07127268" kindref="member">title</ref>());</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>spectra;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="class_spectra_co_1a4c094686833d7c19460df10ae16c34ba" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1a4c094686833d7c19460df10ae16c34ba" kindref="member">interpolate</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>bin)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[bin];}<sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="class_spectra_co_1a085a0452438dbffc3452aed6733a9103" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1a085a0452438dbffc3452aed6733a9103" kindref="member">recalibrate</ref>(<ref refid="class_recalibration" kindref="compound">Recalibration</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>recal)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>newSpectra(<ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>0;<sp/>bin&lt;<ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref>;<sp/>bin++)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>new_bin<sp/>=<sp/>recal.<ref refid="class_recalibration_1a6ce90b10d69409fdbc385ba6f990e073" kindref="member">calculate</ref>(bin);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newSpectra[bin]<sp/>=<sp/><ref refid="class_spectra_co_1a4c094686833d7c19460df10ae16c34ba" kindref="member">interpolate</ref>(new_bin);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co_1afaf3a8b0918de26d2c37392c0bc853a4" kindref="member">m_spectra</ref><sp/>=<sp/>newSpectra;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="class_spectra_co_1a0a11253e22b5d0d3e265685f6f54a916" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1a0a11253e22b5d0d3e265685f6f54a916" kindref="member">Draw</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>param<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>TH1F*<sp/>drawer<sp/>=<sp/><ref refid="class_spectra_co_1a108392b2f02481c7e779c1d7b57a49ce" kindref="member">createTH1F</ref>();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>drawer-&gt;Draw(param);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pauseCo();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="330" refid="class_spectra_co_1afaf3a8b0918de26d2c37392c0bc853a4" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="class_spectra_co_1afaf3a8b0918de26d2c37392c0bc853a4" kindref="member">m_spectra</ref>;</highlight></codeline>
<codeline lineno="331" refid="class_spectra_co_1abb9f6f024b15f071563ebcaa4dcd5720" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="class_spectra_co_1abb9f6f024b15f071563ebcaa4dcd5720" kindref="member">m_derivative</ref>;</highlight></codeline>
<codeline lineno="332" refid="class_spectra_co_1ad72044a11386a8d712d0b2620e111cf2" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="class_spectra_co_1ad72044a11386a8d712d0b2620e111cf2" kindref="member">m_derivative2</ref>;<sp/></highlight><highlight class="comment">//<sp/>Second<sp/>derivative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="class_spectra_co_1ac2f903ccb1ff1079f7667e3c9f25b154" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_spectra_co_1ac2f903ccb1ff1079f7667e3c9f25b154" kindref="member">m_name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Unnamed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335" refid="class_spectra_co_1ab75ab520b8b67a200bacd3a492179b1b" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="class_spectra_co_1ab75ab520b8b67a200bacd3a492179b1b" kindref="member">m_title</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Untitled&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1ae2c5c9fbc723e392cade5aabfb2d3991" kindref="member">m_size</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="338" refid="class_spectra_co_1acdaa8ad0f11fa4c3fd7aa6eae2dacbd7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1acdaa8ad0f11fa4c3fd7aa6eae2dacbd7" kindref="member">m_integral</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="339" refid="class_spectra_co_1a027efc7bfb6426b5d3f90813e182885e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1a027efc7bfb6426b5d3f90813e182885e" kindref="member">m_min_value</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="340" refid="class_spectra_co_1a84d2c65395a0f25fd84d6c5019e9d149" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_spectra_co_1a84d2c65395a0f25fd84d6c5019e9d149" kindref="member">m_max_value</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="341"><highlight class="normal">};</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="comment">//<sp/>VERTICE<sp/>//</highlight></codeline>
<codeline lineno="346"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="class_vertice" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_vertice" kindref="compound">Vertice</ref></highlight></codeline>
<codeline lineno="348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="350" refid="class_vertice_1a6e2e24eb4beb27f1b42163fda1777c40" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_vertice_1a6e2e24eb4beb27f1b42163fda1777c40" kindref="member">Vertice</ref>(std::vector&lt;double&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>coords)<sp/>:<sp/></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" kindref="member">m_dim</ref>(coords.<ref refid="class_vertice_1a93b6febeec367c7c2211eb1e34dcfce4" kindref="member">size</ref>()),</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" kindref="member">m_coordinates</ref>(coords)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="class_vertice_1aa498494b022d938d1b641cc6d8aac2f3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_vertice_1aa498494b022d938d1b641cc6d8aac2f3" kindref="member">Vertice</ref>(<ref refid="class_vertice" kindref="compound">Vertice</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_vertice)<sp/>:<sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" kindref="member">m_dim</ref>(_vertice.<ref refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" kindref="member">m_dim</ref>),</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" kindref="member">m_coordinates</ref>(_vertice.<ref refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" kindref="member">m_coordinates</ref>)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="class_vertice_1afddab470753508f96eeb0735e1400cbb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_vertice_1afddab470753508f96eeb0735e1400cbb" kindref="member">Vertice</ref>(<ref refid="class_vertice" kindref="compound">Vertice</ref><sp/>&amp;&amp;<sp/>_vertice)<sp/>:<sp/></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" kindref="member">m_dim</ref>(std::move(_vertice.<ref refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" kindref="member">m_dim</ref>)),</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" kindref="member">m_coordinates</ref>(std::move(_vertice.<ref refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" kindref="member">m_coordinates</ref>))</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="class_vertice_1a25640d2ace19cf2993c1854edd452ef0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_vertice_1a25640d2ace19cf2993c1854edd452ef0" kindref="member">Vertice</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_vertice_1a93b6febeec367c7c2211eb1e34dcfce4" kindref="member">size</ref>)<sp/>:<sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" kindref="member">m_dim</ref>(<ref refid="class_vertice_1a93b6febeec367c7c2211eb1e34dcfce4" kindref="member">size</ref>),</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" kindref="member">m_coordinates</ref>(std::vector&lt;double&gt;(<ref refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" kindref="member">m_dim</ref>))</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="class_vertice_1a20a711ace767a031ec41eb3a0dd75ed1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_vertice_1a20a711ace767a031ec41eb3a0dd75ed1" kindref="member">operator[] </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" kindref="member">m_coordinates</ref>[i];}</highlight></codeline>
<codeline lineno="375" refid="class_vertice_1ad7e931f0342f3c2a87d0d8e46936416d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_vertice_1a20a711ace767a031ec41eb3a0dd75ed1" kindref="member">operator[] </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" kindref="member">m_coordinates</ref>[i];}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="class_vertice_1a651eb7cb39f966a5ff2d6d24c3e1e785" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_vertice" kindref="compound">Vertice</ref>&amp;<sp/><ref refid="class_vertice_1a651eb7cb39f966a5ff2d6d24c3e1e785" kindref="member">operator=</ref>(std::vector&lt;double&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>point)<sp/>{this-&gt;<ref refid="class_vertice_1a58c2af14cebf91fc79298f4128a54856" kindref="member">set</ref>(point);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="class_vertice_1ab16b5e8facd201c70bdab71384adc6df" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_vertice" kindref="compound">Vertice</ref>&amp;<sp/><ref refid="class_vertice_1ab16b5e8facd201c70bdab71384adc6df" kindref="member">operator=</ref>(<ref refid="class_vertice" kindref="compound">Vertice</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>vertice)<sp/>{this-&gt;<ref refid="class_vertice_1a58c2af14cebf91fc79298f4128a54856" kindref="member">set</ref>(vertice);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="class_vertice_1a45871718e86053a0a03565bbe672f7a3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_vertice" kindref="compound">Vertice</ref>&amp;<sp/><ref refid="class_vertice_1a45871718e86053a0a03565bbe672f7a3" kindref="member">operator=</ref>(<ref refid="class_vertice" kindref="compound">Vertice</ref><sp/>&amp;&amp;<sp/>vertice)<sp/>{this-&gt;<ref refid="class_vertice_1a58c2af14cebf91fc79298f4128a54856" kindref="member">set</ref>(std::move(vertice));<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="class_vertice_1a58c2af14cebf91fc79298f4128a54856" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vertice_1a58c2af14cebf91fc79298f4128a54856" kindref="member">set</ref>(<ref refid="class_vertice" kindref="compound">Vertice</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_vertice)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" kindref="member">m_dim</ref><sp/>!=<sp/>_vertice.<ref refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" kindref="member">m_dim</ref>)<sp/><ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(</highlight><highlight class="stringliteral">&quot;in<sp/>Vertice::set(Vertice<sp/>const<sp/>&amp;<sp/>_vertice)<sp/>:<sp/>dimension<sp/>of<sp/>_vertice<sp/>different<sp/>from<sp/>that<sp/>of<sp/>the<sp/>vertice&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" kindref="member">m_coordinates</ref><sp/>=<sp/>_vertice.<ref refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" kindref="member">m_coordinates</ref>;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="class_vertice_1a7a18bb3bfb36d8630641d7b33c1461cc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vertice_1a7a18bb3bfb36d8630641d7b33c1461cc" kindref="member">set</ref>(<ref refid="class_vertice" kindref="compound">Vertice</ref><sp/>&amp;&amp;<sp/>_vertice)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" kindref="member">m_dim</ref><sp/>!=<sp/>_vertice.m_dim)<sp/><ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(</highlight><highlight class="stringliteral">&quot;in<sp/>Vertice::set(Vertice<sp/>&amp;&amp;<sp/>_vertice)<sp/>:<sp/>dimension<sp/>of<sp/>_vertice<sp/>different<sp/>from<sp/>that<sp/>of<sp/>the<sp/>vertice&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" kindref="member">m_coordinates</ref><sp/>=<sp/>std::move(_vertice.m_coordinates);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="class_vertice_1ab5519307ad24edb7b482ce63f41d3b63" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vertice_1ab5519307ad24edb7b482ce63f41d3b63" kindref="member">set</ref>(std::vector&lt;double&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>point)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(point.size()!=(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(<ref refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" kindref="member">m_dim</ref>))<sp/><ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(</highlight><highlight class="stringliteral">&quot;in<sp/>Vertice::set(std::vector&lt;double&gt;<sp/>const<sp/>&amp;<sp/>point)<sp/>:<sp/>dimension<sp/>of<sp/>point<sp/>different<sp/>from<sp/>that<sp/>of<sp/>the<sp/>vertice&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" kindref="member">m_coordinates</ref><sp/>=<sp/>point;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="class_vertice_1a11e12aac4668a10a6b1706db7e5ebbcd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_vertice_1a11e12aac4668a10a6b1706db7e5ebbcd" kindref="member">get</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" kindref="member">m_coordinates</ref>;}</highlight></codeline>
<codeline lineno="402" refid="class_vertice_1a7ae35dd4e65c993d7faa019d8b966086" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_vertice_1a7ae35dd4e65c993d7faa019d8b966086" kindref="member">get</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" kindref="member">m_coordinates</ref>;}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404" refid="class_vertice_1a93b6febeec367c7c2211eb1e34dcfce4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_vertice_1a93b6febeec367c7c2211eb1e34dcfce4" kindref="member">size</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" kindref="member">m_dim</ref>;}</highlight></codeline>
<codeline lineno="405" refid="class_vertice_1ae6a2eb34867f3c9ac333b267e3f20a17" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_vertice_1ae6a2eb34867f3c9ac333b267e3f20a17" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" kindref="member">m_dim</ref>;}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="class_vertice_1a0b6f58d8c0efedbb726e408c4e6527de" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_vertice_1a0b6f58d8c0efedbb726e408c4e6527de" kindref="member">begin</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" kindref="member">m_coordinates</ref>.begin();}</highlight></codeline>
<codeline lineno="408" refid="class_vertice_1a1215380e747b2cf93f861407a5bf9c3d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_vertice_1a1215380e747b2cf93f861407a5bf9c3d" kindref="member">end</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" kindref="member">m_coordinates</ref>.end();}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="class_vertice_1aad7a051c244a4565277290b7c4cb3382" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_vertice_1aad7a051c244a4565277290b7c4cb3382" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" kindref="member">m_coordinates</ref>.begin();}</highlight></codeline>
<codeline lineno="411" refid="class_vertice_1a5f64695b3dcd9bca4f2fb6e0ed83348c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_vertice_1a5f64695b3dcd9bca4f2fb6e0ed83348c" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" kindref="member">m_coordinates</ref>.end();}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="class_vertice_1a1897df7eb0121341d7dac0a285af7db8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_vertice" kindref="compound">Vertice</ref><sp/><ref refid="class_vertice_1a1897df7eb0121341d7dac0a285af7db8" kindref="member">operator+</ref>(<ref refid="class_vertice" kindref="compound">Vertice</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other.<ref refid="class_vertice_1a93b6febeec367c7c2211eb1e34dcfce4" kindref="member">size</ref>()<sp/>!=<sp/><ref refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" kindref="member">m_dim</ref>)<sp/><ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(</highlight><highlight class="stringliteral">&quot;in<sp/>Vertice::operator+(Vertice<sp/>const<sp/>&amp;<sp/>other)<sp/>:<sp/>other<sp/>and<sp/>vertice<sp/>not<sp/>the<sp/>same<sp/>size<sp/>!!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>coords;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i&lt;other.<ref refid="class_vertice_1a93b6febeec367c7c2211eb1e34dcfce4" kindref="member">size</ref>();<sp/>i++)<sp/>coords.push_back(<ref refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" kindref="member">m_coordinates</ref>[i]<sp/>+<sp/>other[i]);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vertice_1a6e2e24eb4beb27f1b42163fda1777c40" kindref="member">Vertice</ref>(coords);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="class_vertice_1a35359e51cb43abf68e459cbfedaeabb6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_vertice" kindref="compound">Vertice</ref><sp/><ref refid="class_vertice_1a35359e51cb43abf68e459cbfedaeabb6" kindref="member">operator-</ref>(<ref refid="class_vertice" kindref="compound">Vertice</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other.<ref refid="class_vertice_1a93b6febeec367c7c2211eb1e34dcfce4" kindref="member">size</ref>()<sp/>!=<sp/><ref refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" kindref="member">m_dim</ref>)<sp/></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(</highlight><highlight class="stringliteral">&quot;in<sp/>Vertice::operator+(Vertice<sp/>const<sp/>&amp;<sp/>other)<sp/>:<sp/>other<sp/>and<sp/>vertice<sp/>not<sp/>the<sp/>same<sp/>size<sp/>!!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>coords;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i&lt;other.<ref refid="class_vertice_1a93b6febeec367c7c2211eb1e34dcfce4" kindref="member">size</ref>();<sp/>i++)<sp/>coords.push_back(<ref refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" kindref="member">m_coordinates</ref>[i]<sp/>-<sp/>other[i]);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vertice_1a6e2e24eb4beb27f1b42163fda1777c40" kindref="member">Vertice</ref>(coords);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Vectorial<sp/>product<sp/>:<sp/>TBD<sp/>!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="class_vertice_1a2e858710d6eb5fe7dc4029b6cc280272" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_vertice" kindref="compound">Vertice</ref><sp/><ref refid="class_vertice_1a2e858710d6eb5fe7dc4029b6cc280272" kindref="member">operator*</ref>(<ref refid="class_vertice" kindref="compound">Vertice</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(</highlight><highlight class="stringliteral">&quot;operator<sp/>Vertice*Vertice<sp/>not<sp/>implemented<sp/>yet<sp/>!!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(other.size()<sp/>!=<sp/>m_dim)<sp/>throw_error(&quot;in<sp/>Vertice::operator+(Vertice<sp/>const<sp/>&amp;<sp/>other)<sp/>:<sp/>other<sp/>and<sp/>vertice<sp/>not<sp/>the<sp/>same<sp/>size<sp/>!!&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>coords<sp/>=<sp/>other.<ref refid="class_vertice_1a11e12aac4668a10a6b1706db7e5ebbcd" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(size_t<sp/>i<sp/>=<sp/>0;<sp/>i&lt;other.size();<sp/>i++)<sp/>coords.push_back(m_coordinates[i]*other[i]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>Vertice(coords);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>coords;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="class_vertice_1a0bb7c9c5bc6bceef7479d6761a9020fb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_vertice" kindref="compound">Vertice</ref>&amp;<sp/><ref refid="class_vertice_1a0bb7c9c5bc6bceef7479d6761a9020fb" kindref="member">operator*</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>constant)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>coord<sp/>:<sp/><ref refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" kindref="member">m_coordinates</ref>)<sp/>coord*=constant;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="451" refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_vertice_1a0a14824e1d0e1aefdfe45e6878fd1550" kindref="member">m_dim</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="452" refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="class_vertice_1aee303f307e0d0dccc8a9a1c1eaeaa11e" kindref="member">m_coordinates</ref>;</highlight></codeline>
<codeline lineno="453"><highlight class="normal">};</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="_spectra_alignator_8hpp_1a00041d0900b9f4e90f24fc9f5f61208f" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="_spectra_alignator_8hpp_1a1c2f6d6b9b8d19b513889e59666d3967" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/><ref refid="class_vertice" kindref="compound">Vertice</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>vertice)</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>out<sp/>&lt;&lt;<sp/>vertice.<ref refid="class_vertice_1a11e12aac4668a10a6b1706db7e5ebbcd" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="_spectra_alignator_8hpp_1a658a331239a2db3139f2a2163a4c182f" refkind="member"><highlight class="normal"><ref refid="class_vertice" kindref="compound">Vertice</ref><sp/><ref refid="_spectra_alignator_8hpp_1a658a331239a2db3139f2a2163a4c182f" kindref="member">operator*</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>constant,<sp/><ref refid="class_vertice" kindref="compound">Vertice</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>vertice)</highlight></codeline>
<codeline lineno="462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/>newVertice<sp/>=<sp/>vertice.<ref refid="class_vertice_1a11e12aac4668a10a6b1706db7e5ebbcd" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>coord<sp/>:<sp/>newVertice)<sp/>coord*=constant;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newVertice;</highlight></codeline>
<codeline lineno="466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468" refid="_spectra_alignator_8hpp_1afafb4a66ac57eb9c69b1fe6488851c4e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_spectra_alignator_8hpp_1afafb4a66ac57eb9c69b1fe6488851c4e" kindref="member">Vertices</ref><sp/>=<sp/>std::vector&lt;Vertice&gt;;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="comment">//<sp/>SIMPLEX<sp/>//</highlight></codeline>
<codeline lineno="473"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474" refid="class_simplex" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_simplex" kindref="compound">Simplex</ref></highlight></codeline>
<codeline lineno="475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="477" refid="class_simplex_1ad893ac9de899c841e0e6ada82ea611b9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_simplex_1ad893ac9de899c841e0e6ada82ea611b9" kindref="member">Simplex</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_simplex_1aed93fc950fa50599b289d5ac9e3356c7" kindref="member">dim</ref>)<sp/>:<sp/></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simplex_1aed12d66219db915526fc70cc33c83505" kindref="member">m_dim</ref>(<ref refid="class_simplex_1aed93fc950fa50599b289d5ac9e3356c7" kindref="member">dim</ref>),</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simplex_1a3e8657a83fb94712f3d5c61a88801e89" kindref="member">m_size</ref>(<ref refid="class_simplex_1aed12d66219db915526fc70cc33c83505" kindref="member">m_dim</ref>+1)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i&lt;<ref refid="class_simplex_1a3e8657a83fb94712f3d5c61a88801e89" kindref="member">m_size</ref>;<sp/>i++)<sp/><ref refid="class_simplex_1a8e0cd4b76bda7c66a299e4f7c8ea1bc3" kindref="member">m_vertices</ref>.push_back(<ref refid="class_vertice" kindref="compound">Vertice</ref>(<ref refid="class_simplex_1aed93fc950fa50599b289d5ac9e3356c7" kindref="member">dim</ref>));</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="class_simplex_1abd6e34ab7ace7cf33b13fa0dab907a2a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_simplex_1abd6e34ab7ace7cf33b13fa0dab907a2a" kindref="member">Simplex</ref>(<ref refid="_spectra_alignator_8hpp_1afafb4a66ac57eb9c69b1fe6488851c4e" kindref="member">Vertices</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>vertices)<sp/>:<sp/></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simplex_1a8e0cd4b76bda7c66a299e4f7c8ea1bc3" kindref="member">m_vertices</ref>(vertices),<sp/></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simplex_1aed12d66219db915526fc70cc33c83505" kindref="member">m_dim</ref>(vertices.<ref refid="class_simplex_1ae39ce6d0a47986ceabb9a76146a8225b" kindref="member">size</ref>()-1),</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simplex_1a3e8657a83fb94712f3d5c61a88801e89" kindref="member">m_size</ref>(<ref refid="class_simplex_1aed12d66219db915526fc70cc33c83505" kindref="member">m_dim</ref>+1)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>vertex<sp/>:<sp/>vertices)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vertex.size()<sp/>!=<sp/>this-&gt;m_dim)<sp/></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(</highlight><highlight class="stringliteral">&quot;in<sp/>Simplex::Simplex(std::vector&lt;Vertice&gt;<sp/>const<sp/>&amp;<sp/>vertices)<sp/>:<sp/>dimension<sp/>conflict<sp/>of<sp/>at<sp/>least<sp/>one<sp/>vertex<sp/>(simplex<sp/>must<sp/>have<sp/>dim+1<sp/>vertices)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493" refid="class_simplex_1a2ff37bbc43bc7c86703f204c3510baa8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_simplex_1a2ff37bbc43bc7c86703f204c3510baa8" kindref="member">Simplex</ref>(<ref refid="class_simplex" kindref="compound">Simplex</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>other)<sp/>:<sp/></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simplex_1a8e0cd4b76bda7c66a299e4f7c8ea1bc3" kindref="member">m_vertices</ref>(other.<ref refid="class_simplex_1a8e0cd4b76bda7c66a299e4f7c8ea1bc3" kindref="member">m_vertices</ref>),</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simplex_1aed12d66219db915526fc70cc33c83505" kindref="member">m_dim</ref>(other.<ref refid="class_simplex_1aed12d66219db915526fc70cc33c83505" kindref="member">m_dim</ref>),</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simplex_1a3e8657a83fb94712f3d5c61a88801e89" kindref="member">m_size</ref>(other.<ref refid="class_simplex_1a3e8657a83fb94712f3d5c61a88801e89" kindref="member">m_size</ref>),</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simplex_1a0d352c2bc1248646ccaff4236538a194" kindref="member">m_centroid</ref>(other.<ref refid="class_simplex_1a0d352c2bc1248646ccaff4236538a194" kindref="member">m_centroid</ref>)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501" refid="class_simplex_1a169c2796d3adf036611cdcf6772e46d1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_simplex_1a169c2796d3adf036611cdcf6772e46d1" kindref="member">Simplex</ref>(<ref refid="class_simplex" kindref="compound">Simplex</ref><sp/>&amp;&amp;<sp/>other)<sp/>:<sp/></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simplex_1a8e0cd4b76bda7c66a299e4f7c8ea1bc3" kindref="member">m_vertices</ref>(std::move(other.<ref refid="class_simplex_1a8e0cd4b76bda7c66a299e4f7c8ea1bc3" kindref="member">m_vertices</ref>)),</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simplex_1aed12d66219db915526fc70cc33c83505" kindref="member">m_dim</ref>(std::move(other.<ref refid="class_simplex_1aed12d66219db915526fc70cc33c83505" kindref="member">m_dim</ref>)),</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simplex_1a3e8657a83fb94712f3d5c61a88801e89" kindref="member">m_size</ref>(std::move(other.<ref refid="class_simplex_1a3e8657a83fb94712f3d5c61a88801e89" kindref="member">m_size</ref>)),</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simplex_1a0d352c2bc1248646ccaff4236538a194" kindref="member">m_centroid</ref>(std::move(other.<ref refid="class_simplex_1a0d352c2bc1248646ccaff4236538a194" kindref="member">m_centroid</ref>))</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="class_simplex_1a622f6bed00b73eb0b931cf65ee77d055" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_simplex" kindref="compound">Simplex</ref>&amp;<sp/><ref refid="class_simplex_1a622f6bed00b73eb0b931cf65ee77d055" kindref="member">operator=</ref>(<ref refid="class_simplex" kindref="compound">Simplex</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simplex_1a8e0cd4b76bda7c66a299e4f7c8ea1bc3" kindref="member">m_vertices</ref><sp/>=<sp/>other.<ref refid="class_simplex_1a8e0cd4b76bda7c66a299e4f7c8ea1bc3" kindref="member">m_vertices</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simplex_1aed12d66219db915526fc70cc33c83505" kindref="member">m_dim</ref><sp/>=<sp/>other.<ref refid="class_simplex_1aed12d66219db915526fc70cc33c83505" kindref="member">m_dim</ref>;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simplex_1a3e8657a83fb94712f3d5c61a88801e89" kindref="member">m_size</ref><sp/>=<sp/>other.<ref refid="class_simplex_1a3e8657a83fb94712f3d5c61a88801e89" kindref="member">m_size</ref>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simplex_1a0d352c2bc1248646ccaff4236538a194" kindref="member">m_centroid</ref><sp/>=<sp/>other.<ref refid="class_simplex_1a0d352c2bc1248646ccaff4236538a194" kindref="member">m_centroid</ref>;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518" refid="class_simplex_1a18363c969c478336afe053dc246495ce" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_simplex" kindref="compound">Simplex</ref>&amp;<sp/><ref refid="class_simplex_1a18363c969c478336afe053dc246495ce" kindref="member">operator=</ref>(<ref refid="class_simplex" kindref="compound">Simplex</ref><sp/>&amp;&amp;<sp/>other)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simplex_1a8e0cd4b76bda7c66a299e4f7c8ea1bc3" kindref="member">m_vertices</ref><sp/>=<sp/>std::move(other.m_vertices);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simplex_1aed12d66219db915526fc70cc33c83505" kindref="member">m_dim</ref><sp/>=<sp/>std::move(other.m_dim);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simplex_1a3e8657a83fb94712f3d5c61a88801e89" kindref="member">m_size</ref><sp/>=<sp/>std::move(other.m_size);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_simplex_1a0d352c2bc1248646ccaff4236538a194" kindref="member">m_centroid</ref><sp/>=<sp/>std::move(other.m_centroid);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527" refid="class_simplex_1ade818ac404caab90542e80143cbc63c0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_simplex_1ade818ac404caab90542e80143cbc63c0" kindref="member">setVertice</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>bin,<sp/><ref refid="class_vertice" kindref="compound">Vertice</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>vertice)<sp/>{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bin&lt;<ref refid="class_simplex_1a3e8657a83fb94712f3d5c61a88801e89" kindref="member">m_size</ref>)<sp/><ref refid="class_simplex_1a8e0cd4b76bda7c66a299e4f7c8ea1bc3" kindref="member">m_vertices</ref>[bin]<sp/>=<sp/>vertice;}</highlight></codeline>
<codeline lineno="528" refid="class_simplex_1aa4f7721e6989b27489d84cca5de99c07" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_simplex_1aa4f7721e6989b27489d84cca5de99c07" kindref="member">setVertice</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>bin,<sp/><ref refid="class_vertice" kindref="compound">Vertice</ref><sp/>&amp;&amp;<sp/>vertice)<sp/>{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bin&lt;<ref refid="class_simplex_1a3e8657a83fb94712f3d5c61a88801e89" kindref="member">m_size</ref>)<sp/><ref refid="class_simplex_1a8e0cd4b76bda7c66a299e4f7c8ea1bc3" kindref="member">m_vertices</ref>[bin]<sp/>=<sp/>std::move(vertice);}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530" refid="class_simplex_1a0bbdd7fe5cc1296b7c1da9232d78d182" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_simplex_1a0bbdd7fe5cc1296b7c1da9232d78d182" kindref="member">operator[] </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_simplex_1a8e0cd4b76bda7c66a299e4f7c8ea1bc3" kindref="member">m_vertices</ref>[i];}</highlight></codeline>
<codeline lineno="531" refid="class_simplex_1a08239a3a6b994da2a445a7ea44c7b893" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_simplex_1a0bbdd7fe5cc1296b7c1da9232d78d182" kindref="member">operator[] </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_simplex_1a8e0cd4b76bda7c66a299e4f7c8ea1bc3" kindref="member">m_vertices</ref>[i];}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533" refid="class_simplex_1af9f387b740699fc83d561b06a5e8305a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_simplex_1af9f387b740699fc83d561b06a5e8305a" kindref="member">begin</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_simplex_1a8e0cd4b76bda7c66a299e4f7c8ea1bc3" kindref="member">m_vertices</ref>.begin();}</highlight></codeline>
<codeline lineno="534" refid="class_simplex_1a43aa87c378225a78bf764a3c049ed381" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_simplex_1a43aa87c378225a78bf764a3c049ed381" kindref="member">end</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_simplex_1a8e0cd4b76bda7c66a299e4f7c8ea1bc3" kindref="member">m_vertices</ref>.end();}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536" refid="class_simplex_1ad5161ef4f875383b9880f2401cefe71a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_simplex_1ad5161ef4f875383b9880f2401cefe71a" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_simplex_1a8e0cd4b76bda7c66a299e4f7c8ea1bc3" kindref="member">m_vertices</ref>.begin();}</highlight></codeline>
<codeline lineno="537" refid="class_simplex_1ae3a1f652ec439b823610f75846ae8067" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_simplex_1ae3a1f652ec439b823610f75846ae8067" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_simplex_1a8e0cd4b76bda7c66a299e4f7c8ea1bc3" kindref="member">m_vertices</ref>.end();}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="class_simplex_1a033d49e8ac767b72b4c1dd6d38573988" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_simplex_1a033d49e8ac767b72b4c1dd6d38573988" kindref="member">centroid</ref>(std::vector&lt;int&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>sorted_vertices_indexes)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_good_points<sp/>=<sp/>sorted_vertices_indexes.size()-1;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>coord<sp/>:<sp/><ref refid="class_simplex_1a0d352c2bc1248646ccaff4236538a194" kindref="member">m_centroid</ref>)<sp/>coord<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>point_i<sp/>=<sp/>0;<sp/>point_i&lt;nb_good_points;<sp/>point_i++)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>coord_i<sp/>=<sp/>0;<sp/>coord_i&lt;<ref refid="class_simplex_1a0d352c2bc1248646ccaff4236538a194" kindref="member">m_centroid</ref>.<ref refid="class_vertice_1a93b6febeec367c7c2211eb1e34dcfce4" kindref="member">size</ref>();<sp/>coord_i++)</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simplex_1a0d352c2bc1248646ccaff4236538a194" kindref="member">m_centroid</ref>[coord_i]<sp/>+=<sp/><ref refid="class_simplex_1a8e0cd4b76bda7c66a299e4f7c8ea1bc3" kindref="member">m_vertices</ref>[sorted_vertices_indexes[point_i]][coord_i];</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>coord<sp/>:<sp/><ref refid="class_simplex_1a0d352c2bc1248646ccaff4236538a194" kindref="member">m_centroid</ref>)<sp/>coord<sp/>/=<sp/>(double)(nb_good_points);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_simplex_1a0d352c2bc1248646ccaff4236538a194" kindref="member">m_centroid</ref>;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551" refid="class_simplex_1ae39ce6d0a47986ceabb9a76146a8225b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_simplex_1ae39ce6d0a47986ceabb9a76146a8225b" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_simplex_1a3e8657a83fb94712f3d5c61a88801e89" kindref="member">m_size</ref>;}</highlight></codeline>
<codeline lineno="552" refid="class_simplex_1a321c481eed3e0f60defabaa88f4cba69" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_simplex_1a321c481eed3e0f60defabaa88f4cba69" kindref="member">size</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_simplex_1a3e8657a83fb94712f3d5c61a88801e89" kindref="member">m_size</ref>;}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554" refid="class_simplex_1aed93fc950fa50599b289d5ac9e3356c7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_simplex_1aed93fc950fa50599b289d5ac9e3356c7" kindref="member">dim</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_simplex_1aed12d66219db915526fc70cc33c83505" kindref="member">m_dim</ref>;}</highlight></codeline>
<codeline lineno="555" refid="class_simplex_1a67925da27ed5cdd6b9ea6b002102d02b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_simplex_1a67925da27ed5cdd6b9ea6b002102d02b" kindref="member">dim</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_simplex_1aed12d66219db915526fc70cc33c83505" kindref="member">m_dim</ref>;}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="558" refid="class_simplex_1a8e0cd4b76bda7c66a299e4f7c8ea1bc3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_spectra_alignator_8hpp_1afafb4a66ac57eb9c69b1fe6488851c4e" kindref="member">Vertices</ref><sp/><ref refid="class_simplex_1a8e0cd4b76bda7c66a299e4f7c8ea1bc3" kindref="member">m_vertices</ref>;</highlight></codeline>
<codeline lineno="559" refid="class_simplex_1aed12d66219db915526fc70cc33c83505" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_simplex_1aed12d66219db915526fc70cc33c83505" kindref="member">m_dim</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="560" refid="class_simplex_1a3e8657a83fb94712f3d5c61a88801e89" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_simplex_1a3e8657a83fb94712f3d5c61a88801e89" kindref="member">m_size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="561" refid="class_simplex_1a0d352c2bc1248646ccaff4236538a194" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_vertice" kindref="compound">Vertice</ref><sp/><ref refid="class_simplex_1a0d352c2bc1248646ccaff4236538a194" kindref="member">m_centroid</ref><sp/>=<sp/><ref refid="class_vertice" kindref="compound">Vertice</ref>(<ref refid="class_simplex_1aed12d66219db915526fc70cc33c83505" kindref="member">m_dim</ref>);</highlight></codeline>
<codeline lineno="562"><highlight class="normal">};</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="_spectra_alignator_8hpp_1a2b92434fd8aaf67b841513f9b83eaaa8" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="_spectra_alignator_8hpp_1a1c2f6d6b9b8d19b513889e59666d3967" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/><ref refid="class_simplex" kindref="compound">Simplex</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>simplex)</highlight></codeline>
<codeline lineno="565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>out<sp/>&lt;&lt;<sp/>simplex.<ref refid="class_simplex_1ae39ce6d0a47986ceabb9a76146a8225b" kindref="member">size</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>points<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>vertice<sp/>:<sp/>simplex)<sp/>out<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/>vertice;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571" refid="class_minimisator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_minimisator" kindref="compound">Minimisator</ref></highlight></codeline>
<codeline lineno="572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="574" refid="class_minimisator_1a5840066c8bf50d8e04ee596238324696" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_minimisator_1a5840066c8bf50d8e04ee596238324696" kindref="member">Minimisator</ref>(<ref refid="class_recalibration" kindref="compound">Recalibration</ref><sp/>*<sp/>recal)<sp/>:<sp/><ref refid="class_minimisator_1a70194383b57ea57478e7c4a3e883e684" kindref="member">m_recal</ref>(recal)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579" refid="class_minimisator_1af6fb398efd3c8110bb72ffc0b37a218f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1af6fb398efd3c8110bb72ffc0b37a218f" kindref="member">setC</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_C)<sp/>{<ref refid="class_minimisator_1a5475528b2ac14c2c221dcd38444c3e8e" kindref="member">m_C</ref><sp/>=<sp/>_C;}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581" refid="class_minimisator_1a969310853a267ef440163b92c6a7873a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1a969310853a267ef440163b92c6a7873a" kindref="member">chi2</ref><sp/>(<ref refid="class_spectra_co" kindref="compound">SpectraCo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>ref_spectra,<sp/><ref refid="class_spectra_co" kindref="compound">SpectraCo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>spectra,<sp/><ref refid="class_vertice" kindref="compound">Vertice</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>vertice)</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>generalise<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_minimisator_1a5475528b2ac14c2c221dcd38444c3e8e" kindref="member">m_C</ref><sp/>=<sp/>vertice[0];</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>param<sp/>=<sp/>1;<sp/>param&lt;vertice.<ref refid="class_vertice_1a93b6febeec367c7c2211eb1e34dcfce4" kindref="member">size</ref>();<sp/>param++)<sp/><ref refid="class_minimisator_1a70194383b57ea57478e7c4a3e883e684" kindref="member">m_recal</ref>-&gt;<ref refid="class_recalibration_1ac98afc36338de322cde52205b01971ff" kindref="member">setParameter</ref>(param,<sp/>vertice[param]);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1a969310853a267ef440163b92c6a7873a" kindref="member">chi2</ref>(ref_spectra,<sp/>spectra);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589" refid="class_minimisator_1a92ceedc5d8e612ed8515faf6657c99a3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1a92ceedc5d8e612ed8515faf6657c99a3" kindref="member">chi2</ref><sp/>(<ref refid="class_spectra_co" kindref="compound">SpectraCo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>ref_spectra,<sp/><ref refid="class_spectra_co" kindref="compound">SpectraCo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>spectra)</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum_errors_squared<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print(spectra.size(),<sp/>m_spectra_threshold);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_bins_studied<sp/>=<sp/>spectra.<ref refid="class_spectra_co_1af819f84c4dfd2a2bf9ee87809dec1159" kindref="member">size</ref>()-0;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>0;<sp/>bin&lt;spectra.<ref refid="class_spectra_co_1af819f84c4dfd2a2bf9ee87809dec1159" kindref="member">size</ref>();<sp/>bin++)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spectra[bin]&gt;0)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>new<sp/>bin<sp/>value<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>new_bin<sp/>=<sp/><ref refid="class_minimisator_1a70194383b57ea57478e7c4a3e883e684" kindref="member">m_recal</ref>-&gt;<ref refid="class_recalibration_1a6ce90b10d69409fdbc385ba6f990e073" kindref="member">calculate</ref>(bin);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>a<sp/>linear<sp/>interpolation<sp/>to<sp/>get<sp/>the<sp/>value<sp/>of<sp/>the<sp/>new<sp/>bin<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>new_value<sp/>=<sp/>spectra.<ref refid="class_spectra_co_1a4c094686833d7c19460df10ae16c34ba" kindref="member">interpolate</ref>(new_bin);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>error<sp/>for<sp/>this<sp/>bin<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>error<sp/>=<sp/>ref_spectra[bin]<sp/>-<sp/><ref refid="class_minimisator_1a5475528b2ac14c2c221dcd38444c3e8e" kindref="member">m_C</ref>*new_value;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Variance<sp/>of<sp/>the<sp/>bin<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>weight<sp/>=<sp/>1/spectra[bin];<sp/></highlight><highlight class="comment">//<sp/>V<sp/>=<sp/>sigma²<sp/>=<sp/>1/N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>error<sp/>to<sp/>the<sp/>total<sp/>squared<sp/>error<sp/>of<sp/>the<sp/>spectra<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sum_errors_squared<sp/>+=<sp/>error*error*weight;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print(spectra[bin],<sp/>weight,<sp/>new_bin,<sp/>new_value,<sp/>error,<sp/>sum_errors_squared);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print(sum_errors_squared/(nb_bins_studied-m_nb_freedom_degrees));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pauseCo();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum_errors_squared/(nb_bins_studied-<ref refid="class_minimisator_1a93d39e35dee7cd5df8bb71498b122f86" kindref="member">m_nb_freedom_degrees</ref>);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618" refid="class_minimisator_1a9111d4088cf501a73b3472dc4565b4e3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1a9111d4088cf501a73b3472dc4565b4e3" kindref="member">chi2_second_derivative</ref>(<ref refid="class_spectra_co" kindref="compound">SpectraCo</ref><sp/>&amp;<sp/>ref_spectra,<sp/><ref refid="class_spectra_co" kindref="compound">SpectraCo</ref><sp/>&amp;<sp/>test_spectra)</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ref_spectra.<ref refid="class_spectra_co_1a047126db866b95f6cc6c8bd92db37588" kindref="member">derivative2</ref>().size()&lt;1)<sp/>ref_spectra.<ref refid="class_spectra_co_1acae7e2189022b271400874d523ccbf30" kindref="member">derivate2</ref>();</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum_errors_squared<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print(test_spectra.size(),<sp/>m_spectra_threshold);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>const<sp/>&amp;<sp/>nb_bins_studied<sp/>=<sp/>test_spectra.size()-m_spectra_threshold;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(int<sp/>bin<sp/>=<sp/>m_spectra_threshold;<sp/>bin&lt;test_spectra.size();<sp/>bin++)<sp/>if<sp/>(test_spectra[bin]&gt;0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_co" kindref="compound">SpectraCo</ref><sp/>recal_spectra(test_spectra,<sp/>*<ref refid="class_minimisator_1a70194383b57ea57478e7c4a3e883e684" kindref="member">m_recal</ref>);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>derivative2_spectra<sp/>=<sp/>recal_spectra.<ref refid="class_spectra_co_1acae7e2189022b271400874d523ccbf30" kindref="member">derivate2</ref>();</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>0;<sp/>bin&lt;test_spectra.<ref refid="class_spectra_co_1af819f84c4dfd2a2bf9ee87809dec1159" kindref="member">size</ref>();<sp/>bin++)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_spectra[bin]&gt;0)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Variance<sp/>of<sp/>the<sp/>bin<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>weight<sp/>=<sp/>1/derivative2_spectra[bin];</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>error<sp/>for<sp/>this<sp/>bin<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>error<sp/>=<sp/>ref_spectra[bin]<sp/>-<sp/><ref refid="class_minimisator_1a5475528b2ac14c2c221dcd38444c3e8e" kindref="member">m_C</ref>*derivative2_spectra[bin];</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>it<sp/>to<sp/>the<sp/>total<sp/>squared<sp/>error<sp/>of<sp/>the<sp/>test_spectra<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sum_errors_squared<sp/>+=<sp/>error*error*weight;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum_errors_squared/(test_spectra.<ref refid="class_spectra_co_1af819f84c4dfd2a2bf9ee87809dec1159" kindref="member">size</ref>()-<ref refid="class_minimisator_1a93d39e35dee7cd5df8bb71498b122f86" kindref="member">m_nb_freedom_degrees</ref>);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642" refid="class_minimisator_1adb05314210b8a9c6d4bf149e68f733a1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1adb05314210b8a9c6d4bf149e68f733a1" kindref="member">setDegreesOfFreedom</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>degrees)<sp/>{<ref refid="class_minimisator_1a93d39e35dee7cd5df8bb71498b122f86" kindref="member">m_nb_freedom_degrees</ref><sp/>=<sp/>degrees;}</highlight></codeline>
<codeline lineno="643" refid="class_minimisator_1ae15be466b22ef08ccaf89b759f709e95" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_minimisator_1ae15be466b22ef08ccaf89b759f709e95" kindref="member">getDegreesOfFreedom</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1a93d39e35dee7cd5df8bb71498b122f86" kindref="member">m_nb_freedom_degrees</ref>;}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645" refid="class_minimisator_1ac99fb8afd8ea36a67ddd746b0584ab43" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1ac99fb8afd8ea36a67ddd746b0584ab43" kindref="member">setMinC</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_minC)<sp/>{<ref refid="class_minimisator_1a7b33b6783d0dab674fe88fd6a5b93c04" kindref="member">m_minC</ref><sp/>=<sp/>_minC;}</highlight></codeline>
<codeline lineno="646" refid="class_minimisator_1a9973149b31ccf9cb07f3aec54ca87d78" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1a9973149b31ccf9cb07f3aec54ca87d78" kindref="member">setMaxC</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_maxC)<sp/>{<ref refid="class_minimisator_1a3f0b1cc97a71c7079281ac4eb2ae7a4a" kindref="member">m_maxC</ref><sp/>=<sp/>_maxC;}</highlight></codeline>
<codeline lineno="647" refid="class_minimisator_1ae8936e9ea9e3e63711b382b9b09cbf25" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1ae8936e9ea9e3e63711b382b9b09cbf25" kindref="member">setMina0</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_mina0)<sp/>{<ref refid="class_minimisator_1afdcd01102bcdfc6db928eb09ddfbdc71" kindref="member">m_mina0</ref><sp/>=<sp/>_mina0;}</highlight></codeline>
<codeline lineno="648" refid="class_minimisator_1ac1669f9a012ed6f484ca0dca26a2c048" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1ac1669f9a012ed6f484ca0dca26a2c048" kindref="member">setMaxa0</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_maxa0)<sp/>{<ref refid="class_minimisator_1a8233a1a7c73656b4669653f5a8e80fef" kindref="member">m_maxa0</ref><sp/>=<sp/>_maxa0;}</highlight></codeline>
<codeline lineno="649" refid="class_minimisator_1a9d82383998a467e338a8ddf05e35f36d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1a9d82383998a467e338a8ddf05e35f36d" kindref="member">setMina1</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_mina1)<sp/>{<ref refid="class_minimisator_1a404b364da43dda9ad1d1d87b1fa8ccd5" kindref="member">m_mina1</ref><sp/>=<sp/>_mina1;}</highlight></codeline>
<codeline lineno="650" refid="class_minimisator_1a3bd6b90aa328de9f06fd18d3a183434e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1a3bd6b90aa328de9f06fd18d3a183434e" kindref="member">setMaxa1</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_maxa1)<sp/>{<ref refid="class_minimisator_1ad463ba1d2e6345046ed6b53491089320" kindref="member">m_maxa1</ref><sp/>=<sp/>_maxa1;}</highlight></codeline>
<codeline lineno="651" refid="class_minimisator_1a19ae44dcc355d36aad823903f9b09204" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1a19ae44dcc355d36aad823903f9b09204" kindref="member">setMina2</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_mina2)<sp/>{<ref refid="class_minimisator_1a1a009f968f138cce07f787fb263ca6f5" kindref="member">m_mina2</ref><sp/>=<sp/>_mina2;}</highlight></codeline>
<codeline lineno="652" refid="class_minimisator_1af67f036d5fd92c1e732fe470cd0c020d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1af67f036d5fd92c1e732fe470cd0c020d" kindref="member">setMaxa2</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_maxa2)<sp/>{<ref refid="class_minimisator_1aaf1050a37767d056a0d6e0db975365b3" kindref="member">m_maxa2</ref><sp/>=<sp/>_maxa2;}</highlight></codeline>
<codeline lineno="653" refid="class_minimisator_1a15cded5194b589f25d5b7ab20fa669d6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1a15cded5194b589f25d5b7ab20fa669d6" kindref="member">setMinaSqrt</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_minaSqrt)<sp/>{<ref refid="class_minimisator_1a9958f8a8d135714afbc348c8e58fb1ae" kindref="member">m_minaSqrt</ref><sp/>=<sp/>_minaSqrt;}</highlight></codeline>
<codeline lineno="654" refid="class_minimisator_1a715c87056ad76bec775d48bf2cf9792e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1a715c87056ad76bec775d48bf2cf9792e" kindref="member">setMaxaSqrt</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_maxaSqrt)<sp/>{<ref refid="class_minimisator_1a9db2d34ee919d9a5bef93cf9c5fc5385" kindref="member">m_maxaSqrt</ref><sp/>=<sp/>_maxaSqrt;}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656" refid="class_minimisator_1a4146b62ab538a9c36f9a93855bee198a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_vertice" kindref="compound">Vertice</ref><sp/><ref refid="class_minimisator_1a4146b62ab538a9c36f9a93855bee198a" kindref="member">minimise</ref>(<ref refid="class_spectra_co" kindref="compound">SpectraCo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>ref_spectra,<sp/><ref refid="class_spectra_co" kindref="compound">SpectraCo</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>spectra,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>method<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nelder-mead&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(method<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;nelder-mead&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>generalise<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>dumb_C<sp/>=<sp/>(<ref refid="class_minimisator_1a3f0b1cc97a71c7079281ac4eb2ae7a4a" kindref="member">m_maxC</ref>+<ref refid="class_minimisator_1a7b33b6783d0dab674fe88fd6a5b93c04" kindref="member">m_minC</ref>)/2;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>dumb_a0<sp/>=<sp/>(<ref refid="class_minimisator_1a8233a1a7c73656b4669653f5a8e80fef" kindref="member">m_maxa0</ref>+<ref refid="class_minimisator_1afdcd01102bcdfc6db928eb09ddfbdc71" kindref="member">m_mina0</ref>)/2;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>dumb_a1<sp/>=<sp/>(<ref refid="class_minimisator_1ad463ba1d2e6345046ed6b53491089320" kindref="member">m_maxa1</ref>+<ref refid="class_minimisator_1a404b364da43dda9ad1d1d87b1fa8ccd5" kindref="member">m_mina1</ref>)/2;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>auto<sp/>const<sp/>&amp;<sp/>dumb_a2<sp/>=<sp/>(m_maxa2-m_mina2)/2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simplex" kindref="compound">Simplex</ref><sp/>simplex<sp/>({</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vertice" kindref="compound">Vertice</ref>({dumb_C,<sp/>dumb_a0,<sp/>dumb_a1}),</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vertice" kindref="compound">Vertice</ref>({<ref refid="class_minimisator_1a7b33b6783d0dab674fe88fd6a5b93c04" kindref="member">m_minC</ref>,<sp/><ref refid="class_minimisator_1afdcd01102bcdfc6db928eb09ddfbdc71" kindref="member">m_mina0</ref>,<sp/><ref refid="class_minimisator_1a404b364da43dda9ad1d1d87b1fa8ccd5" kindref="member">m_mina1</ref>}),</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vertice" kindref="compound">Vertice</ref>({<ref refid="class_minimisator_1a3f0b1cc97a71c7079281ac4eb2ae7a4a" kindref="member">m_maxC</ref>,<sp/><ref refid="class_minimisator_1a8233a1a7c73656b4669653f5a8e80fef" kindref="member">m_maxa0</ref>,<sp/><ref refid="class_minimisator_1ad463ba1d2e6345046ed6b53491089320" kindref="member">m_maxa1</ref>}),</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vertice" kindref="compound">Vertice</ref>({dumb_C,<sp/><ref refid="class_minimisator_1a8233a1a7c73656b4669653f5a8e80fef" kindref="member">m_maxa0</ref>,<sp/><ref refid="class_minimisator_1ad463ba1d2e6345046ed6b53491089320" kindref="member">m_maxa1</ref>})</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;first<sp/>simplex<sp/>:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(simplex);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minimum_chi2<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>First<sp/>dumb<sp/>chi2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loop_i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(loop_i&lt;50)</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.a<sp/>Calculate<sp/>the<sp/>chi2<sp/>for<sp/>each<sp/>vertice<sp/>of<sp/>the<sp/>simplex<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>chi2s;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>vertice<sp/>:<sp/>simplex)<sp/>chi2s.push_back(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_minimisator_1a969310853a267ef440163b92c6a7873a" kindref="member">chi2</ref>(ref_spectra,<sp/>spectra,<sp/>vertice));</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;chi2s&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(chi2s);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>dim<sp/>=<sp/>chi2s.size()-1;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.b<sp/>Sorts<sp/>the<sp/>chi2s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>ordered_chi2s;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>ordered_indexes;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="vector__functions_8hpp_1a28b5494cf9f51ee725e680752955a8e1" kindref="member">bubbleSort</ref>(chi2s,<sp/>ordered_indexes);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>index<sp/>:<sp/>ordered_indexes)<sp/>ordered_chi2s.push_back(chi2s[index]);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>centroid<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vertice" kindref="compound">Vertice</ref><sp/>centroid<sp/>(simplex.centroid(ordered_indexes));<sp/></highlight><highlight class="comment">//<sp/>centroid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2.a<sp/>Compute<sp/>the<sp/>reflexion<sp/>point<sp/>:<sp/>centroid<sp/>+<sp/>alpha<sp/>*<sp/>(centroid-worst_vertice)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vertice" kindref="compound">Vertice</ref><sp/>reflection<sp/>(centroid<sp/>+<sp/><ref refid="class_minimisator_1a60fa32272bc0c844926f7910bcb83e50" kindref="member">nmParam</ref>.<ref refid="struct_minimisator_1_1_nelder_mead_parameters_1ad572ad763d40de2c3ef34e50bf71177d" kindref="member">alpha</ref>*(centroid<sp/>-<sp/>simplex[ordered_indexes.back()]));</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2.b<sp/>Compute<sp/>its<sp/>chi2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>chi2_reflection<sp/>=<sp/><ref refid="class_minimisator_1a969310853a267ef440163b92c6a7873a" kindref="member">chi2</ref>(ref_spectra,<sp/>spectra,<sp/>reflection);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;chi2_reflection&quot;</highlight><highlight class="normal">,<sp/>chi2_reflection);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chi2_reflection<sp/>&lt;<sp/>ordered_chi2s[0])</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>If<sp/>chi2_1&gt;chi2_reflection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3.a<sp/>Compute<sp/>the<sp/>expansion<sp/>point<sp/>:<sp/>centroid<sp/>+<sp/>beta<sp/>*<sp/>(reflection-centroid)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vertice" kindref="compound">Vertice</ref><sp/>expansion(centroid<sp/>+<sp/><ref refid="class_minimisator_1a60fa32272bc0c844926f7910bcb83e50" kindref="member">nmParam</ref>.<ref refid="struct_minimisator_1_1_nelder_mead_parameters_1aeec9715878231abdfbea7a5a6801bf1e" kindref="member">beta</ref>*(reflection-centroid));</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3.b<sp/>Compute<sp/>its<sp/>chi2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>chi2_expansion<sp/>=<sp/><ref refid="class_minimisator_1a969310853a267ef440163b92c6a7873a" kindref="member">chi2</ref>(ref_spectra,<sp/>spectra,<sp/>expansion);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;chi2_expansion&quot;</highlight><highlight class="normal">,<sp/>chi2_expansion);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chi2_expansion<sp/>&lt;<sp/>chi2_reflection)<sp/>simplex[ordered_indexes.back()]<sp/>=<sp/>expansion;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>simplex[ordered_indexes.back()]<sp/>=<sp/>reflection;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chi2_reflection<sp/>&lt;<sp/>ordered_chi2s[dim])</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simplex[ordered_indexes.back()]<sp/>=<sp/>reflection;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chi2_reflection<sp/>&lt;<sp/>ordered_chi2s.back())</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4.a<sp/>Compute<sp/>the<sp/>outside<sp/>contraction<sp/>point<sp/>:<sp/>centroid<sp/>+<sp/>beta<sp/>*<sp/>(reflection-centroid)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vertice" kindref="compound">Vertice</ref><sp/>outsideContraction(centroid<sp/>+<sp/><ref refid="class_minimisator_1a60fa32272bc0c844926f7910bcb83e50" kindref="member">nmParam</ref>.<ref refid="struct_minimisator_1_1_nelder_mead_parameters_1a605647638f96b3aaaec933e3b741c392" kindref="member">gamma</ref>*(reflection-centroid));</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4.b<sp/>Compute<sp/>its<sp/>chi2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>chi2_outside_contraction<sp/>=<sp/><ref refid="class_minimisator_1a969310853a267ef440163b92c6a7873a" kindref="member">chi2</ref>(ref_spectra,<sp/>spectra,<sp/>outsideContraction);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;chi2_outside_contraction&quot;</highlight><highlight class="normal">,<sp/>chi2_outside_contraction);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chi2_outside_contraction<sp/>&lt;<sp/>chi2_reflection)<sp/>simplex[ordered_indexes.back()]<sp/>=<sp/>outsideContraction;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ordered_chi2s[dim]<sp/>&lt;<sp/>chi2_reflection)</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>5.a<sp/>Compute<sp/>the<sp/>inside<sp/>contraction<sp/>point<sp/>:<sp/>centroid<sp/>+<sp/>beta<sp/>*<sp/>(reflection-centroid)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vertice" kindref="compound">Vertice</ref><sp/>insideContraction(centroid<sp/>-<sp/><ref refid="class_minimisator_1a60fa32272bc0c844926f7910bcb83e50" kindref="member">nmParam</ref>.<ref refid="struct_minimisator_1_1_nelder_mead_parameters_1a605647638f96b3aaaec933e3b741c392" kindref="member">gamma</ref>*(reflection-centroid));</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>5.b<sp/>Compute<sp/>its<sp/>chi2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>chi2_inside_contraction<sp/>=<sp/><ref refid="class_minimisator_1a969310853a267ef440163b92c6a7873a" kindref="member">chi2</ref>(ref_spectra,<sp/>spectra,<sp/>insideContraction);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;chi2_inside_contraction&quot;</highlight><highlight class="normal">,<sp/>chi2_inside_contraction);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chi2_inside_contraction<sp/>&lt;<sp/>chi2_reflection)<sp/>simplex[ordered_indexes.back()]<sp/>=<sp/>insideContraction;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>6<sp/>Shrinks<sp/>the<sp/>simplex<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simplex" kindref="compound">Simplex</ref><sp/>tempSimplex(simplex);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempSimplex[0]<sp/>=<sp/>simplex[ordered_indexes[0]];<sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>the<sp/>best<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>point_i<sp/>=<sp/>1;<sp/>point_i&lt;dim+1;<sp/>point_i++)</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempSimplex[point_i]<sp/>=<sp/>tempSimplex[0]<sp/>+<sp/><ref refid="class_minimisator_1a60fa32272bc0c844926f7910bcb83e50" kindref="member">nmParam</ref>.<ref refid="struct_minimisator_1_1_nelder_mead_parameters_1ae4f64377f468e22558d8bd6fee8bad24" kindref="member">delta</ref><sp/>*<sp/>(simplex[ordered_indexes[point_i]]<sp/>-<sp/>tempSimplex[0]);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simplex<sp/>=<sp/>tempSimplex;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;second<sp/>simplex<sp/>:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(simplex);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>auto<sp/>pauseCo();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>min_chi2<sp/>=<sp/><ref refid="class_minimisator_1a969310853a267ef440163b92c6a7873a" kindref="member">chi2</ref>(ref_spectra,<sp/>spectra,<sp/>simplex[0]);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(loop_i,<sp/>min_chi2,<sp/>minimum_chi2,<sp/>abs((minimum_chi2-min_chi2)/minimum_chi2));</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(<sp/>loop_i&gt;10<sp/>&amp;&amp;<sp/>abs((minimum_chi2-min_chi2)/minimum_chi2)<sp/>&lt;<sp/>0.001)<sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minimum_chi2<sp/>=<sp/>min_chi2;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop_i++;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(loop_i);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(simplex);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>simplex[0];</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vertice" kindref="compound">Vertice</ref>({});</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764" refid="class_minimisator_1a35127a6cdbfe1d07eebfdbda30db6a8a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1a35127a6cdbfe1d07eebfdbda30db6a8a" kindref="member">operator-&gt;</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1a70194383b57ea57478e7c4a3e883e684" kindref="member">m_recal</ref>;}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766" refid="class_minimisator_1ac5caeefc9cb02424158a41d7ef05ecef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1ac5caeefc9cb02424158a41d7ef05ecef" kindref="member">setThreshold</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>bin)<sp/>{<ref refid="class_minimisator_1aaa7dc46c5e2406bb8a4d389996ef3e44" kindref="member">m_spectra_threshold</ref><sp/>=<sp/>bin;}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="769" refid="class_minimisator_1a70194383b57ea57478e7c4a3e883e684" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_recalibration" kindref="compound">Recalibration</ref><sp/>*<sp/><ref refid="class_minimisator_1a70194383b57ea57478e7c4a3e883e684" kindref="member">m_recal</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>brute<sp/>force<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772" refid="class_minimisator_1a5475528b2ac14c2c221dcd38444c3e8e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1a5475528b2ac14c2c221dcd38444c3e8e" kindref="member">m_C</ref><sp/>=<sp/>0.0;<sp/></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>minimisation<sp/>techniques<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775" refid="class_minimisator_1a7b33b6783d0dab674fe88fd6a5b93c04" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1a7b33b6783d0dab674fe88fd6a5b93c04" kindref="member">m_minC</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="776" refid="class_minimisator_1a3f0b1cc97a71c7079281ac4eb2ae7a4a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1a3f0b1cc97a71c7079281ac4eb2ae7a4a" kindref="member">m_maxC</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="777" refid="class_minimisator_1afdcd01102bcdfc6db928eb09ddfbdc71" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1afdcd01102bcdfc6db928eb09ddfbdc71" kindref="member">m_mina0</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="778" refid="class_minimisator_1a8233a1a7c73656b4669653f5a8e80fef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1a8233a1a7c73656b4669653f5a8e80fef" kindref="member">m_maxa0</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="779" refid="class_minimisator_1a404b364da43dda9ad1d1d87b1fa8ccd5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1a404b364da43dda9ad1d1d87b1fa8ccd5" kindref="member">m_mina1</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="780" refid="class_minimisator_1ad463ba1d2e6345046ed6b53491089320" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1ad463ba1d2e6345046ed6b53491089320" kindref="member">m_maxa1</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="781" refid="class_minimisator_1a1a009f968f138cce07f787fb263ca6f5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1a1a009f968f138cce07f787fb263ca6f5" kindref="member">m_mina2</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="782" refid="class_minimisator_1aaf1050a37767d056a0d6e0db975365b3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1aaf1050a37767d056a0d6e0db975365b3" kindref="member">m_maxa2</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="783" refid="class_minimisator_1a9958f8a8d135714afbc348c8e58fb1ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1a9958f8a8d135714afbc348c8e58fb1ae" kindref="member">m_minaSqrt</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="784" refid="class_minimisator_1a9db2d34ee919d9a5bef93cf9c5fc5385" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1a9db2d34ee919d9a5bef93cf9c5fc5385" kindref="member">m_maxaSqrt</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786" refid="struct_minimisator_1_1_nelder_mead_parameters" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_minimisator_1_1_nelder_mead_parameters" kindref="compound">NelderMeadParameters</ref></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="788" refid="struct_minimisator_1_1_nelder_mead_parameters_1ad572ad763d40de2c3ef34e50bf71177d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_minimisator_1_1_nelder_mead_parameters_1ad572ad763d40de2c3ef34e50bf71177d" kindref="member">alpha</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="789" refid="struct_minimisator_1_1_nelder_mead_parameters_1aeec9715878231abdfbea7a5a6801bf1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_minimisator_1_1_nelder_mead_parameters_1aeec9715878231abdfbea7a5a6801bf1e" kindref="member">beta</ref><sp/><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="790" refid="struct_minimisator_1_1_nelder_mead_parameters_1a605647638f96b3aaaec933e3b741c392" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_minimisator_1_1_nelder_mead_parameters_1a605647638f96b3aaaec933e3b741c392" kindref="member">gamma</ref><sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="791" refid="struct_minimisator_1_1_nelder_mead_parameters_1ae4f64377f468e22558d8bd6fee8bad24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_minimisator_1_1_nelder_mead_parameters_1ae4f64377f468e22558d8bd6fee8bad24" kindref="member">delta</ref><sp/>=<sp/>0.8;</highlight></codeline>
<codeline lineno="792" refid="class_minimisator_1a60fa32272bc0c844926f7910bcb83e50" refkind="member"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="class_minimisator_1a60fa32272bc0c844926f7910bcb83e50" kindref="member">nmParam</ref>;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794" refid="class_minimisator_1a93d39e35dee7cd5df8bb71498b122f86" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1a93d39e35dee7cd5df8bb71498b122f86" kindref="member">m_nb_freedom_degrees</ref><sp/>=<sp/>3;<sp/></highlight><highlight class="comment">//<sp/>1<sp/>:<sp/>rescaling<sp/>|<sp/>2<sp/>:<sp/>1+offset<sp/>|<sp/>3<sp/>:<sp/>1+affine<sp/>|<sp/>4<sp/>:<sp/>1+quadratic<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795" refid="class_minimisator_1aaa7dc46c5e2406bb8a4d389996ef3e44" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_minimisator_1aaa7dc46c5e2406bb8a4d389996ef3e44" kindref="member">m_spectra_threshold</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="796"><highlight class="normal">};</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798" refid="class_spectra_alignator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_spectra_alignator" kindref="compound">SpectraAlignator</ref></highlight></codeline>
<codeline lineno="799"><highlight class="normal">{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="801" refid="class_spectra_alignator_1a1f75d38f8f9dd676b72689f8adbe3be5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_spectra_alignator_1a1f75d38f8f9dd676b72689f8adbe3be5" kindref="member">SpectraAlignator</ref>(TH1*<sp/>ref)<sp/>:</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_alignator_1a3ad1731be89ec8af6fc61a8cbe89ba80" kindref="member">m_ref_spectra</ref>(ref)</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806" refid="class_spectra_alignator_1a1844e2814df35c43677ed678f79fc00d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_recalibration" kindref="compound">Recalibration</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_spectra_alignator_1a1844e2814df35c43677ed678f79fc00d" kindref="member">alignSpectra</ref>(TH1*<sp/>_spectra,<sp/>TH1*<sp/>spectra_output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>degreesOfFreedom<sp/>=<sp/>3,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>energyThreshold<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_alignator_1a3ab517682bf990b44620a3db9020064e" kindref="member">m_spectra</ref>.emplace_back(_spectra);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>spectra<sp/>=<sp/><ref refid="class_spectra_alignator_1a3ab517682bf990b44620a3db9020064e" kindref="member">m_spectra</ref>.back();</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_alignator_1a616ff75748e686a5a9bde689b9ec6a1e" kindref="member">m_recals</ref>.emplace_back(<ref refid="class_recalibration" kindref="compound">Recalibration</ref>());</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>recal<sp/>=<sp/><ref refid="class_spectra_alignator_1a616ff75748e686a5a9bde689b9ec6a1e" kindref="member">m_recals</ref>.back();</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_alignator_1abcc20c4ad4370552aa2730ade1f2b74e" kindref="member">m_minimisator</ref>.emplace_back(&amp;recal);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>minimisator<sp/>=<sp/><ref refid="class_spectra_alignator_1abcc20c4ad4370552aa2730ade1f2b74e" kindref="member">m_minimisator</ref>.back();</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>minimisator.setDegreesOfFreedom(degreesOfFreedom);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(energyThreshold&gt;0<sp/>&amp;&amp;<sp/>energyThreshold&lt;_spectra-&gt;GetXaxis()-&gt;GetXmax())<sp/>minimisator.setThreshold(_spectra-&gt;FindBin(energyThreshold));</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::vector&lt;std::vector&lt;std::vector&lt;double&gt;&gt;&gt;<sp/>minimisation_space;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>C_dumb<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>C_min<sp/>=<sp/>C_dumb<sp/>-<sp/>0.1;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>C_max<sp/>=<sp/>C_dumb<sp/>+<sp/>0.1;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>C_0<sp/>=<sp/>(C_min+C_max)/2;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>C_steps<sp/>=<sp/>(C_max-C_min)/<ref refid="class_spectra_alignator_1a5d2a1ca21ba9deeb943965dbdb51496a" kindref="member">m_nb_iterations</ref>;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>a0_min<sp/>=<sp/>-0.5;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>a0_max<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>a0_0<sp/>=<sp/>(a0_min+a0_max)/2;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>a0_steps<sp/>=<sp/>(a0_max-a0_min)/<ref refid="class_spectra_alignator_1a5d2a1ca21ba9deeb943965dbdb51496a" kindref="member">m_nb_iterations</ref>;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>a1_min<sp/>=<sp/>0.99;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>a1_max<sp/>=<sp/>1.005;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>a1_0<sp/>=<sp/>(a1_min+a1_max)/2;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>a1_steps<sp/>=<sp/>(a1_max-a1_min)/<ref refid="class_spectra_alignator_1a5d2a1ca21ba9deeb943965dbdb51496a" kindref="member">m_nb_iterations</ref>;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>a2_min<sp/>=<sp/>-0.00001;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>a2_max<sp/>=<sp/>0.00001;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>a2_0<sp/>=<sp/>(a2_min+a2_max)/2;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>a2_steps<sp/>=<sp/>(a2_max-a2_min)/<ref refid="class_spectra_alignator_1a5d2a1ca21ba9deeb943965dbdb51496a" kindref="member">m_nb_iterations</ref>;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>at<sp/>default<sp/>values<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>min_C<sp/>=<sp/>C_0;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>min_a0<sp/>=<sp/>a0_0;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>min_a1<sp/>=<sp/>a1_0;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>min_a2<sp/>=<sp/>a2_0;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>minimisator.setC(min_C);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>minimisator-&gt;a0(min_a0);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>minimisator-&gt;a1(min_a1);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(degreesOfFreedom&gt;3)<sp/>recal.a2(min_a2);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>min_chi2<sp/>=<sp/>minimisator.chi2(<ref refid="class_spectra_alignator_1a3ad1731be89ec8af6fc61a8cbe89ba80" kindref="member">m_ref_spectra</ref>,<sp/>spectra);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(degreesOfFreedom&gt;3)<sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(min_chi2,<sp/>min_C,<sp/>min_a0,<sp/>min_a1,<sp/>min_a2);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(min_chi2,<sp/>min_C,<sp/>min_a0,<sp/>min_a1);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_alignator_1ad36473470290fcb740440c8952e4b30e" kindref="member">m_chi2_spectra</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH3F(</highlight><highlight class="stringliteral">&quot;chi2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;chi2;a0;a1;C&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_spectra_alignator_1a5d2a1ca21ba9deeb943965dbdb51496a" kindref="member">m_nb_iterations</ref>,a0_min,a0_max,<sp/><ref refid="class_spectra_alignator_1a5d2a1ca21ba9deeb943965dbdb51496a" kindref="member">m_nb_iterations</ref>,a1_min,a1_max,<sp/><ref refid="class_spectra_alignator_1a5d2a1ca21ba9deeb943965dbdb51496a" kindref="member">m_nb_iterations</ref>,C_min,C_max);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tries<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>brute<sp/>force<sp/>calculation<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_spectra_alignator_1a3ae8fddfa8d549fff41f095efb6a9ca4" kindref="member">m_brute_force</ref>)</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>C<sp/>=<sp/>0;<sp/>C&lt;<ref refid="class_spectra_alignator_1a5d2a1ca21ba9deeb943965dbdb51496a" kindref="member">m_nb_iterations</ref>;<sp/>C++)</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a0<sp/>=<sp/>0;<sp/>a0&lt;<ref refid="class_spectra_alignator_1a5d2a1ca21ba9deeb943965dbdb51496a" kindref="member">m_nb_iterations</ref>;<sp/>a0++)</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a1<sp/>=<sp/>0;<sp/>a1&lt;<ref refid="class_spectra_alignator_1a5d2a1ca21ba9deeb943965dbdb51496a" kindref="member">m_nb_iterations</ref>;<sp/>a1++)</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(degreesOfFreedom&gt;3)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a2<sp/>=<sp/>0;<sp/>a2&lt;<ref refid="class_spectra_alignator_1a5d2a1ca21ba9deeb943965dbdb51496a" kindref="member">m_nb_iterations</ref>;<sp/>a2++)</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tries++;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>C_value<sp/>=<sp/>C_min+C*C_steps;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>a0_value<sp/>=<sp/>a0_min+a0*a0_steps;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>a1_value<sp/>=<sp/>a1_min+a1*a1_steps;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>a2_value<sp/>=<sp/>a2_min+a2*a2_steps;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minimisator.setC(C_value);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_chi2<sp/>=<sp/>minimisator.chi2(<ref refid="class_spectra_alignator_1a3ad1731be89ec8af6fc61a8cbe89ba80" kindref="member">m_ref_spectra</ref>,<sp/>spectra,<sp/><ref refid="class_vertice" kindref="compound">Vertice</ref>({a0_value,<sp/>a1_value,<sp/>a2_value}));</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_spectra_alignator_1ad36473470290fcb740440c8952e4b30e" kindref="member">m_chi2_spectra</ref>-&gt;Fill(min_a0,<sp/>min_a1,<sp/>min_C);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_chi2<sp/>&lt;<sp/>min_chi2)</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_C<sp/><sp/>=<sp/>C_value<sp/>;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_a0<sp/>=<sp/>a0_value;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_a1<sp/>=<sp/>a1_value;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_a2<sp/>=<sp/>a2_value;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_chi2<sp/>=<sp/>_chi2;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(min_chi2,<sp/>min_C,<sp/>min_a0,<sp/>min_a1,<sp/>min_a2);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tries++;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>C_value<sp/>=<sp/>C_min+C*C_steps;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print(C_value,<sp/>C_min,<sp/>C,C_steps);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>a0_value<sp/>=<sp/>a0_min+a0*a0_steps;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>a1_value<sp/>=<sp/>a1_min+a1*a1_steps;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minimisator.setC(C_value);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minimisator-&gt;a0(a0_value);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minimisator-&gt;a1(a1_value);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print(recal);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>double<sp/>const<sp/>&amp;<sp/>_chi2<sp/>=<sp/>minimisator.chi2_second_derivative(m_ref_spectra,<sp/>spectra);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>_chi2<sp/>=<sp/>minimisator.chi2(<ref refid="class_spectra_alignator_1a3ad1731be89ec8af6fc61a8cbe89ba80" kindref="member">m_ref_spectra</ref>,<sp/>spectra);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print(a0_value,<sp/>a1_value,<sp/>C_value);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print(a0_value,<sp/>a1_value,<sp/>C_value,<sp/>_chi2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_spectra_alignator_1ad36473470290fcb740440c8952e4b30e" kindref="member">m_chi2_spectra</ref>-&gt;SetBinContent(a0,<sp/>a1,<sp/>C,<sp/>_chi2);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(_chi2,<sp/>C_value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="comment">//<sp/>,a0_value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="comment">//<sp/>,a1_value);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>((int)(C_value+a0_value+a1_value)%100<sp/>==<sp/>0)<sp/>print(_chi2,<sp/>C_value,<sp/>a0_value,<sp/>a1_value);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_chi2<sp/>&lt;<sp/>min_chi2)</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_C<sp/><sp/>=<sp/>C_value<sp/>;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_a0<sp/>=<sp/>a0_value;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_a1<sp/>=<sp/>a1_value;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_chi2<sp/>=<sp/>_chi2;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;best<sp/>khi2<sp/>:&quot;</highlight><highlight class="normal">,<sp/>min_chi2,<sp/></highlight><highlight class="stringliteral">&quot;vertice<sp/>:<sp/>&quot;</highlight><highlight class="normal">,<sp/>min_C,<sp/>min_a0,<sp/>min_a1);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>minimisator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minimisator.setMinC(C_min);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minimisator.setMaxC(C_max);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minimisator.setMina0(a0_min);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minimisator.setMaxa0(a0_max);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minimisator.setMina1(a1_min);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minimisator.setMaxa1(a1_max);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minimisator.setMina2(a2_min);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minimisator.setMaxa2(a2_max);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minimisator.minimise(<ref refid="class_spectra_alignator_1a3ad1731be89ec8af6fc61a8cbe89ba80" kindref="member">m_ref_spectra</ref>,<sp/>spectra);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(recal);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>previously<sp/>found<sp/>minimum<sp/>values<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(degreesOfFreedom&gt;3)<sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(min_chi2,<sp/>min_C,<sp/>min_a0,<sp/>min_a1,<sp/>min_a2);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="_histogramor_8hpp_1ab48a2fa7184e6354788989602c8c8c29" kindref="member">print</ref>(min_chi2,<sp/>min_C,<sp/>min_a0,<sp/>min_a1);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>recal.a0(min_a0);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>recal.a1(min_a1);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(degreesOfFreedom&gt;3)<sp/>recal.a2(min_a2);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>spectra.recalibrate(recal);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spectra_output)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>spectra_output;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>spectra_output<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1F(</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(spectra.name()+</highlight><highlight class="stringliteral">&quot;_recal&quot;</highlight><highlight class="normal">).c_str(),<sp/></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(spectra.name()+</highlight><highlight class="stringliteral">&quot;_recal&quot;</highlight><highlight class="normal">).c_str(),<sp/></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spectra.size(),<sp/>spectra.minValue(),<sp/>spectra.maxValue());</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>0;<sp/>bin&lt;spectra.size();<sp/>bin++)<sp/>spectra_output-&gt;SetBinContent(bin,<sp/>spectra[bin]);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_spectra_alignator_1a616ff75748e686a5a9bde689b9ec6a1e" kindref="member">m_recals</ref>.back();</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::vector&lt;double&gt;<sp/>getRealignedSpectra(int<sp/>spectra_nb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>auto<sp/>&amp;<sp/>spectra<sp/>=<sp/>m_spectra[spectra_nb];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>return<sp/>std::vector&lt;double&gt;(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965" refid="class_spectra_alignator_1a2aad91050c99f92c1e217d4c886db883" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spectra_alignator_1a2aad91050c99f92c1e217d4c886db883" kindref="member">setIterations</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>iterations)<sp/>{<ref refid="class_spectra_alignator_1a5d2a1ca21ba9deeb943965dbdb51496a" kindref="member">m_nb_iterations</ref><sp/>=<sp/>iterations;}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967" refid="class_spectra_alignator_1a6bac228fc1bc0ef5ad041966722642cd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spectra_alignator_1a6bac228fc1bc0ef5ad041966722642cd" kindref="member">writeChi2Spectra</ref>(TFile*<sp/>file)</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;cd();</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_spectra_alignator_1ad36473470290fcb740440c8952e4b30e" kindref="member">m_chi2_spectra</ref>-&gt;Write();</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973" refid="class_spectra_alignator_1a06e5ad929499d18d557fd5a37daf8897" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spectra_alignator_1a06e5ad929499d18d557fd5a37daf8897" kindref="member">setBruteForce</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>brute_force<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{<ref refid="class_spectra_alignator_1a3ae8fddfa8d549fff41f095efb6a9ca4" kindref="member">m_brute_force</ref><sp/>=<sp/>brute_force;}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="976" refid="class_spectra_alignator_1a3ad1731be89ec8af6fc61a8cbe89ba80" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_spectra_co" kindref="compound">SpectraCo</ref><sp/><ref refid="class_spectra_alignator_1a3ad1731be89ec8af6fc61a8cbe89ba80" kindref="member">m_ref_spectra</ref>;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::vector&lt;int&gt;<sp/>m_lookup;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979" refid="class_spectra_alignator_1a3ab517682bf990b44620a3db9020064e" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;SpectraCo&gt;<sp/><ref refid="class_spectra_alignator_1a3ab517682bf990b44620a3db9020064e" kindref="member">m_spectra</ref>;</highlight></codeline>
<codeline lineno="980" refid="class_spectra_alignator_1abcc20c4ad4370552aa2730ade1f2b74e" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;Minimisator&gt;<sp/><ref refid="class_spectra_alignator_1abcc20c4ad4370552aa2730ade1f2b74e" kindref="member">m_minimisator</ref>;</highlight></codeline>
<codeline lineno="981" refid="class_spectra_alignator_1a616ff75748e686a5a9bde689b9ec6a1e" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;Recalibration&gt;<sp/><ref refid="class_spectra_alignator_1a616ff75748e686a5a9bde689b9ec6a1e" kindref="member">m_recals</ref>;</highlight></codeline>
<codeline lineno="982" refid="class_spectra_alignator_1a49faa58fd7b8c2bc3a16e0dbc11c9bbe" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="class_spectra_alignator_1a49faa58fd7b8c2bc3a16e0dbc11c9bbe" kindref="member">m_chi2s</ref>;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984" refid="class_spectra_alignator_1a5098303e559bd1051c6758b2bf6bcf1a" refkind="member"><highlight class="normal"><sp/><sp/>TH2F*<sp/><ref refid="class_spectra_alignator_1a5098303e559bd1051c6758b2bf6bcf1a" kindref="member">surface_chi2</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986" refid="class_spectra_alignator_1a5d2a1ca21ba9deeb943965dbdb51496a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_spectra_alignator_1a5d2a1ca21ba9deeb943965dbdb51496a" kindref="member">m_nb_iterations</ref><sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="987" refid="class_spectra_alignator_1a3ae8fddfa8d549fff41f095efb6a9ca4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_spectra_alignator_1a3ae8fddfa8d549fff41f095efb6a9ca4" kindref="member">m_brute_force</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="988" refid="class_spectra_alignator_1ad36473470290fcb740440c8952e4b30e" refkind="member"><highlight class="normal"><sp/><sp/>TH3F*<sp/><ref refid="class_spectra_alignator_1ad36473470290fcb740440c8952e4b30e" kindref="member">m_chi2_spectra</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="989" refid="class_spectra_alignator_1ad0175cbe3edb3c577a91a728625c5cf6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_spectra_alignator_1ad0175cbe3edb3c577a91a728625c5cf6" kindref="member">m_spectra_threshold</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="990"><highlight class="normal">};</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//SPECTRAALINGATOR_HPP</highlight></codeline>
    </programlisting>
    <location file="lib/Classes/SpectraAlignator.hpp"/>
  </compounddef>
</doxygen>
