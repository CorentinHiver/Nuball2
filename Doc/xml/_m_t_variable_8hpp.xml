<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_m_t_variable_8hpp" kind="file" language="C++">
    <compoundname>MTVariable.hpp</compoundname>
    <includes refid="_m_t_object_8hpp" local="yes">MTObject.hpp</includes>
    <incdepgraph>
      <node id="1">
        <label>lib/MTObjects/MTVariable.hpp</label>
        <link refid="_m_t_variable_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>TThread.h</label>
      </node>
      <node id="9">
        <label>TROOT.h</label>
      </node>
      <node id="4">
        <label>future</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
      <node id="8">
        <label>iostream</label>
      </node>
      <node id="6">
        <label>mutex</label>
      </node>
      <node id="3">
        <label>csignal</label>
      </node>
      <node id="2">
        <label>MTObject.hpp</label>
        <link refid="_m_t_object_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>thread</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_m_t_variable" prot="public">MTVariable</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>MTVARIABLE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MTVARIABLE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_m_t_object_8hpp" kindref="compound">MTObject.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="10" refid="class_m_t_variable" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_m_t_variable" kindref="compound">MTVariable</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="13" refid="class_m_t_variable_1afeaf590e18d11bba1ca0e82be8d1cb26" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_m_t_variable_1afeaf590e18d11bba1ca0e82be8d1cb26" kindref="member">MTVariable</ref>()</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_t_variable_1aab1b644bd142eb657d88aecc74450b30" kindref="member">m_variables</ref>.resize(<ref refid="class_m_t_object_1ac97399bb34f766e41e7f9a1cd1b7eb7a" kindref="member">MTObject::getThreadsNb</ref>());</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::is_arithmetic&lt;T&gt;::value)<sp/><ref refid="class_m_t_variable_1a2806e59901cd3ba9a92462b4fc72f08f" kindref="member">total</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MTObject::nbThreadsChanged.connect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>[this](int<sp/>nb_threads)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>resize(nb_threads);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_m_t_variable_1af2f966c9e57eb54bd8fb27595e8c39ac" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_t_variable_1af2f966c9e57eb54bd8fb27595e8c39ac" kindref="member">resize</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_m_t_object_8hpp_1a225f8aadf270f4a69ad323e64b7eaa33" kindref="member">lock_mutex</ref><sp/>lock(<ref refid="class_m_t_object_1a79d86fbc8837ba0f9a4cd1405fddef1c" kindref="member">MTObject::mutex</ref>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_t_variable_1aab1b644bd142eb657d88aecc74450b30" kindref="member">m_variables</ref>.clear();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_t_variable_1aab1b644bd142eb657d88aecc74450b30" kindref="member">m_variables</ref>.resize(size);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_m_t_variable_1a4e2763a5d9c13ad566d8d370dd88521c" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_m_t_variable_1a4e2763a5d9c13ad566d8d370dd88521c" kindref="member">fuse</ref>()</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_arithmetic&lt;T&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;in<sp/>MTVariable&lt;T&gt;::fuse()<sp/>:<sp/>T<sp/>must<sp/>be<sp/>a<sp/>numerical<sp/>!!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_t_variable_1a2806e59901cd3ba9a92462b4fc72f08f" kindref="member">total</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>e<sp/>:<sp/><ref refid="class_m_t_variable_1aab1b644bd142eb657d88aecc74450b30" kindref="member">m_variables</ref>)<sp/>e+=<ref refid="class_m_t_variable_1aab1b644bd142eb657d88aecc74450b30" kindref="member">m_variables</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45" refid="class_m_t_variable_1a2806e59901cd3ba9a92462b4fc72f08f" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/><ref refid="class_m_t_variable_1a2806e59901cd3ba9a92462b4fc72f08f" kindref="member">total</ref>;</highlight></codeline>
<codeline lineno="46" refid="class_m_t_variable_1aab1b644bd142eb657d88aecc74450b30" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;T&gt;<sp/><ref refid="class_m_t_variable_1aab1b644bd142eb657d88aecc74450b30" kindref="member">m_variables</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>MTVARIABLE_HPP</highlight></codeline>
    </programlisting>
    <location file="lib/MTObjects/MTVariable.hpp"/>
  </compounddef>
</doxygen>
