<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_paris_8hpp" kind="file" language="C++">
    <compoundname>Paris.hpp</compoundname>
    <includes refid="_event_8hpp" local="yes">../Classes/Event.hpp</includes>
    <includes refid="_detectors_8hpp" local="yes">../Classes/Detectors.hpp</includes>
    <includes refid="_co_progress_bar_8hpp" local="yes">../Classes/CoProgressBar.hpp</includes>
    <includes refid="_paris_8h" local="yes">Arrays/Paris.h</includes>
    <includes refid="_paris_cluster_8hpp" local="yes">ParisCluster.hpp</includes>
    <includes refid="_paris_bidim_angles_8hpp" local="yes">ParisBidimAngles.hpp</includes>
    <includedby refid="_event_analyse_8hpp" local="yes">lib/Analyse/EventAnalyse.hpp</includedby>
    <incdepgraph>
      <node id="22">
        <label>glob.h</label>
      </node>
      <node id="54">
        <label>TH1S.h</label>
      </node>
      <node id="27">
        <label>functional</label>
      </node>
      <node id="8">
        <label>iomanip</label>
      </node>
      <node id="31">
        <label>queue</label>
      </node>
      <node id="72">
        <label>TTreeIndex.h</label>
      </node>
      <node id="4">
        <label>../libRoot.hpp</label>
        <link refid="lib_root_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>filesystem</label>
      </node>
      <node id="41">
        <label>TAxis.h</label>
      </node>
      <node id="70">
        <label>TThread.h</label>
      </node>
      <node id="24">
        <label>errors.hpp</label>
        <link refid="errors_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>TH1D.h</label>
      </node>
      <node id="66">
        <label>TStopwatch.h</label>
      </node>
      <node id="32">
        <label>stdexcept</label>
      </node>
      <node id="30">
        <label>numeric</label>
      </node>
      <node id="77">
        <label>Arrays/Paris.h</label>
        <link refid="_paris_8h"/>
      </node>
      <node id="17">
        <label>string</label>
      </node>
      <node id="81">
        <label>ParisBidimAngles.hpp</label>
        <link refid="_paris_bidim_angles_8hpp"/>
      </node>
      <node id="10">
        <label>map</label>
      </node>
      <node id="3">
        <label>Hit.hpp</label>
        <link refid="_hit_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>libCo.hpp</label>
        <link refid="lib_co_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>TF1.h</label>
      </node>
      <node id="6">
        <label>print.hpp</label>
        <link refid="print_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>fstream</label>
      </node>
      <node id="80">
        <label>PositionXY.hpp</label>
        <link refid="_position_x_y_8hpp"/>
      </node>
      <node id="44">
        <label>TError.h</label>
      </node>
      <node id="68">
        <label>TStyle.h</label>
      </node>
      <node id="25">
        <label>any</label>
      </node>
      <node id="19">
        <label>files_functions.hpp</label>
        <link refid="files__functions_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>random</label>
      </node>
      <node id="78">
        <label>ParisCluster.hpp</label>
        <link refid="_paris_cluster_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>TROOT.h</label>
      </node>
      <node id="36">
        <label>typeinfo</label>
      </node>
      <node id="73">
        <label>../Classes/Detectors.hpp</label>
        <link refid="_detectors_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>ctime</label>
      </node>
      <node id="43">
        <label>TChain.h</label>
      </node>
      <node id="2">
        <label>../Classes/Event.hpp</label>
        <link refid="_event_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>TSystem.h</label>
      </node>
      <node id="33">
        <label>stack</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="46">
        <label>TF2.h</label>
      </node>
      <node id="47">
        <label>TFile.h</label>
      </node>
      <node id="42">
        <label>TCanvas.h</label>
      </node>
      <node id="57">
        <label>TH3I.h</label>
      </node>
      <node id="58">
        <label>TKey.h</label>
      </node>
      <node id="11">
        <label>vector_functions.hpp</label>
        <link refid="vector__functions_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>TSpectrum.h</label>
      </node>
      <node id="26">
        <label>array</label>
      </node>
      <node id="49">
        <label>TFitResult.h</label>
      </node>
      <node id="18">
        <label>sstream</label>
      </node>
      <node id="13">
        <label>randomCo.hpp</label>
        <link refid="random_co_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>TMarker.h</label>
      </node>
      <node id="79">
        <label>ParisPhoswitch.hpp</label>
        <link refid="_paris_phoswitch_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>TGraphErrors.h</label>
      </node>
      <node id="55">
        <label>TH2.h</label>
      </node>
      <node id="39">
        <label>cstdlib</label>
      </node>
      <node id="52">
        <label>TH1F.h</label>
      </node>
      <node id="59">
        <label>TLeaf.h</label>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
      <node id="15">
        <label>string_functions.hpp</label>
        <link refid="string__functions_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>Timer.hpp</label>
        <link refid="_timer_8hpp"/>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>unordered_map</label>
      </node>
      <node id="60">
        <label>TLegend.h</label>
      </node>
      <node id="67">
        <label>TString.h</label>
      </node>
      <node id="62">
        <label>TMath.h</label>
      </node>
      <node id="56">
        <label>TH2F.h</label>
      </node>
      <node id="74">
        <label>../Classes/CoProgressBar.hpp</label>
        <link refid="_co_progress_bar_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>mutex</label>
      </node>
      <node id="76">
        <label>chrono</label>
      </node>
      <node id="38">
        <label>csignal</label>
      </node>
      <node id="34">
        <label>thread</label>
      </node>
      <node id="63">
        <label>TRandom.h</label>
      </node>
      <node id="71">
        <label>TTree.h</label>
      </node>
      <node id="1">
        <label>lib/Analyse/Paris.hpp</label>
        <link refid="_paris_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>algorithm</label>
      </node>
      <node id="48">
        <label>TFitResultPtr.h</label>
      </node>
      <node id="16">
        <label>cstring</label>
      </node>
      <node id="50">
        <label>TGraph.h</label>
      </node>
      <node id="28">
        <label>memory</label>
      </node>
      <node id="35">
        <label>typeindex</label>
      </node>
      <node id="20">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>lib/Analyse/EventAnalyse.hpp</label>
        <link refid="_event_analyse_8hpp"/>
      </node>
      <node id="1">
        <label>lib/Analyse/Paris.hpp</label>
        <link refid="_paris_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_paris" prot="public">Paris</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_paris_8hpp_1a3c82e9291cdf8abbc848c7cb6879c35f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_position_x_y" kindref="compound">PositionXY</ref></type>
        <definition>PositionXY paris_getPositionModule</definition>
        <argsstring>(std::size_t const &amp;module_label)</argsstring>
        <name>paris_getPositionModule</name>
        <param>
          <type><ref refid="lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">std::size_t</ref> const &amp;</type>
          <declname>module_label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/Analyse/Paris.hpp" line="11" column="12" bodyfile="lib/Analyse/Paris.hpp" bodystart="11" bodyend="16"/>
        <references refid="_paris_8h_1afbdbd6b5a6e2c512c642383b9ba11ac5" compoundref="_paris_8h" startline="29">Paris_R1_x</references>
        <references refid="_paris_8h_1a9cb315707b7013f81d8f16825caf15a3" compoundref="_paris_8h" startline="53">Paris_R1_y</references>
        <references refid="_paris_8h_1a764556bb85a47eb157e298651f3a1bd0" compoundref="_paris_8h" startline="37">Paris_R2_x</references>
        <references refid="_paris_8h_1a83f5c233a4991b23b715dde312171dc2" compoundref="_paris_8h" startline="61">Paris_R2_y</references>
        <references refid="_paris_8h_1ae69f9e16a5332c21d2e75e85124a24d5" compoundref="_paris_8h" startline="45">Paris_R3_x</references>
        <references refid="_paris_8h_1a96dc4022d292e420408212f72f523ef1" compoundref="_paris_8h" startline="69">Paris_R3_y</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>PARIS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PARIS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Classes/Event.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Classes/Detectors.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Classes/CoProgressBar.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_paris_8h" kindref="compound">Arrays/Paris.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_paris_cluster_8hpp" kindref="compound">ParisCluster.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_paris_bidim_angles_8hpp" kindref="compound">ParisBidimAngles.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="_paris_8hpp_1a3c82e9291cdf8abbc848c7cb6879c35f" refkind="member"><highlight class="normal"><ref refid="class_position_x_y" kindref="compound">PositionXY</ref><sp/><ref refid="_paris_8hpp_1a3c82e9291cdf8abbc848c7cb6879c35f" kindref="member">paris_getPositionModule</ref>(<ref refid="lib_co_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">std::size_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>module_label)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(module_label&lt;8)<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_position_x_y" kindref="compound">PositionXY</ref>(<ref refid="_paris_8h_1afbdbd6b5a6e2c512c642383b9ba11ac5" kindref="member">Paris_R1_x</ref>[module_label],<sp/><sp/><ref refid="_paris_8h_1a9cb315707b7013f81d8f16825caf15a3" kindref="member">Paris_R1_y</ref>[module_label]);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(module_label&lt;24)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_position_x_y" kindref="compound">PositionXY</ref>(<ref refid="_paris_8h_1a764556bb85a47eb157e298651f3a1bd0" kindref="member">Paris_R2_x</ref>[module_label-8],<sp/><sp/><ref refid="_paris_8h_1a83f5c233a4991b23b715dde312171dc2" kindref="member">Paris_R2_y</ref>[module_label-8]);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_position_x_y" kindref="compound">PositionXY</ref>(<ref refid="_paris_8h_1ae69f9e16a5332c21d2e75e85124a24d5" kindref="member">Paris_R3_x</ref>[module_label-24],<sp/><sp/><ref refid="_paris_8h_1a96dc4022d292e420408212f72f523ef1" kindref="member">Paris_R3_y</ref>[module_label-24]);</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="class_paris" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_paris" kindref="compound">Paris</ref></highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>________________________________________________________________<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>------------------<sp/><sp/>Setting<sp/>the<sp/>lookup<sp/>tables<sp/>------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>----<sp/>From<sp/>labels<sp/>to<sp/>index<sp/>----<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_paris_1a5e84a66240e195c7743f8c8dae84f800" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_paris_1a5e84a66240e195c7743f8c8dae84f800" kindref="member">is_paris</ref>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>l)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(l&lt;<ref refid="_paris_8h_1adab138f24a10b06a4dc409a8cf76593c" kindref="member">paris_labels</ref>[0]<sp/>||<sp/>l&gt;<ref refid="_paris_8h_1adab138f24a10b06a4dc409a8cf76593c" kindref="member">paris_labels</ref>.back())</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>false</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>std::binary_search(<ref refid="_paris_8h_1adab138f24a10b06a4dc409a8cf76593c" kindref="member">paris_labels</ref>.begin(),<sp/><ref refid="_paris_8h_1adab138f24a10b06a4dc409a8cf76593c" kindref="member">paris_labels</ref>.end(),<sp/>l);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_paris_1a060a9d4c6345e7b73ac62ad5aee1bd23" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21" kindref="member">uchar</ref><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_paris_1a060a9d4c6345e7b73ac62ad5aee1bd23" kindref="member">label_to_index</ref><sp/>(<ref refid="_hit_8hpp_1ab5dd24876acad09ec52c250c1668466c" kindref="member">Label</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>l)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_paris_1a5e84a66240e195c7743f8c8dae84f800" kindref="member">is_paris</ref>(l))</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21" kindref="member">uchar</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(<sp/>std::find(<ref refid="_paris_8h_1adab138f24a10b06a4dc409a8cf76593c" kindref="member">paris_labels</ref>.begin(),<sp/><ref refid="_paris_8h_1adab138f24a10b06a4dc409a8cf76593c" kindref="member">paris_labels</ref>.end(),<sp/>l)<sp/>-<sp/><ref refid="_paris_8h_1adab138f24a10b06a4dc409a8cf76593c" kindref="member">paris_labels</ref>.begin()<sp/>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="class_paris_1a03d3050af7163dfc8c5cc1fb0598885c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::array&lt;bool,<sp/><sp/>1000&gt;<sp/><ref refid="class_paris_1a03d3050af7163dfc8c5cc1fb0598885c" kindref="member">is</ref><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//<sp/>Does<sp/>the<sp/>label<sp/>correspond<sp/>to<sp/>a<sp/>Paris<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_paris_1a4598dcb03f0900aa81b9e9cc1954c7cd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::array&lt;uchar,<sp/>1000&gt;<sp/><ref refid="class_paris_1a4598dcb03f0900aa81b9e9cc1954c7cd" kindref="member">cluster</ref>;<sp/></highlight><highlight class="comment">//<sp/>Link<sp/>the<sp/>label<sp/>to<sp/>its<sp/>cluster<sp/>(0<sp/>:<sp/>back,<sp/>1<sp/>:<sp/>front)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_paris_1ad870c58010fc1f7608be62b2b8c02b15" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::array&lt;uchar,<sp/>1000&gt;<sp/><ref refid="class_paris_1ad870c58010fc1f7608be62b2b8c02b15" kindref="member">index</ref><sp/><sp/>;<sp/></highlight><highlight class="comment">//<sp/>Link<sp/>the<sp/>label<sp/>to<sp/>the<sp/>module&apos;s<sp/>index<sp/>in<sp/>the<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>Initialization<sp/>of<sp/>static<sp/>arrays<sp/>----<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_paris_1aaa7a70ca124d8c0428ee54c7d9d42256" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_paris_1aaa7a70ca124d8c0428ee54c7d9d42256" kindref="member">InitialiseArrays</ref>()</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_paris_1a992926f1f1315dbc0949d84fcca9896e" kindref="member">s_initialised</ref>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>MULTITHREADING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_t_object_8hpp_1a225f8aadf270f4a69ad323e64b7eaa33" kindref="member">lock_mutex</ref><sp/>lock(<ref refid="class_m_t_object_1a79d86fbc8837ba0f9a4cd1405fddef1c" kindref="member">MTObject::mutex</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/></highlight><highlight class="comment">//MULTITHREADING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Initialising<sp/>Paris<sp/>arrays&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>0;<sp/>l&lt;1000;<sp/>l++)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_paris_1a03d3050af7163dfc8c5cc1fb0598885c" kindref="member">is</ref>[l]<sp/><sp/>=<sp/><ref refid="class_paris_1a5e84a66240e195c7743f8c8dae84f800" kindref="member">is_paris</ref>(l);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_paris_1a4598dcb03f0900aa81b9e9cc1954c7cd" kindref="member">cluster</ref>[l]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="lib_co_8hpp_1ae48ac2456c5ad6c956fef86e7bef3a21" kindref="member">uchar</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(l&gt;500);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_paris_1ad870c58010fc1f7608be62b2b8c02b15" kindref="member">index</ref>[l]<sp/>=<sp/><ref refid="class_paris_1a060a9d4c6345e7b73ac62ad5aee1bd23" kindref="member">label_to_index</ref>(l)%(<ref refid="_paris_8h_1adab138f24a10b06a4dc409a8cf76593c" kindref="member">paris_labels</ref>.size()/2);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_paris_1a992926f1f1315dbc0949d84fcca9896e" kindref="member">s_initialised</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>______________________________________________________________<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>_____________________________________________________________<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-----------------------<sp/><sp/>Paris<sp/>Class<sp/><sp/>-----------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="class_paris_1a1f05e7dfce90ff9808cf79ebbbb23008" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_paris_1a1f05e7dfce90ff9808cf79ebbbb23008" kindref="member">Paris</ref>(){</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-&gt;<sp/><ref refid="class_paris_1aaa7a70ca124d8c0428ee54c7d9d42256" kindref="member">InitialiseArrays</ref>();}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_paris_1a2d405a64e0e65a845a2723bb3b2af697" kindref="member">Initialise</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_paris_1acfde42a5101236f9f4063c22661563f0" kindref="member">Fill</ref>(<ref refid="class_event" kindref="compound">Event</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>event,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_paris_1ad9b942023bbc514963ee8742aeccd23c" kindref="member">Reset</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_paris_1ac6fb6d9310b0dd298ebf10862497954a" kindref="member">Analyse</ref>();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="class_paris_1a35fdae4555744730c04ef90228b50865" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_static_vector" kindref="compound">StaticVector&lt;uchar&gt;</ref><sp/><ref refid="class_paris_1a35fdae4555744730c04ef90228b50865" kindref="member">Hits</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="class_paris_1ab8b82c446fd5c617a70be80207894368" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_paris_cluster" kindref="compound">ParisCluster&lt;28&gt;</ref><sp/><ref refid="class_paris_1ab8b82c446fd5c617a70be80207894368" kindref="member">clusterBack</ref>;</highlight></codeline>
<codeline lineno="75" refid="class_paris_1afd25e98773ccf32549495e4c4035db4a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_paris_cluster" kindref="compound">ParisCluster&lt;36&gt;</ref><sp/><ref refid="class_paris_1afd25e98773ccf32549495e4c4035db4a" kindref="member">clusterFront</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>______________________________________________________________<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>_____________________________________________________________<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>------------------<sp/><sp/>User<sp/>defined<sp/>methods<sp/>--------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="class_paris_1a4fb89c70f74288ffba9041dad5c0b341" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_paris_1a4fb89c70f74288ffba9041dad5c0b341" kindref="member">back</ref><sp/><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_paris_1ab8b82c446fd5c617a70be80207894368" kindref="member">clusterBack</ref>;}</highlight></codeline>
<codeline lineno="82" refid="class_paris_1adf36cdac7f24cbc27ace07ec0afeb6a6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_paris_1adf36cdac7f24cbc27ace07ec0afeb6a6" kindref="member">front</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_paris_1afd25e98773ccf32549495e4c4035db4a" kindref="member">clusterFront</ref>;}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>_____________________________________________________________<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>_____________________________________________________________<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>------------<sp/>Qshort<sp/>VS<sp/>Qlong<sp/>bidim<sp/>manipulations<sp/>------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::pair&lt;double,<sp/>double&gt;<sp/><ref refid="class_paris_1ad83b7a82190285f4c69fb5eeb30c5db6" kindref="member">findAngles</ref><sp/><sp/><sp/>(TH2F*<sp/>bidim,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_bins<sp/>=<sp/>10,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>write_graphs<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::pair&lt;double,<sp/>double&gt;<sp/><ref refid="class_paris_1a4605af4582a21a229000502ab0cbf827" kindref="member">findAnglesDeg</ref>(TH2F*<sp/>bidim,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_bins<sp/>=<sp/>10,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>write_graphs<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_paris_1a66745a02a04a8733eba514f319b1cc5e" kindref="member">calculateBidimAngles</ref>(std::string<sp/>file,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outfilename,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>write_graphs<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TH2F*<sp/><ref refid="class_paris_1a21f73f502db25f43f31426c4ea88f419" kindref="member">rotate</ref>(TH2F*<sp/>bidim,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angleLaBr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angleNaI,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>quickNdirty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>_____________________________________________________________<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95" refid="class_paris_1a992926f1f1315dbc0949d84fcca9896e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_paris_1a992926f1f1315dbc0949d84fcca9896e" kindref="member">s_initialised</ref>;</highlight></codeline>
<codeline lineno="96" refid="class_paris_1a9efcee0bca9b694ae7993a2c773d6dc3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_paris_1a9efcee0bca9b694ae7993a2c773d6dc3" kindref="member">m_initialised</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_paris_1a992926f1f1315dbc0949d84fcca9896e" kindref="member">Paris::s_initialised</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">std::array&lt;bool,<sp/><sp/>1000&gt;<sp/><ref refid="class_paris_1a03d3050af7163dfc8c5cc1fb0598885c" kindref="member">Paris::is</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>the<sp/>label<sp/>correspond<sp/>to<sp/>a<sp/>Paris<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">std::array&lt;uchar,<sp/>1000&gt;<sp/><ref refid="class_paris_1a4598dcb03f0900aa81b9e9cc1954c7cd" kindref="member">Paris::cluster</ref>;</highlight><highlight class="comment">//<sp/>Link<sp/>the<sp/>label<sp/>to<sp/>its<sp/>cluster<sp/>(0<sp/>:<sp/>back,<sp/>1<sp/>:<sp/>front)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">std::array&lt;uchar,<sp/>1000&gt;<sp/><ref refid="class_paris_1ad870c58010fc1f7608be62b2b8c02b15" kindref="member">Paris::index</ref><sp/><sp/>;</highlight><highlight class="comment">//<sp/>Link<sp/>the<sp/>label<sp/>to<sp/>the<sp/>module&apos;s<sp/>index<sp/>in<sp/>the<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="class_paris_1a2d405a64e0e65a845a2723bb3b2af697" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_paris_1a2d405a64e0e65a845a2723bb3b2af697" kindref="member">Paris::Initialise</ref>()</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight><highlight class="comment">//<sp/>Parameters<sp/>:<sp/>number<sp/>of<sp/>clusters,<sp/>number<sp/>of<sp/>modules<sp/>in<sp/>each<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_paris_1a9efcee0bca9b694ae7993a2c773d6dc3" kindref="member">m_initialised</ref>)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_paris_1ab8b82c446fd5c617a70be80207894368" kindref="member">clusterBack</ref>.<ref refid="class_paris_cluster_1ac89d80e3d0f7bf119ebb9b8de972c5b0" kindref="member">Initialise</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_paris_1afd25e98773ccf32549495e4c4035db4a" kindref="member">clusterFront</ref>.<ref refid="class_paris_cluster_1ac89d80e3d0f7bf119ebb9b8de972c5b0" kindref="member">Initialise</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_paris_1a9efcee0bca9b694ae7993a2c773d6dc3" kindref="member">m_initialised</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="class_paris_1ad9b942023bbc514963ee8742aeccd23c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_paris_1ad9b942023bbc514963ee8742aeccd23c" kindref="member">Paris::Reset</ref>()</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="class_paris_1ab8b82c446fd5c617a70be80207894368" kindref="member">clusterBack</ref>.<ref refid="class_paris_cluster_1aed843cd658540524bb00eaccc16d5c47" kindref="member">Reset</ref>();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="class_paris_1afd25e98773ccf32549495e4c4035db4a" kindref="member">clusterFront</ref>.<ref refid="class_paris_cluster_1aed843cd658540524bb00eaccc16d5c47" kindref="member">Reset</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="class_paris_1acfde42a5101236f9f4063c22661563f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_paris_1acfde42a5101236f9f4063c22661563f0" kindref="member">Paris::Fill</ref>(<ref refid="class_event" kindref="compound">Event</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>event,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><ref refid="class_paris_1ab8b82c446fd5c617a70be80207894368" kindref="member">clusterBack</ref>.<ref refid="class_paris_cluster_1a00f32121b8702aae3b51826a8aa36f7b" kindref="member">Fill</ref>(event,<sp/>i,<sp/><ref refid="class_paris_1ad870c58010fc1f7608be62b2b8c02b15" kindref="member">index</ref>[event.<ref refid="class_event_1ad016b65deeaef393a94793ef140e1bb8" kindref="member">labels</ref>[i]]);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="class_paris_1afd25e98773ccf32549495e4c4035db4a" kindref="member">clusterFront</ref>.<ref refid="class_paris_cluster_1a00f32121b8702aae3b51826a8aa36f7b" kindref="member">Fill</ref>(event,<sp/>i,<sp/><ref refid="class_paris_1ad870c58010fc1f7608be62b2b8c02b15" kindref="member">index</ref>[event.<ref refid="class_event_1ad016b65deeaef393a94793ef140e1bb8" kindref="member">labels</ref>[i]]);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="class_paris_1ac6fb6d9310b0dd298ebf10862497954a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_paris_1ac6fb6d9310b0dd298ebf10862497954a" kindref="member">Paris::Analyse</ref>()</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="class_paris_1ab8b82c446fd5c617a70be80207894368" kindref="member">clusterBack</ref>.<ref refid="class_paris_cluster_1a6b62c6df3f369da38428d7afa96e2316" kindref="member">Analyse</ref>();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="class_paris_1afd25e98773ccf32549495e4c4035db4a" kindref="member">clusterFront</ref>.<ref refid="class_paris_cluster_1a6b62c6df3f369da38428d7afa96e2316" kindref="member">Analyse</ref>();</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="class_paris_1ad83b7a82190285f4c69fb5eeb30c5db6" refkind="member"><highlight class="normal">std::pair&lt;double,<sp/>double&gt;<sp/><ref refid="class_paris_1ad83b7a82190285f4c69fb5eeb30c5db6" kindref="member">Paris::findAngles</ref>(TH2F*<sp/>bidim,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_bins,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>write_graphs)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>std::string<sp/>outfilename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;angles_paris_bidim.root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_bins_long<sp/>=<sp/>bidim-&gt;GetNbinsX();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_iterations_long<sp/>=<sp/>nb_bins_long/nb_bins;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/>bins;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/>xbin_max_peak1;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/>xbin_max_peak2;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="vector__functions_8hpp_1a4baf3e978c4b72d0b3c52b064fa3c03e" kindref="member">maximum</ref><sp/>=<sp/>bidim-&gt;GetMaximum();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>0;<sp/>it&lt;nb_iterations_long;<sp/>it++)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Peak<sp/>finding<sp/>:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>bin_min<sp/>=<sp/>it*nb_bins;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>bin_max<sp/>=<sp/>it*(nb_bins+1);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>proj_short<sp/>=<sp/>std::make_unique&lt;TH1D&gt;<sp/>(*(bidim-&gt;ProjectionX(</highlight><highlight class="stringliteral">&quot;temp_short&quot;</highlight><highlight class="normal">,<sp/>bin_min,<sp/>bin_max)));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>max<sp/>=<sp/>proj_short-&gt;GetMaximum();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max&lt;<ref refid="vector__functions_8hpp_1a4baf3e978c4b72d0b3c52b064fa3c03e" kindref="member">maximum</ref>/20)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>threshold_start<sp/>=<sp/>max/2;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>threshold_stop<sp/>=<sp/>max/5;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>peak<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>begin_peak1<sp/>=<sp/><ref refid="lib_root_8hpp_1a5d8e6d047f89cfacdca99f300e08a8a8" kindref="member">findNextBinAbove</ref>(proj_short.get(),<sp/>bin,<sp/>threshold_start);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>bin+=3;<sp/></highlight><highlight class="comment">//<sp/>In<sp/>order<sp/>to<sp/>avoid<sp/>random<sp/>threshold<sp/>crossing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end_peak1<sp/><sp/><sp/>=<sp/><ref refid="lib_root_8hpp_1a913983a1e3590c8dddff74dd195dba8a" kindref="member">findNextBinBelow</ref>(proj_short.get(),<sp/>bin,<sp/>threshold_stop);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>bin+=3;<sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Second<sp/>peak<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>begin_peak2<sp/>=<sp/><ref refid="lib_root_8hpp_1a5d8e6d047f89cfacdca99f300e08a8a8" kindref="member">findNextBinAbove</ref>(proj_short.get(),<sp/>bin,<sp/>threshold_start);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(begin_peak2<sp/>&gt;<sp/>proj_short-&gt;GetNbinsX())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>bin+=3;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end_peak2<sp/><sp/><sp/>=<sp/><ref refid="lib_root_8hpp_1a913983a1e3590c8dddff74dd195dba8a" kindref="member">findNextBinBelow</ref>(proj_short.get(),<sp/>bin,<sp/>threshold_stop);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>bin+=3;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>take<sp/>the<sp/>peak<sp/>if<sp/>the<sp/>end<sp/>of<sp/>the<sp/>last<sp/>peak<sp/>is<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>spectra<sp/>(i.e.<sp/>not<sp/>found)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end_peak2+1<sp/>&gt;<sp/>proj_short-&gt;GetNbinsX())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fitting<sp/>peaks<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>long_gate_ADC<sp/>=<sp/>bidim-&gt;GetYaxis()-&gt;GetBinCenter(it*(nb_bins+0.5));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>low_edge_peak1<sp/>=<sp/>proj_short-&gt;GetBinCenter(begin_peak1*0.7);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>high_edge_peak1<sp/>=<sp/>proj_short-&gt;GetBinCenter(end_peak1*1.3);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>low_edge_peak2<sp/>=<sp/>proj_short-&gt;GetBinCenter(begin_peak2*0.7);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>high_edge_peak2<sp/>=<sp/>proj_short-&gt;GetBinCenter(end_peak2*1.3);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_peak_fitter" kindref="compound">PeakFitter</ref><sp/>peak1(proj_short.get(),<sp/>low_edge_peak1,<sp/>high_edge_peak1);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_peak_fitter" kindref="compound">PeakFitter</ref><sp/>peak2(proj_short.get(),<sp/>low_edge_peak2,<sp/>high_edge_peak2);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>peak1_ADC<sp/>=<sp/>peak1.<ref refid="class_peak_fitter_1ae83803972d52d79a55f2af7b1dde0ae5" kindref="member">getMean</ref>();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>peak2_ADC<sp/>=<sp/>peak2.<ref refid="class_peak_fitter_1ae83803972d52d79a55f2af7b1dde0ae5" kindref="member">getMean</ref>();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>the<sp/>two<sp/>peaks<sp/>are<sp/>far<sp/>away<sp/>enough<sp/>from<sp/>one<sp/>another</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(peak1_ADC&gt;peak2_ADC*0.5)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>the<sp/>current<sp/>points<sp/>are<sp/>not<sp/>too<sp/>far<sp/>away<sp/>from<sp/>values<sp/>interpolated<sp/>from<sp/>previous<sp/>points<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mean_slope_peak1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mean_slope_peak2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bin_it<sp/>=<sp/>0;<sp/>bin_it&lt;bins.size();<sp/>bin_it++)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mean_slope_peak1<sp/>+=<sp/>xbin_max_peak1[bin_it]/bins[bin_it];</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mean_slope_peak2<sp/>+=<sp/>xbin_max_peak2[bin_it]/bins[bin_it];</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>mean_slope_peak1<sp/>/=<sp/>bins.size();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>mean_slope_peak2<sp/>/=<sp/>bins.size();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>interpolated_peak1<sp/>=<sp/>long_gate_ADC*mean_slope_peak1;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>interpolated_peak2<sp/>=<sp/>long_gate_ADC*mean_slope_peak2;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(peak1_ADC<sp/>&gt;<sp/>interpolated_peak1*1.1<sp/>||<sp/>peak1_ADC<sp/>&lt;<sp/>interpolated_peak1*0.9)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(peak2_ADC<sp/>&gt;<sp/>interpolated_peak2*1.1<sp/>||<sp/>peak2_ADC<sp/>&lt;<sp/>interpolated_peak2*0.9)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>informations<sp/>:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>bins.push_back(long_gate_ADC);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>xbin_max_peak1.push_back(peak1_ADC);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>xbin_max_peak2.push_back(peak2_ADC);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Plot<sp/>the<sp/>position<sp/>of<sp/>each<sp/>peak<sp/>as<sp/>a<sp/>function<sp/>of<sp/>the<sp/>mean<sp/>bin<sp/>of<sp/>the<sp/>projection<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fit<sp/>the<sp/>curve,<sp/>extract<sp/>the<sp/>slope<sp/>and<sp/>calculate<sp/>the<sp/>angle<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_points<sp/>=<sp/>bins.size();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>TF1*<sp/>linear1(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TF1(</highlight><highlight class="stringliteral">&quot;_lin&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;pol1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>TF1*<sp/>linear2(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TF1(</highlight><highlight class="stringliteral">&quot;_lin&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;pol1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>graph_peak1(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TGraph(nb_points,<sp/>bins.data(),<sp/>xbin_max_peak1.data()));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>graph_peak1-&gt;SetName(<ref refid="string__functions_8hpp_1ae058d07fbc702d0b0f79e3650e7804a2" kindref="member">concatenate</ref>(</highlight><highlight class="stringliteral">&quot;First_peak_&quot;</highlight><highlight class="normal">,<sp/>bidim-&gt;GetName()).c_str());</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>graph_peak1-&gt;SetTitle(<ref refid="string__functions_8hpp_1ae058d07fbc702d0b0f79e3650e7804a2" kindref="member">concatenate</ref>(</highlight><highlight class="stringliteral">&quot;First<sp/>peak<sp/>&quot;</highlight><highlight class="normal">,<sp/>bidim-&gt;GetName()).c_str());</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>graph_peak1-&gt;Fit(linear1,<sp/></highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first_slope<sp/>=<sp/>linear1-&gt;GetParameter(1);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>first_angle<sp/>=<sp/>atan(first_slope);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>graph_peak2(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TGraph(nb_points,<sp/>bins.data(),<sp/>xbin_max_peak2.data()));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>graph_peak2-&gt;SetName(<ref refid="string__functions_8hpp_1ae058d07fbc702d0b0f79e3650e7804a2" kindref="member">concatenate</ref>(</highlight><highlight class="stringliteral">&quot;Second_peak_&quot;</highlight><highlight class="normal">,<sp/>bidim-&gt;GetName()).c_str());</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>graph_peak2-&gt;SetTitle(<ref refid="string__functions_8hpp_1ae058d07fbc702d0b0f79e3650e7804a2" kindref="member">concatenate</ref>(</highlight><highlight class="stringliteral">&quot;Second<sp/>peak<sp/>&quot;</highlight><highlight class="normal">,<sp/>bidim-&gt;GetName()).c_str());</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>graph_peak2-&gt;Fit(linear2,<sp/></highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>second_slope<sp/>=<sp/>linear2-&gt;GetParameter(1);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>second_angle<sp/>=<sp/>atan(second_slope);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>and<sp/>plot<sp/>the<sp/>residues<sp/>of<sp/>the<sp/>fit<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/>residues_peak1;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/>residues_peak2;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bin_it<sp/>=<sp/>0;<sp/>bin_it&lt;bins.size();<sp/>bin_it++)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>residues_peak1.push_back(xbin_max_peak1[bin_it<sp/>]-first_slope*bins[bin_it]);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>residues_peak2.push_back(xbin_max_peak2[bin_it<sp/>]-second_slope*bins[bin_it]);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pauseCo();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>graph_residues_peak1(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TGraph(nb_points,<sp/>bins.data(),<sp/>residues_peak1.data()));</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>graph_residues_peak1-&gt;SetName(<ref refid="string__functions_8hpp_1ae058d07fbc702d0b0f79e3650e7804a2" kindref="member">concatenate</ref>(</highlight><highlight class="stringliteral">&quot;First_peak_&quot;</highlight><highlight class="normal">,<sp/>bidim-&gt;GetName(),<sp/></highlight><highlight class="stringliteral">&quot;_residues&quot;</highlight><highlight class="normal">).c_str());</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>graph_residues_peak1-&gt;SetTitle(<ref refid="string__functions_8hpp_1ae058d07fbc702d0b0f79e3650e7804a2" kindref="member">concatenate</ref>(</highlight><highlight class="stringliteral">&quot;First<sp/>peak<sp/>&quot;</highlight><highlight class="normal">,<sp/>bidim-&gt;GetName(),<sp/></highlight><highlight class="stringliteral">&quot;<sp/>residues&quot;</highlight><highlight class="normal">).c_str());</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>graph_residues_peak2(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TGraph(nb_points,<sp/>bins.data(),<sp/>residues_peak2.data()));</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>graph_residues_peak2-&gt;SetName(<ref refid="string__functions_8hpp_1ae058d07fbc702d0b0f79e3650e7804a2" kindref="member">concatenate</ref>(</highlight><highlight class="stringliteral">&quot;Second_peak_&quot;</highlight><highlight class="normal">,<sp/>bidim-&gt;GetName(),<sp/></highlight><highlight class="stringliteral">&quot;_residues&quot;</highlight><highlight class="normal">).c_str());</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>graph_residues_peak2-&gt;SetTitle(<ref refid="string__functions_8hpp_1ae058d07fbc702d0b0f79e3650e7804a2" kindref="member">concatenate</ref>(</highlight><highlight class="stringliteral">&quot;Second<sp/>peak<sp/>&quot;</highlight><highlight class="normal">,<sp/>bidim-&gt;GetName(),<sp/></highlight><highlight class="stringliteral">&quot;<sp/>residues&quot;</highlight><highlight class="normal">).c_str());</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(write_graphs)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="comment">//<sp/>Write<sp/>the<sp/>graphs<sp/>in<sp/>a<sp/>root<sp/>file<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>file<sp/>=<sp/>TFile::Open(outfilename.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;update&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>-&gt;<sp/>cd();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>graph_peak1-&gt;Write();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>graph_peak2-&gt;Write();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>graph_residues_peak1-&gt;Write();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>graph_residues_peak2-&gt;Write();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;Write();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>file-&gt;Close();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{first_angle,<sp/>second_angle};</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="class_paris_1a4605af4582a21a229000502ab0cbf827" refkind="member"><highlight class="normal">std::pair&lt;double,<sp/>double&gt;<sp/><ref refid="class_paris_1a4605af4582a21a229000502ab0cbf827" kindref="member">Paris::findAnglesDeg</ref>(TH2F*<sp/>bidim,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_bins,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>write_graphs)</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ret<sp/>(<ref refid="class_paris_1ad83b7a82190285f4c69fb5eeb30c5db6" kindref="member">findAngles</ref>(bidim,<sp/>nb_bins,<sp/>write_graphs));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>ret.first<sp/>*=57.295718;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>ret.second*=57.295718;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="class_paris_1a66745a02a04a8733eba514f319b1cc5e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_paris_1a66745a02a04a8733eba514f319b1cc5e" kindref="member">Paris::calculateBidimAngles</ref>(std::string<sp/>filename,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>outfilename,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>write_graphs)</highlight></codeline>
<codeline lineno="284"><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>file(TFile::Open(filename.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;READ&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>file<sp/>-&gt;<sp/>cd();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>names(get_names_of&lt;TH2F&gt;(file));</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>TH1D*&gt;<sp/>projs;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><ref refid="class_paris_bidim_angles" kindref="compound">ParisBidimAngles</ref><sp/>angles;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_file" kindref="compound">File</ref>(</highlight><highlight class="stringliteral">&quot;angles_paris_bidim.root&quot;</highlight><highlight class="normal">).exists())<sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;rm<sp/>angles_paris_bidim.root&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;rm<sp/>angles_paris_bidim.root&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>avancement<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><ref refid="class_co_progress_bar" kindref="compound">CoProgressBar</ref><sp/>prog(&amp;avancement,<sp/>names.size());</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>name<sp/>:<sp/>names)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bidim<sp/>=<sp/>file-&gt;Get&lt;TH2F&gt;(name.c_str());</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_bins<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>temp<sp/>(<ref refid="class_paris_1ad83b7a82190285f4c69fb5eeb30c5db6" kindref="member">Paris::findAngles</ref>(bidim,<sp/>nb_bins,<sp/>write_graphs));</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>detector_name<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string__functions_8hpp_1a9b6b51fed28f705d129f02193ce89b3c" kindref="member">remove</ref>(detector_name,<sp/></highlight><highlight class="stringliteral">&quot;_bidim&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>angles.<ref refid="class_paris_bidim_angles_1afd9e6c297a0cc74001a6180f6b49d253" kindref="member">set</ref>(detector_name,<sp/>temp.first,<sp/>temp.second);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>++avancement;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>prog.<ref refid="class_co_progress_bar_1a79b92711e75250b41c39aeeca73a1621" kindref="member">show</ref>();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>file-&gt;Close();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;angles_paris_bidim.root<sp/>written&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>angles.<ref refid="class_paris_bidim_angles_1a0ca1c561f33bc79fc16b630ef4db9144" kindref="member">write</ref>(outfilename);</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="class_paris_1a21f73f502db25f43f31426c4ea88f419" refkind="member"><highlight class="normal">TH2F*<sp/><ref refid="class_paris_1a21f73f502db25f43f31426c4ea88f419" kindref="member">Paris::rotate</ref>(TH2F*<sp/>bidim,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angleLaBr,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angleNaI,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>quickNdirty)</highlight></codeline>
<codeline lineno="319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bidim)<sp/><ref refid="lib_co_8hpp_1a6df2dcd4b1f61c75dc292942bc5ca74d" kindref="member">throw_error</ref>(</highlight><highlight class="stringliteral">&quot;in<sp/>Paris::rotate(TH2F*<sp/>bidim,<sp/>double<sp/>angleLaBr,<sp/>double<sp/>angleNaI)<sp/>:<sp/>bidim<sp/>is<sp/>nullptr&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(quickNdirty)<sp/><ref refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;pas<sp/>beau<sp/>...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><ref refid="_hit_8hpp_1a04b75a9e083a1c44419fdb7c3f87c361" kindref="member">ADC</ref><sp/>short_shift<sp/>=<sp/>2000;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><ref refid="_hit_8hpp_1a04b75a9e083a1c44419fdb7c3f87c361" kindref="member">ADC</ref><sp/>long_shift<sp/>=<sp/>2000;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rotated_bidim<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">TH2F*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bidim-&gt;Clone(<ref refid="string__functions_8hpp_1ae058d07fbc702d0b0f79e3650e7804a2" kindref="member">concatenate</ref>(bidim-&gt;GetName(),<sp/></highlight><highlight class="stringliteral">&quot;_rotated&quot;</highlight><highlight class="normal">).c_str())));</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>rotated_bidim-&gt;Reset();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_binsx<sp/>=<sp/>bidim-&gt;GetNbinsX();</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_binsy<sp/>=<sp/>bidim-&gt;GetNbinsY();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>pisur2<sp/>=<sp/>1.570798;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_sin<sp/>=<sp/>sin(-angleLaBr);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_cos<sp/>=<sp/>cos(-angleLaBr);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>double<sp/>_sin<sp/>=<sp/>sin(angleNaI-angleLaBr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>double<sp/>_cos<sp/>=<sp/>cos(angleNaI-angleLaBr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_sinLaBr<sp/>=<sp/>sin(-pisur2+angleLaBr);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_cosLaBr<sp/>=<sp/>cos(-pisur2+angleLaBr);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin_x<sp/>=<sp/>0;<sp/>bin_x&lt;nb_binsx;<sp/>bin_x++)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin_y<sp/>=<sp/>0;<sp/>bin_y&lt;nb_binsy;<sp/>bin_y++)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>nb_hits<sp/><sp/><sp/>=<sp/>bidim-&gt;GetBinContent(bin_x,<sp/>bin_y);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>old_long<sp/><sp/>=<sp/>bidim-&gt;GetYaxis()-&gt;GetBinCenter(bin_y);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>old_short<sp/>=<sp/>bidim-&gt;GetXaxis()-&gt;GetBinCenter(bin_x);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reject<sp/>LaBr3<sp/>events<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>auto<sp/>const<sp/>&amp;<sp/>pid<sp/>=<sp/>(old_long-old_short)/old_long;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(pid&lt;0.25)<sp/>continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>old_long_range<sp/><sp/>=<sp/>bidim-&gt;GetYaxis()-&gt;GetBinCenter(bin_y+1)-old_long<sp/>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>old_short_range<sp/>=<sp/>bidim-&gt;GetXaxis()-&gt;GetBinCenter(bin_x+1)-old_short;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hit_i<sp/>=<sp/>0;<sp/>hit_i&lt;nb_hits;<sp/>hit_i++)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rand_short<sp/>=<sp/>old_short<sp/>+<sp/>double_random_uniform(0,<sp/>old_short_range);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rand_long<sp/><sp/>=<sp/>old_long<sp/><sp/>+<sp/>double_random_uniform(0,<sp/>old_long_range);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>the<sp/>NaI+both<sp/>toward<sp/>the<sp/>long<sp/>gate<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>new_short<sp/>=<sp/>rand_short<sp/>*<sp/>_cos<sp/>-<sp/>rand_long<sp/>*<sp/>_sin;<sp/></highlight><highlight class="comment">//<sp/>*<sp/>(abs(_tan)/_tan);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>new_long<sp/><sp/>=<sp/>rand_short<sp/>*<sp/>_sin<sp/>+<sp/>rand_long<sp/>*<sp/>_cos;<sp/></highlight><highlight class="comment">//<sp/>*<sp/>(abs(_tan)/_tan);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>the<sp/>LaBr3<sp/>towards<sp/>the<sp/>short<sp/>gate<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>auto<sp/>const<sp/>&amp;<sp/>new_short_LaBr<sp/>=<sp/>rand_short<sp/>*<sp/>_cosLaBr<sp/>-<sp/>rand_long<sp/>*<sp/>_sinLaBr;<sp/>//<sp/>*<sp/>(abs(_tan)/_tan);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>new_long_LaBr<sp/><sp/>=<sp/>rand_short<sp/>*<sp/>_sinLaBr<sp/>+<sp/>rand_long<sp/>*<sp/>_cosLaBr;<sp/></highlight><highlight class="comment">//<sp/>*<sp/>(abs(_tan)/_tan);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_long_LaBr&lt;3000)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotated_bidim-&gt;Fill(new_short+short_shift,<sp/>new_long+long_shift);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rotated_bidim;</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//PARIS_HPP</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="lib/Analyse/Paris.hpp"/>
  </compounddef>
</doxygen>
