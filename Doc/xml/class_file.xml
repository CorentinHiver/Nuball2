<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_file" kind="class" language="C++" prot="public">
    <compoundname>File</compoundname>
    <includes refid="files__functions_8hpp" local="no">files_functions.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_file_1a29cc003db307b52a1f392e1e5bf0fb07" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool File::check_verif</definition>
        <argsstring></argsstring>
        <name>check_verif</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="872" column="8" bodyfile="lib/files_functions.hpp" bodystart="872" bodyend="-1"/>
        <referencedby refid="class_file_1a6b15fde4d8bb49099cdf7f27c4f36fae" compoundref="files__functions_8hpp" startline="842" endline="854">check</referencedby>
        <referencedby refid="class_file_1a51dd588f64b9d77346a7865de4f2c055" compoundref="files__functions_8hpp" startline="781" endline="784">checkMode</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_file_1a36d935fccef5b644b0de60bdbc6e67b2" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string File::m_file</definition>
        <argsstring></argsstring>
        <name>m_file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="873" column="15" bodyfile="lib/files_functions.hpp" bodystart="873" bodyend="-1"/>
        <referencedby refid="class_file_1adcc058679f1c4e1b9561aa7043720ade" compoundref="files__functions_8hpp" startline="786" endline="786">c_str</referencedby>
        <referencedby refid="class_file_1a6b15fde4d8bb49099cdf7f27c4f36fae" compoundref="files__functions_8hpp" startline="842" endline="854">check</referencedby>
        <referencedby refid="class_file_1a53118ce36851cb1c6845a82f915fd8ba" compoundref="files__functions_8hpp" startline="834" endline="834">exists</referencedby>
        <referencedby refid="class_file_1a256122f7b2c78754d7c5588872428f41" compoundref="files__functions_8hpp" startline="812" endline="812">get</referencedby>
        <referencedby refid="class_file_1a481cb3fd778f11cd216ca1e68308a2a9" compoundref="files__functions_8hpp" startline="810" endline="810">operator std::string</referencedby>
        <referencedby refid="class_file_1a9bab12c1d1eb8eb255f33d01d86d225c" compoundref="files__functions_8hpp" startline="801" endline="808">operator=</referencedby>
        <referencedby refid="class_file_1a35d0d3ff742417be72ad0dd6bb83fb6a" compoundref="files__functions_8hpp" startline="837" endline="837">operator==</referencedby>
        <referencedby refid="class_file_1a43e3d087ec47881811167f3a20a99cfa" compoundref="files__functions_8hpp" startline="835" endline="835">size</referencedby>
        <referencedby refid="class_file_1a899e6a7c528ab2824c7c584c4ee63073" compoundref="files__functions_8hpp" startline="811" endline="811">string</referencedby>
        <referencedby refid="class_file_1a8f6a2ccec2d48112847c89541d13bc10" compoundref="files__functions_8hpp" startline="841" endline="841">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_file_1ab8b4c4873ffdc891898f877ba31b1b49" prot="private" static="no" mutable="no">
        <type><ref refid="class_filename" kindref="compound">Filename</ref></type>
        <definition>Filename File::m_filename</definition>
        <argsstring></argsstring>
        <name>m_filename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="875" column="12" bodyfile="lib/files_functions.hpp" bodystart="875" bodyend="-1"/>
        <referencedby refid="class_file_1ac76f2f11d5ae2a206735e4c9172677e2" compoundref="files__functions_8hpp" startline="827" endline="827">extension</referencedby>
        <referencedby refid="class_file_1a0860c6b771d42f74d5c3fdc3fc820332" compoundref="files__functions_8hpp" startline="819" endline="819">filename</referencedby>
        <referencedby refid="class_file_1ac3774fc193239a9a83f6974e9a79f9c4" compoundref="files__functions_8hpp" startline="856" endline="869">fill</referencedby>
        <referencedby refid="class_file_1ab08b6536403bbea4df3adf514fa92768" compoundref="files__functions_8hpp" startline="816" endline="816">name</referencedby>
        <referencedby refid="class_file_1a9bab12c1d1eb8eb255f33d01d86d225c" compoundref="files__functions_8hpp" startline="801" endline="808">operator=</referencedby>
        <referencedby refid="class_file_1af4dee1c79bf496d505633211177c6ce3" compoundref="files__functions_8hpp" startline="829" endline="829">setExtension</referencedby>
        <referencedby refid="class_file_1a4162125761930208891770416c498828" compoundref="files__functions_8hpp" startline="825" endline="825">shortName</referencedby>
        <referencedby refid="class_file_1a8f6a2ccec2d48112847c89541d13bc10" compoundref="files__functions_8hpp" startline="841" endline="841">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_file_1ac3482b203711cc5895748f7e941f96a0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool File::m_ok</definition>
        <argsstring></argsstring>
        <name>m_ok</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="871" column="8" bodyfile="lib/files_functions.hpp" bodystart="871" bodyend="-1"/>
        <referencedby refid="class_file_1a6b15fde4d8bb49099cdf7f27c4f36fae" compoundref="files__functions_8hpp" startline="842" endline="854">check</referencedby>
        <referencedby refid="class_file_1a620683073a1fa00cb389e5afec3d0469" compoundref="files__functions_8hpp" startline="833" endline="833">ok</referencedby>
        <referencedby refid="class_file_1ad621a4180e78d12a5d464d93b603d4a2" compoundref="files__functions_8hpp" startline="832" endline="832">operator bool</referencedby>
        <referencedby refid="class_file_1a9bab12c1d1eb8eb255f33d01d86d225c" compoundref="files__functions_8hpp" startline="801" endline="808">operator=</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_file_1a972c4ffa95d0c37406a5e1189f420064" prot="private" static="no" mutable="no">
        <type><ref refid="class_path" kindref="compound">Path</ref></type>
        <definition>Path File::m_path</definition>
        <argsstring></argsstring>
        <name>m_path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="874" column="8" bodyfile="lib/files_functions.hpp" bodystart="874" bodyend="-1"/>
        <referencedby refid="class_file_1a6b15fde4d8bb49099cdf7f27c4f36fae" compoundref="files__functions_8hpp" startline="842" endline="854">check</referencedby>
        <referencedby refid="class_file_1ac3774fc193239a9a83f6974e9a79f9c4" compoundref="files__functions_8hpp" startline="856" endline="869">fill</referencedby>
        <referencedby refid="class_file_1ae66434e6a61f2a76b09c3480bcff4fba" compoundref="files__functions_8hpp" startline="815" endline="815">folder</referencedby>
        <referencedby refid="class_file_1aec78af028103207cb2ce88c0120dd4f6" compoundref="files__functions_8hpp" startline="830" endline="830">makePath</referencedby>
        <referencedby refid="class_file_1a9bab12c1d1eb8eb255f33d01d86d225c" compoundref="files__functions_8hpp" startline="801" endline="808">operator=</referencedby>
        <referencedby refid="class_file_1ad1ad54af9ff70a91691eed58bdf7e76f" compoundref="files__functions_8hpp" startline="814" endline="814">path</referencedby>
        <referencedby refid="class_file_1a8f6a2ccec2d48112847c89541d13bc10" compoundref="files__functions_8hpp" startline="841" endline="841">update</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_file_1adcc058679f1c4e1b9561aa7043720ade" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto File::c_str</definition>
        <argsstring>()</argsstring>
        <name>c_str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="786" column="8" bodyfile="lib/files_functions.hpp" bodystart="786" bodyend="786"/>
        <references refid="class_file_1a36d935fccef5b644b0de60bdbc6e67b2" compoundref="files__functions_8hpp" startline="873">m_file</references>
        <referencedby refid="class_faster2_root_1a2ba93a4814723b6103dc25a701f3dc89" compoundref="_faster2_root_8hpp" startline="309" endline="403">Faster2Root::convertFile</referencedby>
        <referencedby refid="class_evolution_peaks_1a5645dd6726d0af38e8a4d849da6a8d18" compoundref="_evolution_peaks_8hpp" startline="102" endline="345">EvolutionPeaks::run</referencedby>
        <referencedby refid="class_cobalt_calorimeter_1a526f29997f55b17d33be2b87b30c7a76" compoundref="_cobalt_calorimeter_8hpp" startline="704" endline="811">CobaltCalorimeter::write</referencedby>
        <referencedby refid="class_faster2_histo_1a8821f5ded43a6f91593962adbe4761b9" compoundref="_faster2_histo_8hpp" startline="272" endline="298">Faster2Histo::write</referencedby>
        <referencedby refid="class_clover_spectra_1aea0814fac7c993ad4813804415f3ffab" compoundref="_clover_spectra_8hpp" startline="79" endline="95">CloverSpectra::writeHisto</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_file_1aed1b1495883032cf6ad4f57e83564057" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto File::c_str</definition>
        <argsstring>() const</argsstring>
        <name>c_str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="787" column="8" bodyfile="lib/files_functions.hpp" bodystart="787" bodyend="787"/>
        <references refid="class_file_1a36d935fccef5b644b0de60bdbc6e67b2" compoundref="files__functions_8hpp" startline="873">m_file</references>
      </memberdef>
      <memberdef kind="function" id="class_file_1a51dd588f64b9d77346a7865de4f2c055" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void File::checkMode</definition>
        <argsstring>(std::string const &amp;mode)</argsstring>
        <name>checkMode</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="781" column="8" bodyfile="lib/files_functions.hpp" bodystart="781" bodyend="784"/>
        <references refid="class_file_1a29cc003db307b52a1f392e1e5bf0fb07" compoundref="files__functions_8hpp" startline="872">check_verif</references>
        <referencedby refid="class_file_1a5237343fec40bceaa8cf7fc7c4026426" compoundref="files__functions_8hpp" startline="758" endline="763">File</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_file_1a53118ce36851cb1c6845a82f915fd8ba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool File::exists</definition>
        <argsstring>() const</argsstring>
        <name>exists</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="834" column="8" bodyfile="lib/files_functions.hpp" bodystart="834" bodyend="834"/>
        <references refid="files__functions_8hpp_1a6d165da5cc41e5429a9c03c6a6c68d96" compoundref="files__functions_8hpp" startline="69" endline="90">file_exists</references>
        <references refid="class_file_1a36d935fccef5b644b0de60bdbc6e67b2" compoundref="files__functions_8hpp" startline="873">m_file</references>
        <referencedby refid="class_faster2_root_1a2ba93a4814723b6103dc25a701f3dc89" compoundref="_faster2_root_8hpp" startline="309" endline="403">Faster2Root::convertFile</referencedby>
        <referencedby refid="class_paris_bidim_angles_1a904829a187c50059dda2d439ef0d6db1" compoundref="_paris_bidim_angles_8hpp" startline="98" endline="122">ParisBidimAngles::load</referencedby>
        <referencedby refid="class_evolution_peaks_1a5645dd6726d0af38e8a4d849da6a8d18" compoundref="_evolution_peaks_8hpp" startline="102" endline="345">EvolutionPeaks::run</referencedby>
        <referencedby refid="class_paris_bidim_angles_1a0ca1c561f33bc79fc16b630ef4db9144" compoundref="_paris_bidim_angles_8hpp" startline="77" endline="88">ParisBidimAngles::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_file_1ac76f2f11d5ae2a206735e4c9172677e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string const  &amp;</type>
        <definition>std::string const&amp; File::extension</definition>
        <argsstring>() const</argsstring>
        <name>extension</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="827" column="22" bodyfile="lib/files_functions.hpp" bodystart="827" bodyend="827"/>
        <references refid="class_filename_1a9a5a8b12e6ffac9d53e54e6410b59c02" compoundref="files__functions_8hpp" startline="695" endline="695">Filename::extension</references>
        <references refid="class_file_1ab8b4c4873ffdc891898f877ba31b1b49" compoundref="files__functions_8hpp" startline="875">m_filename</references>
      </memberdef>
      <memberdef kind="function" id="class_file_1ae039af5807fc385f41b60644725d15d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>File::File</definition>
        <argsstring>()</argsstring>
        <name>File</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="750" column="3" bodyfile="lib/files_functions.hpp" bodystart="750" bodyend="750"/>
      </memberdef>
      <memberdef kind="function" id="class_file_1a5304e25b296fbc6a26a56fc9f4bdbfdd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>File::File</definition>
        <argsstring>(const char *file, std::string const &amp;mode=&quot;&quot;)</argsstring>
        <name>File</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>mode</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="765" column="3" bodyfile="lib/files_functions.hpp" bodystart="765" bodyend="770"/>
        <references refid="class_file_1a6b15fde4d8bb49099cdf7f27c4f36fae" compoundref="files__functions_8hpp" startline="842" endline="854">check</references>
        <references refid="class_file_1a51dd588f64b9d77346a7865de4f2c055" compoundref="files__functions_8hpp" startline="781" endline="784">checkMode</references>
        <references refid="class_file_1ac3774fc193239a9a83f6974e9a79f9c4" compoundref="files__functions_8hpp" startline="856" endline="869">fill</references>
      </memberdef>
      <memberdef kind="function" id="class_file_1a12a42d9d804defcc8550af0b38a1cf54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>File::File</definition>
        <argsstring>(File const &amp;file)</argsstring>
        <name>File</name>
        <param>
          <type><ref refid="class_file" kindref="compound">File</ref> const &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="751" column="3" bodyfile="lib/files_functions.hpp" bodystart="751" bodyend="756"/>
      </memberdef>
      <memberdef kind="function" id="class_file_1a84e9ad3641a6cff0d371dddb2ea0f73e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>File::File</definition>
        <argsstring>(Path const &amp;path, Filename const &amp;filename, std::string const &amp;mode=&quot;&quot;)</argsstring>
        <name>File</name>
        <param>
          <type><ref refid="class_path" kindref="compound">Path</ref> const &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="class_filename" kindref="compound">Filename</ref> const &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>mode</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="772" column="3" bodyfile="lib/files_functions.hpp" bodystart="772" bodyend="779"/>
        <references refid="class_file_1a6b15fde4d8bb49099cdf7f27c4f36fae" compoundref="files__functions_8hpp" startline="842" endline="854">check</references>
        <references refid="class_file_1a51dd588f64b9d77346a7865de4f2c055" compoundref="files__functions_8hpp" startline="781" endline="784">checkMode</references>
        <references refid="class_file_1a8f6a2ccec2d48112847c89541d13bc10" compoundref="files__functions_8hpp" startline="841" endline="841">update</references>
      </memberdef>
      <memberdef kind="function" id="class_file_1a5237343fec40bceaa8cf7fc7c4026426" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>File::File</definition>
        <argsstring>(std::string const &amp;file, std::string const &amp;mode=&quot;&quot;)</argsstring>
        <name>File</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>mode</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="758" column="3" bodyfile="lib/files_functions.hpp" bodystart="758" bodyend="763"/>
        <references refid="class_file_1a6b15fde4d8bb49099cdf7f27c4f36fae" compoundref="files__functions_8hpp" startline="842" endline="854">check</references>
        <references refid="class_file_1a51dd588f64b9d77346a7865de4f2c055" compoundref="files__functions_8hpp" startline="781" endline="784">checkMode</references>
        <references refid="class_file_1ac3774fc193239a9a83f6974e9a79f9c4" compoundref="files__functions_8hpp" startline="856" endline="869">fill</references>
      </memberdef>
      <memberdef kind="function" id="class_file_1a8b611e5ac24218c6cde441dce45315dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_filename" kindref="compound">Filename</ref> &amp;</type>
        <definition>Filename&amp; File::filename</definition>
        <argsstring>()</argsstring>
        <name>filename</name>
        <briefdescription>
<para><ref refid="class_filename" kindref="compound">Filename</ref> stands for the file name without the path but with the extension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="822" column="22" bodyfile="lib/files_functions.hpp" bodystart="822" bodyend="822"/>
        <references refid="class_file_1ab8b4c4873ffdc891898f877ba31b1b49" compoundref="files__functions_8hpp" startline="875">m_filename</references>
      </memberdef>
      <memberdef kind="function" id="class_file_1a0860c6b771d42f74d5c3fdc3fc820332" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_filename" kindref="compound">Filename</ref> const  &amp;</type>
        <definition>Filename const&amp; File::filename</definition>
        <argsstring>() const</argsstring>
        <name>filename</name>
        <briefdescription>
<para><ref refid="class_filename" kindref="compound">Filename</ref> stands for the file name without the path but with the extension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="819" column="22" bodyfile="lib/files_functions.hpp" bodystart="819" bodyend="819"/>
        <references refid="class_file_1ab8b4c4873ffdc891898f877ba31b1b49" compoundref="files__functions_8hpp" startline="875">m_filename</references>
      </memberdef>
      <memberdef kind="function" id="class_file_1ae66434e6a61f2a76b09c3480bcff4fba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_folder" kindref="compound">Folder</ref> const  &amp;</type>
        <definition>Folder const&amp; File::folder</definition>
        <argsstring>() const</argsstring>
        <name>folder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="815" column="17" bodyfile="lib/files_functions.hpp" bodystart="815" bodyend="815"/>
        <references refid="class_path_1a859f02f9224a864b541b15e8db325409" compoundref="files__functions_8hpp" startline="536" endline="536">Path::folder</references>
        <references refid="class_file_1a972c4ffa95d0c37406a5e1189f420064" compoundref="files__functions_8hpp" startline="874">m_path</references>
      </memberdef>
      <memberdef kind="function" id="class_file_1a256122f7b2c78754d7c5588872428f41" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string const  &amp;</type>
        <definition>std::string const&amp; File::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="812" column="22" bodyfile="lib/files_functions.hpp" bodystart="812" bodyend="812"/>
        <references refid="class_file_1a36d935fccef5b644b0de60bdbc6e67b2" compoundref="files__functions_8hpp" startline="873">m_file</references>
        <referencedby refid="files__functions_8hpp_1a159a1e5f9109960956ef172f5b862cf8" compoundref="files__functions_8hpp" startline="879" endline="883">operator&lt;&lt;</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_file_1aec78af028103207cb2ce88c0120dd4f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void File::makePath</definition>
        <argsstring>()</argsstring>
        <name>makePath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="830" column="8" bodyfile="lib/files_functions.hpp" bodystart="830" bodyend="830"/>
        <references refid="class_file_1a972c4ffa95d0c37406a5e1189f420064" compoundref="files__functions_8hpp" startline="874">m_path</references>
        <references refid="class_path_1a1f94b3b7d475723ead35e54c87078ed7" compoundref="files__functions_8hpp" startline="513" endline="513">Path::make</references>
        <referencedby refid="class_paris_bidim_angles_1a0ca1c561f33bc79fc16b630ef4db9144" compoundref="_paris_bidim_angles_8hpp" startline="77" endline="88">ParisBidimAngles::write</referencedby>
        <referencedby refid="class_faster2_histo_1a8821f5ded43a6f91593962adbe4761b9" compoundref="_faster2_histo_8hpp" startline="272" endline="298">Faster2Histo::write</referencedby>
        <referencedby refid="class_calibration_1a62f73bc45da4c1cd949b4ce32b630916" compoundref="_calibration_8hpp" startline="380" endline="390">Calibration::write</referencedby>
        <referencedby refid="class_calibrator_1a5168dd14ccf0ad9629fa56185986d218" compoundref="_calibrator_8hpp" startline="933" endline="942">Calibrator::writeData</referencedby>
        <referencedby refid="class_calibrator_1ace95da8167dc1202e913a75c553313b3" compoundref="_calibrator_8hpp" startline="915" endline="931">Calibrator::writePosPeaks</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_file_1ab08b6536403bbea4df3adf514fa92768" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_filename" kindref="compound">Filename</ref> const  &amp;</type>
        <definition>Filename const&amp; File::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="816" column="22" bodyfile="lib/files_functions.hpp" bodystart="816" bodyend="816"/>
        <references refid="class_file_1ab8b4c4873ffdc891898f877ba31b1b49" compoundref="files__functions_8hpp" startline="875">m_filename</references>
      </memberdef>
      <memberdef kind="function" id="class_file_1a620683073a1fa00cb389e5afec3d0469" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool const  &amp;</type>
        <definition>bool const&amp; File::ok</definition>
        <argsstring>()</argsstring>
        <name>ok</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="833" column="15" bodyfile="lib/files_functions.hpp" bodystart="833" bodyend="833"/>
        <references refid="class_file_1ac3482b203711cc5895748f7e941f96a0" compoundref="files__functions_8hpp" startline="871">m_ok</references>
      </memberdef>
      <memberdef kind="function" id="class_file_1ad621a4180e78d12a5d464d93b603d4a2" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>File::operator bool</definition>
        <argsstring>() const &amp;</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="832" column="3" bodyfile="lib/files_functions.hpp" bodystart="832" bodyend="832"/>
        <references refid="class_file_1ac3482b203711cc5895748f7e941f96a0" compoundref="files__functions_8hpp" startline="871">m_ok</references>
      </memberdef>
      <memberdef kind="function" id="class_file_1a481cb3fd778f11cd216ca1e68308a2a9" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>File::operator std::string</definition>
        <argsstring>() const &amp;</argsstring>
        <name>operator std::string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="810" column="3" bodyfile="lib/files_functions.hpp" bodystart="810" bodyend="810"/>
        <references refid="class_file_1a36d935fccef5b644b0de60bdbc6e67b2" compoundref="files__functions_8hpp" startline="873">m_file</references>
      </memberdef>
      <memberdef kind="function" id="class_file_1a731756d54a6a41c2fde1630f1b97cb78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_file" kindref="compound">File</ref> &amp;</type>
        <definition>File&amp; File::operator=</definition>
        <argsstring>(const char *file)</argsstring>
        <name>operator=</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="795" column="9" bodyfile="lib/files_functions.hpp" bodystart="795" bodyend="800"/>
        <references refid="class_file_1a6b15fde4d8bb49099cdf7f27c4f36fae" compoundref="files__functions_8hpp" startline="842" endline="854">check</references>
        <references refid="class_file_1ac3774fc193239a9a83f6974e9a79f9c4" compoundref="files__functions_8hpp" startline="856" endline="869">fill</references>
      </memberdef>
      <memberdef kind="function" id="class_file_1a9bab12c1d1eb8eb255f33d01d86d225c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_file" kindref="compound">File</ref> &amp;</type>
        <definition>File&amp; File::operator=</definition>
        <argsstring>(File const &amp;file)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_file" kindref="compound">File</ref> const &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="801" column="9" bodyfile="lib/files_functions.hpp" bodystart="801" bodyend="808"/>
        <references refid="class_file_1a36d935fccef5b644b0de60bdbc6e67b2" compoundref="files__functions_8hpp" startline="873">m_file</references>
        <references refid="class_file_1ab8b4c4873ffdc891898f877ba31b1b49" compoundref="files__functions_8hpp" startline="875">m_filename</references>
        <references refid="class_file_1ac3482b203711cc5895748f7e941f96a0" compoundref="files__functions_8hpp" startline="871">m_ok</references>
        <references refid="class_file_1a972c4ffa95d0c37406a5e1189f420064" compoundref="files__functions_8hpp" startline="874">m_path</references>
      </memberdef>
      <memberdef kind="function" id="class_file_1a900ed41b6c4fbcec93e4306e2d8b0c35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_file" kindref="compound">File</ref> &amp;</type>
        <definition>File&amp; File::operator=</definition>
        <argsstring>(std::string const &amp;file)</argsstring>
        <name>operator=</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="789" column="9" bodyfile="lib/files_functions.hpp" bodystart="789" bodyend="794"/>
        <references refid="class_file_1a6b15fde4d8bb49099cdf7f27c4f36fae" compoundref="files__functions_8hpp" startline="842" endline="854">check</references>
        <references refid="class_file_1ac3774fc193239a9a83f6974e9a79f9c4" compoundref="files__functions_8hpp" startline="856" endline="869">fill</references>
      </memberdef>
      <memberdef kind="function" id="class_file_1a35d0d3ff742417be72ad0dd6bb83fb6a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool File::operator==</definition>
        <argsstring>(File const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_file" kindref="compound">File</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="837" column="8" bodyfile="lib/files_functions.hpp" bodystart="837" bodyend="837"/>
        <references refid="class_file_1a36d935fccef5b644b0de60bdbc6e67b2" compoundref="files__functions_8hpp" startline="873">m_file</references>
      </memberdef>
      <memberdef kind="function" id="class_file_1ad1ad54af9ff70a91691eed58bdf7e76f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_path" kindref="compound">Path</ref> const  &amp;</type>
        <definition>Path const&amp; File::path</definition>
        <argsstring>() const</argsstring>
        <name>path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="814" column="15" bodyfile="lib/files_functions.hpp" bodystart="814" bodyend="814"/>
        <references refid="class_file_1a972c4ffa95d0c37406a5e1189f420064" compoundref="files__functions_8hpp" startline="874">m_path</references>
        <referencedby refid="class_faster2_histo_1a8821f5ded43a6f91593962adbe4761b9" compoundref="_faster2_histo_8hpp" startline="272" endline="298">Faster2Histo::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_file_1af4dee1c79bf496d505633211177c6ce3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void File::setExtension</definition>
        <argsstring>(std::string const &amp;new_extension)</argsstring>
        <name>setExtension</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>new_extension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="829" column="8" bodyfile="lib/files_functions.hpp" bodystart="829" bodyend="829"/>
        <references refid="class_file_1ab8b4c4873ffdc891898f877ba31b1b49" compoundref="files__functions_8hpp" startline="875">m_filename</references>
        <references refid="class_filename_1a2d925b1dc8e2afbd09e729be3f3603b2" compoundref="files__functions_8hpp" startline="697" endline="702">Filename::setExtension</references>
        <references refid="class_file_1a8f6a2ccec2d48112847c89541d13bc10" compoundref="files__functions_8hpp" startline="841" endline="841">update</references>
        <referencedby refid="class_paris_bidim_angles_1a904829a187c50059dda2d439ef0d6db1" compoundref="_paris_bidim_angles_8hpp" startline="98" endline="122">ParisBidimAngles::load</referencedby>
        <referencedby refid="class_cobalt_calorimeter_1a526f29997f55b17d33be2b87b30c7a76" compoundref="_cobalt_calorimeter_8hpp" startline="704" endline="811">CobaltCalorimeter::write</referencedby>
        <referencedby refid="class_paris_bidim_angles_1a0ca1c561f33bc79fc16b630ef4db9144" compoundref="_paris_bidim_angles_8hpp" startline="77" endline="88">ParisBidimAngles::write</referencedby>
        <referencedby refid="class_faster2_histo_1a8821f5ded43a6f91593962adbe4761b9" compoundref="_faster2_histo_8hpp" startline="272" endline="298">Faster2Histo::write</referencedby>
        <referencedby refid="class_calibration_1a62f73bc45da4c1cd949b4ce32b630916" compoundref="_calibration_8hpp" startline="380" endline="390">Calibration::write</referencedby>
        <referencedby refid="class_timeshifts_1ad19fdc64b6f8dd54e94665a7170a49a7" compoundref="_timeshifts_8hpp" startline="1026" endline="1045">Timeshifts::writeData</referencedby>
        <referencedby refid="class_calibrator_1a5168dd14ccf0ad9629fa56185986d218" compoundref="_calibrator_8hpp" startline="933" endline="942">Calibrator::writeData</referencedby>
        <referencedby refid="class_calibrator_1ace95da8167dc1202e913a75c553313b3" compoundref="_calibrator_8hpp" startline="915" endline="931">Calibrator::writePosPeaks</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_file_1a4162125761930208891770416c498828" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string const  &amp;</type>
        <definition>std::string const&amp; File::shortName</definition>
        <argsstring>() const</argsstring>
        <name>shortName</name>
        <briefdescription>
<para>Short name stands for the file name withpout the path nor the extension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="825" column="22" bodyfile="lib/files_functions.hpp" bodystart="825" bodyend="825"/>
        <references refid="class_file_1ab8b4c4873ffdc891898f877ba31b1b49" compoundref="files__functions_8hpp" startline="875">m_filename</references>
        <references refid="class_filename_1a16a859ce80a8efeabbf8b28add13c55f" compoundref="files__functions_8hpp" startline="693" endline="693">Filename::shortName</references>
        <referencedby refid="class_faster2_root_1a2ba93a4814723b6103dc25a701f3dc89" compoundref="_faster2_root_8hpp" startline="309" endline="403">Faster2Root::convertFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_file_1a43e3d087ec47881811167f3a20a99cfa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto File::size</definition>
        <argsstring>(std::string const &amp;unit=&quot;o&quot;) const</argsstring>
        <name>size</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
          <defval>&quot;o&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="835" column="8" bodyfile="lib/files_functions.hpp" bodystart="835" bodyend="835"/>
        <references refid="class_file_1a36d935fccef5b644b0de60bdbc6e67b2" compoundref="files__functions_8hpp" startline="873">m_file</references>
        <references refid="files__functions_8hpp_1a3a01792a9cfbdd1f2b358d878559a917" compoundref="files__functions_8hpp" startline="52" endline="59">size_file</references>
        <referencedby refid="class_faster2_histo_1a48d7d46929ffbd69ccc3a590c535d3b7" compoundref="_faster2_histo_8hpp" startline="201" endline="214">Faster2Histo::treatFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_file_1a899e6a7c528ab2824c7c584c4ee63073" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string const  &amp;</type>
        <definition>std::string const&amp; File::string</definition>
        <argsstring>() const</argsstring>
        <name>string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="811" column="22" bodyfile="lib/files_functions.hpp" bodystart="811" bodyend="811"/>
        <references refid="class_file_1a36d935fccef5b644b0de60bdbc6e67b2" compoundref="files__functions_8hpp" startline="873">m_file</references>
        <referencedby refid="class_m_t_faster_reader_1a8693e1143a0aea8096a527c7d9df9a63" compoundref="_m_t_faster_reader_8hpp" startline="131" endline="134">MTFasterReader::addFile</referencedby>
        <referencedby refid="class_faster2_histo_1a72f8004ae550c02db09791b810c0252d" compoundref="_faster2_histo_8hpp" startline="146" endline="187">Faster2Histo::load</referencedby>
        <referencedby refid="class_paris_bidim_angles_1a904829a187c50059dda2d439ef0d6db1" compoundref="_paris_bidim_angles_8hpp" startline="98" endline="122">ParisBidimAngles::load</referencedby>
        <referencedby refid="class_paris_bidim_angles_1a0ca1c561f33bc79fc16b630ef4db9144" compoundref="_paris_bidim_angles_8hpp" startline="77" endline="88">ParisBidimAngles::write</referencedby>
        <referencedby refid="class_calibration_1a62f73bc45da4c1cd949b4ce32b630916" compoundref="_calibration_8hpp" startline="380" endline="390">Calibration::write</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_file_1a6b15fde4d8bb49099cdf7f27c4f36fae" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void File::check</definition>
        <argsstring>()</argsstring>
        <name>check</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="842" column="8" bodyfile="lib/files_functions.hpp" bodystart="842" bodyend="854"/>
        <references refid="class_file_1a29cc003db307b52a1f392e1e5bf0fb07" compoundref="files__functions_8hpp" startline="872">check_verif</references>
        <references refid="class_path_1aecd02f464b364bc26631bcb65e44843b" compoundref="files__functions_8hpp" startline="511" endline="511">Path::exists</references>
        <references refid="files__functions_8hpp_1a6d165da5cc41e5429a9c03c6a6c68d96" compoundref="files__functions_8hpp" startline="69" endline="90">file_exists</references>
        <references refid="class_file_1a36d935fccef5b644b0de60bdbc6e67b2" compoundref="files__functions_8hpp" startline="873">m_file</references>
        <references refid="class_file_1ac3482b203711cc5895748f7e941f96a0" compoundref="files__functions_8hpp" startline="871">m_ok</references>
        <references refid="class_file_1a972c4ffa95d0c37406a5e1189f420064" compoundref="files__functions_8hpp" startline="874">m_path</references>
        <references refid="print_8hpp_1a388f572c62279f839ee138a9afbdeeb5" compoundref="print_8hpp" startline="44" endline="44">print</references>
        <referencedby refid="class_file_1a5237343fec40bceaa8cf7fc7c4026426" compoundref="files__functions_8hpp" startline="758" endline="763">File</referencedby>
        <referencedby refid="class_file_1a900ed41b6c4fbcec93e4306e2d8b0c35" compoundref="files__functions_8hpp" startline="789" endline="794">operator=</referencedby>
        <referencedby refid="class_file_1a8f6a2ccec2d48112847c89541d13bc10" compoundref="files__functions_8hpp" startline="841" endline="841">update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_file_1ac3774fc193239a9a83f6974e9a79f9c4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void File::fill</definition>
        <argsstring>(std::string const &amp;file)</argsstring>
        <name>fill</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="856" column="8" bodyfile="lib/files_functions.hpp" bodystart="856" bodyend="869"/>
        <references refid="files__functions_8hpp_1ab1e262f27aaad28944f29cd2bbde417f" compoundref="files__functions_8hpp" startline="27" endline="27">getPath</references>
        <references refid="files__functions_8hpp_1a0b4d810562e117c29ca0dda1855a02e3" compoundref="files__functions_8hpp" startline="67" endline="67">hasPath</references>
        <references refid="class_file_1ab8b4c4873ffdc891898f877ba31b1b49" compoundref="files__functions_8hpp" startline="875">m_filename</references>
        <references refid="class_file_1a972c4ffa95d0c37406a5e1189f420064" compoundref="files__functions_8hpp" startline="874">m_path</references>
        <references refid="class_path_1a0374de2afee27834da4adccf704d4190" compoundref="files__functions_8hpp" startline="576" endline="576">Path::pwd</references>
        <references refid="files__functions_8hpp_1ad3a78346393c83676348f6bad34b8ce2" compoundref="files__functions_8hpp" startline="28" endline="28">removePath</references>
        <references refid="class_file_1a8f6a2ccec2d48112847c89541d13bc10" compoundref="files__functions_8hpp" startline="841" endline="841">update</references>
        <referencedby refid="class_file_1a5237343fec40bceaa8cf7fc7c4026426" compoundref="files__functions_8hpp" startline="758" endline="763">File</referencedby>
        <referencedby refid="class_file_1a900ed41b6c4fbcec93e4306e2d8b0c35" compoundref="files__functions_8hpp" startline="789" endline="794">operator=</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_file_1a8f6a2ccec2d48112847c89541d13bc10" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void File::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/files_functions.hpp" line="841" column="8" bodyfile="lib/files_functions.hpp" bodystart="841" bodyend="841"/>
        <references refid="class_file_1a6b15fde4d8bb49099cdf7f27c4f36fae" compoundref="files__functions_8hpp" startline="842" endline="854">check</references>
        <references refid="class_file_1a36d935fccef5b644b0de60bdbc6e67b2" compoundref="files__functions_8hpp" startline="873">m_file</references>
        <references refid="class_file_1ab8b4c4873ffdc891898f877ba31b1b49" compoundref="files__functions_8hpp" startline="875">m_filename</references>
        <references refid="class_file_1a972c4ffa95d0c37406a5e1189f420064" compoundref="files__functions_8hpp" startline="874">m_path</references>
        <references refid="class_path_1aa2f2b14aafcc3fc3626c243fcc6574dc" compoundref="files__functions_8hpp" startline="527" endline="527">Path::string</references>
        <references refid="class_filename_1a46cfb960345a190b3971553c65f702b4" compoundref="files__functions_8hpp" startline="686" endline="686">Filename::string</references>
        <referencedby refid="class_file_1a84e9ad3641a6cff0d371dddb2ea0f73e" compoundref="files__functions_8hpp" startline="772" endline="779">File</referencedby>
        <referencedby refid="class_file_1ac3774fc193239a9a83f6974e9a79f9c4" compoundref="files__functions_8hpp" startline="856" endline="869">fill</referencedby>
        <referencedby refid="class_file_1af4dee1c79bf496d505633211177c6ce3" compoundref="files__functions_8hpp" startline="829" endline="829">setExtension</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>EXPERIMENTAL Composed of a <ref refid="class_path" kindref="compound">Path</ref> and a <ref refid="class_filename" kindref="compound">Filename</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>A <ref refid="class_file" kindref="compound">File</ref> object is composed of a <ref refid="class_path" kindref="compound">Path</ref> and a <ref refid="class_filename" kindref="compound">Filename</ref> object, which are composed of :<itemizedlist>
<listitem><para>A list of folder that forms the <ref refid="class_path" kindref="compound">Path</ref> to the file</para>
</listitem><listitem><para>A short name and an extension for the <ref refid="class_filename" kindref="compound">Filename</ref> <xrefsect id="todo_1_todo000011"><xreftitle>Todo</xreftitle><xrefdescription><para>rethink the checkMode logic ... </para>
</xrefdescription></xrefsect></para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>Path</label>
        <link refid="class_path"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_recursive_folders</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Filename</label>
        <link refid="class_filename"/>
      </node>
      <node id="4">
        <label>Folders</label>
        <link refid="class_folders"/>
      </node>
      <node id="1">
        <label>File</label>
        <link refid="class_file"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_filename</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_path</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="lib/files_functions.hpp" line="747" column="1" bodyfile="lib/files_functions.hpp" bodystart="748" bodyend="876"/>
    <listofallmembers>
      <member refid="class_file_1adcc058679f1c4e1b9561aa7043720ade" prot="public" virt="non-virtual"><scope>File</scope><name>c_str</name></member>
      <member refid="class_file_1aed1b1495883032cf6ad4f57e83564057" prot="public" virt="non-virtual"><scope>File</scope><name>c_str</name></member>
      <member refid="class_file_1a6b15fde4d8bb49099cdf7f27c4f36fae" prot="private" virt="non-virtual"><scope>File</scope><name>check</name></member>
      <member refid="class_file_1a29cc003db307b52a1f392e1e5bf0fb07" prot="private" virt="non-virtual"><scope>File</scope><name>check_verif</name></member>
      <member refid="class_file_1a51dd588f64b9d77346a7865de4f2c055" prot="public" virt="non-virtual"><scope>File</scope><name>checkMode</name></member>
      <member refid="class_file_1a53118ce36851cb1c6845a82f915fd8ba" prot="public" virt="non-virtual"><scope>File</scope><name>exists</name></member>
      <member refid="class_file_1ac76f2f11d5ae2a206735e4c9172677e2" prot="public" virt="non-virtual"><scope>File</scope><name>extension</name></member>
      <member refid="class_file_1ae039af5807fc385f41b60644725d15d0" prot="public" virt="non-virtual"><scope>File</scope><name>File</name></member>
      <member refid="class_file_1a12a42d9d804defcc8550af0b38a1cf54" prot="public" virt="non-virtual"><scope>File</scope><name>File</name></member>
      <member refid="class_file_1a5237343fec40bceaa8cf7fc7c4026426" prot="public" virt="non-virtual"><scope>File</scope><name>File</name></member>
      <member refid="class_file_1a5304e25b296fbc6a26a56fc9f4bdbfdd" prot="public" virt="non-virtual"><scope>File</scope><name>File</name></member>
      <member refid="class_file_1a84e9ad3641a6cff0d371dddb2ea0f73e" prot="public" virt="non-virtual"><scope>File</scope><name>File</name></member>
      <member refid="class_file_1a0860c6b771d42f74d5c3fdc3fc820332" prot="public" virt="non-virtual"><scope>File</scope><name>filename</name></member>
      <member refid="class_file_1a8b611e5ac24218c6cde441dce45315dd" prot="public" virt="non-virtual"><scope>File</scope><name>filename</name></member>
      <member refid="class_file_1ac3774fc193239a9a83f6974e9a79f9c4" prot="private" virt="non-virtual"><scope>File</scope><name>fill</name></member>
      <member refid="class_file_1ae66434e6a61f2a76b09c3480bcff4fba" prot="public" virt="non-virtual"><scope>File</scope><name>folder</name></member>
      <member refid="class_file_1a256122f7b2c78754d7c5588872428f41" prot="public" virt="non-virtual"><scope>File</scope><name>get</name></member>
      <member refid="class_file_1a36d935fccef5b644b0de60bdbc6e67b2" prot="private" virt="non-virtual"><scope>File</scope><name>m_file</name></member>
      <member refid="class_file_1ab8b4c4873ffdc891898f877ba31b1b49" prot="private" virt="non-virtual"><scope>File</scope><name>m_filename</name></member>
      <member refid="class_file_1ac3482b203711cc5895748f7e941f96a0" prot="private" virt="non-virtual"><scope>File</scope><name>m_ok</name></member>
      <member refid="class_file_1a972c4ffa95d0c37406a5e1189f420064" prot="private" virt="non-virtual"><scope>File</scope><name>m_path</name></member>
      <member refid="class_file_1aec78af028103207cb2ce88c0120dd4f6" prot="public" virt="non-virtual"><scope>File</scope><name>makePath</name></member>
      <member refid="class_file_1ab08b6536403bbea4df3adf514fa92768" prot="public" virt="non-virtual"><scope>File</scope><name>name</name></member>
      <member refid="class_file_1a620683073a1fa00cb389e5afec3d0469" prot="public" virt="non-virtual"><scope>File</scope><name>ok</name></member>
      <member refid="class_file_1ad621a4180e78d12a5d464d93b603d4a2" prot="public" virt="non-virtual"><scope>File</scope><name>operator bool</name></member>
      <member refid="class_file_1a481cb3fd778f11cd216ca1e68308a2a9" prot="public" virt="non-virtual"><scope>File</scope><name>operator std::string</name></member>
      <member refid="class_file_1a900ed41b6c4fbcec93e4306e2d8b0c35" prot="public" virt="non-virtual"><scope>File</scope><name>operator=</name></member>
      <member refid="class_file_1a731756d54a6a41c2fde1630f1b97cb78" prot="public" virt="non-virtual"><scope>File</scope><name>operator=</name></member>
      <member refid="class_file_1a9bab12c1d1eb8eb255f33d01d86d225c" prot="public" virt="non-virtual"><scope>File</scope><name>operator=</name></member>
      <member refid="class_file_1a35d0d3ff742417be72ad0dd6bb83fb6a" prot="public" virt="non-virtual"><scope>File</scope><name>operator==</name></member>
      <member refid="class_file_1ad1ad54af9ff70a91691eed58bdf7e76f" prot="public" virt="non-virtual"><scope>File</scope><name>path</name></member>
      <member refid="class_file_1af4dee1c79bf496d505633211177c6ce3" prot="public" virt="non-virtual"><scope>File</scope><name>setExtension</name></member>
      <member refid="class_file_1a4162125761930208891770416c498828" prot="public" virt="non-virtual"><scope>File</scope><name>shortName</name></member>
      <member refid="class_file_1a43e3d087ec47881811167f3a20a99cfa" prot="public" virt="non-virtual"><scope>File</scope><name>size</name></member>
      <member refid="class_file_1a899e6a7c528ab2824c7c584c4ee63073" prot="public" virt="non-virtual"><scope>File</scope><name>string</name></member>
      <member refid="class_file_1a8f6a2ccec2d48112847c89541d13bc10" prot="private" virt="non-virtual"><scope>File</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
