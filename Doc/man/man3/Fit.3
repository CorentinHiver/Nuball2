.TH "Fit" 3 "Tue Dec 5 2023" "Nuball2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Fit \- Allows one to manipulate the results of peaks\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Calibration\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBclear\fP ()"
.br
.ti -1c
.RI "bool \fBenough_counts\fP () const"
.br
.RI "Returns true if fit had enough counts\&. "
.ti -1c
.RI "bool const  & \fBexists\fP () const"
.br
.RI "Returns true if fit succeeded\&. "
.ti -1c
.RI "bool const  & \fBexists\fP (bool exist)"
.br
.RI "Set if the fit succeeded : "
.ti -1c
.RI "\fBFit\fP ()"
.br
.ti -1c
.RI "bool \fBfound_peaks\fP () const"
.br
.RI "Returns true if the fit found the peaks\&. "
.ti -1c
.RI "\fBLabel\fP const  & \fBlabel\fP () const"
.br
.ti -1c
.RI "bool \fBpeaks_found\fP (bool \fBfound\fP)"
.br
.RI "Set if there was not enough counts : "
.ti -1c
.RI "void \fBresize\fP (int \fBsize\fP)"
.br
.ti -1c
.RI "void \fBsetLabel\fP (\fBLabel\fP const &\fBlabel\fP)"
.br
.RI "Set the label\&. "
.ti -1c
.RI "\fBsize_t\fP \fBsize\fP () const"
.br
.RI "Returns the number of peaks used for calibration\&. "
.ti -1c
.RI "bool \fBtoo_few_counts\fP (bool few_counts)"
.br
.RI "Set if there was not enough counts : "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "double \fBchi2\fP = \-1\&.0"
.br
.ti -1c
.RI "std::vector< double > \fBcmeasures\fP"
.br
.ti -1c
.RI "std::vector< double > \fBex\fP"
.br
.ti -1c
.RI "std::vector< double > \fBey\fP"
.br
.ti -1c
.RI "double \fBintegral\fP = \-1\&.0"
.br
.ti -1c
.RI "double \fBkeVperADC\fP = 0\&.0"
.br
.ti -1c
.RI "std::vector< double > \fBmean\fP"
.br
.ti -1c
.RI "std::string \fBname\fP"
.br
.ti -1c
.RI "\fBuchar\fP \fBorder\fP = 0"
.br
.ti -1c
.RI "double \fBparameter0\fP = 0\&.0"
.br
.ti -1c
.RI "double \fBparameter1\fP = 1"
.br
.ti -1c
.RI "double \fBparameter2\fP = 0\&.0"
.br
.ti -1c
.RI "double \fBparameter3\fP = 0\&.0"
.br
.ti -1c
.RI "std::vector< double > \fBpeaks\fP"
.br
.ti -1c
.RI "double \fBscalefactor\fP = 0\&.0"
.br
.ti -1c
.RI "std::vector< double > \fBsigma\fP"
.br
.ti -1c
.RI "std::vector< double > \fBx\fP"
.br
.ti -1c
.RI "std::vector< double > \fBy\fP"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "bool \fBm_enough_counts\fP = false"
.br
.ti -1c
.RI "bool \fBm_exist\fP = false"
.br
.ti -1c
.RI "\fBLabel\fP \fBm_label\fP = 0"
.br
.ti -1c
.RI "bool \fBm_peaks_found\fP = false"
.br
.in -1c
.SH "Detailed Description"
.PP 
Allows one to manipulate the results of peaks\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Fit::Fit ()\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "void Fit::clear ()\fC [inline]\fP"

.SS "bool Fit::enough_counts () const\fC [inline]\fP"

.PP
Returns true if fit had enough counts\&. 
.SS "bool const& Fit::exists () const\fC [inline]\fP"

.PP
Returns true if fit succeeded\&. 
.SS "bool const& Fit::exists (bool exist)\fC [inline]\fP"

.PP
Set if the fit succeeded : 
.SS "bool Fit::found_peaks () const\fC [inline]\fP"

.PP
Returns true if the fit found the peaks\&. 
.SS "\fBLabel\fP const& Fit::label () const\fC [inline]\fP"

.SS "bool Fit::peaks_found (bool found)\fC [inline]\fP"

.PP
Set if there was not enough counts : 
.SS "void Fit::resize (int size)\fC [inline]\fP"

.SS "void Fit::setLabel (\fBLabel\fP const & label)\fC [inline]\fP"

.PP
Set the label\&. 
.SS "\fBsize_t\fP Fit::size () const\fC [inline]\fP"

.PP
Returns the number of peaks used for calibration\&. 
.SS "bool Fit::too_few_counts (bool few_counts)\fC [inline]\fP"

.PP
Set if there was not enough counts : 
.SH "Member Data Documentation"
.PP 
.SS "double Fit::chi2 = \-1\&.0"

.SS "std::vector<double> Fit::cmeasures"

.SS "std::vector<double> Fit::ex"

.SS "std::vector<double> Fit::ey"

.SS "double Fit::integral = \-1\&.0"

.SS "double Fit::keVperADC = 0\&.0"

.SS "bool Fit::m_enough_counts = false\fC [private]\fP"

.SS "bool Fit::m_exist = false\fC [private]\fP"

.SS "\fBLabel\fP Fit::m_label = 0\fC [private]\fP"

.SS "bool Fit::m_peaks_found = false\fC [private]\fP"

.SS "std::vector<double> Fit::mean"

.SS "std::string Fit::name"

.SS "\fBuchar\fP Fit::order = 0"

.SS "double Fit::parameter0 = 0\&.0"

.SS "double Fit::parameter1 = 1"

.SS "double Fit::parameter2 = 0\&.0"

.SS "double Fit::parameter3 = 0\&.0"

.SS "std::vector<double> Fit::peaks"

.SS "double Fit::scalefactor = 0\&.0"

.SS "std::vector<double> Fit::sigma"

.SS "std::vector<double> Fit::x"

.SS "std::vector<double> Fit::y"


.SH "Author"
.PP 
Generated automatically by Doxygen for Nuball2 from the source code\&.
