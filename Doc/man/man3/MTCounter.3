.TH "MTCounter" 3 "Mon Mar 25 2024" "Nuball2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MTCounter \- Atomic counter with convenient overloaded operators\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <MTCounter\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "template<typename T , typename check_T_is_number  = T_is_number<T>> void \fBadd\fP (T const &t)"
.br
.ti -1c
.RI "\fBsize_t\fP \fBdecr\fP ()"
.br
.ti -1c
.RI "\fBsize_t\fP \fBdecrement\fP ()"
.br
.ti -1c
.RI "\fBsize_t\fP \fBget\fP () const"
.br
.ti -1c
.RI "\fBsize_t\fP \fBincr\fP ()"
.br
.ti -1c
.RI "\fBsize_t\fP \fBincrement\fP ()"
.br
.ti -1c
.RI "\fBMTCounter\fP ()=default"
.br
.ti -1c
.RI "template<typename T , typename check_T_is_number  = T_is_number<T>> \fBMTCounter\fP (T const &value)"
.br
.ti -1c
.RI "\fBoperator size_t\fP () const"
.br
.ti -1c
.RI "\fBsize_t\fP \fBoperator++\fP ()"
.br
.ti -1c
.RI "\fBsize_t\fP \fBoperator++\fP (int)"
.br
.ti -1c
.RI "template<typename T , typename check_T_is_number  = T_is_number<T>> void \fBoperator+=\fP (T const &t)"
.br
.ti -1c
.RI "\fBsize_t\fP \fBoperator\-\-\fP ()"
.br
.ti -1c
.RI "\fBsize_t\fP \fBoperator\-\-\fP (int)"
.br
.ti -1c
.RI "template<typename T , typename check_T_is_number  = T_is_number<T>> void \fBoperator=\fP (T const &t)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "std::atomic< \fBulonglong\fP > \fBm_counter\fP {0}"
.br
.in -1c
.SH "Detailed Description"
.PP 
Atomic counter with convenient overloaded operators\&. 

All the setter overloaded operators are std::memory_order_relaxed All the setter methods are std::memory_order_seq_cst 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "MTCounter::MTCounter ()\fC [default]\fP"

.SS "template<typename T , typename check_T_is_number  = T_is_number<T>> MTCounter::MTCounter (T const & value)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<typename T , typename check_T_is_number  = T_is_number<T>> void MTCounter::add (T const & t)\fC [inline]\fP"

.SS "\fBsize_t\fP MTCounter::decr ()\fC [inline]\fP"

.SS "\fBsize_t\fP MTCounter::decrement ()\fC [inline]\fP"

.SS "\fBsize_t\fP MTCounter::get () const\fC [inline]\fP"

.SS "\fBsize_t\fP MTCounter::incr ()\fC [inline]\fP"

.SS "\fBsize_t\fP MTCounter::increment ()\fC [inline]\fP"

.SS "MTCounter::operator \fBsize_t\fP () const\fC [inline]\fP"

.SS "\fBsize_t\fP MTCounter::operator++ ()\fC [inline]\fP"

.SS "\fBsize_t\fP MTCounter::operator++ (int)\fC [inline]\fP"

.SS "template<typename T , typename check_T_is_number  = T_is_number<T>> void MTCounter::operator+= (T const & t)\fC [inline]\fP"

.SS "\fBsize_t\fP MTCounter::operator\-\- ()\fC [inline]\fP"

.SS "\fBsize_t\fP MTCounter::operator\-\- (int)\fC [inline]\fP"

.SS "template<typename T , typename check_T_is_number  = T_is_number<T>> void MTCounter::operator= (T const & t)\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "std::atomic<\fBulonglong\fP> MTCounter::m_counter {0}\fC [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Nuball2 from the source code\&.
