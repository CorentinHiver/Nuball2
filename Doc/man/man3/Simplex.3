.TH "Simplex" 3 "Mon Mar 25 2024" "Nuball2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Simplex
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SpectraAlignator\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "auto \fBbegin\fP ()"
.br
.ti -1c
.RI "auto \fBbegin\fP () const"
.br
.ti -1c
.RI "auto \fBcentroid\fP ()"
.br
.ti -1c
.RI "auto \fBcentroid\fP (\fBsize_t\fP const &n_best)"
.br
.ti -1c
.RI "auto & \fBdim\fP ()"
.br
.ti -1c
.RI "auto const  & \fBdim\fP () const"
.br
.ti -1c
.RI "auto \fBend\fP ()"
.br
.ti -1c
.RI "auto \fBend\fP () const"
.br
.ti -1c
.RI "void \fBevaluate\fP (std::function< double(const \fBVertice\fP &)> objective_function)"
.br
.ti -1c
.RI "auto const  & \fBgetCentroid\fP () const"
.br
.ti -1c
.RI "\fBSimplex\fP & \fBoperator=\fP (\fBSimplex\fP &&other)"
.br
.ti -1c
.RI "\fBSimplex\fP & \fBoperator=\fP (\fBSimplex\fP const &other)"
.br
.ti -1c
.RI "\fBSimplex\fP & \fBoperator=\fP (\fBVertices\fP const &vertices)"
.br
.ti -1c
.RI "auto & \fBoperator[]\fP (int const &i)"
.br
.ti -1c
.RI "auto const  & \fBoperator[]\fP (int const &i) const"
.br
.ti -1c
.RI "void \fBsetVertice\fP (int const &bin, \fBVertice\fP &&vertice)"
.br
.ti -1c
.RI "void \fBsetVertice\fP (int const &bin, \fBVertice\fP const &vertice)"
.br
.ti -1c
.RI "\fBSimplex\fP (\fBSimplex\fP &&other)"
.br
.ti -1c
.RI "\fBSimplex\fP (\fBSimplex\fP const &other)"
.br
.ti -1c
.RI "\fBSimplex\fP (\fBsize_t\fP const &\fBdim\fP)"
.br
.ti -1c
.RI "\fBSimplex\fP (\fBVertice\fP const &vertice)"
.br
.RI "Construct a simplex based on a vertice\&. "
.ti -1c
.RI "\fBSimplex\fP (\fBVertices\fP const &vertices)"
.br
.ti -1c
.RI "auto & \fBsize\fP ()"
.br
.ti -1c
.RI "auto const  & \fBsize\fP () const"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "std::vector< double > \fBm_angles\fP"
.br
.ti -1c
.RI "\fBVertice\fP \fBm_centroid\fP = \fBVertice\fP(\fBm_dim\fP)"
.br
.ti -1c
.RI "\fBsize_t\fP \fBm_dim\fP = 0"
.br
.ti -1c
.RI "\fBsize_t\fP \fBm_size\fP = 0"
.br
.ti -1c
.RI "\fBVertices\fP \fBm_vertices\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Simplex::Simplex (\fBsize_t\fP const & dim)\fC [inline]\fP"

.SS "Simplex::Simplex (\fBVertice\fP const & vertice)\fC [inline]\fP"

.PP
Construct a simplex based on a vertice\&. The simplex is built based on the dimension of the given vertex, which is then duplicated 
.SS "Simplex::Simplex (\fBVertices\fP const & vertices)\fC [inline]\fP"

.SS "Simplex::Simplex (\fBSimplex\fP const & other)\fC [inline]\fP"

.SS "Simplex::Simplex (\fBSimplex\fP && other)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "auto Simplex::begin ()\fC [inline]\fP"

.SS "auto Simplex::begin () const\fC [inline]\fP"

.SS "auto Simplex::centroid ()\fC [inline]\fP"

.SS "auto Simplex::centroid (\fBsize_t\fP const & n_best)\fC [inline]\fP"

.SS "auto& Simplex::dim ()\fC [inline]\fP"

.SS "auto const& Simplex::dim () const\fC [inline]\fP"

.SS "auto Simplex::end ()\fC [inline]\fP"

.SS "auto Simplex::end () const\fC [inline]\fP"

.SS "void Simplex::evaluate (std::function< double(const \fBVertice\fP &)> objective_function)\fC [inline]\fP"

.SS "auto const& Simplex::getCentroid () const\fC [inline]\fP"

.SS "\fBSimplex\fP& Simplex::operator= (\fBSimplex\fP && other)\fC [inline]\fP"

.SS "\fBSimplex\fP& Simplex::operator= (\fBSimplex\fP const & other)\fC [inline]\fP"

.SS "\fBSimplex\fP& Simplex::operator= (\fBVertices\fP const & vertices)\fC [inline]\fP"

.SS "auto& Simplex::operator[] (int const & i)\fC [inline]\fP"

.SS "auto const& Simplex::operator[] (int const & i) const\fC [inline]\fP"

.SS "void Simplex::setVertice (int const & bin, \fBVertice\fP && vertice)\fC [inline]\fP"

.SS "void Simplex::setVertice (int const & bin, \fBVertice\fP const & vertice)\fC [inline]\fP"

.SS "auto& Simplex::size ()\fC [inline]\fP"

.SS "auto const& Simplex::size () const\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "std::vector<double> Simplex::m_angles\fC [private]\fP"

.SS "\fBVertice\fP Simplex::m_centroid = \fBVertice\fP(\fBm_dim\fP)\fC [private]\fP"

.SS "\fBsize_t\fP Simplex::m_dim = 0\fC [private]\fP"

.SS "\fBsize_t\fP Simplex::m_size = 0\fC [private]\fP"

.SS "\fBVertices\fP Simplex::m_vertices\fC [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Nuball2 from the source code\&.
