.TH "lib/files_functions.hpp" 3 "Mon Mar 25 2024" "Nuball2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/files_functions.hpp
.SH SYNOPSIS
.br
.PP
\fC#include 'print\&.hpp'\fP
.br
\fC#include 'vector_functions\&.hpp'\fP
.br
\fC#include 'string_functions\&.hpp'\fP
.br
\fC#include <algorithm>\fP
.br
\fC#include <dirent\&.h>\fP
.br
\fC#include <fstream>\fP
.br
\fC#include <glob\&.h>\fP
.br
\fC#include <iostream>\fP
.br
\fC#include <filesystem>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBCoDataFrame< Index, T >\fP"
.br
.ti -1c
.RI "class \fBFile\fP"
.br
.RI "EXPERIMENTAL Composed of a \fBPath\fP and a \fBFilename\fP\&. "
.ti -1c
.RI "class \fBFilename\fP"
.br
.RI "EXPERIMENTAL Contains the short name and the extension of a given file, without any knowledge of its path\&. "
.ti -1c
.RI "class \fBFolder\fP"
.br
.RI "EXPERIMENTAL Object used to hold a folder's name\&. "
.ti -1c
.RI "class \fBFolders\fP"
.br
.RI "EXPERIMENTAL Object used to hold a list of folders\&. "
.ti -1c
.RI "class \fBPath\fP"
.br
.RI "EXPERIMENTAL Object used to hold the complete path of a giver folder\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBcheck_new_file\fP (std::string &folderName, std::string &lastFile)"
.br
.ti -1c
.RI "void \fBcreate_folder_if_none\fP (std::string const &folderName)"
.br
.ti -1c
.RI "std::string \fBextension\fP (std::string const &string)"
.br
.ti -1c
.RI "bool \fBfile_exists\fP (std::string fileName)"
.br
.ti -1c
.RI "bool \fBfile_is_empty\fP (std::ifstream &file)"
.br
.ti -1c
.RI "std::vector< std::string > \fBfindFilesWildcard\fP (std::string const &expression)"
.br
.ti -1c
.RI "void \fBfindFilesWildcard\fP (std::string const &expression, std::vector< std::string > &vec)"
.br
.ti -1c
.RI "bool \fBfolder_exists\fP (std::string folderName)"
.br
.ti -1c
.RI "bool \fBfolder_exists\fP (std::string folderName, bool const &verbose)"
.br
.ti -1c
.RI "std::string \fBget_filename_at\fP (std::string &folderName, int pos)"
.br
.ti -1c
.RI "std::string \fBgetExtension\fP (std::string const &string)"
.br
.ti -1c
.RI "std::string \fBgetPath\fP (std::string const &string)"
.br
.ti -1c
.RI "void \fBgo_to_beginning\fP (std::ifstream &file)"
.br
.ti -1c
.RI "bool \fBhasPath\fP (std::string const &file)"
.br
.ti -1c
.RI "std::vector< std::string > \fBlist_file_names_in_folder\fP (std::string const &foldername='\&./', std::vector< std::string > const &extensions={'*'}, bool const &reorder=true)"
.br
.ti -1c
.RI "std::vector< std::string > \fBlist_files_in_folder\fP (std::string const &foldername='\&./', std::vector< std::string > const &extensions={'*'}, bool const &reorder=true)"
.br
.ti -1c
.RI "std::vector< std::string > \fBlistFileReader\fP (std::string const &filename)"
.br
.ti -1c
.RI "int \fBnb_files_in_folder\fP (std::string &folderName)"
.br
.ti -1c
.RI "\fBFolder\fP \fBoperator+\fP (const char *string, \fBFolder\fP const &folder)"
.br
.ti -1c
.RI "std::string \fBoperator+\fP (\fBPath\fP const &path, \fBFilename\fP const &filename)"
.br
.ti -1c
.RI "\fBFolder\fP \fBoperator+\fP (std::string const &string, \fBFolder\fP const &folder)"
.br
.ti -1c
.RI "std::ostream & \fBoperator<<\fP (std::ostream &cout, \fBFile\fP const &file)"
.br
.ti -1c
.RI "std::ostream & \fBoperator<<\fP (std::ostream &cout, \fBFolder\fP const &folder)"
.br
.ti -1c
.RI "std::ostream & \fBoperator<<\fP (std::ostream &cout, \fBFolders\fP const &folders)"
.br
.ti -1c
.RI "std::ostream & \fBoperator<<\fP (std::ostream &cout, \fBPath\fP const &p)"
.br
.ti -1c
.RI "std::ostream & \fBoperator<<\fP (std::ostream &os, \fBFilename\fP const &filename)"
.br
.ti -1c
.RI "template<class N , class D > std::string \fBprocent\fP (N const &n, D const &d)"
.br
.ti -1c
.RI "std::string & \fBpush_back_if_none\fP (std::string &string, char const &character)"
.br
.ti -1c
.RI "std::string \fBremoveExtension\fP (std::string const &string)"
.br
.ti -1c
.RI "std::string \fBremovePath\fP (std::string const &string)"
.br
.ti -1c
.RI "std::string \fBrmPathAndExt\fP (std::string const &string)"
.br
.ti -1c
.RI "float \fBsize_file\fP (std::ifstream &file, std::string const &unit='o')"
.br
.ti -1c
.RI "float \fBsize_file\fP (std::string filename, std::string const &unit='o')"
.br
.ti -1c
.RI "float \fBsize_file_conversion\fP (float const &size, std::string const &unit_i, std::string const &unit_o)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "std::map< std::string, float > \fBsize_file_unit\fP"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int check_new_file (std::string & folderName, std::string & lastFile)"

.SS "void create_folder_if_none (std::string const & folderName)"

.SS "std::string extension (std::string const & string)"

.SS "bool file_exists (std::string fileName)"

.SS "bool file_is_empty (std::ifstream & file)"

.SS "std::vector<std::string> findFilesWildcard (std::string const & expression)"

.SS "void findFilesWildcard (std::string const & expression, std::vector< std::string > & vec)"

.SS "bool folder_exists (std::string folderName)"

.SS "bool folder_exists (std::string folderName, bool const & verbose)"

.SS "std::string get_filename_at (std::string & folderName, int pos)"

.SS "std::string getExtension (std::string const & string)"

.SS "std::string getPath (std::string const & string)"

.SS "void go_to_beginning (std::ifstream & file)"

.SS "bool hasPath (std::string const & file)"

.SS "std::vector<std::string> list_file_names_in_folder (std::string const & foldername = \fC'\&./'\fP, std::vector< std::string > const & extensions = \fC{'*'}\fP, bool const & reorder = \fCtrue\fP)"

.SS "std::vector<std::string> list_files_in_folder (std::string const & foldername = \fC'\&./'\fP, std::vector< std::string > const & extensions = \fC{'*'}\fP, bool const & reorder = \fCtrue\fP)"

.SS "std::vector<std::string> listFileReader (std::string const & filename)"

.SS "int nb_files_in_folder (std::string & folderName)"

.SS "\fBFolder\fP operator+ (const char * string, \fBFolder\fP const & folder)"

.SS "std::string operator+ (\fBPath\fP const & path, \fBFilename\fP const & filename)"

.SS "\fBFolder\fP operator+ (std::string const & string, \fBFolder\fP const & folder)"

.SS "std::ostream& operator<< (std::ostream & cout, \fBFile\fP const & file)"

.SS "std::ostream& operator<< (std::ostream & cout, \fBFolder\fP const & folder)"

.SS "std::ostream& operator<< (std::ostream & cout, \fBFolders\fP const & folders)"

.SS "std::ostream& operator<< (std::ostream & cout, \fBPath\fP const & p)"

.SS "std::ostream& operator<< (std::ostream & os, \fBFilename\fP const & filename)"

.SS "template<class N , class D > std::string procent (N const & n, D const & d)"

.SS "std::string& push_back_if_none (std::string & string, char const & character)"

.SS "std::string removeExtension (std::string const & string)"

.SS "std::string removePath (std::string const & string)"

.SS "std::string rmPathAndExt (std::string const & string)"

.SS "float size_file (std::ifstream & file, std::string const & unit = \fC'o'\fP)"

.SS "float size_file (std::string filename, std::string const & unit = \fC'o'\fP)"

.SS "float size_file_conversion (float const & size, std::string const & unit_i, std::string const & unit_o)"

.SH "Variable Documentation"
.PP 
.SS "std::map<std::string, float> size_file_unit"
\fBInitial value:\fP
.PP
.nf
=
{
  {"o",  1\&.},
  {"ko", 1024\&.},
  {"Mo", 1048576\&.},
  {"Go", 1073741824\&.},
  {"B",  1\&.},
  {"kB", 1024\&.},
  {"MB", 1048576\&.},
  {"GB", 1073741824\&.}
}
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for Nuball2 from the source code\&.
