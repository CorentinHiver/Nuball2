.TH "lib/Classes/Hit.hpp" 3 "Mon Mar 25 2024" "Nuball2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/Classes/Hit.hpp
.SH SYNOPSIS
.br
.PP
\fC#include '\&.\&./libRoot\&.hpp'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBHit\fP"
.br
.RI "\fBHit\fP class ///\&. "
.ti -1c
.RI "class \fBIOptions\fP"
.br
.RI "IO parameters ///\&. "
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "using \fBADC\fP = int"
.br
.ti -1c
.RI "using \fBADC_vec\fP = std::vector< \fBADC\fP >"
.br
.ti -1c
.RI "using \fBEnergy_vec\fP = std::vector< \fBNRJ\fP >"
.br
.ti -1c
.RI "using \fBLabel\fP = \fBushort\fP"
.br
.RI "Data types ///\&. "
.ti -1c
.RI "using \fBLabel_vec\fP = std::vector< \fBLabel\fP >"
.br
.RI "Data vectors ///\&. "
.ti -1c
.RI "using \fBNRJ\fP = float"
.br
.ti -1c
.RI "using \fBPileup\fP = bool"
.br
.ti -1c
.RI "using \fBPileup_vec\fP = std::vector< \fBPileup\fP >"
.br
.ti -1c
.RI "using \fBTime\fP = Long64_t"
.br
.ti -1c
.RI "using \fBTime_ns\fP = float"
.br
.ti -1c
.RI "using \fBTime_ns_vec\fP = std::vector< \fBTime_ns\fP >"
.br
.ti -1c
.RI "using \fBTime_vec\fP = std::vector< \fBTime\fP >"
.br
.ti -1c
.RI "using \fBTimestamp\fP = ULong64_t"
.br
.ti -1c
.RI "using \fBTriggerHit\fP = std::function< bool(const \fBHit\fP &)>"
.br
.RI "Trigger definition ///\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename T , typename  = typename std::enable_if<std::is_arithmetic<T>::value>::type> \fBADC\fP \fBADC_cast\fP (T const &t)"
.br
.RI "Casts a number into unsigned ADC\&. "
.ti -1c
.RI "template<typename T , typename  = typename std::enable_if<std::is_arithmetic<T>::value>::type> \fBLabel\fP \fBLabel_cast\fP (T const &t)"
.br
.RI "Data casts ///\&. "
.ti -1c
.RI "template<typename T , typename  = typename std::enable_if<std::is_arithmetic<T>::value>::type> \fBNRJ\fP \fBNRJ_cast\fP (T const &t)"
.br
.RI "Casts a number into unsigned NRJ\&. "
.ti -1c
.RI "std::ostream & \fBoperator<<\fP (std::ostream &cout, \fBHit\fP const &hit)"
.br
.ti -1c
.RI "template<typename T , typename  = typename std::enable_if<std::is_arithmetic<T>::value>::type> \fBTime\fP \fBTime_cast\fP (T const &t)"
.br
.RI "Casts a number into unsigned Time\&. "
.ti -1c
.RI "template<typename T , typename  = typename std::enable_if<std::is_arithmetic<T>::value>::type> \fBTime_ns\fP \fBTime_ns_cast\fP (T const &t)"
.br
.RI "Casts a number into unsigned Time_ns\&. "
.ti -1c
.RI "template<typename T , typename  = typename std::enable_if<std::is_arithmetic<T>::value>::type> \fBTimestamp\fP \fBTimestamp_cast\fP (T const &t)"
.br
.RI "Casts a number into unsigned Timestamp\&. "
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "using \fBADC\fP =  int"

.SS "using \fBADC_vec\fP =  std::vector<\fBADC\fP >"

.SS "using \fBEnergy_vec\fP =  std::vector<\fBNRJ\fP >"

.SS "using \fBLabel\fP =  \fBushort\fP"

.PP
Data types ///\&. 
.SS "using \fBLabel_vec\fP =  std::vector<\fBLabel\fP >"

.PP
Data vectors ///\&. 
.SS "using \fBNRJ\fP =  float"

.SS "using \fBPileup\fP =  bool"

.SS "using \fBPileup_vec\fP =  std::vector<\fBPileup\fP >"

.SS "using \fBTime\fP =  Long64_t"

.SS "using \fBTime_ns\fP =  float"

.SS "using \fBTime_ns_vec\fP =  std::vector<\fBTime_ns\fP>"

.SS "using \fBTime_vec\fP =  std::vector<\fBTime\fP >"

.SS "using \fBTimestamp\fP =  ULong64_t"

.SS "using \fBTriggerHit\fP =  std::function<bool(const \fBHit\fP&)>"

.PP
Trigger definition ///\&. 
.SH "Function Documentation"
.PP 
.SS "template<typename T , typename  = typename std::enable_if<std::is_arithmetic<T>::value>::type> \fBADC\fP ADC_cast (T const & t)\fC [inline]\fP"

.PP
Casts a number into unsigned ADC\&. 
.SS "template<typename T , typename  = typename std::enable_if<std::is_arithmetic<T>::value>::type> \fBLabel\fP Label_cast (T const & t)\fC [inline]\fP"

.PP
Data casts ///\&. Casts a number into unsigned Label 
.SS "template<typename T , typename  = typename std::enable_if<std::is_arithmetic<T>::value>::type> \fBNRJ\fP NRJ_cast (T const & t)\fC [inline]\fP"

.PP
Casts a number into unsigned NRJ\&. 
.SS "std::ostream& operator<< (std::ostream & cout, \fBHit\fP const & hit)"

.SS "template<typename T , typename  = typename std::enable_if<std::is_arithmetic<T>::value>::type> \fBTime\fP Time_cast (T const & t)\fC [inline]\fP"

.PP
Casts a number into unsigned Time\&. 
.SS "template<typename T , typename  = typename std::enable_if<std::is_arithmetic<T>::value>::type> \fBTime_ns\fP Time_ns_cast (T const & t)\fC [inline]\fP"

.PP
Casts a number into unsigned Time_ns\&. 
.SS "template<typename T , typename  = typename std::enable_if<std::is_arithmetic<T>::value>::type> \fBTimestamp\fP Timestamp_cast (T const & t)\fC [inline]\fP"

.PP
Casts a number into unsigned Timestamp\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for Nuball2 from the source code\&.
