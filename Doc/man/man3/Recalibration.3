.TH "Recalibration" 3 "Tue Dec 5 2023" "Nuball2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Recalibration
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SpectraAlignator\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "auto & \fBa0\fP ()"
.br
.ti -1c
.RI "auto const  & \fBa0\fP () const"
.br
.ti -1c
.RI "auto & \fBa0\fP (double const &a0)"
.br
.ti -1c
.RI "auto & \fBa1\fP ()"
.br
.ti -1c
.RI "auto const  & \fBa1\fP () const"
.br
.ti -1c
.RI "auto & \fBa1\fP (double const &a1)"
.br
.ti -1c
.RI "auto & \fBa2\fP ()"
.br
.ti -1c
.RI "auto const  & \fBa2\fP () const"
.br
.ti -1c
.RI "auto & \fBa2\fP (double const &a2)"
.br
.ti -1c
.RI "auto & \fBa3\fP ()"
.br
.ti -1c
.RI "auto const  & \fBa3\fP () const"
.br
.ti -1c
.RI "auto & \fBa3\fP (double const &a3)"
.br
.ti -1c
.RI "auto & \fBaSqrt\fP ()"
.br
.ti -1c
.RI "auto const  & \fBaSqrt\fP () const"
.br
.ti -1c
.RI "auto & \fBaSqrt\fP (double const &aSqrt)"
.br
.ti -1c
.RI "double \fBcalculate\fP (double const &x)"
.br
.ti -1c
.RI "double \fBcalculate\fP (double const &x) const"
.br
.ti -1c
.RI "auto & \fBgetParameter\fP (int const &i)"
.br
.ti -1c
.RI "auto const  & \fBgetParameter\fP (int const &i) const"
.br
.ti -1c
.RI "double \fBoperator()\fP (double const &x)"
.br
.ti -1c
.RI "double \fBoperator()\fP (double const &x) const"
.br
.ti -1c
.RI "auto & \fBoperator[]\fP (int const &i)"
.br
.ti -1c
.RI "auto const  & \fBoperator[]\fP (int const &i) const"
.br
.ti -1c
.RI "\fBRecalibration\fP (double const &_a0=0, double const &_a1=1, double const &_a2=0, double const &_a3=0, double const &_aSqrt=0)"
.br
.ti -1c
.RI "\fBRecalibration\fP (\fBRecalibration\fP const &other)"
.br
.ti -1c
.RI "auto & \fBsetParameter\fP (int const &i, double const &a)"
.br
.ti -1c
.RI "auto & \fBsetParameter\fP (\fBsize_t\fP const &i, double const &a)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "std::vector< double > \fBm_parameters\fP = std::vector<double>(5)"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Recalibration::Recalibration (double const & _a0 = \fC0\fP, double const & _a1 = \fC1\fP, double const & _a2 = \fC0\fP, double const & _a3 = \fC0\fP, double const & _aSqrt = \fC0\fP)\fC [inline]\fP"

.SS "Recalibration::Recalibration (\fBRecalibration\fP const & other)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "auto& Recalibration::a0 ()\fC [inline]\fP"

.SS "auto const& Recalibration::a0 () const\fC [inline]\fP"

.SS "auto& Recalibration::a0 (double const & a0)\fC [inline]\fP"

.SS "auto& Recalibration::a1 ()\fC [inline]\fP"

.SS "auto const& Recalibration::a1 () const\fC [inline]\fP"

.SS "auto& Recalibration::a1 (double const & a1)\fC [inline]\fP"

.SS "auto& Recalibration::a2 ()\fC [inline]\fP"

.SS "auto const& Recalibration::a2 () const\fC [inline]\fP"

.SS "auto& Recalibration::a2 (double const & a2)\fC [inline]\fP"

.SS "auto& Recalibration::a3 ()\fC [inline]\fP"

.SS "auto const& Recalibration::a3 () const\fC [inline]\fP"

.SS "auto& Recalibration::a3 (double const & a3)\fC [inline]\fP"

.SS "auto& Recalibration::aSqrt ()\fC [inline]\fP"

.SS "auto const& Recalibration::aSqrt () const\fC [inline]\fP"

.SS "auto& Recalibration::aSqrt (double const & aSqrt)\fC [inline]\fP"

.SS "double Recalibration::calculate (double const & x)\fC [inline]\fP"

.SS "double Recalibration::calculate (double const & x) const\fC [inline]\fP"

.SS "auto& Recalibration::getParameter (int const & i)\fC [inline]\fP"

.SS "auto const& Recalibration::getParameter (int const & i) const\fC [inline]\fP"

.SS "double Recalibration::operator() (double const & x)\fC [inline]\fP"

.SS "double Recalibration::operator() (double const & x) const\fC [inline]\fP"

.SS "auto& Recalibration::operator[] (int const & i)\fC [inline]\fP"

.SS "auto const& Recalibration::operator[] (int const & i) const\fC [inline]\fP"

.SS "auto& Recalibration::setParameter (int const & i, double const & a)\fC [inline]\fP"

.SS "auto& Recalibration::setParameter (\fBsize_t\fP const & i, double const & a)\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "std::vector<double> Recalibration::m_parameters = std::vector<double>(5)\fC [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Nuball2 from the source code\&.
