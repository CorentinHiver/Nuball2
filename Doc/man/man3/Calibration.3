.TH "Calibration" 3 "Mon Mar 25 2024" "Nuball2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Calibration \- A convenient class for handling coefficient calibration up to 3rd order\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Calibration\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "float \fBapply\fP (float const &nrj, \fBLabel\fP const &label) const noexcept"
.br
.RI "Applies the calibration coefficients of the given label to the given energy\&. "
.ti -1c
.RI "auto const  & \fBbinom\fP (\fBLabel\fP const &label) const noexcept"
.br
.RI "Get the quadratic parameter\&. "
.ti -1c
.RI "auto & \fBbinom\fP (\fBLabel\fP const &label) noexcept"
.br
.RI "Get the quadratic parameter\&. "
.ti -1c
.RI "float \fBcalibrate\fP (double const &nrj, \fBLabel\fP const &label) const noexcept"
.br
.ti -1c
.RI "float \fBcalibrate\fP (float const &nrj, \fBLabel\fP const &label) const noexcept"
.br
.RI "Calibrate the nrj value using the parameters extracted from the calibration data\&. "
.ti -1c
.RI "void \fBcalibrate\fP (\fBHit\fP &hit) const noexcept"
.br
.RI "Calibrate a hit\&. "
.ti -1c
.RI "float \fBcalibrate\fP (int const &adc, \fBLabel\fP const &label) const noexcept"
.br
.ti -1c
.RI "float \fBcalibrate\fP (\fBsize_t\fP const &bin, \fBLabel\fP const &label) const noexcept"
.br
.ti -1c
.RI "\fBCalibration\fP ()=default"
.br
.ti -1c
.RI "\fBCalibration\fP (\fBCalibration\fP const &otherCalib)"
.br
.RI "Copy constructor\&. "
.ti -1c
.RI "\fBCalibration\fP (\fBFile\fP const &\fBfile\fP)"
.br
.RI "Constructor loading calibration from a file\&. "
.ti -1c
.RI "void \fBclear\fP () noexcept"
.br
.ti -1c
.RI "auto const  & \fBfile\fP () const noexcept"
.br
.RI "Gets the name of the file from while the data has been loaded\&. "
.ti -1c
.RI "auto & \fBfile\fP () noexcept"
.br
.RI "Gets the name of the file from while the data has been loaded\&. "
.ti -1c
.RI "std::vector< float > \fBget\fP (\fBLabel\fP const &_label) const noexcept"
.br
.ti -1c
.RI "auto const  & \fBgetBinom\fP () const noexcept"
.br
.RI "Get the quadratic parameter\&. "
.ti -1c
.RI "auto & \fBgetBinom\fP () noexcept"
.br
.RI "Get the quadratic parameter\&. "
.ti -1c
.RI "auto const  & \fBgetIntercept\fP () const noexcept"
.br
.RI "Get the intercept\&. "
.ti -1c
.RI "auto & \fBgetIntercept\fP () noexcept"
.br
.RI "Get the intercept\&. "
.ti -1c
.RI "auto const  & \fBgetOrder\fP () const noexcept"
.br
.RI "Get the order of the calibration (0 : linear, 1 : affine, 2 : quadratic, 3 : 3rd order) "
.ti -1c
.RI "auto & \fBgetOrder\fP () noexcept"
.br
.RI "Get the order of the calibration (0 : linear, 1 : affine, 2 : quadratic, 3 : 3rd order) "
.ti -1c
.RI "auto const  & \fBgetSlope\fP () const noexcept"
.br
.RI "Get the slope parameter\&. "
.ti -1c
.RI "auto & \fBgetSlope\fP () noexcept"
.br
.RI "Get the slope parameter\&. "
.ti -1c
.RI "auto const  & \fBgetTrinom\fP () const noexcept"
.br
.RI "Get the 3rd order parameter\&. "
.ti -1c
.RI "auto & \fBgetTrinom\fP () noexcept"
.br
.RI "Get the 3rd order parameter\&. "
.ti -1c
.RI "auto const  & \fBintercept\fP (\fBLabel\fP const &label) const noexcept"
.br
.RI "Get the intercept\&. "
.ti -1c
.RI "auto & \fBintercept\fP (\fBLabel\fP const &label) noexcept"
.br
.RI "Get the intercept\&. "
.ti -1c
.RI "bool const  & \fBisFilled\fP () const noexcept"
.br
.RI "Returns true if there is at least one coefficient loaded\&. "
.ti -1c
.RI "bool & \fBisFilled\fP () noexcept"
.br
.RI "Returns true if there is at least one coefficient loaded\&. "
.ti -1c
.RI "bool \fBload\fP (\fBFile\fP const &\fBfile\fP)"
.br
.RI "Loading calibration from a file\&. "
.ti -1c
.RI "auto const  & \fBnbDetectors\fP () const noexcept"
.br
.RI "Get the number of detectors with calibration coefficients\&. "
.ti -1c
.RI "auto & \fBnbDetectors\fP () noexcept"
.br
.RI "Get the number of detectors with calibration coefficients\&. "
.ti -1c
.RI "\fBoperator bool\fP () const &noexcept"
.br
.RI "Return true if the data has been loaded\&. "
.ti -1c
.RI "template<class\&.\&.\&. ARGS> auto \fBoperator()\fP (ARGS &&\&.\&.\&. args) const noexcept"
.br
.RI "Wrapper around the \fBCalibration::calibrate()\fP methods\&. "
.ti -1c
.RI "\fBCalibration\fP const  & \fBoperator=\fP (\fBCalibration\fP const &otherCalib)"
.br
.RI "Copy operator\&. "
.ti -1c
.RI "\fBCalibration\fP const  & \fBoperator=\fP (\fBFile\fP const &\fBfile\fP)"
.br
.RI "Copy operator twicked to load calibration from a file\&. "
.ti -1c
.RI "std::vector< float > \fBoperator[]\fP (\fBLabel\fP const &label) const noexcept"
.br
.RI "Returns a vector holding the coefficients\&. "
.ti -1c
.RI "auto const  & \fBorder\fP (\fBLabel\fP const &label) const noexcept"
.br
.RI "Get the order of the calibration (0 : linear, 1 : affine, 2 : quadratic, 3 : 3rd order) "
.ti -1c
.RI "auto & \fBorder\fP (\fBLabel\fP const &label) noexcept"
.br
.RI "Get the order of the calibration (0 : linear, 1 : affine, 2 : quadratic, 3 : 3rd order) "
.ti -1c
.RI "void \fBPrint\fP ()"
.br
.ti -1c
.RI "void \fBPrint\fP (\fBLabel\fP const &label)"
.br
.ti -1c
.RI "void \fBresize\fP (int const &\fBsize\fP)"
.br
.ti -1c
.RI "void \fBset\fP (\fBLabel\fP const &_label, float const &_intercept, float const &_slope, float const &_binom, float const &_trinom)"
.br
.ti -1c
.RI "auto const  & \fBsize\fP () const noexcept"
.br
.RI "Get the maximum label of detectors\&. "
.ti -1c
.RI "auto & \fBsize\fP () noexcept"
.br
.RI "Get the maximum label of detectors\&. "
.ti -1c
.RI "auto const  & \fBslope\fP (\fBLabel\fP const &label) const noexcept"
.br
.RI "Get the slope parameter\&. "
.ti -1c
.RI "auto & \fBslope\fP (\fBLabel\fP const &label) noexcept"
.br
.RI "Get the slope parameter\&. "
.ti -1c
.RI "auto const  & \fBtrinom\fP (\fBLabel\fP const &label) const noexcept"
.br
.RI "Get the 3rd order parameter\&. "
.ti -1c
.RI "auto & \fBtrinom\fP (\fBLabel\fP const &label) noexcept"
.br
.RI "Get the 3rd order parameter\&. "
.ti -1c
.RI "void \fBwrite\fP (std::string const &outfilename)"
.br
.RI "Writes down the calibration file\&. "
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "std::vector< std::vector< std::vector< float > > > \fBcalibration_tables\fP"
.br
.ti -1c
.RI "std::vector< float > \fBm_binom\fP"
.br
.ti -1c
.RI "std::string \fBm_filename\fP"
.br
.ti -1c
.RI "std::vector< float > \fBm_intercept\fP"
.br
.ti -1c
.RI "\fBLabel\fP \fBm_nb_det\fP = 0"
.br
.ti -1c
.RI "bool \fBm_ok\fP = false"
.br
.ti -1c
.RI "std::vector< char > \fBm_order\fP"
.br
.ti -1c
.RI "\fBLabel\fP \fBm_size\fP = 0"
.br
.ti -1c
.RI "std::vector< float > \fBm_slope\fP"
.br
.ti -1c
.RI "std::vector< float > \fBm_trinom\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
A convenient class for handling coefficient calibration up to 3rd order\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Calibration::Calibration ()\fC [default]\fP"

.SS "Calibration::Calibration (\fBCalibration\fP const & otherCalib)\fC [inline]\fP"

.PP
Copy constructor\&. 
.SS "Calibration::Calibration (\fBFile\fP const & file)\fC [inline]\fP"

.PP
Constructor loading calibration from a file\&. 
.SH "Member Function Documentation"
.PP 
.SS "float Calibration::apply (float const & nrj, \fBLabel\fP const & label) const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Applies the calibration coefficients of the given label to the given energy\&. 
.SS "auto const& Calibration::binom (\fBLabel\fP const & label) const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Get the quadratic parameter\&. 
.SS "auto& Calibration::binom (\fBLabel\fP const & label)\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Get the quadratic parameter\&. 
.SS "float Calibration::calibrate (double const & nrj, \fBLabel\fP const & label) const\fC [inline]\fP, \fC [noexcept]\fP"

.SS "float Calibration::calibrate (float const & nrj, \fBLabel\fP const & label) const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Calibrate the nrj value using the parameters extracted from the calibration data\&. Calibrate the energy using the coefficients of the given label to the given energy\&. Shifts the nrj by a value between 0 and 1\&. 
.SS "void Calibration::calibrate (\fBHit\fP & hit) const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Calibrate a hit\&. Reads hit\&.adc and writes the calibrated value in hit\&.nrj If hit\&.qdc2 > 0, writes the calibrated value in hit\&.nrj2 
.SS "float Calibration::calibrate (int const & adc, \fBLabel\fP const & label) const\fC [inline]\fP, \fC [noexcept]\fP"

.SS "float Calibration::calibrate (\fBsize_t\fP const & bin, \fBLabel\fP const & label) const\fC [inline]\fP, \fC [noexcept]\fP"

.SS "void Calibration::clear ()\fC [noexcept]\fP"

.SS "auto const& Calibration::file () const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Gets the name of the file from while the data has been loaded\&. 
.SS "auto& Calibration::file ()\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Gets the name of the file from while the data has been loaded\&. 
.SS "std::vector< float > Calibration::get (\fBLabel\fP const & _label) const\fC [noexcept]\fP"

.SS "auto const& Calibration::getBinom () const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Get the quadratic parameter\&. 
.SS "auto& Calibration::getBinom ()\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Get the quadratic parameter\&. 
.SS "auto const& Calibration::getIntercept () const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Get the intercept\&. 
.SS "auto& Calibration::getIntercept ()\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Get the intercept\&. 
.SS "auto const& Calibration::getOrder () const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Get the order of the calibration (0 : linear, 1 : affine, 2 : quadratic, 3 : 3rd order) 
.SS "auto& Calibration::getOrder ()\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Get the order of the calibration (0 : linear, 1 : affine, 2 : quadratic, 3 : 3rd order) 
.SS "auto const& Calibration::getSlope () const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Get the slope parameter\&. 
.SS "auto& Calibration::getSlope ()\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Get the slope parameter\&. 
.SS "auto const& Calibration::getTrinom () const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Get the 3rd order parameter\&. 
.SS "auto& Calibration::getTrinom ()\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Get the 3rd order parameter\&. 
.SS "auto const& Calibration::intercept (\fBLabel\fP const & label) const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Get the intercept\&. 
.SS "auto& Calibration::intercept (\fBLabel\fP const & label)\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Get the intercept\&. 
.SS "bool const& Calibration::isFilled () const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Returns true if there is at least one coefficient loaded\&. 
.SS "bool& Calibration::isFilled ()\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Returns true if there is at least one coefficient loaded\&. 
.SS "bool Calibration::load (\fBFile\fP const & file)"

.PP
Loading calibration from a file\&. 
.SS "auto const& Calibration::nbDetectors () const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Get the number of detectors with calibration coefficients\&. 
.SS "auto& Calibration::nbDetectors ()\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Get the number of detectors with calibration coefficients\&. 
.SS "Calibration::operator bool () const &\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Return true if the data has been loaded\&. 
.SS "template<class\&.\&.\&. ARGS> auto Calibration::operator() (ARGS &&\&.\&.\&. args) const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Wrapper around the \fBCalibration::calibrate()\fP methods\&. 
.SS "\fBCalibration\fP const& Calibration::operator= (\fBCalibration\fP const & otherCalib)\fC [inline]\fP"

.PP
Copy operator\&. 
.SS "\fBCalibration\fP const& Calibration::operator= (\fBFile\fP const & file)\fC [inline]\fP"

.PP
Copy operator twicked to load calibration from a file\&. 
.SS "std::vector<float> Calibration::operator[] (\fBLabel\fP const & label) const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Returns a vector holding the coefficients\&. 
.SS "auto const& Calibration::order (\fBLabel\fP const & label) const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Get the order of the calibration (0 : linear, 1 : affine, 2 : quadratic, 3 : 3rd order) 
.SS "auto& Calibration::order (\fBLabel\fP const & label)\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Get the order of the calibration (0 : linear, 1 : affine, 2 : quadratic, 3 : 3rd order) 
.SS "void Calibration::Print ()"

.SS "void Calibration::Print (\fBLabel\fP const & label)"

.SS "void Calibration::resize (int const & size)"

.SS "void Calibration::set (\fBLabel\fP const & _label, float const & _intercept = \fC0\&.f\fP, float const & _slope = \fC1\&.f\fP, float const & _binom = \fC0\&.f\fP, float const & _trinom = \fC0\&.f\fP)"

.SS "auto const& Calibration::size () const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Get the maximum label of detectors\&. 
.SS "auto& Calibration::size ()\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Get the maximum label of detectors\&. 
.SS "auto const& Calibration::slope (\fBLabel\fP const & label) const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Get the slope parameter\&. 
.SS "auto& Calibration::slope (\fBLabel\fP const & label)\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Get the slope parameter\&. 
.SS "auto const& Calibration::trinom (\fBLabel\fP const & label) const\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Get the 3rd order parameter\&. 
.SS "auto& Calibration::trinom (\fBLabel\fP const & label)\fC [inline]\fP, \fC [noexcept]\fP"

.PP
Get the 3rd order parameter\&. 
.SS "void Calibration::write (std::string const & outfilename)"

.PP
Writes down the calibration file\&. 
.SH "Member Data Documentation"
.PP 
.SS "std::vector<std::vector<std::vector<float> > > Calibration::calibration_tables\fC [private]\fP"

.SS "std::vector<float> Calibration::m_binom\fC [private]\fP"

.SS "std::string Calibration::m_filename\fC [private]\fP"

.SS "std::vector<float> Calibration::m_intercept\fC [private]\fP"

.SS "\fBLabel\fP Calibration::m_nb_det = 0\fC [private]\fP"

.SS "bool Calibration::m_ok = false\fC [private]\fP"

.SS "std::vector<char> Calibration::m_order\fC [private]\fP"

.SS "\fBLabel\fP Calibration::m_size = 0\fC [private]\fP"

.SS "std::vector<float> Calibration::m_slope\fC [private]\fP"

.SS "std::vector<float> Calibration::m_trinom\fC [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Nuball2 from the source code\&.
