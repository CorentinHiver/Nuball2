.TH "Builder" 3 "Mon Mar 25 2024" "Nuball2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Builder \- Base class of event builders (pure virtual class)  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Builder\&.hpp>\fP
.PP
Inherited by \fBCoincBuilder\fP, and \fBEventBuilder\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual bool \fBbuild\fP (\fBHit\fP const &_hit)=0"
.br
.RI "Add Hits to the event\&. Return true when an event is complete, i\&.e\&. current hit is outside of time window\&. "
.ti -1c
.RI "\fBBuilder\fP ()"
.br
.ti -1c
.RI "\fBBuilder\fP (\fBEvent\fP *event)"
.br
.ti -1c
.RI "virtual bool \fBcoincidence\fP (\fBHit\fP const &hit)=0"
.br
.ti -1c
.RI "\fBEvent\fP * \fBgetEvent\fP () const"
.br
.ti -1c
.RI "\fBHit\fP const  & \fBgetLastHit\fP () const"
.br
.ti -1c
.RI "bool \fBisBuilding\fP () const"
.br
.ti -1c
.RI "bool \fBisBuilt\fP () const"
.br
.ti -1c
.RI "bool \fBisSingle\fP () const"
.br
.ti -1c
.RI "virtual void \fBreset\fP ()"
.br
.ti -1c
.RI "void \fBset_first_hit\fP (\fBHit\fP const &hit)"
.br
.ti -1c
.RI "void \fBset_last_hit\fP (\fBHit\fP const &hit)"
.br
.ti -1c
.RI "\fBsize_t\fP \fBsize\fP () const"
.br
.ti -1c
.RI "\fBuchar\fP const  & \fBstatus\fP () const"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fBkeepSingles\fP (bool const &b=true)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBEvent\fP * \fBm_event\fP = nullptr"
.br
.ti -1c
.RI "\fBHit\fP \fBm_last_hit\fP"
.br
.ti -1c
.RI "\fBuchar\fP \fBm_status\fP = 0"
.br
.in -1c
.SS "Static Protected Attributes"

.in +1c
.ti -1c
.RI "static bool \fBm_keep_singles\fP = false"
.br
.in -1c
.SH "Detailed Description"
.PP 
Base class of event builders (pure virtual class) 

The first thing to do is to set the first hit of the file using Builder::set_first_hit(hit); Then add the following hits using Builder::build(hit);
.PP
The builder can be in four states :
.PP
Let's start from the first hit\&. The next is either in or out of the time window\&.
.PP
Out of the time window :
.PP
Then the first hit is single\&. The status is therefore 0\&. The second hit is then used to determine if the third one is in coincidence with it or not\&.
.PP
In the time window :
.PP
An event is created, extracting the values of the two first hits in the two first rows of the event\&. We are in status 1\&.
.PP
Then we have to handle the third hit\&. It either is in or out of the time window\&.
.PP
If the third hit is out of the time window, then the event is made only of the two previous hits\&. We are in status 2\&. We can perform a trigger and write down the event\&.
.PP
If the third hit is in the time window, the values of the third hit are extracted inside of the third row of the event\&. We are in status 1 still\&. We then have to handle the next hits and add them to the event until a hit falls out of the time window\&.
.PP
Now, you'll have to create your own event builder by deriving it from this base class : 
.PP
.nf
   class MyEventBuilder : public Builder
   {
       ....
       build(...);
   };

.fi
.PP
 You will have to overload the build method 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Builder::Builder ()\fC [inline]\fP"

.SS "Builder::Builder (\fBEvent\fP * event)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "virtual bool Builder::build (\fBHit\fP const & _hit)\fC [pure virtual]\fP"

.PP
Add Hits to the event\&. Return true when an event is complete, i\&.e\&. current hit is outside of time window\&. 3 status : 0: single | 1: begin of coincidence | 2: coincidence complete 
.PP
Implemented in \fBEventBuilder\fP, and \fBCoincBuilder\fP\&.
.SS "virtual bool Builder::coincidence (\fBHit\fP const & hit)\fC [pure virtual]\fP"

.PP
Implemented in \fBCoincBuilder\fP\&.
.SS "\fBEvent\fP* Builder::getEvent () const\fC [inline]\fP"

.SS "\fBHit\fP const& Builder::getLastHit () const\fC [inline]\fP"

.SS "bool Builder::isBuilding () const\fC [inline]\fP"

.SS "bool Builder::isBuilt () const\fC [inline]\fP"

.SS "bool Builder::isSingle () const\fC [inline]\fP"

.SS "static void Builder::keepSingles (bool const & b = \fCtrue\fP)\fC [inline]\fP, \fC [static]\fP"

.SS "virtual void Builder::reset ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
Reimplemented in \fBEventBuilder\fP, and \fBCoincBuilder\fP\&.
.SS "void Builder::set_first_hit (\fBHit\fP const & hit)\fC [inline]\fP"

.SS "void Builder::set_last_hit (\fBHit\fP const & hit)\fC [inline]\fP"

.SS "\fBsize_t\fP Builder::size () const\fC [inline]\fP"

.SS "\fBuchar\fP const& Builder::status () const\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "\fBEvent\fP* Builder::m_event = nullptr\fC [protected]\fP"

.SS "bool Builder::m_keep_singles = false\fC [static]\fP, \fC [protected]\fP"

.SS "\fBHit\fP Builder::m_last_hit\fC [protected]\fP"

.SS "\fBuchar\fP Builder::m_status = 0\fC [protected]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Nuball2 from the source code\&.
